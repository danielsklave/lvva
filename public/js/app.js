/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.js ***!
  \****************************************************************************************************/
/***/ (function(module) {

/*!
 * FilePondPluginFileValidateSize 2.2.8
 * Licensed under MIT, https://opensource.org/licenses/MIT/
 * Please visit https://pqina.nl/filepond/ for details.
 */

/* eslint-disable */

(function(global, factory) {
     true
        ? (module.exports = factory())
        : 0;
})(this, function() {
    'use strict';

    var plugin = function plugin(_ref) {
        var addFilter = _ref.addFilter,
            utils = _ref.utils;
        // get quick reference to Type utils
        var Type = utils.Type,
            replaceInString = utils.replaceInString,
            toNaturalFileSize = utils.toNaturalFileSize;

        // filtering if an item is allowed in hopper
        addFilter('ALLOW_HOPPER_ITEM', function(file, _ref2) {
            var query = _ref2.query;
            if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {
                return true;
            }

            var sizeMax = query('GET_MAX_FILE_SIZE');
            if (sizeMax !== null && file.size > sizeMax) {
                return false;
            }

            var sizeMin = query('GET_MIN_FILE_SIZE');
            if (sizeMin !== null && file.size < sizeMin) {
                return false;
            }

            return true;
        });

        // called for each file that is loaded
        // right before it is set to the item state
        // should return a promise
        addFilter('LOAD_FILE', function(file, _ref3) {
            var query = _ref3.query;
            return new Promise(function(resolve, reject) {
                // if not allowed, all fine, exit
                if (!query('GET_ALLOW_FILE_SIZE_VALIDATION')) {
                    return resolve(file);
                }

                // check if file should be filtered
                var fileFilter = query('GET_FILE_VALIDATE_SIZE_FILTER');
                if (fileFilter && !fileFilter(file)) {
                    return resolve(file);
                }

                // reject or resolve based on file size
                var sizeMax = query('GET_MAX_FILE_SIZE');
                if (sizeMax !== null && file.size > sizeMax) {
                    reject({
                        status: {
                            main: query('GET_LABEL_MAX_FILE_SIZE_EXCEEDED'),
                            sub: replaceInString(query('GET_LABEL_MAX_FILE_SIZE'), {
                                filesize: toNaturalFileSize(
                                    sizeMax,
                                    '.',
                                    query('GET_FILE_SIZE_BASE'),
                                    query('GET_FILE_SIZE_LABELS', query)
                                ),
                            }),
                        },
                    });

                    return;
                }

                // reject or resolve based on file size
                var sizeMin = query('GET_MIN_FILE_SIZE');
                if (sizeMin !== null && file.size < sizeMin) {
                    reject({
                        status: {
                            main: query('GET_LABEL_MIN_FILE_SIZE_EXCEEDED'),
                            sub: replaceInString(query('GET_LABEL_MIN_FILE_SIZE'), {
                                filesize: toNaturalFileSize(
                                    sizeMin,
                                    '.',
                                    query('GET_FILE_SIZE_BASE'),
                                    query('GET_FILE_SIZE_LABELS', query)
                                ),
                            }),
                        },
                    });

                    return;
                }

                // returns the current option value
                var totalSizeMax = query('GET_MAX_TOTAL_FILE_SIZE');
                if (totalSizeMax !== null) {
                    // get the current total file size
                    var currentTotalSize = query('GET_ACTIVE_ITEMS').reduce(function(total, item) {
                        return total + item.fileSize;
                    }, 0);

                    // get the size of the new file
                    if (currentTotalSize > totalSizeMax) {
                        reject({
                            status: {
                                main: query('GET_LABEL_MAX_TOTAL_FILE_SIZE_EXCEEDED'),
                                sub: replaceInString(query('GET_LABEL_MAX_TOTAL_FILE_SIZE'), {
                                    filesize: toNaturalFileSize(
                                        totalSizeMax,
                                        '.',
                                        query('GET_FILE_SIZE_BASE'),
                                        query('GET_FILE_SIZE_LABELS', query)
                                    ),
                                }),
                            },
                        });

                        return;
                    }
                }

                // file is fine, let's pass it back
                resolve(file);
            });
        });

        return {
            options: {
                // Enable or disable file type validation
                allowFileSizeValidation: [true, Type.BOOLEAN],

                // Max individual file size in bytes
                maxFileSize: [null, Type.INT],

                // Min individual file size in bytes
                minFileSize: [null, Type.INT],

                // Max total file size in bytes
                maxTotalFileSize: [null, Type.INT],

                // Filter the files that need to be validated for size
                fileValidateSizeFilter: [null, Type.FUNCTION],

                // error labels
                labelMinFileSizeExceeded: ['File is too small', Type.STRING],
                labelMinFileSize: ['Minimum file size is {filesize}', Type.STRING],

                labelMaxFileSizeExceeded: ['File is too large', Type.STRING],
                labelMaxFileSize: ['Maximum file size is {filesize}', Type.STRING],

                labelMaxTotalFileSizeExceeded: ['Maximum total size exceeded', Type.STRING],
                labelMaxTotalFileSize: ['Maximum total file size is {filesize}', Type.STRING],
            },
        };
    };

    // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags
    var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';
    if (isBrowser) {
        document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', { detail: plugin }));
    }

    return plugin;
});


/***/ }),

/***/ "./node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.js ***!
  \****************************************************************************************************/
/***/ (function(module) {

/*!
 * FilePondPluginFileValidateType 1.2.8
 * Licensed under MIT, https://opensource.org/licenses/MIT/
 * Please visit https://pqina.nl/filepond/ for details.
 */

/* eslint-disable */

(function(global, factory) {
   true
    ? (module.exports = factory())
    : 0;
})(this, function() {
  'use strict';

  var plugin = function plugin(_ref) {
    var addFilter = _ref.addFilter,
      utils = _ref.utils;
    // get quick reference to Type utils
    var Type = utils.Type,
      isString = utils.isString,
      replaceInString = utils.replaceInString,
      guesstimateMimeType = utils.guesstimateMimeType,
      getExtensionFromFilename = utils.getExtensionFromFilename,
      getFilenameFromURL = utils.getFilenameFromURL;

    var mimeTypeMatchesWildCard = function mimeTypeMatchesWildCard(
      mimeType,
      wildcard
    ) {
      var mimeTypeGroup = (/^[^/]+/.exec(mimeType) || []).pop(); // image/png -> image
      var wildcardGroup = wildcard.slice(0, -2); // image/* -> image
      return mimeTypeGroup === wildcardGroup;
    };

    var isValidMimeType = function isValidMimeType(
      acceptedTypes,
      userInputType
    ) {
      return acceptedTypes.some(function(acceptedType) {
        // accepted is wildcard mime type
        if (/\*$/.test(acceptedType)) {
          return mimeTypeMatchesWildCard(userInputType, acceptedType);
        }

        // is normal mime type
        return acceptedType === userInputType;
      });
    };

    var getItemType = function getItemType(item) {
      // if the item is a url we guess the mime type by the extension
      var type = '';
      if (isString(item)) {
        var filename = getFilenameFromURL(item);
        var extension = getExtensionFromFilename(filename);
        if (extension) {
          type = guesstimateMimeType(extension);
        }
      } else {
        type = item.type;
      }

      return type;
    };

    var validateFile = function validateFile(
      item,
      acceptedFileTypes,
      typeDetector
    ) {
      // no types defined, everything is allowed \o/
      if (acceptedFileTypes.length === 0) {
        return true;
      }

      // gets the item type
      var type = getItemType(item);

      // no type detector, test now
      if (!typeDetector) {
        return isValidMimeType(acceptedFileTypes, type);
      }

      // use type detector
      return new Promise(function(resolve, reject) {
        typeDetector(item, type)
          .then(function(detectedType) {
            if (isValidMimeType(acceptedFileTypes, detectedType)) {
              resolve();
            } else {
              reject();
            }
          })
          .catch(reject);
      });
    };

    var applyMimeTypeMap = function applyMimeTypeMap(map) {
      return function(acceptedFileType) {
        return map[acceptedFileType] === null
          ? false
          : map[acceptedFileType] || acceptedFileType;
      };
    };

    // setup attribute mapping for accept
    addFilter('SET_ATTRIBUTE_TO_OPTION_MAP', function(map) {
      return Object.assign(map, {
        accept: 'acceptedFileTypes'
      });
    });

    // filtering if an item is allowed in hopper
    addFilter('ALLOW_HOPPER_ITEM', function(file, _ref2) {
      var query = _ref2.query;
      // if we are not doing file type validation exit
      if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {
        return true;
      }

      // we validate the file against the accepted file types
      return validateFile(file, query('GET_ACCEPTED_FILE_TYPES'));
    });

    // called for each file that is loaded
    // right before it is set to the item state
    // should return a promise
    addFilter('LOAD_FILE', function(file, _ref3) {
      var query = _ref3.query;
      return new Promise(function(resolve, reject) {
        if (!query('GET_ALLOW_FILE_TYPE_VALIDATION')) {
          resolve(file);
          return;
        }

        var acceptedFileTypes = query('GET_ACCEPTED_FILE_TYPES');

        // custom type detector method
        var typeDetector = query('GET_FILE_VALIDATE_TYPE_DETECT_TYPE');

        // if invalid, exit here
        var validationResult = validateFile(
          file,
          acceptedFileTypes,
          typeDetector
        );

        var handleRejection = function handleRejection() {
          var acceptedFileTypesMapped = acceptedFileTypes
            .map(
              applyMimeTypeMap(
                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES_MAP')
              )
            )
            .filter(function(label) {
              return label !== false;
            });

          var acceptedFileTypesMapped_unique = acceptedFileTypesMapped.filter(
            function(item, index) {
              return acceptedFileTypesMapped.indexOf(item) === index;
            }
          );

          reject({
            status: {
              main: query('GET_LABEL_FILE_TYPE_NOT_ALLOWED'),
              sub: replaceInString(
                query('GET_FILE_VALIDATE_TYPE_LABEL_EXPECTED_TYPES'),
                {
                  allTypes: acceptedFileTypesMapped_unique.join(', '),
                  allButLastType: acceptedFileTypesMapped_unique
                    .slice(0, -1)
                    .join(', '),
                  lastType:
                    acceptedFileTypesMapped_unique[
                      acceptedFileTypesMapped.length - 1
                    ]
                }
              )
            }
          });
        };

        // has returned new filename immidiately
        if (typeof validationResult === 'boolean') {
          if (!validationResult) {
            return handleRejection();
          }
          return resolve(file);
        }

        // is promise
        validationResult
          .then(function() {
            resolve(file);
          })
          .catch(handleRejection);
      });
    });

    // expose plugin
    return {
      // default options
      options: {
        // Enable or disable file type validation
        allowFileTypeValidation: [true, Type.BOOLEAN],

        // What file types to accept
        acceptedFileTypes: [[], Type.ARRAY],
        // - must be comma separated
        // - mime types: image/png, image/jpeg, image/gif
        // - extensions: .png, .jpg, .jpeg ( not enabled yet )
        // - wildcards: image/*

        // label to show when a type is not allowed
        labelFileTypeNotAllowed: ['File is of invalid type', Type.STRING],

        // nicer label
        fileValidateTypeLabelExpectedTypes: [
          'Expects {allButLastType} or {lastType}',
          Type.STRING
        ],

        // map mime types to extensions
        fileValidateTypeLabelExpectedTypesMap: [{}, Type.OBJECT],

        // Custom function to detect type of file
        fileValidateTypeDetectType: [null, Type.FUNCTION]
      }
    };
  };

  // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags
  var isBrowser =
    typeof window !== 'undefined' && typeof window.document !== 'undefined';
  if (isBrowser) {
    document.dispatchEvent(
      new CustomEvent('FilePond:pluginloaded', { detail: plugin })
    );
  }

  return plugin;
});


/***/ }),

/***/ "./node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js ***!
  \******************************************************************************************/
/***/ (function(module) {

/*!
 * FilePondPluginImagePreview 4.6.11
 * Licensed under MIT, https://opensource.org/licenses/MIT/
 * Please visit https://pqina.nl/filepond/ for details.
 */

/* eslint-disable */

(function(global, factory) {
   true
    ? (module.exports = factory())
    : 0;
})(this, function() {
  'use strict';

  // test if file is of type image and can be viewed in canvas
  var isPreviewableImage = function isPreviewableImage(file) {
    return /^image/.test(file.type);
  };

  function _typeof(obj) {
    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
      _typeof = function(obj) {
        return typeof obj;
      };
    } else {
      _typeof = function(obj) {
        return obj &&
          typeof Symbol === 'function' &&
          obj.constructor === Symbol &&
          obj !== Symbol.prototype
          ? 'symbol'
          : typeof obj;
      };
    }

    return _typeof(obj);
  }

  var REACT_ELEMENT_TYPE;

  function _jsx(type, props, key, children) {
    if (!REACT_ELEMENT_TYPE) {
      REACT_ELEMENT_TYPE =
        (typeof Symbol === 'function' &&
          Symbol.for &&
          Symbol.for('react.element')) ||
        0xeac7;
    }

    var defaultProps = type && type.defaultProps;
    var childrenLength = arguments.length - 3;

    if (!props && childrenLength !== 0) {
      props = {
        children: void 0
      };
    }

    if (props && defaultProps) {
      for (var propName in defaultProps) {
        if (props[propName] === void 0) {
          props[propName] = defaultProps[propName];
        }
      }
    } else if (!props) {
      props = defaultProps || {};
    }

    if (childrenLength === 1) {
      props.children = children;
    } else if (childrenLength > 1) {
      var childArray = new Array(childrenLength);

      for (var i = 0; i < childrenLength; i++) {
        childArray[i] = arguments[i + 3];
      }

      props.children = childArray;
    }

    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key === undefined ? null : '' + key,
      ref: null,
      props: props,
      _owner: null
    };
  }

  function _asyncIterator(iterable) {
    var method;

    if (typeof Symbol === 'function') {
      if (Symbol.asyncIterator) {
        method = iterable[Symbol.asyncIterator];
        if (method != null) return method.call(iterable);
      }

      if (Symbol.iterator) {
        method = iterable[Symbol.iterator];
        if (method != null) return method.call(iterable);
      }
    }

    throw new TypeError('Object is not async iterable');
  }

  function _AwaitValue(value) {
    this.wrapped = value;
  }

  function _AsyncGenerator(gen) {
    var front, back;

    function send(key, arg) {
      return new Promise(function(resolve, reject) {
        var request = {
          key: key,
          arg: arg,
          resolve: resolve,
          reject: reject,
          next: null
        };

        if (back) {
          back = back.next = request;
        } else {
          front = back = request;
          resume(key, arg);
        }
      });
    }

    function resume(key, arg) {
      try {
        var result = gen[key](arg);
        var value = result.value;
        var wrappedAwait = value instanceof _AwaitValue;
        Promise.resolve(wrappedAwait ? value.wrapped : value).then(
          function(arg) {
            if (wrappedAwait) {
              resume('next', arg);
              return;
            }

            settle(result.done ? 'return' : 'normal', arg);
          },
          function(err) {
            resume('throw', err);
          }
        );
      } catch (err) {
        settle('throw', err);
      }
    }

    function settle(type, value) {
      switch (type) {
        case 'return':
          front.resolve({
            value: value,
            done: true
          });
          break;

        case 'throw':
          front.reject(value);
          break;

        default:
          front.resolve({
            value: value,
            done: false
          });
          break;
      }

      front = front.next;

      if (front) {
        resume(front.key, front.arg);
      } else {
        back = null;
      }
    }

    this._invoke = send;

    if (typeof gen.return !== 'function') {
      this.return = undefined;
    }
  }

  if (typeof Symbol === 'function' && Symbol.asyncIterator) {
    _AsyncGenerator.prototype[Symbol.asyncIterator] = function() {
      return this;
    };
  }

  _AsyncGenerator.prototype.next = function(arg) {
    return this._invoke('next', arg);
  };

  _AsyncGenerator.prototype.throw = function(arg) {
    return this._invoke('throw', arg);
  };

  _AsyncGenerator.prototype.return = function(arg) {
    return this._invoke('return', arg);
  };

  function _wrapAsyncGenerator(fn) {
    return function() {
      return new _AsyncGenerator(fn.apply(this, arguments));
    };
  }

  function _awaitAsyncGenerator(value) {
    return new _AwaitValue(value);
  }

  function _asyncGeneratorDelegate(inner, awaitWrap) {
    var iter = {},
      waiting = false;

    function pump(key, value) {
      waiting = true;
      value = new Promise(function(resolve) {
        resolve(inner[key](value));
      });
      return {
        done: false,
        value: awaitWrap(value)
      };
    }

    if (typeof Symbol === 'function' && Symbol.iterator) {
      iter[Symbol.iterator] = function() {
        return this;
      };
    }

    iter.next = function(value) {
      if (waiting) {
        waiting = false;
        return value;
      }

      return pump('next', value);
    };

    if (typeof inner.throw === 'function') {
      iter.throw = function(value) {
        if (waiting) {
          waiting = false;
          throw value;
        }

        return pump('throw', value);
      };
    }

    if (typeof inner.return === 'function') {
      iter.return = function(value) {
        return pump('return', value);
      };
    }

    return iter;
  }

  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  function _asyncToGenerator(fn) {
    return function() {
      var self = this,
        args = arguments;
      return new Promise(function(resolve, reject) {
        var gen = fn.apply(self, args);

        function _next(value) {
          asyncGeneratorStep(
            gen,
            resolve,
            reject,
            _next,
            _throw,
            'next',
            value
          );
        }

        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);
        }

        _next(undefined);
      });
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ('value' in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _defineEnumerableProperties(obj, descs) {
    for (var key in descs) {
      var desc = descs[key];
      desc.configurable = desc.enumerable = true;
      if ('value' in desc) desc.writable = true;
      Object.defineProperty(obj, key, desc);
    }

    if (Object.getOwnPropertySymbols) {
      var objectSymbols = Object.getOwnPropertySymbols(descs);

      for (var i = 0; i < objectSymbols.length; i++) {
        var sym = objectSymbols[i];
        var desc = descs[sym];
        desc.configurable = desc.enumerable = true;
        if ('value' in desc) desc.writable = true;
        Object.defineProperty(obj, sym, desc);
      }
    }

    return obj;
  }

  function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);

      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }

    return obj;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _extends() {
    _extends =
      Object.assign ||
      function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

    return _extends.apply(this, arguments);
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(
          Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          })
        );
      }

      ownKeys.forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function');
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf
      ? Object.getPrototypeOf
      : function _getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
        };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf =
      Object.setPrototypeOf ||
      function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

    return _setPrototypeOf(o, p);
  }

  function isNativeReflectConstruct() {
    if (typeof Reflect === 'undefined' || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === 'function') return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      _construct = Reflect.construct;
    } else {
      _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) _setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf('[native code]') !== -1;
  }

  function _wrapNativeSuper(Class) {
    var _cache = typeof Map === 'function' ? new Map() : undefined;

    _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !_isNativeFunction(Class)) return Class;

      if (typeof Class !== 'function') {
        throw new TypeError(
          'Super expression must either be null or a function'
        );
      }

      if (typeof _cache !== 'undefined') {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return _construct(Class, arguments, _getPrototypeOf(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return _setPrototypeOf(Wrapper, Class);
    };

    return _wrapNativeSuper(Class);
  }

  function _instanceof(left, right) {
    if (
      right != null &&
      typeof Symbol !== 'undefined' &&
      right[Symbol.hasInstance]
    ) {
      return right[Symbol.hasInstance](left);
    } else {
      return left instanceof right;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule
      ? obj
      : {
          default: obj
        };
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc =
              Object.defineProperty && Object.getOwnPropertyDescriptor
                ? Object.getOwnPropertyDescriptor(obj, key)
                : {};

            if (desc.get || desc.set) {
              Object.defineProperty(newObj, key, desc);
            } else {
              newObj[key] = obj[key];
            }
          }
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  function _newArrowCheck(innerThis, boundThis) {
    if (innerThis !== boundThis) {
      throw new TypeError('Cannot instantiate an arrow function');
    }
  }

  function _objectDestructuringEmpty(obj) {
    if (obj == null) throw new TypeError('Cannot destructure undefined');
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError(
        "this hasn't been initialised - super() hasn't been called"
      );
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === 'object' || typeof call === 'function')) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = _getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  function _get(target, property, receiver) {
    if (typeof Reflect !== 'undefined' && Reflect.get) {
      _get = Reflect.get;
    } else {
      _get = function _get(target, property, receiver) {
        var base = _superPropBase(target, property);

        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  function set(target, property, value, receiver) {
    if (typeof Reflect !== 'undefined' && Reflect.set) {
      set = Reflect.set;
    } else {
      set = function set(target, property, value, receiver) {
        var base = _superPropBase(target, property);

        var desc;

        if (base) {
          desc = Object.getOwnPropertyDescriptor(base, property);

          if (desc.set) {
            desc.set.call(receiver, value);
            return true;
          } else if (!desc.writable) {
            return false;
          }
        }

        desc = Object.getOwnPropertyDescriptor(receiver, property);

        if (desc) {
          if (!desc.writable) {
            return false;
          }

          desc.value = value;
          Object.defineProperty(receiver, property, desc);
        } else {
          _defineProperty(receiver, property, value);
        }

        return true;
      };
    }

    return set(target, property, value, receiver);
  }

  function _set(target, property, value, receiver, isStrict) {
    var s = set(target, property, value, receiver || target);

    if (!s && isStrict) {
      throw new Error('failed to set property');
    }

    return value;
  }

  function _taggedTemplateLiteral(strings, raw) {
    if (!raw) {
      raw = strings.slice(0);
    }

    return Object.freeze(
      Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      })
    );
  }

  function _taggedTemplateLiteralLoose(strings, raw) {
    if (!raw) {
      raw = strings.slice(0);
    }

    strings.raw = raw;
    return strings;
  }

  function _temporalRef(val, name) {
    if (val === _temporalUndefined) {
      throw new ReferenceError(name + ' is not defined - temporal dead zone');
    } else {
      return val;
    }
  }

  function _readOnlyError(name) {
    throw new Error('"' + name + '" is read-only');
  }

  function _classNameTDZError(name) {
    throw new Error(
      'Class "' + name + '" cannot be referenced in computed property keys.'
    );
  }

  var _temporalUndefined = {};

  function _slicedToArray(arr, i) {
    return (
      _arrayWithHoles(arr) ||
      _iterableToArrayLimit(arr, i) ||
      _nonIterableRest()
    );
  }

  function _slicedToArrayLoose(arr, i) {
    return (
      _arrayWithHoles(arr) ||
      _iterableToArrayLimitLoose(arr, i) ||
      _nonIterableRest()
    );
  }

  function _toArray(arr) {
    return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();
  }

  function _toConsumableArray(arr) {
    return (
      _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread()
    );
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++)
        arr2[i] = arr[i];

      return arr2;
    }
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArray(iter) {
    if (
      Symbol.iterator in Object(iter) ||
      Object.prototype.toString.call(iter) === '[object Arguments]'
    )
      return Array.from(iter);
  }

  function _iterableToArrayLimit(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (
        var _i = arr[Symbol.iterator](), _s;
        !(_n = (_s = _i.next()).done);
        _n = true
      ) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i['return'] != null) _i['return']();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _iterableToArrayLimitLoose(arr, i) {
    var _arr = [];

    for (
      var _iterator = arr[Symbol.iterator](), _step;
      !(_step = _iterator.next()).done;

    ) {
      _arr.push(_step.value);

      if (i && _arr.length === i) break;
    }

    return _arr;
  }

  function _nonIterableSpread() {
    throw new TypeError('Invalid attempt to spread non-iterable instance');
  }

  function _nonIterableRest() {
    throw new TypeError('Invalid attempt to destructure non-iterable instance');
  }

  function _skipFirstGeneratorNext(fn) {
    return function() {
      var it = fn.apply(this, arguments);
      it.next();
      return it;
    };
  }

  function _toPrimitive(input, hint) {
    if (typeof input !== 'object' || input === null) return input;
    var prim = input[Symbol.toPrimitive];

    if (prim !== undefined) {
      var res = prim.call(input, hint || 'default');
      if (typeof res !== 'object') return res;
      throw new TypeError('@@toPrimitive must return a primitive value.');
    }

    return (hint === 'string' ? String : Number)(input);
  }

  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, 'string');

    return typeof key === 'symbol' ? key : String(key);
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error(
      'Decorating class property failed. Please ensure that ' +
        'proposal-class-properties is enabled and set to use loose mode. ' +
        'To use proposal-class-properties in spec mode with decorators, wait for ' +
        'the next major version of decorators in stage 2.'
    );
  }

  function _initializerDefineProperty(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer
        ? descriptor.initializer.call(context)
        : void 0
    });
  }

  function _applyDecoratedDescriptor(
    target,
    property,
    decorators,
    descriptor,
    context
  ) {
    var desc = {};
    Object.keys(descriptor).forEach(function(key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators
      .slice()
      .reverse()
      .reduce(function(desc, decorator) {
        return decorator(target, property, desc) || desc;
      }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object.defineProperty(target, property, desc);
      desc = null;
    }

    return desc;
  }

  var id = 0;

  function _classPrivateFieldLooseKey(name) {
    return '__private_' + id++ + '_' + name;
  }

  function _classPrivateFieldLooseBase(receiver, privateKey) {
    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
      throw new TypeError('attempted to use private field on non-instance');
    }

    return receiver;
  }

  function _classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
      throw new TypeError('attempted to get private field on non-instance');
    }

    var descriptor = privateMap.get(receiver);

    if (descriptor.get) {
      return descriptor.get.call(receiver);
    }

    return descriptor.value;
  }

  function _classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
      throw new TypeError('attempted to set private field on non-instance');
    }

    var descriptor = privateMap.get(receiver);

    if (descriptor.set) {
      descriptor.set.call(receiver, value);
    } else {
      if (!descriptor.writable) {
        throw new TypeError('attempted to set read only private field');
      }

      descriptor.value = value;
    }

    return value;
  }

  function _classStaticPrivateFieldSpecGet(
    receiver,
    classConstructor,
    descriptor
  ) {
    if (receiver !== classConstructor) {
      throw new TypeError('Private static access of wrong provenance');
    }

    return descriptor.value;
  }

  function _classStaticPrivateFieldSpecSet(
    receiver,
    classConstructor,
    descriptor,
    value
  ) {
    if (receiver !== classConstructor) {
      throw new TypeError('Private static access of wrong provenance');
    }

    if (!descriptor.writable) {
      throw new TypeError('attempted to set read only private field');
    }

    descriptor.value = value;
    return value;
  }

  function _classStaticPrivateMethodGet(receiver, classConstructor, method) {
    if (receiver !== classConstructor) {
      throw new TypeError('Private static access of wrong provenance');
    }

    return method;
  }

  function _classStaticPrivateMethodSet() {
    throw new TypeError('attempted to set read only static private field');
  }

  function _decorate(decorators, factory, superClass, mixins) {
    var api = _getDecoratorsApi();

    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        api = mixins[i](api);
      }
    }

    var r = factory(function initialize(O) {
      api.initializeInstanceElements(O, decorated.elements);
    }, superClass);
    var decorated = api.decorateClass(
      _coalesceClassElements(r.d.map(_createElementDescriptor)),
      decorators
    );
    api.initializeClassElements(r.F, decorated.elements);
    return api.runClassFinishers(r.F, decorated.finishers);
  }

  function _getDecoratorsApi() {
    _getDecoratorsApi = function() {
      return api;
    };

    var api = {
      elementsDefinitionOrder: [['method'], ['field']],
      initializeInstanceElements: function(O, elements) {
        ['method', 'field'].forEach(function(kind) {
          elements.forEach(function(element) {
            if (element.kind === kind && element.placement === 'own') {
              this.defineClassElement(O, element);
            }
          }, this);
        }, this);
      },
      initializeClassElements: function(F, elements) {
        var proto = F.prototype;
        ['method', 'field'].forEach(function(kind) {
          elements.forEach(function(element) {
            var placement = element.placement;

            if (
              element.kind === kind &&
              (placement === 'static' || placement === 'prototype')
            ) {
              var receiver = placement === 'static' ? F : proto;
              this.defineClassElement(receiver, element);
            }
          }, this);
        }, this);
      },
      defineClassElement: function(receiver, element) {
        var descriptor = element.descriptor;

        if (element.kind === 'field') {
          var initializer = element.initializer;
          descriptor = {
            enumerable: descriptor.enumerable,
            writable: descriptor.writable,
            configurable: descriptor.configurable,
            value: initializer === void 0 ? void 0 : initializer.call(receiver)
          };
        }

        Object.defineProperty(receiver, element.key, descriptor);
      },
      decorateClass: function(elements, decorators) {
        var newElements = [];
        var finishers = [];
        var placements = {
          static: [],
          prototype: [],
          own: []
        };
        elements.forEach(function(element) {
          this.addElementPlacement(element, placements);
        }, this);
        elements.forEach(function(element) {
          if (!_hasDecorators(element)) return newElements.push(element);
          var elementFinishersExtras = this.decorateElement(
            element,
            placements
          );
          newElements.push(elementFinishersExtras.element);
          newElements.push.apply(newElements, elementFinishersExtras.extras);
          finishers.push.apply(finishers, elementFinishersExtras.finishers);
        }, this);

        if (!decorators) {
          return {
            elements: newElements,
            finishers: finishers
          };
        }

        var result = this.decorateConstructor(newElements, decorators);
        finishers.push.apply(finishers, result.finishers);
        result.finishers = finishers;
        return result;
      },
      addElementPlacement: function(element, placements, silent) {
        var keys = placements[element.placement];

        if (!silent && keys.indexOf(element.key) !== -1) {
          throw new TypeError('Duplicated element (' + element.key + ')');
        }

        keys.push(element.key);
      },
      decorateElement: function(element, placements) {
        var extras = [];
        var finishers = [];

        for (
          var decorators = element.decorators, i = decorators.length - 1;
          i >= 0;
          i--
        ) {
          var keys = placements[element.placement];
          keys.splice(keys.indexOf(element.key), 1);
          var elementObject = this.fromElementDescriptor(element);
          var elementFinisherExtras = this.toElementFinisherExtras(
            (0, decorators[i])(elementObject) || elementObject
          );
          element = elementFinisherExtras.element;
          this.addElementPlacement(element, placements);

          if (elementFinisherExtras.finisher) {
            finishers.push(elementFinisherExtras.finisher);
          }

          var newExtras = elementFinisherExtras.extras;

          if (newExtras) {
            for (var j = 0; j < newExtras.length; j++) {
              this.addElementPlacement(newExtras[j], placements);
            }

            extras.push.apply(extras, newExtras);
          }
        }

        return {
          element: element,
          finishers: finishers,
          extras: extras
        };
      },
      decorateConstructor: function(elements, decorators) {
        var finishers = [];

        for (var i = decorators.length - 1; i >= 0; i--) {
          var obj = this.fromClassDescriptor(elements);
          var elementsAndFinisher = this.toClassDescriptor(
            (0, decorators[i])(obj) || obj
          );

          if (elementsAndFinisher.finisher !== undefined) {
            finishers.push(elementsAndFinisher.finisher);
          }

          if (elementsAndFinisher.elements !== undefined) {
            elements = elementsAndFinisher.elements;

            for (var j = 0; j < elements.length - 1; j++) {
              for (var k = j + 1; k < elements.length; k++) {
                if (
                  elements[j].key === elements[k].key &&
                  elements[j].placement === elements[k].placement
                ) {
                  throw new TypeError(
                    'Duplicated element (' + elements[j].key + ')'
                  );
                }
              }
            }
          }
        }

        return {
          elements: elements,
          finishers: finishers
        };
      },
      fromElementDescriptor: function(element) {
        var obj = {
          kind: element.kind,
          key: element.key,
          placement: element.placement,
          descriptor: element.descriptor
        };
        var desc = {
          value: 'Descriptor',
          configurable: true
        };
        Object.defineProperty(obj, Symbol.toStringTag, desc);
        if (element.kind === 'field') obj.initializer = element.initializer;
        return obj;
      },
      toElementDescriptors: function(elementObjects) {
        if (elementObjects === undefined) return;
        return _toArray(elementObjects).map(function(elementObject) {
          var element = this.toElementDescriptor(elementObject);
          this.disallowProperty(
            elementObject,
            'finisher',
            'An element descriptor'
          );
          this.disallowProperty(
            elementObject,
            'extras',
            'An element descriptor'
          );
          return element;
        }, this);
      },
      toElementDescriptor: function(elementObject) {
        var kind = String(elementObject.kind);

        if (kind !== 'method' && kind !== 'field') {
          throw new TypeError(
            'An element descriptor\'s .kind property must be either "method" or' +
              ' "field", but a decorator created an element descriptor with' +
              ' .kind "' +
              kind +
              '"'
          );
        }

        var key = _toPropertyKey(elementObject.key);

        var placement = String(elementObject.placement);

        if (
          placement !== 'static' &&
          placement !== 'prototype' &&
          placement !== 'own'
        ) {
          throw new TypeError(
            'An element descriptor\'s .placement property must be one of "static",' +
              ' "prototype" or "own", but a decorator created an element descriptor' +
              ' with .placement "' +
              placement +
              '"'
          );
        }

        var descriptor = elementObject.descriptor;
        this.disallowProperty(
          elementObject,
          'elements',
          'An element descriptor'
        );
        var element = {
          kind: kind,
          key: key,
          placement: placement,
          descriptor: Object.assign({}, descriptor)
        };

        if (kind !== 'field') {
          this.disallowProperty(
            elementObject,
            'initializer',
            'A method descriptor'
          );
        } else {
          this.disallowProperty(
            descriptor,
            'get',
            'The property descriptor of a field descriptor'
          );
          this.disallowProperty(
            descriptor,
            'set',
            'The property descriptor of a field descriptor'
          );
          this.disallowProperty(
            descriptor,
            'value',
            'The property descriptor of a field descriptor'
          );
          element.initializer = elementObject.initializer;
        }

        return element;
      },
      toElementFinisherExtras: function(elementObject) {
        var element = this.toElementDescriptor(elementObject);

        var finisher = _optionalCallableProperty(elementObject, 'finisher');

        var extras = this.toElementDescriptors(elementObject.extras);
        return {
          element: element,
          finisher: finisher,
          extras: extras
        };
      },
      fromClassDescriptor: function(elements) {
        var obj = {
          kind: 'class',
          elements: elements.map(this.fromElementDescriptor, this)
        };
        var desc = {
          value: 'Descriptor',
          configurable: true
        };
        Object.defineProperty(obj, Symbol.toStringTag, desc);
        return obj;
      },
      toClassDescriptor: function(obj) {
        var kind = String(obj.kind);

        if (kind !== 'class') {
          throw new TypeError(
            'A class descriptor\'s .kind property must be "class", but a decorator' +
              ' created a class descriptor with .kind "' +
              kind +
              '"'
          );
        }

        this.disallowProperty(obj, 'key', 'A class descriptor');
        this.disallowProperty(obj, 'placement', 'A class descriptor');
        this.disallowProperty(obj, 'descriptor', 'A class descriptor');
        this.disallowProperty(obj, 'initializer', 'A class descriptor');
        this.disallowProperty(obj, 'extras', 'A class descriptor');

        var finisher = _optionalCallableProperty(obj, 'finisher');

        var elements = this.toElementDescriptors(obj.elements);
        return {
          elements: elements,
          finisher: finisher
        };
      },
      runClassFinishers: function(constructor, finishers) {
        for (var i = 0; i < finishers.length; i++) {
          var newConstructor = (0, finishers[i])(constructor);

          if (newConstructor !== undefined) {
            if (typeof newConstructor !== 'function') {
              throw new TypeError('Finishers must return a constructor.');
            }

            constructor = newConstructor;
          }
        }

        return constructor;
      },
      disallowProperty: function(obj, name, objectType) {
        if (obj[name] !== undefined) {
          throw new TypeError(
            objectType + " can't have a ." + name + ' property.'
          );
        }
      }
    };
    return api;
  }

  function _createElementDescriptor(def) {
    var key = _toPropertyKey(def.key);

    var descriptor;

    if (def.kind === 'method') {
      descriptor = {
        value: def.value,
        writable: true,
        configurable: true,
        enumerable: false
      };
    } else if (def.kind === 'get') {
      descriptor = {
        get: def.value,
        configurable: true,
        enumerable: false
      };
    } else if (def.kind === 'set') {
      descriptor = {
        set: def.value,
        configurable: true,
        enumerable: false
      };
    } else if (def.kind === 'field') {
      descriptor = {
        configurable: true,
        writable: true,
        enumerable: true
      };
    }

    var element = {
      kind: def.kind === 'field' ? 'field' : 'method',
      key: key,
      placement: def.static
        ? 'static'
        : def.kind === 'field'
        ? 'own'
        : 'prototype',
      descriptor: descriptor
    };
    if (def.decorators) element.decorators = def.decorators;
    if (def.kind === 'field') element.initializer = def.value;
    return element;
  }

  function _coalesceGetterSetter(element, other) {
    if (element.descriptor.get !== undefined) {
      other.descriptor.get = element.descriptor.get;
    } else {
      other.descriptor.set = element.descriptor.set;
    }
  }

  function _coalesceClassElements(elements) {
    var newElements = [];

    var isSameElement = function(other) {
      return (
        other.kind === 'method' &&
        other.key === element.key &&
        other.placement === element.placement
      );
    };

    for (var i = 0; i < elements.length; i++) {
      var element = elements[i];
      var other;

      if (
        element.kind === 'method' &&
        (other = newElements.find(isSameElement))
      ) {
        if (
          _isDataDescriptor(element.descriptor) ||
          _isDataDescriptor(other.descriptor)
        ) {
          if (_hasDecorators(element) || _hasDecorators(other)) {
            throw new ReferenceError(
              'Duplicated methods (' + element.key + ") can't be decorated."
            );
          }

          other.descriptor = element.descriptor;
        } else {
          if (_hasDecorators(element)) {
            if (_hasDecorators(other)) {
              throw new ReferenceError(
                "Decorators can't be placed on different accessors with for " +
                  'the same property (' +
                  element.key +
                  ').'
              );
            }

            other.decorators = element.decorators;
          }

          _coalesceGetterSetter(element, other);
        }
      } else {
        newElements.push(element);
      }
    }

    return newElements;
  }

  function _hasDecorators(element) {
    return element.decorators && element.decorators.length;
  }

  function _isDataDescriptor(desc) {
    return (
      desc !== undefined &&
      !(desc.value === undefined && desc.writable === undefined)
    );
  }

  function _optionalCallableProperty(obj, name) {
    var value = obj[name];

    if (value !== undefined && typeof value !== 'function') {
      throw new TypeError("Expected '" + name + "' to be a function");
    }

    return value;
  }

  function _classPrivateMethodGet(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) {
      throw new TypeError('attempted to get private field on non-instance');
    }

    return fn;
  }

  function _classPrivateMethodSet() {
    throw new TypeError('attempted to reassign private method');
  }

  function _wrapRegExp(re, groups) {
    _wrapRegExp = function(re, groups) {
      return new BabelRegExp(re, groups);
    };

    var _RegExp = _wrapNativeSuper(RegExp);

    var _super = RegExp.prototype;

    var _groups = new WeakMap();

    function BabelRegExp(re, groups) {
      var _this = _RegExp.call(this, re);

      _groups.set(_this, groups);

      return _this;
    }

    _inherits(BabelRegExp, _RegExp);

    BabelRegExp.prototype.exec = function(str) {
      var result = _super.exec.call(this, str);

      if (result) result.groups = buildGroups(result, this);
      return result;
    };

    BabelRegExp.prototype[Symbol.replace] = function(str, substitution) {
      if (typeof substitution === 'string') {
        var groups = _groups.get(this);

        return _super[Symbol.replace].call(
          this,
          str,
          substitution.replace(/\$<([^>]+)>/g, function(_, name) {
            return '$' + groups[name];
          })
        );
      } else if (typeof substitution === 'function') {
        var _this = this;

        return _super[Symbol.replace].call(this, str, function() {
          var args = [];
          args.push.apply(args, arguments);

          if (typeof args[args.length - 1] !== 'object') {
            args.push(buildGroups(args, _this));
          }

          return substitution.apply(this, args);
        });
      } else {
        return _super[Symbol.replace].call(this, str, substitution);
      }
    };

    function buildGroups(result, re) {
      var g = _groups.get(re);

      return Object.keys(g).reduce(function(groups, name) {
        groups[name] = result[g[name]];
        return groups;
      }, Object.create(null));
    }

    return _wrapRegExp.apply(this, arguments);
  }

  var vectorMultiply = function vectorMultiply(v, amount) {
    return createVector(v.x * amount, v.y * amount);
  };

  var vectorAdd = function vectorAdd(a, b) {
    return createVector(a.x + b.x, a.y + b.y);
  };

  var vectorNormalize = function vectorNormalize(v) {
    var l = Math.sqrt(v.x * v.x + v.y * v.y);
    if (l === 0) {
      return {
        x: 0,
        y: 0
      };
    }
    return createVector(v.x / l, v.y / l);
  };

  var vectorRotate = function vectorRotate(v, radians, origin) {
    var cos = Math.cos(radians);
    var sin = Math.sin(radians);
    var t = createVector(v.x - origin.x, v.y - origin.y);
    return createVector(
      origin.x + cos * t.x - sin * t.y,
      origin.y + sin * t.x + cos * t.y
    );
  };

  var createVector = function createVector() {
    var x =
      arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var y =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return { x: x, y: y };
  };

  var getMarkupValue = function getMarkupValue(value, size) {
    var scalar =
      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
    var axis = arguments.length > 3 ? arguments[3] : undefined;
    if (typeof value === 'string') {
      return parseFloat(value) * scalar;
    }
    if (typeof value === 'number') {
      return value * (axis ? size[axis] : Math.min(size.width, size.height));
    }
    return;
  };

  var getMarkupStyles = function getMarkupStyles(markup, size, scale) {
    var lineStyle = markup.borderStyle || markup.lineStyle || 'solid';
    var fill = markup.backgroundColor || markup.fontColor || 'transparent';
    var stroke = markup.borderColor || markup.lineColor || 'transparent';
    var strokeWidth = getMarkupValue(
      markup.borderWidth || markup.lineWidth,
      size,
      scale
    );
    var lineCap = markup.lineCap || 'round';
    var lineJoin = markup.lineJoin || 'round';
    var dashes =
      typeof lineStyle === 'string'
        ? ''
        : lineStyle
            .map(function(v) {
              return getMarkupValue(v, size, scale);
            })
            .join(',');
    var opacity = markup.opacity || 1;
    return {
      'stroke-linecap': lineCap,
      'stroke-linejoin': lineJoin,
      'stroke-width': strokeWidth || 0,
      'stroke-dasharray': dashes,
      stroke: stroke,
      fill: fill,
      opacity: opacity
    };
  };

  var isDefined = function isDefined(value) {
    return value != null;
  };

  var getMarkupRect = function getMarkupRect(rect, size) {
    var scalar =
      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

    var left =
      getMarkupValue(rect.x, size, scalar, 'width') ||
      getMarkupValue(rect.left, size, scalar, 'width');
    var top =
      getMarkupValue(rect.y, size, scalar, 'height') ||
      getMarkupValue(rect.top, size, scalar, 'height');
    var width = getMarkupValue(rect.width, size, scalar, 'width');
    var height = getMarkupValue(rect.height, size, scalar, 'height');
    var right = getMarkupValue(rect.right, size, scalar, 'width');
    var bottom = getMarkupValue(rect.bottom, size, scalar, 'height');

    if (!isDefined(top)) {
      if (isDefined(height) && isDefined(bottom)) {
        top = size.height - height - bottom;
      } else {
        top = bottom;
      }
    }

    if (!isDefined(left)) {
      if (isDefined(width) && isDefined(right)) {
        left = size.width - width - right;
      } else {
        left = right;
      }
    }

    if (!isDefined(width)) {
      if (isDefined(left) && isDefined(right)) {
        width = size.width - left - right;
      } else {
        width = 0;
      }
    }

    if (!isDefined(height)) {
      if (isDefined(top) && isDefined(bottom)) {
        height = size.height - top - bottom;
      } else {
        height = 0;
      }
    }

    return {
      x: left || 0,
      y: top || 0,
      width: width || 0,
      height: height || 0
    };
  };

  var pointsToPathShape = function pointsToPathShape(points) {
    return points
      .map(function(point, index) {
        return ''
          .concat(index === 0 ? 'M' : 'L', ' ')
          .concat(point.x, ' ')
          .concat(point.y);
      })
      .join(' ');
  };

  var setAttributes = function setAttributes(element, attr) {
    return Object.keys(attr).forEach(function(key) {
      return element.setAttribute(key, attr[key]);
    });
  };

  var ns = 'http://www.w3.org/2000/svg';
  var svg = function svg(tag, attr) {
    var element = document.createElementNS(ns, tag);
    if (attr) {
      setAttributes(element, attr);
    }
    return element;
  };

  var updateRect = function updateRect(element) {
    return setAttributes(
      element,
      Object.assign({}, element.rect, element.styles)
    );
  };

  var updateEllipse = function updateEllipse(element) {
    var cx = element.rect.x + element.rect.width * 0.5;
    var cy = element.rect.y + element.rect.height * 0.5;
    var rx = element.rect.width * 0.5;
    var ry = element.rect.height * 0.5;
    return setAttributes(
      element,
      Object.assign(
        {
          cx: cx,
          cy: cy,
          rx: rx,
          ry: ry
        },
        element.styles
      )
    );
  };

  var IMAGE_FIT_STYLE = {
    contain: 'xMidYMid meet',
    cover: 'xMidYMid slice'
  };

  var updateImage = function updateImage(element, markup) {
    setAttributes(
      element,
      Object.assign({}, element.rect, element.styles, {
        preserveAspectRatio: IMAGE_FIT_STYLE[markup.fit] || 'none'
      })
    );
  };

  var TEXT_ANCHOR = {
    left: 'start',
    center: 'middle',
    right: 'end'
  };

  var updateText = function updateText(element, markup, size, scale) {
    var fontSize = getMarkupValue(markup.fontSize, size, scale);
    var fontFamily = markup.fontFamily || 'sans-serif';
    var fontWeight = markup.fontWeight || 'normal';
    var textAlign = TEXT_ANCHOR[markup.textAlign] || 'start';

    setAttributes(
      element,
      Object.assign({}, element.rect, element.styles, {
        'stroke-width': 0,
        'font-weight': fontWeight,
        'font-size': fontSize,
        'font-family': fontFamily,
        'text-anchor': textAlign
      })
    );

    // update text
    if (element.text !== markup.text) {
      element.text = markup.text;
      element.textContent = markup.text.length ? markup.text : ' ';
    }
  };

  var updateLine = function updateLine(element, markup, size, scale) {
    setAttributes(
      element,
      Object.assign({}, element.rect, element.styles, {
        fill: 'none'
      })
    );

    var line = element.childNodes[0];
    var begin = element.childNodes[1];
    var end = element.childNodes[2];

    var origin = element.rect;

    var target = {
      x: element.rect.x + element.rect.width,
      y: element.rect.y + element.rect.height
    };

    setAttributes(line, {
      x1: origin.x,
      y1: origin.y,
      x2: target.x,
      y2: target.y
    });

    if (!markup.lineDecoration) return;

    begin.style.display = 'none';
    end.style.display = 'none';

    var v = vectorNormalize({
      x: target.x - origin.x,
      y: target.y - origin.y
    });

    var l = getMarkupValue(0.05, size, scale);

    if (markup.lineDecoration.indexOf('arrow-begin') !== -1) {
      var arrowBeginRotationPoint = vectorMultiply(v, l);
      var arrowBeginCenter = vectorAdd(origin, arrowBeginRotationPoint);
      var arrowBeginA = vectorRotate(origin, 2, arrowBeginCenter);
      var arrowBeginB = vectorRotate(origin, -2, arrowBeginCenter);

      setAttributes(begin, {
        style: 'display:block;',
        d: 'M'
          .concat(arrowBeginA.x, ',')
          .concat(arrowBeginA.y, ' L')
          .concat(origin.x, ',')
          .concat(origin.y, ' L')
          .concat(arrowBeginB.x, ',')
          .concat(arrowBeginB.y)
      });
    }

    if (markup.lineDecoration.indexOf('arrow-end') !== -1) {
      var arrowEndRotationPoint = vectorMultiply(v, -l);
      var arrowEndCenter = vectorAdd(target, arrowEndRotationPoint);
      var arrowEndA = vectorRotate(target, 2, arrowEndCenter);
      var arrowEndB = vectorRotate(target, -2, arrowEndCenter);

      setAttributes(end, {
        style: 'display:block;',
        d: 'M'
          .concat(arrowEndA.x, ',')
          .concat(arrowEndA.y, ' L')
          .concat(target.x, ',')
          .concat(target.y, ' L')
          .concat(arrowEndB.x, ',')
          .concat(arrowEndB.y)
      });
    }
  };

  var updatePath = function updatePath(element, markup, size, scale) {
    setAttributes(
      element,
      Object.assign({}, element.styles, {
        fill: 'none',
        d: pointsToPathShape(
          markup.points.map(function(point) {
            return {
              x: getMarkupValue(point.x, size, scale, 'width'),
              y: getMarkupValue(point.y, size, scale, 'height')
            };
          })
        )
      })
    );
  };

  var createShape = function createShape(node) {
    return function(markup) {
      return svg(node, { id: markup.id });
    };
  };

  var createImage = function createImage(markup) {
    var shape = svg('image', {
      id: markup.id,
      'stroke-linecap': 'round',
      'stroke-linejoin': 'round',
      opacity: '0'
    });

    shape.onload = function() {
      shape.setAttribute('opacity', markup.opacity || 1);
    };
    shape.setAttributeNS(
      'http://www.w3.org/1999/xlink',
      'xlink:href',
      markup.src
    );
    return shape;
  };

  var createLine = function createLine(markup) {
    var shape = svg('g', {
      id: markup.id,
      'stroke-linecap': 'round',
      'stroke-linejoin': 'round'
    });

    var line = svg('line');
    shape.appendChild(line);

    var begin = svg('path');
    shape.appendChild(begin);

    var end = svg('path');
    shape.appendChild(end);

    return shape;
  };

  var CREATE_TYPE_ROUTES = {
    image: createImage,
    rect: createShape('rect'),
    ellipse: createShape('ellipse'),
    text: createShape('text'),
    path: createShape('path'),
    line: createLine
  };

  var UPDATE_TYPE_ROUTES = {
    rect: updateRect,
    ellipse: updateEllipse,
    image: updateImage,
    text: updateText,
    path: updatePath,
    line: updateLine
  };

  var createMarkupByType = function createMarkupByType(type, markup) {
    return CREATE_TYPE_ROUTES[type](markup);
  };

  var updateMarkupByType = function updateMarkupByType(
    element,
    type,
    markup,
    size,
    scale
  ) {
    if (type !== 'path') {
      element.rect = getMarkupRect(markup, size, scale);
    }
    element.styles = getMarkupStyles(markup, size, scale);
    UPDATE_TYPE_ROUTES[type](element, markup, size, scale);
  };

  var MARKUP_RECT = [
    'x',
    'y',
    'left',
    'top',
    'right',
    'bottom',
    'width',
    'height'
  ];

  var toOptionalFraction = function toOptionalFraction(value) {
    return typeof value === 'string' && /%/.test(value)
      ? parseFloat(value) / 100
      : value;
  };

  // adds default markup properties, clones markup
  var prepareMarkup = function prepareMarkup(markup) {
    var _markup = _slicedToArray(markup, 2),
      type = _markup[0],
      props = _markup[1];

    var rect = props.points
      ? {}
      : MARKUP_RECT.reduce(function(prev, curr) {
          prev[curr] = toOptionalFraction(props[curr]);
          return prev;
        }, {});

    return [
      type,
      Object.assign(
        {
          zIndex: 0
        },
        props,
        rect
      )
    ];
  };

  var sortMarkupByZIndex = function sortMarkupByZIndex(a, b) {
    if (a[1].zIndex > b[1].zIndex) {
      return 1;
    }
    if (a[1].zIndex < b[1].zIndex) {
      return -1;
    }
    return 0;
  };

  var createMarkupView = function createMarkupView(_) {
    return _.utils.createView({
      name: 'image-preview-markup',
      tag: 'svg',
      ignoreRect: true,
      mixins: {
        apis: ['width', 'height', 'crop', 'markup', 'resize', 'dirty']
      },

      write: function write(_ref) {
        var root = _ref.root,
          props = _ref.props;

        if (!props.dirty) return;
        var crop = props.crop,
          resize = props.resize,
          markup = props.markup;

        var viewWidth = props.width;
        var viewHeight = props.height;

        var cropWidth = crop.width;
        var cropHeight = crop.height;

        if (resize) {
          var _size = resize.size;

          var outputWidth = _size && _size.width;
          var outputHeight = _size && _size.height;
          var outputFit = resize.mode;
          var outputUpscale = resize.upscale;

          if (outputWidth && !outputHeight) outputHeight = outputWidth;
          if (outputHeight && !outputWidth) outputWidth = outputHeight;

          var shouldUpscale =
            cropWidth < outputWidth && cropHeight < outputHeight;

          if (!shouldUpscale || (shouldUpscale && outputUpscale)) {
            var scalarWidth = outputWidth / cropWidth;
            var scalarHeight = outputHeight / cropHeight;

            if (outputFit === 'force') {
              cropWidth = outputWidth;
              cropHeight = outputHeight;
            } else {
              var scalar;
              if (outputFit === 'cover') {
                scalar = Math.max(scalarWidth, scalarHeight);
              } else if (outputFit === 'contain') {
                scalar = Math.min(scalarWidth, scalarHeight);
              }
              cropWidth = cropWidth * scalar;
              cropHeight = cropHeight * scalar;
            }
          }
        }

        var size = {
          width: viewWidth,
          height: viewHeight
        };

        root.element.setAttribute('width', size.width);
        root.element.setAttribute('height', size.height);

        var scale = Math.min(viewWidth / cropWidth, viewHeight / cropHeight);

        // clear
        root.element.innerHTML = '';

        // get filter
        var markupFilter = root.query('GET_IMAGE_PREVIEW_MARKUP_FILTER');

        // draw new
        markup
          .filter(markupFilter)
          .map(prepareMarkup)
          .sort(sortMarkupByZIndex)
          .forEach(function(markup) {
            var _markup = _slicedToArray(markup, 2),
              type = _markup[0],
              settings = _markup[1];

            // create
            var element = createMarkupByType(type, settings);

            // update
            updateMarkupByType(element, type, settings, size, scale);

            // add
            root.element.appendChild(element);
          });
      }
    });
  };

  var createVector$1 = function createVector(x, y) {
    return { x: x, y: y };
  };

  var vectorDot = function vectorDot(a, b) {
    return a.x * b.x + a.y * b.y;
  };

  var vectorSubtract = function vectorSubtract(a, b) {
    return createVector$1(a.x - b.x, a.y - b.y);
  };

  var vectorDistanceSquared = function vectorDistanceSquared(a, b) {
    return vectorDot(vectorSubtract(a, b), vectorSubtract(a, b));
  };

  var vectorDistance = function vectorDistance(a, b) {
    return Math.sqrt(vectorDistanceSquared(a, b));
  };

  var getOffsetPointOnEdge = function getOffsetPointOnEdge(length, rotation) {
    var a = length;

    var A = 1.5707963267948966;
    var B = rotation;
    var C = 1.5707963267948966 - rotation;

    var sinA = Math.sin(A);
    var sinB = Math.sin(B);
    var sinC = Math.sin(C);
    var cosC = Math.cos(C);
    var ratio = a / sinA;
    var b = ratio * sinB;
    var c = ratio * sinC;

    return createVector$1(cosC * b, cosC * c);
  };

  var getRotatedRectSize = function getRotatedRectSize(rect, rotation) {
    var w = rect.width;
    var h = rect.height;

    var hor = getOffsetPointOnEdge(w, rotation);
    var ver = getOffsetPointOnEdge(h, rotation);

    var tl = createVector$1(rect.x + Math.abs(hor.x), rect.y - Math.abs(hor.y));

    var tr = createVector$1(
      rect.x + rect.width + Math.abs(ver.y),
      rect.y + Math.abs(ver.x)
    );

    var bl = createVector$1(
      rect.x - Math.abs(ver.y),
      rect.y + rect.height - Math.abs(ver.x)
    );

    return {
      width: vectorDistance(tl, tr),
      height: vectorDistance(tl, bl)
    };
  };

  var calculateCanvasSize = function calculateCanvasSize(
    image,
    canvasAspectRatio
  ) {
    var zoom =
      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

    var imageAspectRatio = image.height / image.width;

    // determine actual pixels on x and y axis
    var canvasWidth = 1;
    var canvasHeight = canvasAspectRatio;
    var imgWidth = 1;
    var imgHeight = imageAspectRatio;
    if (imgHeight > canvasHeight) {
      imgHeight = canvasHeight;
      imgWidth = imgHeight / imageAspectRatio;
    }

    var scalar = Math.max(canvasWidth / imgWidth, canvasHeight / imgHeight);
    var width = image.width / (zoom * scalar * imgWidth);
    var height = width * canvasAspectRatio;

    return {
      width: width,
      height: height
    };
  };

  var getImageRectZoomFactor = function getImageRectZoomFactor(
    imageRect,
    cropRect,
    rotation,
    center
  ) {
    // calculate available space round image center position
    var cx = center.x > 0.5 ? 1 - center.x : center.x;
    var cy = center.y > 0.5 ? 1 - center.y : center.y;
    var imageWidth = cx * 2 * imageRect.width;
    var imageHeight = cy * 2 * imageRect.height;

    // calculate rotated crop rectangle size
    var rotatedCropSize = getRotatedRectSize(cropRect, rotation);

    // calculate scalar required to fit image
    return Math.max(
      rotatedCropSize.width / imageWidth,
      rotatedCropSize.height / imageHeight
    );
  };

  var getCenteredCropRect = function getCenteredCropRect(
    container,
    aspectRatio
  ) {
    var width = container.width;
    var height = width * aspectRatio;
    if (height > container.height) {
      height = container.height;
      width = height / aspectRatio;
    }
    var x = (container.width - width) * 0.5;
    var y = (container.height - height) * 0.5;

    return {
      x: x,
      y: y,
      width: width,
      height: height
    };
  };

  var getCurrentCropSize = function getCurrentCropSize(imageSize) {
    var crop =
      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var zoom = crop.zoom,
      rotation = crop.rotation,
      center = crop.center,
      aspectRatio = crop.aspectRatio;

    if (!aspectRatio) aspectRatio = imageSize.height / imageSize.width;

    var canvasSize = calculateCanvasSize(imageSize, aspectRatio, zoom);

    var canvasCenter = {
      x: canvasSize.width * 0.5,
      y: canvasSize.height * 0.5
    };

    var stage = {
      x: 0,
      y: 0,
      width: canvasSize.width,
      height: canvasSize.height,
      center: canvasCenter
    };

    var shouldLimit = typeof crop.scaleToFit === 'undefined' || crop.scaleToFit;

    var stageZoomFactor = getImageRectZoomFactor(
      imageSize,
      getCenteredCropRect(stage, aspectRatio),
      rotation,
      shouldLimit ? center : { x: 0.5, y: 0.5 }
    );

    var scale = zoom * stageZoomFactor;

    // start drawing
    return {
      widthFloat: canvasSize.width / scale,
      heightFloat: canvasSize.height / scale,
      width: Math.round(canvasSize.width / scale),
      height: Math.round(canvasSize.height / scale)
    };
  };

  var IMAGE_SCALE_SPRING_PROPS = {
    type: 'spring',
    stiffness: 0.5,
    damping: 0.45,
    mass: 10
  };

  // does horizontal and vertical flipping
  var createBitmapView = function createBitmapView(_) {
    return _.utils.createView({
      name: 'image-bitmap',
      ignoreRect: true,
      mixins: { styles: ['scaleX', 'scaleY'] },
      create: function create(_ref) {
        var root = _ref.root,
          props = _ref.props;
        root.appendChild(props.image);
      }
    });
  };

  // shifts and rotates image
  var createImageCanvasWrapper = function createImageCanvasWrapper(_) {
    return _.utils.createView({
      name: 'image-canvas-wrapper',
      tag: 'div',
      ignoreRect: true,
      mixins: {
        apis: ['crop', 'width', 'height'],

        styles: [
          'originX',
          'originY',
          'translateX',
          'translateY',
          'scaleX',
          'scaleY',
          'rotateZ'
        ],

        animations: {
          originX: IMAGE_SCALE_SPRING_PROPS,
          originY: IMAGE_SCALE_SPRING_PROPS,
          scaleX: IMAGE_SCALE_SPRING_PROPS,
          scaleY: IMAGE_SCALE_SPRING_PROPS,
          translateX: IMAGE_SCALE_SPRING_PROPS,
          translateY: IMAGE_SCALE_SPRING_PROPS,
          rotateZ: IMAGE_SCALE_SPRING_PROPS
        }
      },

      create: function create(_ref2) {
        var root = _ref2.root,
          props = _ref2.props;
        props.width = props.image.width;
        props.height = props.image.height;
        root.ref.bitmap = root.appendChildView(
          root.createChildView(createBitmapView(_), { image: props.image })
        );
      },
      write: function write(_ref3) {
        var root = _ref3.root,
          props = _ref3.props;
        var flip = props.crop.flip;
        var bitmap = root.ref.bitmap;
        bitmap.scaleX = flip.horizontal ? -1 : 1;
        bitmap.scaleY = flip.vertical ? -1 : 1;
      }
    });
  };

  // clips canvas to correct aspect ratio
  var createClipView = function createClipView(_) {
    return _.utils.createView({
      name: 'image-clip',
      tag: 'div',
      ignoreRect: true,
      mixins: {
        apis: [
          'crop',
          'markup',
          'resize',
          'width',
          'height',
          'dirty',
          'background'
        ],

        styles: ['width', 'height', 'opacity'],
        animations: {
          opacity: { type: 'tween', duration: 250 }
        }
      },

      didWriteView: function didWriteView(_ref4) {
        var root = _ref4.root,
          props = _ref4.props;
        if (!props.background) return;
        root.element.style.backgroundColor = props.background;
      },
      create: function create(_ref5) {
        var root = _ref5.root,
          props = _ref5.props;

        root.ref.image = root.appendChildView(
          root.createChildView(
            createImageCanvasWrapper(_),
            Object.assign({}, props)
          )
        );

        root.ref.createMarkup = function() {
          if (root.ref.markup) return;
          root.ref.markup = root.appendChildView(
            root.createChildView(createMarkupView(_), Object.assign({}, props))
          );
        };

        root.ref.destroyMarkup = function() {
          if (!root.ref.markup) return;
          root.removeChildView(root.ref.markup);
          root.ref.markup = null;
        };

        // set up transparency grid
        var transparencyIndicator = root.query(
          'GET_IMAGE_PREVIEW_TRANSPARENCY_INDICATOR'
        );
        if (transparencyIndicator === null) return;

        // grid pattern
        if (transparencyIndicator === 'grid') {
          root.element.dataset.transparencyIndicator = transparencyIndicator;
        }
        // basic color
        else {
          root.element.dataset.transparencyIndicator = 'color';
        }
      },
      write: function write(_ref6) {
        var root = _ref6.root,
          props = _ref6.props,
          shouldOptimize = _ref6.shouldOptimize;
        var crop = props.crop,
          markup = props.markup,
          resize = props.resize,
          dirty = props.dirty,
          width = props.width,
          height = props.height;

        root.ref.image.crop = crop;

        var stage = {
          x: 0,
          y: 0,
          width: width,
          height: height,
          center: {
            x: width * 0.5,
            y: height * 0.5
          }
        };

        var image = {
          width: root.ref.image.width,
          height: root.ref.image.height
        };

        var origin = {
          x: crop.center.x * image.width,
          y: crop.center.y * image.height
        };

        var translation = {
          x: stage.center.x - image.width * crop.center.x,
          y: stage.center.y - image.height * crop.center.y
        };

        var rotation = Math.PI * 2 + (crop.rotation % (Math.PI * 2));

        var cropAspectRatio = crop.aspectRatio || image.height / image.width;

        var shouldLimit =
          typeof crop.scaleToFit === 'undefined' || crop.scaleToFit;

        var stageZoomFactor = getImageRectZoomFactor(
          image,
          getCenteredCropRect(stage, cropAspectRatio),

          rotation,
          shouldLimit ? crop.center : { x: 0.5, y: 0.5 }
        );

        var scale = crop.zoom * stageZoomFactor;

        // update markup view
        if (markup && markup.length) {
          root.ref.createMarkup();
          root.ref.markup.width = width;
          root.ref.markup.height = height;
          root.ref.markup.resize = resize;
          root.ref.markup.dirty = dirty;
          root.ref.markup.markup = markup;
          root.ref.markup.crop = getCurrentCropSize(image, crop);
        } else if (root.ref.markup) {
          root.ref.destroyMarkup();
        }

        // update image view
        var imageView = root.ref.image;

        // don't update clip layout
        if (shouldOptimize) {
          imageView.originX = null;
          imageView.originY = null;
          imageView.translateX = null;
          imageView.translateY = null;
          imageView.rotateZ = null;
          imageView.scaleX = null;
          imageView.scaleY = null;
          return;
        }

        imageView.originX = origin.x;
        imageView.originY = origin.y;
        imageView.translateX = translation.x;
        imageView.translateY = translation.y;
        imageView.rotateZ = rotation;
        imageView.scaleX = scale;
        imageView.scaleY = scale;
      }
    });
  };

  var createImageView = function createImageView(_) {
    return _.utils.createView({
      name: 'image-preview',
      tag: 'div',
      ignoreRect: true,
      mixins: {
        apis: ['image', 'crop', 'markup', 'resize', 'dirty', 'background'],

        styles: ['translateY', 'scaleX', 'scaleY', 'opacity'],

        animations: {
          scaleX: IMAGE_SCALE_SPRING_PROPS,
          scaleY: IMAGE_SCALE_SPRING_PROPS,
          translateY: IMAGE_SCALE_SPRING_PROPS,
          opacity: { type: 'tween', duration: 400 }
        }
      },

      create: function create(_ref7) {
        var root = _ref7.root,
          props = _ref7.props;
        root.ref.clip = root.appendChildView(
          root.createChildView(createClipView(_), {
            id: props.id,
            image: props.image,
            crop: props.crop,
            markup: props.markup,
            resize: props.resize,
            dirty: props.dirty,
            background: props.background
          })
        );
      },
      write: function write(_ref8) {
        var root = _ref8.root,
          props = _ref8.props,
          shouldOptimize = _ref8.shouldOptimize;
        var clip = root.ref.clip;
        var image = props.image,
          crop = props.crop,
          markup = props.markup,
          resize = props.resize,
          dirty = props.dirty;

        clip.crop = crop;
        clip.markup = markup;
        clip.resize = resize;
        clip.dirty = dirty;

        // don't update clip layout
        clip.opacity = shouldOptimize ? 0 : 1;

        // don't re-render if optimizing or hidden (width will be zero resulting in weird animations)
        if (shouldOptimize || root.rect.element.hidden) return;

        // calculate scaled preview image size
        var imageAspectRatio = image.height / image.width;
        var aspectRatio = crop.aspectRatio || imageAspectRatio;

        // calculate container size
        var containerWidth = root.rect.inner.width;
        var containerHeight = root.rect.inner.height;

        var fixedPreviewHeight = root.query('GET_IMAGE_PREVIEW_HEIGHT');
        var minPreviewHeight = root.query('GET_IMAGE_PREVIEW_MIN_HEIGHT');
        var maxPreviewHeight = root.query('GET_IMAGE_PREVIEW_MAX_HEIGHT');

        var panelAspectRatio = root.query('GET_PANEL_ASPECT_RATIO');
        var allowMultiple = root.query('GET_ALLOW_MULTIPLE');

        if (panelAspectRatio && !allowMultiple) {
          fixedPreviewHeight = containerWidth * panelAspectRatio;
          aspectRatio = panelAspectRatio;
        }

        // determine clip width and height
        var clipHeight =
          fixedPreviewHeight !== null
            ? fixedPreviewHeight
            : Math.max(
                minPreviewHeight,
                Math.min(containerWidth * aspectRatio, maxPreviewHeight)
              );

        var clipWidth = clipHeight / aspectRatio;
        if (clipWidth > containerWidth) {
          clipWidth = containerWidth;
          clipHeight = clipWidth * aspectRatio;
        }

        if (clipHeight > containerHeight) {
          clipHeight = containerHeight;
          clipWidth = containerHeight / aspectRatio;
        }

        clip.width = clipWidth;
        clip.height = clipHeight;
      }
    });
  };

  var SVG_MASK =
    '<svg width="500" height="200" viewBox="0 0 500 200" preserveAspectRatio="none">\n    <defs>\n        <radialGradient id="gradient-__UID__" cx=".5" cy="1.25" r="1.15">\n            <stop offset=\'50%\' stop-color=\'#000000\'/>\n            <stop offset=\'56%\' stop-color=\'#0a0a0a\'/>\n            <stop offset=\'63%\' stop-color=\'#262626\'/>\n            <stop offset=\'69%\' stop-color=\'#4f4f4f\'/>\n            <stop offset=\'75%\' stop-color=\'#808080\'/>\n            <stop offset=\'81%\' stop-color=\'#b1b1b1\'/>\n            <stop offset=\'88%\' stop-color=\'#dadada\'/>\n            <stop offset=\'94%\' stop-color=\'#f6f6f6\'/>\n            <stop offset=\'100%\' stop-color=\'#ffffff\'/>\n        </radialGradient>\n        <mask id="mask-__UID__">\n            <rect x="0" y="0" width="500" height="200" fill="url(#gradient-__UID__)"></rect>\n        </mask>\n    </defs>\n    <rect x="0" width="500" height="200" fill="currentColor" mask="url(#mask-__UID__)"></rect>\n</svg>';

  var SVGMaskUniqueId = 0;

  var createImageOverlayView = function createImageOverlayView(fpAPI) {
    return fpAPI.utils.createView({
      name: 'image-preview-overlay',
      tag: 'div',
      ignoreRect: true,
      create: function create(_ref) {
        var root = _ref.root,
          props = _ref.props;
        var mask = SVG_MASK;
        if (document.querySelector('base')) {
          var url = new URL(
            window.location.href.replace(window.location.hash, '')
          ).href;
          mask = mask.replace(/url\(\#/g, 'url(' + url + '#');
        }

        SVGMaskUniqueId++;
        root.element.classList.add(
          'filepond--image-preview-overlay-'.concat(props.status)
        );

        root.element.innerHTML = mask.replace(/__UID__/g, SVGMaskUniqueId);
      },
      mixins: {
        styles: ['opacity'],
        animations: {
          opacity: { type: 'spring', mass: 25 }
        }
      }
    });
  };

  /**
   * Bitmap Worker
   */
  var BitmapWorker = function BitmapWorker() {
    self.onmessage = function(e) {
      createImageBitmap(e.data.message.file).then(function(bitmap) {
        self.postMessage({ id: e.data.id, message: bitmap }, [bitmap]);
      });
    };
  };

  /**
   * ColorMatrix Worker
   */
  var ColorMatrixWorker = function ColorMatrixWorker() {
    self.onmessage = function(e) {
      var imageData = e.data.message.imageData;
      var matrix = e.data.message.colorMatrix;

      var data = imageData.data;
      var l = data.length;

      var m11 = matrix[0];
      var m12 = matrix[1];
      var m13 = matrix[2];
      var m14 = matrix[3];
      var m15 = matrix[4];

      var m21 = matrix[5];
      var m22 = matrix[6];
      var m23 = matrix[7];
      var m24 = matrix[8];
      var m25 = matrix[9];

      var m31 = matrix[10];
      var m32 = matrix[11];
      var m33 = matrix[12];
      var m34 = matrix[13];
      var m35 = matrix[14];

      var m41 = matrix[15];
      var m42 = matrix[16];
      var m43 = matrix[17];
      var m44 = matrix[18];
      var m45 = matrix[19];

      var index = 0,
        r = 0.0,
        g = 0.0,
        b = 0.0,
        a = 0.0;

      for (; index < l; index += 4) {
        r = data[index] / 255;
        g = data[index + 1] / 255;
        b = data[index + 2] / 255;
        a = data[index + 3] / 255;
        data[index] = Math.max(
          0,
          Math.min((r * m11 + g * m12 + b * m13 + a * m14 + m15) * 255, 255)
        );
        data[index + 1] = Math.max(
          0,
          Math.min((r * m21 + g * m22 + b * m23 + a * m24 + m25) * 255, 255)
        );
        data[index + 2] = Math.max(
          0,
          Math.min((r * m31 + g * m32 + b * m33 + a * m34 + m35) * 255, 255)
        );
        data[index + 3] = Math.max(
          0,
          Math.min((r * m41 + g * m42 + b * m43 + a * m44 + m45) * 255, 255)
        );
      }

      self.postMessage({ id: e.data.id, message: imageData }, [
        imageData.data.buffer
      ]);
    };
  };

  var getImageSize = function getImageSize(url, cb) {
    var image = new Image();
    image.onload = function() {
      var width = image.naturalWidth;
      var height = image.naturalHeight;
      image = null;
      cb(width, height);
    };
    image.src = url;
  };

  var transforms = {
    1: function _() {
      return [1, 0, 0, 1, 0, 0];
    },
    2: function _(width) {
      return [-1, 0, 0, 1, width, 0];
    },
    3: function _(width, height) {
      return [-1, 0, 0, -1, width, height];
    },
    4: function _(width, height) {
      return [1, 0, 0, -1, 0, height];
    },
    5: function _() {
      return [0, 1, 1, 0, 0, 0];
    },
    6: function _(width, height) {
      return [0, 1, -1, 0, height, 0];
    },
    7: function _(width, height) {
      return [0, -1, -1, 0, height, width];
    },
    8: function _(width) {
      return [0, -1, 1, 0, 0, width];
    }
  };

  var fixImageOrientation = function fixImageOrientation(
    ctx,
    width,
    height,
    orientation
  ) {
    // no orientation supplied
    if (orientation === -1) {
      return;
    }

    ctx.transform.apply(ctx, transforms[orientation](width, height));
  };

  // draws the preview image to canvas
  var createPreviewImage = function createPreviewImage(
    data,
    width,
    height,
    orientation
  ) {
    // can't draw on half pixels
    width = Math.round(width);
    height = Math.round(height);

    // draw image
    var canvas = document.createElement('canvas');
    canvas.width = width;
    canvas.height = height;
    var ctx = canvas.getContext('2d');

    // if is rotated incorrectly swap width and height
    if (orientation >= 5 && orientation <= 8) {
      var _ref = [height, width];
      width = _ref[0];
      height = _ref[1];
    }

    // correct image orientation
    fixImageOrientation(ctx, width, height, orientation);

    // draw the image
    ctx.drawImage(data, 0, 0, width, height);

    return canvas;
  };

  var isBitmap = function isBitmap(file) {
    return /^image/.test(file.type) && !/svg/.test(file.type);
  };

  var MAX_WIDTH = 10;
  var MAX_HEIGHT = 10;

  var calculateAverageColor = function calculateAverageColor(image) {
    var scalar = Math.min(MAX_WIDTH / image.width, MAX_HEIGHT / image.height);

    var canvas = document.createElement('canvas');
    var ctx = canvas.getContext('2d');
    var width = (canvas.width = Math.ceil(image.width * scalar));
    var height = (canvas.height = Math.ceil(image.height * scalar));
    ctx.drawImage(image, 0, 0, width, height);
    var data = null;
    try {
      data = ctx.getImageData(0, 0, width, height).data;
    } catch (e) {
      return null;
    }
    var l = data.length;

    var r = 0;
    var g = 0;
    var b = 0;
    var i = 0;

    for (; i < l; i += 4) {
      r += data[i] * data[i];
      g += data[i + 1] * data[i + 1];
      b += data[i + 2] * data[i + 2];
    }

    r = averageColor(r, l);
    g = averageColor(g, l);
    b = averageColor(b, l);

    return { r: r, g: g, b: b };
  };

  var averageColor = function averageColor(c, l) {
    return Math.floor(Math.sqrt(c / (l / 4)));
  };

  var cloneCanvas = function cloneCanvas(origin, target) {
    target = target || document.createElement('canvas');
    target.width = origin.width;
    target.height = origin.height;
    var ctx = target.getContext('2d');
    ctx.drawImage(origin, 0, 0);
    return target;
  };

  var cloneImageData = function cloneImageData(imageData) {
    var id;
    try {
      id = new ImageData(imageData.width, imageData.height);
    } catch (e) {
      var canvas = document.createElement('canvas');
      var ctx = canvas.getContext('2d');
      id = ctx.createImageData(imageData.width, imageData.height);
    }
    id.data.set(new Uint8ClampedArray(imageData.data));
    return id;
  };

  var loadImage = function loadImage(url) {
    return new Promise(function(resolve, reject) {
      var img = new Image();
      img.crossOrigin = 'Anonymous';
      img.onload = function() {
        resolve(img);
      };
      img.onerror = function(e) {
        reject(e);
      };
      img.src = url;
    });
  };

  var createImageWrapperView = function createImageWrapperView(_) {
    // create overlay view
    var OverlayView = createImageOverlayView(_);

    var ImageView = createImageView(_);
    var createWorker = _.utils.createWorker;

    var applyFilter = function applyFilter(root, filter, target) {
      return new Promise(function(resolve) {
        // will store image data for future filter updates
        if (!root.ref.imageData) {
          root.ref.imageData = target
            .getContext('2d')
            .getImageData(0, 0, target.width, target.height);
        }

        // get image data reference
        var imageData = cloneImageData(root.ref.imageData);

        if (!filter || filter.length !== 20) {
          target.getContext('2d').putImageData(imageData, 0, 0);
          return resolve();
        }

        var worker = createWorker(ColorMatrixWorker);
        worker.post(
          {
            imageData: imageData,
            colorMatrix: filter
          },

          function(response) {
            // apply filtered colors
            target.getContext('2d').putImageData(response, 0, 0);

            // stop worker
            worker.terminate();

            // done!
            resolve();
          },
          [imageData.data.buffer]
        );
      });
    };

    var removeImageView = function removeImageView(root, imageView) {
      root.removeChildView(imageView);
      imageView.image.width = 1;
      imageView.image.height = 1;
      imageView._destroy();
    };

    // remove an image
    var shiftImage = function shiftImage(_ref) {
      var root = _ref.root;
      var imageView = root.ref.images.shift();
      imageView.opacity = 0;
      imageView.translateY = -15;
      root.ref.imageViewBin.push(imageView);
      return imageView;
    };

    // add new image
    var pushImage = function pushImage(_ref2) {
      var root = _ref2.root,
        props = _ref2.props,
        image = _ref2.image;
      var id = props.id;
      var item = root.query('GET_ITEM', { id: id });
      if (!item) return;

      var crop = item.getMetadata('crop') || {
        center: {
          x: 0.5,
          y: 0.5
        },

        flip: {
          horizontal: false,
          vertical: false
        },

        zoom: 1,
        rotation: 0,
        aspectRatio: null
      };

      var background = root.query(
        'GET_IMAGE_TRANSFORM_CANVAS_BACKGROUND_COLOR'
      );

      var markup;
      var resize;
      var dirty = false;
      if (root.query('GET_IMAGE_PREVIEW_MARKUP_SHOW')) {
        markup = item.getMetadata('markup') || [];
        resize = item.getMetadata('resize');
        dirty = true;
      }

      // append image presenter
      var imageView = root.appendChildView(
        root.createChildView(ImageView, {
          id: id,
          image: image,
          crop: crop,
          resize: resize,
          markup: markup,
          dirty: dirty,
          background: background,
          opacity: 0,
          scaleX: 1.15,
          scaleY: 1.15,
          translateY: 15
        }),

        root.childViews.length
      );

      root.ref.images.push(imageView);

      // reveal the preview image
      imageView.opacity = 1;
      imageView.scaleX = 1;
      imageView.scaleY = 1;
      imageView.translateY = 0;

      // the preview is now ready to be drawn
      setTimeout(function() {
        root.dispatch('DID_IMAGE_PREVIEW_SHOW', { id: id });
      }, 250);
    };

    var updateImage = function updateImage(_ref3) {
      var root = _ref3.root,
        props = _ref3.props;
      var item = root.query('GET_ITEM', { id: props.id });
      if (!item) return;
      var imageView = root.ref.images[root.ref.images.length - 1];
      imageView.crop = item.getMetadata('crop');
      imageView.background = root.query(
        'GET_IMAGE_TRANSFORM_CANVAS_BACKGROUND_COLOR'
      );

      if (root.query('GET_IMAGE_PREVIEW_MARKUP_SHOW')) {
        imageView.dirty = true;
        imageView.resize = item.getMetadata('resize');
        imageView.markup = item.getMetadata('markup');
      }
    };

    // replace image preview
    var didUpdateItemMetadata = function didUpdateItemMetadata(_ref4) {
      var root = _ref4.root,
        props = _ref4.props,
        action = _ref4.action;
      // only filter and crop trigger redraw
      if (!/crop|filter|markup|resize/.test(action.change.key)) return;

      // no images to update, exit
      if (!root.ref.images.length) return;

      // no item found, exit
      var item = root.query('GET_ITEM', { id: props.id });
      if (!item) return;

      // for now, update existing image when filtering
      if (/filter/.test(action.change.key)) {
        var imageView = root.ref.images[root.ref.images.length - 1];
        applyFilter(root, action.change.value, imageView.image);
        return;
      }

      if (/crop|markup|resize/.test(action.change.key)) {
        var crop = item.getMetadata('crop');
        var image = root.ref.images[root.ref.images.length - 1];

        // if aspect ratio has changed, we need to create a new image
        if (
          crop &&
          crop.aspectRatio &&
          image.crop &&
          image.crop.aspectRatio &&
          Math.abs(crop.aspectRatio - image.crop.aspectRatio) > 0.00001
        ) {
          var _imageView = shiftImage({ root: root });
          pushImage({
            root: root,
            props: props,
            image: cloneCanvas(_imageView.image)
          });
        }
        // if not, we can update the current image
        else {
          updateImage({ root: root, props: props });
        }
      }
    };

    var canCreateImageBitmap = function canCreateImageBitmap(file) {
      // Firefox versions before 58 will freeze when running createImageBitmap
      // in a Web Worker so we detect those versions and return false for support
      var userAgent = window.navigator.userAgent;
      var isFirefox = userAgent.match(/Firefox\/([0-9]+)\./);
      var firefoxVersion = isFirefox ? parseInt(isFirefox[1]) : null;
      if (firefoxVersion <= 58) return false;

      return 'createImageBitmap' in window && isBitmap(file);
    };

    /**
     * Write handler for when preview container has been created
     */
    var didCreatePreviewContainer = function didCreatePreviewContainer(_ref5) {
      var root = _ref5.root,
        props = _ref5.props;
      var id = props.id;

      // we need to get the file data to determine the eventual image size
      var item = root.query('GET_ITEM', id);
      if (!item) return;

      // get url to file (we'll revoke it later on when done)
      var fileURL = URL.createObjectURL(item.file);

      // determine image size of this item
      getImageSize(fileURL, function(width, height) {
        // we can now scale the panel to the final size
        root.dispatch('DID_IMAGE_PREVIEW_CALCULATE_SIZE', {
          id: id,
          width: width,
          height: height
        });
      });
    };

    var drawPreview = function drawPreview(_ref6) {
      var root = _ref6.root,
        props = _ref6.props;
      var id = props.id;

      // we need to get the file data to determine the eventual image size
      var item = root.query('GET_ITEM', id);
      if (!item) return;

      // get url to file (we'll revoke it later on when done)
      var fileURL = URL.createObjectURL(item.file);

      // fallback
      var loadPreviewFallback = function loadPreviewFallback() {
        // let's scale the image in the main thread :(
        loadImage(fileURL).then(previewImageLoaded);
      };

      // image is now ready
      var previewImageLoaded = function previewImageLoaded(imageData) {
        // the file url is no longer needed
        URL.revokeObjectURL(fileURL);

        // draw the scaled down version here and use that as source so bitmapdata can be closed
        // orientation info
        var exif = item.getMetadata('exif') || {};
        var orientation = exif.orientation || -1;

        // get width and height from action, and swap if orientation is incorrect
        var width = imageData.width,
          height = imageData.height;

        // if no width or height, just return early.
        if (!width || !height) return;

        if (orientation >= 5 && orientation <= 8) {
          var _ref7 = [height, width];
          width = _ref7[0];
          height = _ref7[1];
        }

        // scale canvas based on pixel density
        // we multiply by .75 as that creates smaller but still clear images on screens with high res displays
        var pixelDensityFactor = Math.max(1, window.devicePixelRatio * 0.75);

        // we want as much pixels to work with as possible,
        // this multiplies the minimum image resolution,
        // so when zooming in it doesn't get too blurry
        var zoomFactor = root.query('GET_IMAGE_PREVIEW_ZOOM_FACTOR');

        // imaeg scale factor
        var scaleFactor = zoomFactor * pixelDensityFactor;

        // calculate scaled preview image size
        var previewImageRatio = height / width;

        // calculate image preview height and width
        var previewContainerWidth = root.rect.element.width;
        var previewContainerHeight = root.rect.element.height;

        var imageWidth = previewContainerWidth;
        var imageHeight = imageWidth * previewImageRatio;

        if (previewImageRatio > 1) {
          imageWidth = Math.min(width, previewContainerWidth * scaleFactor);
          imageHeight = imageWidth * previewImageRatio;
        } else {
          imageHeight = Math.min(height, previewContainerHeight * scaleFactor);
          imageWidth = imageHeight / previewImageRatio;
        }

        // transfer to image tag so no canvas memory wasted on iOS
        var previewImage = createPreviewImage(
          imageData,
          imageWidth,
          imageHeight,
          orientation
        );

        // done
        var done = function done() {
          // calculate average image color, disabled for now
          var averageColor = root.query(
            'GET_IMAGE_PREVIEW_CALCULATE_AVERAGE_IMAGE_COLOR'
          )
            ? calculateAverageColor(data)
            : null;
          item.setMetadata('color', averageColor, true);

          // data has been transferred to canvas ( if was ImageBitmap )
          if ('close' in imageData) {
            imageData.close();
          }

          // show the overlay
          root.ref.overlayShadow.opacity = 1;

          // create the first image
          pushImage({ root: root, props: props, image: previewImage });
        };

        // apply filter
        var filter = item.getMetadata('filter');
        if (filter) {
          applyFilter(root, filter, previewImage).then(done);
        } else {
          done();
        }
      };

      // if we support scaling using createImageBitmap we use a worker
      if (canCreateImageBitmap(item.file)) {
        // let's scale the image in a worker
        var worker = createWorker(BitmapWorker);

        worker.post(
          {
            file: item.file
          },

          function(imageBitmap) {
            // destroy worker
            worker.terminate();

            // no bitmap returned, must be something wrong,
            // try the oldschool way
            if (!imageBitmap) {
              loadPreviewFallback();
              return;
            }

            // yay we got our bitmap, let's continue showing the preview
            previewImageLoaded(imageBitmap);
          }
        );
      } else {
        // create fallback preview
        loadPreviewFallback();
      }
    };

    /**
     * Write handler for when the preview image is ready to be animated
     */
    var didDrawPreview = function didDrawPreview(_ref8) {
      var root = _ref8.root;
      // get last added image
      var image = root.ref.images[root.ref.images.length - 1];
      image.translateY = 0;
      image.scaleX = 1.0;
      image.scaleY = 1.0;
      image.opacity = 1;
    };

    /**
     * Write handler for when the preview has been loaded
     */
    var restoreOverlay = function restoreOverlay(_ref9) {
      var root = _ref9.root;
      root.ref.overlayShadow.opacity = 1;
      root.ref.overlayError.opacity = 0;
      root.ref.overlaySuccess.opacity = 0;
    };

    var didThrowError = function didThrowError(_ref10) {
      var root = _ref10.root;
      root.ref.overlayShadow.opacity = 0.25;
      root.ref.overlayError.opacity = 1;
    };

    var didCompleteProcessing = function didCompleteProcessing(_ref11) {
      var root = _ref11.root;
      root.ref.overlayShadow.opacity = 0.25;
      root.ref.overlaySuccess.opacity = 1;
    };

    /**
     * Constructor
     */
    var create = function create(_ref12) {
      var root = _ref12.root;
      // image view
      root.ref.images = [];

      // the preview image data (we need this to filter the image)
      root.ref.imageData = null;

      // image bin
      root.ref.imageViewBin = [];

      // image overlays
      root.ref.overlayShadow = root.appendChildView(
        root.createChildView(OverlayView, {
          opacity: 0,
          status: 'idle'
        })
      );

      root.ref.overlaySuccess = root.appendChildView(
        root.createChildView(OverlayView, {
          opacity: 0,
          status: 'success'
        })
      );

      root.ref.overlayError = root.appendChildView(
        root.createChildView(OverlayView, {
          opacity: 0,
          status: 'failure'
        })
      );
    };

    return _.utils.createView({
      name: 'image-preview-wrapper',
      create: create,
      styles: ['height'],
      apis: ['height'],
      destroy: function destroy(_ref13) {
        var root = _ref13.root;
        // we resize the image so memory on iOS 12 is released more quickly (it seems)
        root.ref.images.forEach(function(imageView) {
          imageView.image.width = 1;
          imageView.image.height = 1;
        });
      },
      didWriteView: function didWriteView(_ref14) {
        var root = _ref14.root;
        root.ref.images.forEach(function(imageView) {
          imageView.dirty = false;
        });
      },
      write: _.utils.createRoute(
        {
          // image preview stated
          DID_IMAGE_PREVIEW_DRAW: didDrawPreview,
          DID_IMAGE_PREVIEW_CONTAINER_CREATE: didCreatePreviewContainer,
          DID_FINISH_CALCULATE_PREVIEWSIZE: drawPreview,
          DID_UPDATE_ITEM_METADATA: didUpdateItemMetadata,

          // file states
          DID_THROW_ITEM_LOAD_ERROR: didThrowError,
          DID_THROW_ITEM_PROCESSING_ERROR: didThrowError,
          DID_THROW_ITEM_INVALID: didThrowError,
          DID_COMPLETE_ITEM_PROCESSING: didCompleteProcessing,
          DID_START_ITEM_PROCESSING: restoreOverlay,
          DID_REVERT_ITEM_PROCESSING: restoreOverlay
        },

        function(_ref15) {
          var root = _ref15.root;
          // views on death row
          var viewsToRemove = root.ref.imageViewBin.filter(function(imageView) {
            return imageView.opacity === 0;
          });

          // views to retain
          root.ref.imageViewBin = root.ref.imageViewBin.filter(function(
            imageView
          ) {
            return imageView.opacity > 0;
          });

          // remove these views
          viewsToRemove.forEach(function(imageView) {
            return removeImageView(root, imageView);
          });
          viewsToRemove.length = 0;
        }
      )
    });
  };

  /**
   * Image Preview Plugin
   */
  var plugin = function plugin(fpAPI) {
    var addFilter = fpAPI.addFilter,
      utils = fpAPI.utils;
    var Type = utils.Type,
      createRoute = utils.createRoute,
      isFile = utils.isFile;

    // imagePreviewView
    var imagePreviewView = createImageWrapperView(fpAPI);

    // called for each view that is created right after the 'create' method
    addFilter('CREATE_VIEW', function(viewAPI) {
      // get reference to created view
      var is = viewAPI.is,
        view = viewAPI.view,
        query = viewAPI.query;

      // only hook up to item view and only if is enabled for this cropper
      if (!is('file') || !query('GET_ALLOW_IMAGE_PREVIEW')) return;

      // create the image preview plugin, but only do so if the item is an image
      var didLoadItem = function didLoadItem(_ref) {
        var root = _ref.root,
          props = _ref.props;
        var id = props.id;
        var item = query('GET_ITEM', id);

        // item could theoretically have been removed in the mean time
        if (!item || !isFile(item.file) || item.archived) return;

        // get the file object
        var file = item.file;

        // exit if this is not an image
        if (!isPreviewableImage(file)) return;

        // test if is filtered
        if (!query('GET_IMAGE_PREVIEW_FILTER_ITEM')(item)) return;

        // exit if image size is too high and no createImageBitmap support
        // this would simply bring the browser to its knees and that is not what we want
        var supportsCreateImageBitmap = 'createImageBitmap' in (window || {});
        var maxPreviewFileSize = query('GET_IMAGE_PREVIEW_MAX_FILE_SIZE');
        if (
          !supportsCreateImageBitmap &&
          maxPreviewFileSize &&
          file.size > maxPreviewFileSize
        )
          return;

        // set preview view
        root.ref.imagePreview = view.appendChildView(
          view.createChildView(imagePreviewView, { id: id })
        );

        // update height if is fixed
        var fixedPreviewHeight = root.query('GET_IMAGE_PREVIEW_HEIGHT');
        if (fixedPreviewHeight) {
          root.dispatch('DID_UPDATE_PANEL_HEIGHT', {
            id: item.id,
            height: fixedPreviewHeight
          });
        }

        // now ready
        var queue =
          !supportsCreateImageBitmap &&
          file.size > query('GET_IMAGE_PREVIEW_MAX_INSTANT_PREVIEW_FILE_SIZE');
        root.dispatch('DID_IMAGE_PREVIEW_CONTAINER_CREATE', { id: id }, queue);
      };

      var rescaleItem = function rescaleItem(root, props) {
        if (!root.ref.imagePreview) return;
        var id = props.id;

        // get item
        var item = root.query('GET_ITEM', { id: id });
        if (!item) return;

        // if is fixed height or panel has aspect ratio, exit here, height has already been defined
        var panelAspectRatio = root.query('GET_PANEL_ASPECT_RATIO');
        var itemPanelAspectRatio = root.query('GET_ITEM_PANEL_ASPECT_RATIO');
        var fixedHeight = root.query('GET_IMAGE_PREVIEW_HEIGHT');
        if (panelAspectRatio || itemPanelAspectRatio || fixedHeight) return;

        // no data!
        var _root$ref = root.ref,
          imageWidth = _root$ref.imageWidth,
          imageHeight = _root$ref.imageHeight;
        if (!imageWidth || !imageHeight) return;

        // get height min and max
        var minPreviewHeight = root.query('GET_IMAGE_PREVIEW_MIN_HEIGHT');
        var maxPreviewHeight = root.query('GET_IMAGE_PREVIEW_MAX_HEIGHT');

        // orientation info
        var exif = item.getMetadata('exif') || {};
        var orientation = exif.orientation || -1;

        // get width and height from action, and swap of orientation is incorrect
        if (orientation >= 5 && orientation <= 8) {
          var _ref2 = [imageHeight, imageWidth];
          imageWidth = _ref2[0];
          imageHeight = _ref2[1];
        }

        // scale up width and height when we're dealing with an SVG
        if (!isBitmap(item.file) || root.query('GET_IMAGE_PREVIEW_UPSCALE')) {
          var scalar = 2048 / imageWidth;
          imageWidth *= scalar;
          imageHeight *= scalar;
        }

        // image aspect ratio
        var imageAspectRatio = imageHeight / imageWidth;

        // we need the item to get to the crop size
        var previewAspectRatio =
          (item.getMetadata('crop') || {}).aspectRatio || imageAspectRatio;

        // preview height range
        var previewHeightMax = Math.max(
          minPreviewHeight,
          Math.min(imageHeight, maxPreviewHeight)
        );

        var itemWidth = root.rect.element.width;
        var previewHeight = Math.min(
          itemWidth * previewAspectRatio,
          previewHeightMax
        );

        // request update to panel height
        root.dispatch('DID_UPDATE_PANEL_HEIGHT', {
          id: item.id,
          height: previewHeight
        });
      };

      var didResizeView = function didResizeView(_ref3) {
        var root = _ref3.root;
        // actions in next write operation
        root.ref.shouldRescale = true;
      };

      var didUpdateItemMetadata = function didUpdateItemMetadata(_ref4) {
        var root = _ref4.root,
          action = _ref4.action;
        if (action.change.key !== 'crop') return;

        // actions in next write operation
        root.ref.shouldRescale = true;
      };

      var didCalculatePreviewSize = function didCalculatePreviewSize(_ref5) {
        var root = _ref5.root,
          action = _ref5.action;
        // remember dimensions
        root.ref.imageWidth = action.width;
        root.ref.imageHeight = action.height;

        // actions in next write operation
        root.ref.shouldRescale = true;
        root.ref.shouldDrawPreview = true;

        // as image load could take a while and fire when draw loop is resting we need to give it a kick
        root.dispatch('KICK');
      };

      // start writing
      view.registerWriter(
        createRoute(
          {
            DID_RESIZE_ROOT: didResizeView,
            DID_STOP_RESIZE: didResizeView,
            DID_LOAD_ITEM: didLoadItem,
            DID_IMAGE_PREVIEW_CALCULATE_SIZE: didCalculatePreviewSize,
            DID_UPDATE_ITEM_METADATA: didUpdateItemMetadata
          },

          function(_ref6) {
            var root = _ref6.root,
              props = _ref6.props;
            // no preview view attached
            if (!root.ref.imagePreview) return;

            // don't do anything while hidden
            if (root.rect.element.hidden) return;

            // resize the item panel
            if (root.ref.shouldRescale) {
              rescaleItem(root, props);
              root.ref.shouldRescale = false;
            }

            if (root.ref.shouldDrawPreview) {
              // queue till next frame so we're sure the height has been applied this forces the draw image call inside the wrapper view to use the correct height
              requestAnimationFrame(function() {
                // this requestAnimationFrame nesting is horrible but it fixes an issue with 100hz displays on Chrome
                // https://github.com/pqina/filepond-plugin-image-preview/issues/57
                requestAnimationFrame(function() {
                  root.dispatch('DID_FINISH_CALCULATE_PREVIEWSIZE', {
                    id: props.id
                  });
                });
              });

              root.ref.shouldDrawPreview = false;
            }
          }
        )
      );
    });

    // expose plugin
    return {
      options: {
        // Enable or disable image preview
        allowImagePreview: [true, Type.BOOLEAN],

        // filters file items to determine which are shown as preview
        imagePreviewFilterItem: [
          function() {
            return true;
          },
          Type.FUNCTION
        ],

        // Fixed preview height
        imagePreviewHeight: [null, Type.INT],

        // Min image height
        imagePreviewMinHeight: [44, Type.INT],

        // Max image height
        imagePreviewMaxHeight: [256, Type.INT],

        // Max size of preview file for when createImageBitmap is not supported
        imagePreviewMaxFileSize: [null, Type.INT],

        // The amount of extra pixels added to the image preview to allow comfortable zooming
        imagePreviewZoomFactor: [2, Type.INT],

        // Should we upscale small images to fit the max bounding box of the preview area
        imagePreviewUpscale: [false, Type.BOOLEAN],

        // Max size of preview file that we allow to try to instant preview if createImageBitmap is not supported, else image is queued for loading
        imagePreviewMaxInstantPreviewFileSize: [1000000, Type.INT],

        // Style of the transparancy indicator used behind images
        imagePreviewTransparencyIndicator: [null, Type.STRING],

        // Enables or disables reading average image color
        imagePreviewCalculateAverageImageColor: [false, Type.BOOLEAN],

        // Enables or disables the previewing of markup
        imagePreviewMarkupShow: [true, Type.BOOLEAN],

        // Allows filtering of markup to only show certain shapes
        imagePreviewMarkupFilter: [
          function() {
            return true;
          },
          Type.FUNCTION
        ]
      }
    };
  };

  // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags
  var isBrowser =
    typeof window !== 'undefined' && typeof window.document !== 'undefined';
  if (isBrowser) {
    document.dispatchEvent(
      new CustomEvent('FilePond:pluginloaded', { detail: plugin })
    );
  }

  return plugin;
});


/***/ }),

/***/ "./node_modules/filepond/dist/filepond.js":
/*!************************************************!*\
  !*** ./node_modules/filepond/dist/filepond.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports) {

/*!
 * FilePond 4.30.4
 * Licensed under MIT, https://opensource.org/licenses/MIT/
 * Please visit https://pqina.nl/filepond/ for details.
 */

/* eslint-disable */

(function(global, factory) {
     true
        ? factory(exports)
        : 0;
})(this, function(exports) {
    'use strict';

    var isNode = function isNode(value) {
        return value instanceof HTMLElement;
    };

    var createStore = function createStore(initialState) {
        var queries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
        // internal state
        var state = Object.assign({}, initialState);

        // contains all actions for next frame, is clear when actions are requested
        var actionQueue = [];
        var dispatchQueue = [];

        // returns a duplicate of the current state
        var getState = function getState() {
            return Object.assign({}, state);
        };

        // returns a duplicate of the actions array and clears the actions array
        var processActionQueue = function processActionQueue() {
            // create copy of actions queue
            var queue = [].concat(actionQueue);

            // clear actions queue (we don't want no double actions)
            actionQueue.length = 0;

            return queue;
        };

        // processes actions that might block the main UI thread
        var processDispatchQueue = function processDispatchQueue() {
            // create copy of actions queue
            var queue = [].concat(dispatchQueue);

            // clear actions queue (we don't want no double actions)
            dispatchQueue.length = 0;

            // now dispatch these actions
            queue.forEach(function(_ref) {
                var type = _ref.type,
                    data = _ref.data;
                dispatch(type, data);
            });
        };

        // adds a new action, calls its handler and
        var dispatch = function dispatch(type, data, isBlocking) {
            // is blocking action (should never block if document is hidden)
            if (isBlocking && !document.hidden) {
                dispatchQueue.push({ type: type, data: data });
                return;
            }

            // if this action has a handler, handle the action
            if (actionHandlers[type]) {
                actionHandlers[type](data);
            }

            // now add action
            actionQueue.push({
                type: type,
                data: data,
            });
        };

        var query = function query(str) {
            var _queryHandles;
            for (
                var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
                _key < _len;
                _key++
            ) {
                args[_key - 1] = arguments[_key];
            }
            return queryHandles[str]
                ? (_queryHandles = queryHandles)[str].apply(_queryHandles, args)
                : null;
        };

        var api = {
            getState: getState,
            processActionQueue: processActionQueue,
            processDispatchQueue: processDispatchQueue,
            dispatch: dispatch,
            query: query,
        };

        var queryHandles = {};
        queries.forEach(function(query) {
            queryHandles = Object.assign({}, query(state), {}, queryHandles);
        });

        var actionHandlers = {};
        actions.forEach(function(action) {
            actionHandlers = Object.assign({}, action(dispatch, query, state), {}, actionHandlers);
        });

        return api;
    };

    var defineProperty = function defineProperty(obj, property, definition) {
        if (typeof definition === 'function') {
            obj[property] = definition;
            return;
        }
        Object.defineProperty(obj, property, Object.assign({}, definition));
    };

    var forin = function forin(obj, cb) {
        for (var key in obj) {
            if (!obj.hasOwnProperty(key)) {
                continue;
            }

            cb(key, obj[key]);
        }
    };

    var createObject = function createObject(definition) {
        var obj = {};
        forin(definition, function(property) {
            defineProperty(obj, property, definition[property]);
        });
        return obj;
    };

    var attr = function attr(node, name) {
        var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (value === null) {
            return node.getAttribute(name) || node.hasAttribute(name);
        }
        node.setAttribute(name, value);
    };

    var ns = 'http://www.w3.org/2000/svg';
    var svgElements = ['svg', 'path']; // only svg elements used

    var isSVGElement = function isSVGElement(tag) {
        return svgElements.includes(tag);
    };

    var createElement = function createElement(tag, className) {
        var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        if (typeof className === 'object') {
            attributes = className;
            className = null;
        }
        var element = isSVGElement(tag)
            ? document.createElementNS(ns, tag)
            : document.createElement(tag);
        if (className) {
            if (isSVGElement(tag)) {
                attr(element, 'class', className);
            } else {
                element.className = className;
            }
        }
        forin(attributes, function(name, value) {
            attr(element, name, value);
        });
        return element;
    };

    var appendChild = function appendChild(parent) {
        return function(child, index) {
            if (typeof index !== 'undefined' && parent.children[index]) {
                parent.insertBefore(child, parent.children[index]);
            } else {
                parent.appendChild(child);
            }
        };
    };

    var appendChildView = function appendChildView(parent, childViews) {
        return function(view, index) {
            if (typeof index !== 'undefined') {
                childViews.splice(index, 0, view);
            } else {
                childViews.push(view);
            }

            return view;
        };
    };

    var removeChildView = function removeChildView(parent, childViews) {
        return function(view) {
            // remove from child views
            childViews.splice(childViews.indexOf(view), 1);

            // remove the element
            if (view.element.parentNode) {
                parent.removeChild(view.element);
            }

            return view;
        };
    };

    var IS_BROWSER = (function() {
        return typeof window !== 'undefined' && typeof window.document !== 'undefined';
    })();
    var isBrowser = function isBrowser() {
        return IS_BROWSER;
    };

    var testElement = isBrowser() ? createElement('svg') : {};
    var getChildCount =
        'children' in testElement
            ? function(el) {
                  return el.children.length;
              }
            : function(el) {
                  return el.childNodes.length;
              };

    var getViewRect = function getViewRect(elementRect, childViews, offset, scale) {
        var left = offset[0] || elementRect.left;
        var top = offset[1] || elementRect.top;
        var right = left + elementRect.width;
        var bottom = top + elementRect.height * (scale[1] || 1);

        var rect = {
            // the rectangle of the element itself
            element: Object.assign({}, elementRect),

            // the rectangle of the element expanded to contain its children, does not include any margins
            inner: {
                left: elementRect.left,
                top: elementRect.top,
                right: elementRect.right,
                bottom: elementRect.bottom,
            },

            // the rectangle of the element expanded to contain its children including own margin and child margins
            // margins will be added after we've recalculated the size
            outer: {
                left: left,
                top: top,
                right: right,
                bottom: bottom,
            },
        };

        // expand rect to fit all child rectangles
        childViews
            .filter(function(childView) {
                return !childView.isRectIgnored();
            })
            .map(function(childView) {
                return childView.rect;
            })
            .forEach(function(childViewRect) {
                expandRect(rect.inner, Object.assign({}, childViewRect.inner));
                expandRect(rect.outer, Object.assign({}, childViewRect.outer));
            });

        // calculate inner width and height
        calculateRectSize(rect.inner);

        // append additional margin (top and left margins are included in top and left automatically)
        rect.outer.bottom += rect.element.marginBottom;
        rect.outer.right += rect.element.marginRight;

        // calculate outer width and height
        calculateRectSize(rect.outer);

        return rect;
    };

    var expandRect = function expandRect(parent, child) {
        // adjust for parent offset
        child.top += parent.top;
        child.right += parent.left;
        child.bottom += parent.top;
        child.left += parent.left;

        if (child.bottom > parent.bottom) {
            parent.bottom = child.bottom;
        }

        if (child.right > parent.right) {
            parent.right = child.right;
        }
    };

    var calculateRectSize = function calculateRectSize(rect) {
        rect.width = rect.right - rect.left;
        rect.height = rect.bottom - rect.top;
    };

    var isNumber = function isNumber(value) {
        return typeof value === 'number';
    };

    /**
     * Determines if position is at destination
     * @param position
     * @param destination
     * @param velocity
     * @param errorMargin
     * @returns {boolean}
     */
    var thereYet = function thereYet(position, destination, velocity) {
        var errorMargin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.001;
        return Math.abs(position - destination) < errorMargin && Math.abs(velocity) < errorMargin;
    };

    /**
     * Spring animation
     */
    var spring =
        // default options
        function spring() // method definition
        {
            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                _ref$stiffness = _ref.stiffness,
                stiffness = _ref$stiffness === void 0 ? 0.5 : _ref$stiffness,
                _ref$damping = _ref.damping,
                damping = _ref$damping === void 0 ? 0.75 : _ref$damping,
                _ref$mass = _ref.mass,
                mass = _ref$mass === void 0 ? 10 : _ref$mass;
            var target = null;
            var position = null;
            var velocity = 0;
            var resting = false;

            // updates spring state
            var interpolate = function interpolate(ts, skipToEndState) {
                // in rest, don't animate
                if (resting) return;

                // need at least a target or position to do springy things
                if (!(isNumber(target) && isNumber(position))) {
                    resting = true;
                    velocity = 0;
                    return;
                }

                // calculate spring force
                var f = -(position - target) * stiffness;

                // update velocity by adding force based on mass
                velocity += f / mass;

                // update position by adding velocity
                position += velocity;

                // slow down based on amount of damping
                velocity *= damping;

                // we've arrived if we're near target and our velocity is near zero
                if (thereYet(position, target, velocity) || skipToEndState) {
                    position = target;
                    velocity = 0;
                    resting = true;

                    // we done
                    api.onupdate(position);
                    api.oncomplete(position);
                } else {
                    // progress update
                    api.onupdate(position);
                }
            };

            /**
             * Set new target value
             * @param value
             */
            var setTarget = function setTarget(value) {
                // if currently has no position, set target and position to this value
                if (isNumber(value) && !isNumber(position)) {
                    position = value;
                }

                // next target value will not be animated to
                if (target === null) {
                    target = value;
                    position = value;
                }

                // let start moving to target
                target = value;

                // already at target
                if (position === target || typeof target === 'undefined') {
                    // now resting as target is current position, stop moving
                    resting = true;
                    velocity = 0;

                    // done!
                    api.onupdate(position);
                    api.oncomplete(position);

                    return;
                }

                resting = false;
            };

            // need 'api' to call onupdate callback
            var api = createObject({
                interpolate: interpolate,
                target: {
                    set: setTarget,
                    get: function get() {
                        return target;
                    },
                },

                resting: {
                    get: function get() {
                        return resting;
                    },
                },

                onupdate: function onupdate(value) {},
                oncomplete: function oncomplete(value) {},
            });

            return api;
        };

    var easeLinear = function easeLinear(t) {
        return t;
    };
    var easeInOutQuad = function easeInOutQuad(t) {
        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    };

    var tween =
        // default values
        function tween() // method definition
        {
            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                _ref$duration = _ref.duration,
                duration = _ref$duration === void 0 ? 500 : _ref$duration,
                _ref$easing = _ref.easing,
                easing = _ref$easing === void 0 ? easeInOutQuad : _ref$easing,
                _ref$delay = _ref.delay,
                delay = _ref$delay === void 0 ? 0 : _ref$delay;
            var start = null;
            var t;
            var p;
            var resting = true;
            var reverse = false;
            var target = null;

            var interpolate = function interpolate(ts, skipToEndState) {
                if (resting || target === null) return;

                if (start === null) {
                    start = ts;
                }

                if (ts - start < delay) return;

                t = ts - start - delay;

                if (t >= duration || skipToEndState) {
                    t = 1;
                    p = reverse ? 0 : 1;
                    api.onupdate(p * target);
                    api.oncomplete(p * target);
                    resting = true;
                } else {
                    p = t / duration;
                    api.onupdate((t >= 0 ? easing(reverse ? 1 - p : p) : 0) * target);
                }
            };

            // need 'api' to call onupdate callback
            var api = createObject({
                interpolate: interpolate,
                target: {
                    get: function get() {
                        return reverse ? 0 : target;
                    },
                    set: function set(value) {
                        // is initial value
                        if (target === null) {
                            target = value;
                            api.onupdate(value);
                            api.oncomplete(value);
                            return;
                        }

                        // want to tween to a smaller value and have a current value
                        if (value < target) {
                            target = 1;
                            reverse = true;
                        } else {
                            // not tweening to a smaller value
                            reverse = false;
                            target = value;
                        }

                        // let's go!
                        resting = false;
                        start = null;
                    },
                },

                resting: {
                    get: function get() {
                        return resting;
                    },
                },

                onupdate: function onupdate(value) {},
                oncomplete: function oncomplete(value) {},
            });

            return api;
        };

    var animator = {
        spring: spring,
        tween: tween,
    };

    /*
                       { type: 'spring', stiffness: .5, damping: .75, mass: 10 };
                       { translation: { type: 'spring', ... }, ... }
                       { translation: { x: { type: 'spring', ... } } }
                      */
    var createAnimator = function createAnimator(definition, category, property) {
        // default is single definition
        // we check if transform is set, if so, we check if property is set
        var def =
            definition[category] && typeof definition[category][property] === 'object'
                ? definition[category][property]
                : definition[category] || definition;

        var type = typeof def === 'string' ? def : def.type;
        var props = typeof def === 'object' ? Object.assign({}, def) : {};

        return animator[type] ? animator[type](props) : null;
    };

    var addGetSet = function addGetSet(keys, obj, props) {
        var overwrite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        obj = Array.isArray(obj) ? obj : [obj];
        obj.forEach(function(o) {
            keys.forEach(function(key) {
                var name = key;
                var getter = function getter() {
                    return props[key];
                };
                var setter = function setter(value) {
                    return (props[key] = value);
                };

                if (typeof key === 'object') {
                    name = key.key;
                    getter = key.getter || getter;
                    setter = key.setter || setter;
                }

                if (o[name] && !overwrite) {
                    return;
                }

                o[name] = {
                    get: getter,
                    set: setter,
                };
            });
        });
    };

    // add to state,
    // add getters and setters to internal and external api (if not set)
    // setup animators

    var animations = function animations(_ref) {
        var mixinConfig = _ref.mixinConfig,
            viewProps = _ref.viewProps,
            viewInternalAPI = _ref.viewInternalAPI,
            viewExternalAPI = _ref.viewExternalAPI;
        // initial properties
        var initialProps = Object.assign({}, viewProps);

        // list of all active animations
        var animations = [];

        // setup animators
        forin(mixinConfig, function(property, animation) {
            var animator = createAnimator(animation);
            if (!animator) {
                return;
            }

            // when the animator updates, update the view state value
            animator.onupdate = function(value) {
                viewProps[property] = value;
            };

            // set animator target
            animator.target = initialProps[property];

            // when value is set, set the animator target value
            var prop = {
                key: property,
                setter: function setter(value) {
                    // if already at target, we done!
                    if (animator.target === value) {
                        return;
                    }

                    animator.target = value;
                },
                getter: function getter() {
                    return viewProps[property];
                },
            };

            // add getters and setters
            addGetSet([prop], [viewInternalAPI, viewExternalAPI], viewProps, true);

            // add it to the list for easy updating from the _write method
            animations.push(animator);
        });

        // expose internal write api
        return {
            write: function write(ts) {
                var skipToEndState = document.hidden;
                var resting = true;
                animations.forEach(function(animation) {
                    if (!animation.resting) resting = false;
                    animation.interpolate(ts, skipToEndState);
                });
                return resting;
            },
            destroy: function destroy() {},
        };
    };

    var addEvent = function addEvent(element) {
        return function(type, fn) {
            element.addEventListener(type, fn);
        };
    };

    var removeEvent = function removeEvent(element) {
        return function(type, fn) {
            element.removeEventListener(type, fn);
        };
    };

    // mixin
    var listeners = function listeners(_ref) {
        var mixinConfig = _ref.mixinConfig,
            viewProps = _ref.viewProps,
            viewInternalAPI = _ref.viewInternalAPI,
            viewExternalAPI = _ref.viewExternalAPI,
            viewState = _ref.viewState,
            view = _ref.view;
        var events = [];

        var add = addEvent(view.element);
        var remove = removeEvent(view.element);

        viewExternalAPI.on = function(type, fn) {
            events.push({
                type: type,
                fn: fn,
            });

            add(type, fn);
        };

        viewExternalAPI.off = function(type, fn) {
            events.splice(
                events.findIndex(function(event) {
                    return event.type === type && event.fn === fn;
                }),
                1
            );

            remove(type, fn);
        };

        return {
            write: function write() {
                // not busy
                return true;
            },
            destroy: function destroy() {
                events.forEach(function(event) {
                    remove(event.type, event.fn);
                });
            },
        };
    };

    // add to external api and link to props

    var apis = function apis(_ref) {
        var mixinConfig = _ref.mixinConfig,
            viewProps = _ref.viewProps,
            viewExternalAPI = _ref.viewExternalAPI;
        addGetSet(mixinConfig, viewExternalAPI, viewProps);
    };

    var isDefined = function isDefined(value) {
        return value != null;
    };

    // add to state,
    // add getters and setters to internal and external api (if not set)
    // set initial state based on props in viewProps
    // apply as transforms each frame

    var defaults = {
        opacity: 1,
        scaleX: 1,
        scaleY: 1,
        translateX: 0,
        translateY: 0,
        rotateX: 0,
        rotateY: 0,
        rotateZ: 0,
        originX: 0,
        originY: 0,
    };

    var styles = function styles(_ref) {
        var mixinConfig = _ref.mixinConfig,
            viewProps = _ref.viewProps,
            viewInternalAPI = _ref.viewInternalAPI,
            viewExternalAPI = _ref.viewExternalAPI,
            view = _ref.view;
        // initial props
        var initialProps = Object.assign({}, viewProps);

        // current props
        var currentProps = {};

        // we will add those properties to the external API and link them to the viewState
        addGetSet(mixinConfig, [viewInternalAPI, viewExternalAPI], viewProps);

        // override rect on internal and external rect getter so it takes in account transforms
        var getOffset = function getOffset() {
            return [viewProps['translateX'] || 0, viewProps['translateY'] || 0];
        };

        var getScale = function getScale() {
            return [viewProps['scaleX'] || 0, viewProps['scaleY'] || 0];
        };
        var getRect = function getRect() {
            return view.rect
                ? getViewRect(view.rect, view.childViews, getOffset(), getScale())
                : null;
        };
        viewInternalAPI.rect = { get: getRect };
        viewExternalAPI.rect = { get: getRect };

        // apply view props
        mixinConfig.forEach(function(key) {
            viewProps[key] =
                typeof initialProps[key] === 'undefined' ? defaults[key] : initialProps[key];
        });

        // expose api
        return {
            write: function write() {
                // see if props have changed
                if (!propsHaveChanged(currentProps, viewProps)) {
                    return;
                }

                // moves element to correct position on screen
                applyStyles(view.element, viewProps);

                // store new transforms
                Object.assign(currentProps, Object.assign({}, viewProps));

                // no longer busy
                return true;
            },
            destroy: function destroy() {},
        };
    };

    var propsHaveChanged = function propsHaveChanged(currentProps, newProps) {
        // different amount of keys
        if (Object.keys(currentProps).length !== Object.keys(newProps).length) {
            return true;
        }

        // lets analyze the individual props
        for (var prop in newProps) {
            if (newProps[prop] !== currentProps[prop]) {
                return true;
            }
        }

        return false;
    };

    var applyStyles = function applyStyles(element, _ref2) {
        var opacity = _ref2.opacity,
            perspective = _ref2.perspective,
            translateX = _ref2.translateX,
            translateY = _ref2.translateY,
            scaleX = _ref2.scaleX,
            scaleY = _ref2.scaleY,
            rotateX = _ref2.rotateX,
            rotateY = _ref2.rotateY,
            rotateZ = _ref2.rotateZ,
            originX = _ref2.originX,
            originY = _ref2.originY,
            width = _ref2.width,
            height = _ref2.height;

        var transforms = '';
        var styles = '';

        // handle transform origin
        if (isDefined(originX) || isDefined(originY)) {
            styles += 'transform-origin: ' + (originX || 0) + 'px ' + (originY || 0) + 'px;';
        }

        // transform order is relevant
        // 0. perspective
        if (isDefined(perspective)) {
            transforms += 'perspective(' + perspective + 'px) ';
        }

        // 1. translate
        if (isDefined(translateX) || isDefined(translateY)) {
            transforms +=
                'translate3d(' + (translateX || 0) + 'px, ' + (translateY || 0) + 'px, 0) ';
        }

        // 2. scale
        if (isDefined(scaleX) || isDefined(scaleY)) {
            transforms +=
                'scale3d(' +
                (isDefined(scaleX) ? scaleX : 1) +
                ', ' +
                (isDefined(scaleY) ? scaleY : 1) +
                ', 1) ';
        }

        // 3. rotate
        if (isDefined(rotateZ)) {
            transforms += 'rotateZ(' + rotateZ + 'rad) ';
        }

        if (isDefined(rotateX)) {
            transforms += 'rotateX(' + rotateX + 'rad) ';
        }

        if (isDefined(rotateY)) {
            transforms += 'rotateY(' + rotateY + 'rad) ';
        }

        // add transforms
        if (transforms.length) {
            styles += 'transform:' + transforms + ';';
        }

        // add opacity
        if (isDefined(opacity)) {
            styles += 'opacity:' + opacity + ';';

            // if we reach zero, we make the element inaccessible
            if (opacity === 0) {
                styles += 'visibility:hidden;';
            }

            // if we're below 100% opacity this element can't be clicked
            if (opacity < 1) {
                styles += 'pointer-events:none;';
            }
        }

        // add height
        if (isDefined(height)) {
            styles += 'height:' + height + 'px;';
        }

        // add width
        if (isDefined(width)) {
            styles += 'width:' + width + 'px;';
        }

        // apply styles
        var elementCurrentStyle = element.elementCurrentStyle || '';

        // if new styles does not match current styles, lets update!
        if (styles.length !== elementCurrentStyle.length || styles !== elementCurrentStyle) {
            element.style.cssText = styles;
            // store current styles so we can compare them to new styles later on
            // _not_ getting the style value is faster
            element.elementCurrentStyle = styles;
        }
    };

    var Mixins = {
        styles: styles,
        listeners: listeners,
        animations: animations,
        apis: apis,
    };

    var updateRect = function updateRect() {
        var rect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        if (!element.layoutCalculated) {
            rect.paddingTop = parseInt(style.paddingTop, 10) || 0;
            rect.marginTop = parseInt(style.marginTop, 10) || 0;
            rect.marginRight = parseInt(style.marginRight, 10) || 0;
            rect.marginBottom = parseInt(style.marginBottom, 10) || 0;
            rect.marginLeft = parseInt(style.marginLeft, 10) || 0;
            element.layoutCalculated = true;
        }

        rect.left = element.offsetLeft || 0;
        rect.top = element.offsetTop || 0;
        rect.width = element.offsetWidth || 0;
        rect.height = element.offsetHeight || 0;

        rect.right = rect.left + rect.width;
        rect.bottom = rect.top + rect.height;

        rect.scrollTop = element.scrollTop;

        rect.hidden = element.offsetParent === null;

        return rect;
    };

    var createView =
        // default view definition
        function createView() {
            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                _ref$tag = _ref.tag,
                tag = _ref$tag === void 0 ? 'div' : _ref$tag,
                _ref$name = _ref.name,
                name = _ref$name === void 0 ? null : _ref$name,
                _ref$attributes = _ref.attributes,
                attributes = _ref$attributes === void 0 ? {} : _ref$attributes,
                _ref$read = _ref.read,
                read = _ref$read === void 0 ? function() {} : _ref$read,
                _ref$write = _ref.write,
                write = _ref$write === void 0 ? function() {} : _ref$write,
                _ref$create = _ref.create,
                create = _ref$create === void 0 ? function() {} : _ref$create,
                _ref$destroy = _ref.destroy,
                destroy = _ref$destroy === void 0 ? function() {} : _ref$destroy,
                _ref$filterFrameActio = _ref.filterFrameActionsForChild,
                filterFrameActionsForChild =
                    _ref$filterFrameActio === void 0
                        ? function(child, actions) {
                              return actions;
                          }
                        : _ref$filterFrameActio,
                _ref$didCreateView = _ref.didCreateView,
                didCreateView = _ref$didCreateView === void 0 ? function() {} : _ref$didCreateView,
                _ref$didWriteView = _ref.didWriteView,
                didWriteView = _ref$didWriteView === void 0 ? function() {} : _ref$didWriteView,
                _ref$ignoreRect = _ref.ignoreRect,
                ignoreRect = _ref$ignoreRect === void 0 ? false : _ref$ignoreRect,
                _ref$ignoreRectUpdate = _ref.ignoreRectUpdate,
                ignoreRectUpdate = _ref$ignoreRectUpdate === void 0 ? false : _ref$ignoreRectUpdate,
                _ref$mixins = _ref.mixins,
                mixins = _ref$mixins === void 0 ? [] : _ref$mixins;
            return function(
                // each view requires reference to store
                store
            ) {
                var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                // root element should not be changed
                var element = createElement(tag, 'filepond--' + name, attributes);

                // style reference should also not be changed
                var style = window.getComputedStyle(element, null);

                // element rectangle
                var rect = updateRect();
                var frameRect = null;

                // rest state
                var isResting = false;

                // pretty self explanatory
                var childViews = [];

                // loaded mixins
                var activeMixins = [];

                // references to created children
                var ref = {};

                // state used for each instance
                var state = {};

                // list of writers that will be called to update this view
                var writers = [
                    write, // default writer
                ];

                var readers = [
                    read, // default reader
                ];

                var destroyers = [
                    destroy, // default destroy
                ];

                // core view methods
                var getElement = function getElement() {
                    return element;
                };
                var getChildViews = function getChildViews() {
                    return childViews.concat();
                };
                var getReference = function getReference() {
                    return ref;
                };
                var createChildView = function createChildView(store) {
                    return function(view, props) {
                        return view(store, props);
                    };
                };
                var getRect = function getRect() {
                    if (frameRect) {
                        return frameRect;
                    }
                    frameRect = getViewRect(rect, childViews, [0, 0], [1, 1]);
                    return frameRect;
                };
                var getStyle = function getStyle() {
                    return style;
                };

                /**
                 * Read data from DOM
                 * @private
                 */
                var _read = function _read() {
                    frameRect = null;

                    // read child views
                    childViews.forEach(function(child) {
                        return child._read();
                    });

                    var shouldUpdate = !(ignoreRectUpdate && rect.width && rect.height);
                    if (shouldUpdate) {
                        updateRect(rect, element, style);
                    }

                    // readers
                    var api = { root: internalAPI, props: props, rect: rect };
                    readers.forEach(function(reader) {
                        return reader(api);
                    });
                };

                /**
                 * Write data to DOM
                 * @private
                 */
                var _write = function _write(ts, frameActions, shouldOptimize) {
                    // if no actions, we assume that the view is resting
                    var resting = frameActions.length === 0;

                    // writers
                    writers.forEach(function(writer) {
                        var writerResting = writer({
                            props: props,
                            root: internalAPI,
                            actions: frameActions,
                            timestamp: ts,
                            shouldOptimize: shouldOptimize,
                        });

                        if (writerResting === false) {
                            resting = false;
                        }
                    });

                    // run mixins
                    activeMixins.forEach(function(mixin) {
                        // if one of the mixins is still busy after write operation, we are not resting
                        var mixinResting = mixin.write(ts);
                        if (mixinResting === false) {
                            resting = false;
                        }
                    });

                    // updates child views that are currently attached to the DOM
                    childViews
                        .filter(function(child) {
                            return !!child.element.parentNode;
                        })
                        .forEach(function(child) {
                            // if a child view is not resting, we are not resting
                            var childResting = child._write(
                                ts,
                                filterFrameActionsForChild(child, frameActions),
                                shouldOptimize
                            );

                            if (!childResting) {
                                resting = false;
                            }
                        });

                    // append new elements to DOM and update those
                    childViews
                        //.filter(child => !child.element.parentNode)
                        .forEach(function(child, index) {
                            // skip
                            if (child.element.parentNode) {
                                return;
                            }

                            // append to DOM
                            internalAPI.appendChild(child.element, index);

                            // call read (need to know the size of these elements)
                            child._read();

                            // re-call write
                            child._write(
                                ts,
                                filterFrameActionsForChild(child, frameActions),
                                shouldOptimize
                            );

                            // we just added somthing to the dom, no rest
                            resting = false;
                        });

                    // update resting state
                    isResting = resting;

                    didWriteView({
                        props: props,
                        root: internalAPI,
                        actions: frameActions,
                        timestamp: ts,
                    });

                    // let parent know if we are resting
                    return resting;
                };

                var _destroy = function _destroy() {
                    activeMixins.forEach(function(mixin) {
                        return mixin.destroy();
                    });
                    destroyers.forEach(function(destroyer) {
                        destroyer({ root: internalAPI, props: props });
                    });
                    childViews.forEach(function(child) {
                        return child._destroy();
                    });
                };

                // sharedAPI
                var sharedAPIDefinition = {
                    element: {
                        get: getElement,
                    },

                    style: {
                        get: getStyle,
                    },

                    childViews: {
                        get: getChildViews,
                    },
                };

                // private API definition
                var internalAPIDefinition = Object.assign({}, sharedAPIDefinition, {
                    rect: {
                        get: getRect,
                    },

                    // access to custom children references
                    ref: {
                        get: getReference,
                    },

                    // dom modifiers
                    is: function is(needle) {
                        return name === needle;
                    },
                    appendChild: appendChild(element),
                    createChildView: createChildView(store),
                    linkView: function linkView(view) {
                        childViews.push(view);
                        return view;
                    },
                    unlinkView: function unlinkView(view) {
                        childViews.splice(childViews.indexOf(view), 1);
                    },
                    appendChildView: appendChildView(element, childViews),
                    removeChildView: removeChildView(element, childViews),
                    registerWriter: function registerWriter(writer) {
                        return writers.push(writer);
                    },
                    registerReader: function registerReader(reader) {
                        return readers.push(reader);
                    },
                    registerDestroyer: function registerDestroyer(destroyer) {
                        return destroyers.push(destroyer);
                    },
                    invalidateLayout: function invalidateLayout() {
                        return (element.layoutCalculated = false);
                    },

                    // access to data store
                    dispatch: store.dispatch,
                    query: store.query,
                });

                // public view API methods
                var externalAPIDefinition = {
                    element: {
                        get: getElement,
                    },

                    childViews: {
                        get: getChildViews,
                    },

                    rect: {
                        get: getRect,
                    },

                    resting: {
                        get: function get() {
                            return isResting;
                        },
                    },

                    isRectIgnored: function isRectIgnored() {
                        return ignoreRect;
                    },
                    _read: _read,
                    _write: _write,
                    _destroy: _destroy,
                };

                // mixin API methods
                var mixinAPIDefinition = Object.assign({}, sharedAPIDefinition, {
                    rect: {
                        get: function get() {
                            return rect;
                        },
                    },
                });

                // add mixin functionality
                Object.keys(mixins)
                    .sort(function(a, b) {
                        // move styles to the back of the mixin list (so adjustments of other mixins are applied to the props correctly)
                        if (a === 'styles') {
                            return 1;
                        } else if (b === 'styles') {
                            return -1;
                        }
                        return 0;
                    })
                    .forEach(function(key) {
                        var mixinAPI = Mixins[key]({
                            mixinConfig: mixins[key],
                            viewProps: props,
                            viewState: state,
                            viewInternalAPI: internalAPIDefinition,
                            viewExternalAPI: externalAPIDefinition,
                            view: createObject(mixinAPIDefinition),
                        });

                        if (mixinAPI) {
                            activeMixins.push(mixinAPI);
                        }
                    });

                // construct private api
                var internalAPI = createObject(internalAPIDefinition);

                // create the view
                create({
                    root: internalAPI,
                    props: props,
                });

                // append created child views to root node
                var childCount = getChildCount(element); // need to know the current child count so appending happens in correct order
                childViews.forEach(function(child, index) {
                    internalAPI.appendChild(child.element, childCount + index);
                });

                // call did create
                didCreateView(internalAPI);

                // expose public api
                return createObject(externalAPIDefinition);
            };
        };

    var createPainter = function createPainter(read, write) {
        var fps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60;

        var name = '__framePainter';

        // set global painter
        if (window[name]) {
            window[name].readers.push(read);
            window[name].writers.push(write);
            return;
        }

        window[name] = {
            readers: [read],
            writers: [write],
        };

        var painter = window[name];

        var interval = 1000 / fps;
        var last = null;
        var id = null;
        var requestTick = null;
        var cancelTick = null;

        var setTimerType = function setTimerType() {
            if (document.hidden) {
                requestTick = function requestTick() {
                    return window.setTimeout(function() {
                        return tick(performance.now());
                    }, interval);
                };
                cancelTick = function cancelTick() {
                    return window.clearTimeout(id);
                };
            } else {
                requestTick = function requestTick() {
                    return window.requestAnimationFrame(tick);
                };
                cancelTick = function cancelTick() {
                    return window.cancelAnimationFrame(id);
                };
            }
        };

        document.addEventListener('visibilitychange', function() {
            if (cancelTick) cancelTick();
            setTimerType();
            tick(performance.now());
        });

        var tick = function tick(ts) {
            // queue next tick
            id = requestTick(tick);

            // limit fps
            if (!last) {
                last = ts;
            }

            var delta = ts - last;

            if (delta <= interval) {
                // skip frame
                return;
            }

            // align next frame
            last = ts - (delta % interval);

            // update view
            painter.readers.forEach(function(read) {
                return read();
            });
            painter.writers.forEach(function(write) {
                return write(ts);
            });
        };

        setTimerType();
        tick(performance.now());

        return {
            pause: function pause() {
                cancelTick(id);
            },
        };
    };

    var createRoute = function createRoute(routes, fn) {
        return function(_ref) {
            var root = _ref.root,
                props = _ref.props,
                _ref$actions = _ref.actions,
                actions = _ref$actions === void 0 ? [] : _ref$actions,
                timestamp = _ref.timestamp,
                shouldOptimize = _ref.shouldOptimize;
            actions
                .filter(function(action) {
                    return routes[action.type];
                })
                .forEach(function(action) {
                    return routes[action.type]({
                        root: root,
                        props: props,
                        action: action.data,
                        timestamp: timestamp,
                        shouldOptimize: shouldOptimize,
                    });
                });

            if (fn) {
                fn({
                    root: root,
                    props: props,
                    actions: actions,
                    timestamp: timestamp,
                    shouldOptimize: shouldOptimize,
                });
            }
        };
    };

    var insertBefore = function insertBefore(newNode, referenceNode) {
        return referenceNode.parentNode.insertBefore(newNode, referenceNode);
    };

    var insertAfter = function insertAfter(newNode, referenceNode) {
        return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
    };

    var isArray = function isArray(value) {
        return Array.isArray(value);
    };

    var isEmpty = function isEmpty(value) {
        return value == null;
    };

    var trim = function trim(str) {
        return str.trim();
    };

    var toString = function toString(value) {
        return '' + value;
    };

    var toArray = function toArray(value) {
        var splitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';
        if (isEmpty(value)) {
            return [];
        }
        if (isArray(value)) {
            return value;
        }
        return toString(value)
            .split(splitter)
            .map(trim)
            .filter(function(str) {
                return str.length;
            });
    };

    var isBoolean = function isBoolean(value) {
        return typeof value === 'boolean';
    };

    var toBoolean = function toBoolean(value) {
        return isBoolean(value) ? value : value === 'true';
    };

    var isString = function isString(value) {
        return typeof value === 'string';
    };

    var toNumber = function toNumber(value) {
        return isNumber(value)
            ? value
            : isString(value)
            ? toString(value).replace(/[a-z]+/gi, '')
            : 0;
    };

    var toInt = function toInt(value) {
        return parseInt(toNumber(value), 10);
    };

    var toFloat = function toFloat(value) {
        return parseFloat(toNumber(value));
    };

    var isInt = function isInt(value) {
        return isNumber(value) && isFinite(value) && Math.floor(value) === value;
    };

    var toBytes = function toBytes(value) {
        var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;
        // is in bytes
        if (isInt(value)) {
            return value;
        }

        // is natural file size
        var naturalFileSize = toString(value).trim();

        // if is value in megabytes
        if (/MB$/i.test(naturalFileSize)) {
            naturalFileSize = naturalFileSize.replace(/MB$i/, '').trim();
            return toInt(naturalFileSize) * base * base;
        }

        // if is value in kilobytes
        if (/KB/i.test(naturalFileSize)) {
            naturalFileSize = naturalFileSize.replace(/KB$i/, '').trim();
            return toInt(naturalFileSize) * base;
        }

        return toInt(naturalFileSize);
    };

    var isFunction = function isFunction(value) {
        return typeof value === 'function';
    };

    var toFunctionReference = function toFunctionReference(string) {
        var ref = self;
        var levels = string.split('.');
        var level = null;
        while ((level = levels.shift())) {
            ref = ref[level];
            if (!ref) {
                return null;
            }
        }
        return ref;
    };

    var methods = {
        process: 'POST',
        patch: 'PATCH',
        revert: 'DELETE',
        fetch: 'GET',
        restore: 'GET',
        load: 'GET',
    };

    var createServerAPI = function createServerAPI(outline) {
        var api = {};

        api.url = isString(outline) ? outline : outline.url || '';
        api.timeout = outline.timeout ? parseInt(outline.timeout, 10) : 0;
        api.headers = outline.headers ? outline.headers : {};

        forin(methods, function(key) {
            api[key] = createAction(key, outline[key], methods[key], api.timeout, api.headers);
        });

        // remove process if no url or process on outline
        api.process = outline.process || isString(outline) || outline.url ? api.process : null;

        // special treatment for remove
        api.remove = outline.remove || null;

        // remove generic headers from api object
        delete api.headers;

        return api;
    };

    var createAction = function createAction(name, outline, method, timeout, headers) {
        // is explicitely set to null so disable
        if (outline === null) {
            return null;
        }

        // if is custom function, done! Dev handles everything.
        if (typeof outline === 'function') {
            return outline;
        }

        // build action object
        var action = {
            url: method === 'GET' || method === 'PATCH' ? '?' + name + '=' : '',
            method: method,
            headers: headers,
            withCredentials: false,
            timeout: timeout,
            onload: null,
            ondata: null,
            onerror: null,
        };

        // is a single url
        if (isString(outline)) {
            action.url = outline;
            return action;
        }

        // overwrite
        Object.assign(action, outline);

        // see if should reformat headers;
        if (isString(action.headers)) {
            var parts = action.headers.split(/:(.+)/);
            action.headers = {
                header: parts[0],
                value: parts[1],
            };
        }

        // if is bool withCredentials
        action.withCredentials = toBoolean(action.withCredentials);

        return action;
    };

    var toServerAPI = function toServerAPI(value) {
        return createServerAPI(value);
    };

    var isNull = function isNull(value) {
        return value === null;
    };

    var isObject = function isObject(value) {
        return typeof value === 'object' && value !== null;
    };

    var isAPI = function isAPI(value) {
        return (
            isObject(value) &&
            isString(value.url) &&
            isObject(value.process) &&
            isObject(value.revert) &&
            isObject(value.restore) &&
            isObject(value.fetch)
        );
    };

    var getType = function getType(value) {
        if (isArray(value)) {
            return 'array';
        }

        if (isNull(value)) {
            return 'null';
        }

        if (isInt(value)) {
            return 'int';
        }

        if (/^[0-9]+ ?(?:GB|MB|KB)$/gi.test(value)) {
            return 'bytes';
        }

        if (isAPI(value)) {
            return 'api';
        }

        return typeof value;
    };

    var replaceSingleQuotes = function replaceSingleQuotes(str) {
        return str
            .replace(/{\s*'/g, '{"')
            .replace(/'\s*}/g, '"}')
            .replace(/'\s*:/g, '":')
            .replace(/:\s*'/g, ':"')
            .replace(/,\s*'/g, ',"')
            .replace(/'\s*,/g, '",');
    };

    var conversionTable = {
        array: toArray,
        boolean: toBoolean,
        int: function int(value) {
            return getType(value) === 'bytes' ? toBytes(value) : toInt(value);
        },
        number: toFloat,
        float: toFloat,
        bytes: toBytes,
        string: function string(value) {
            return isFunction(value) ? value : toString(value);
        },
        function: function _function(value) {
            return toFunctionReference(value);
        },
        serverapi: toServerAPI,
        object: function object(value) {
            try {
                return JSON.parse(replaceSingleQuotes(value));
            } catch (e) {
                return null;
            }
        },
    };

    var convertTo = function convertTo(value, type) {
        return conversionTable[type](value);
    };

    var getValueByType = function getValueByType(newValue, defaultValue, valueType) {
        // can always assign default value
        if (newValue === defaultValue) {
            return newValue;
        }

        // get the type of the new value
        var newValueType = getType(newValue);

        // is valid type?
        if (newValueType !== valueType) {
            // is string input, let's attempt to convert
            var convertedValue = convertTo(newValue, valueType);

            // what is the type now
            newValueType = getType(convertedValue);

            // no valid conversions found
            if (convertedValue === null) {
                throw 'Trying to assign value with incorrect type to "' +
                    option +
                    '", allowed type: "' +
                    valueType +
                    '"';
            } else {
                newValue = convertedValue;
            }
        }

        // assign new value
        return newValue;
    };

    var createOption = function createOption(defaultValue, valueType) {
        var currentValue = defaultValue;
        return {
            enumerable: true,
            get: function get() {
                return currentValue;
            },
            set: function set(newValue) {
                currentValue = getValueByType(newValue, defaultValue, valueType);
            },
        };
    };

    var createOptions = function createOptions(options) {
        var obj = {};
        forin(options, function(prop) {
            var optionDefinition = options[prop];
            obj[prop] = createOption(optionDefinition[0], optionDefinition[1]);
        });
        return createObject(obj);
    };

    var createInitialState = function createInitialState(options) {
        return {
            // model
            items: [],

            // timeout used for calling update items
            listUpdateTimeout: null,

            // timeout used for stacking metadata updates
            itemUpdateTimeout: null,

            // queue of items waiting to be processed
            processingQueue: [],

            // options
            options: createOptions(options),
        };
    };

    var fromCamels = function fromCamels(string) {
        var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';
        return string
            .split(/(?=[A-Z])/)
            .map(function(part) {
                return part.toLowerCase();
            })
            .join(separator);
    };

    var createOptionAPI = function createOptionAPI(store, options) {
        var obj = {};
        forin(options, function(key) {
            obj[key] = {
                get: function get() {
                    return store.getState().options[key];
                },
                set: function set(value) {
                    store.dispatch('SET_' + fromCamels(key, '_').toUpperCase(), {
                        value: value,
                    });
                },
            };
        });
        return obj;
    };

    var createOptionActions = function createOptionActions(options) {
        return function(dispatch, query, state) {
            var obj = {};
            forin(options, function(key) {
                var name = fromCamels(key, '_').toUpperCase();

                obj['SET_' + name] = function(action) {
                    try {
                        state.options[key] = action.value;
                    } catch (e) {} // nope, failed

                    // we successfully set the value of this option
                    dispatch('DID_SET_' + name, { value: state.options[key] });
                };
            });
            return obj;
        };
    };

    var createOptionQueries = function createOptionQueries(options) {
        return function(state) {
            var obj = {};
            forin(options, function(key) {
                obj['GET_' + fromCamels(key, '_').toUpperCase()] = function(action) {
                    return state.options[key];
                };
            });
            return obj;
        };
    };

    var InteractionMethod = {
        API: 1,
        DROP: 2,
        BROWSE: 3,
        PASTE: 4,
        NONE: 5,
    };

    var getUniqueId = function getUniqueId() {
        return Math.random()
            .toString(36)
            .substring(2, 11);
    };

    function _typeof(obj) {
        if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof = function(obj) {
                return typeof obj;
            };
        } else {
            _typeof = function(obj) {
                return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
            };
        }

        return _typeof(obj);
    }

    var REACT_ELEMENT_TYPE;

    function _jsx(type, props, key, children) {
        if (!REACT_ELEMENT_TYPE) {
            REACT_ELEMENT_TYPE =
                (typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element')) ||
                0xeac7;
        }

        var defaultProps = type && type.defaultProps;
        var childrenLength = arguments.length - 3;

        if (!props && childrenLength !== 0) {
            props = {
                children: void 0,
            };
        }

        if (props && defaultProps) {
            for (var propName in defaultProps) {
                if (props[propName] === void 0) {
                    props[propName] = defaultProps[propName];
                }
            }
        } else if (!props) {
            props = defaultProps || {};
        }

        if (childrenLength === 1) {
            props.children = children;
        } else if (childrenLength > 1) {
            var childArray = new Array(childrenLength);

            for (var i = 0; i < childrenLength; i++) {
                childArray[i] = arguments[i + 3];
            }

            props.children = childArray;
        }

        return {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key === undefined ? null : '' + key,
            ref: null,
            props: props,
            _owner: null,
        };
    }

    function _asyncIterator(iterable) {
        var method;

        if (typeof Symbol !== 'undefined') {
            if (Symbol.asyncIterator) {
                method = iterable[Symbol.asyncIterator];
                if (method != null) return method.call(iterable);
            }

            if (Symbol.iterator) {
                method = iterable[Symbol.iterator];
                if (method != null) return method.call(iterable);
            }
        }

        throw new TypeError('Object is not async iterable');
    }

    function _AwaitValue(value) {
        this.wrapped = value;
    }

    function _AsyncGenerator(gen) {
        var front, back;

        function send(key, arg) {
            return new Promise(function(resolve, reject) {
                var request = {
                    key: key,
                    arg: arg,
                    resolve: resolve,
                    reject: reject,
                    next: null,
                };

                if (back) {
                    back = back.next = request;
                } else {
                    front = back = request;
                    resume(key, arg);
                }
            });
        }

        function resume(key, arg) {
            try {
                var result = gen[key](arg);
                var value = result.value;
                var wrappedAwait = value instanceof _AwaitValue;
                Promise.resolve(wrappedAwait ? value.wrapped : value).then(
                    function(arg) {
                        if (wrappedAwait) {
                            resume('next', arg);
                            return;
                        }

                        settle(result.done ? 'return' : 'normal', arg);
                    },
                    function(err) {
                        resume('throw', err);
                    }
                );
            } catch (err) {
                settle('throw', err);
            }
        }

        function settle(type, value) {
            switch (type) {
                case 'return':
                    front.resolve({
                        value: value,
                        done: true,
                    });
                    break;

                case 'throw':
                    front.reject(value);
                    break;

                default:
                    front.resolve({
                        value: value,
                        done: false,
                    });
                    break;
            }

            front = front.next;

            if (front) {
                resume(front.key, front.arg);
            } else {
                back = null;
            }
        }

        this._invoke = send;

        if (typeof gen.return !== 'function') {
            this.return = undefined;
        }
    }

    if (typeof Symbol === 'function' && Symbol.asyncIterator) {
        _AsyncGenerator.prototype[Symbol.asyncIterator] = function() {
            return this;
        };
    }

    _AsyncGenerator.prototype.next = function(arg) {
        return this._invoke('next', arg);
    };

    _AsyncGenerator.prototype.throw = function(arg) {
        return this._invoke('throw', arg);
    };

    _AsyncGenerator.prototype.return = function(arg) {
        return this._invoke('return', arg);
    };

    function _wrapAsyncGenerator(fn) {
        return function() {
            return new _AsyncGenerator(fn.apply(this, arguments));
        };
    }

    function _awaitAsyncGenerator(value) {
        return new _AwaitValue(value);
    }

    function _asyncGeneratorDelegate(inner, awaitWrap) {
        var iter = {},
            waiting = false;

        function pump(key, value) {
            waiting = true;
            value = new Promise(function(resolve) {
                resolve(inner[key](value));
            });
            return {
                done: false,
                value: awaitWrap(value),
            };
        }

        if (typeof Symbol === 'function' && Symbol.iterator) {
            iter[Symbol.iterator] = function() {
                return this;
            };
        }

        iter.next = function(value) {
            if (waiting) {
                waiting = false;
                return value;
            }

            return pump('next', value);
        };

        if (typeof inner.throw === 'function') {
            iter.throw = function(value) {
                if (waiting) {
                    waiting = false;
                    throw value;
                }

                return pump('throw', value);
            };
        }

        if (typeof inner.return === 'function') {
            iter.return = function(value) {
                return pump('return', value);
            };
        }

        return iter;
    }

    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
        try {
            var info = gen[key](arg);
            var value = info.value;
        } catch (error) {
            reject(error);
            return;
        }

        if (info.done) {
            resolve(value);
        } else {
            Promise.resolve(value).then(_next, _throw);
        }
    }

    function _asyncToGenerator(fn) {
        return function() {
            var self = this,
                args = arguments;
            return new Promise(function(resolve, reject) {
                var gen = fn.apply(self, args);

                function _next(value) {
                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);
                }

                function _throw(err) {
                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);
                }

                _next(undefined);
            });
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
        }
    }

    function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }

    function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        return Constructor;
    }

    function _defineEnumerableProperties(obj, descs) {
        for (var key in descs) {
            var desc = descs[key];
            desc.configurable = desc.enumerable = true;
            if ('value' in desc) desc.writable = true;
            Object.defineProperty(obj, key, desc);
        }

        if (Object.getOwnPropertySymbols) {
            var objectSymbols = Object.getOwnPropertySymbols(descs);

            for (var i = 0; i < objectSymbols.length; i++) {
                var sym = objectSymbols[i];
                var desc = descs[sym];
                desc.configurable = desc.enumerable = true;
                if ('value' in desc) desc.writable = true;
                Object.defineProperty(obj, sym, desc);
            }
        }

        return obj;
    }

    function _defaults(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);

        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            var value = Object.getOwnPropertyDescriptor(defaults, key);

            if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }

        return obj;
    }

    function _defineProperty(obj, key, value) {
        if (key in obj) {
            Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true,
            });
        } else {
            obj[key] = value;
        }

        return obj;
    }

    function _extends() {
        _extends =
            Object.assign ||
            function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            };

        return _extends.apply(this, arguments);
    }

    function _objectSpread(target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            var ownKeys = Object.keys(source);

            if (typeof Object.getOwnPropertySymbols === 'function') {
                ownKeys = ownKeys.concat(
                    Object.getOwnPropertySymbols(source).filter(function(sym) {
                        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
                    })
                );
            }

            ownKeys.forEach(function(key) {
                _defineProperty(target, key, source[key]);
            });
        }

        return target;
    }

    function ownKeys(object, enumerableOnly) {
        var keys = Object.keys(object);

        if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
                symbols = symbols.filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                });
            keys.push.apply(keys, symbols);
        }

        return keys;
    }

    function _objectSpread2(target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};

            if (i % 2) {
                ownKeys(source, true).forEach(function(key) {
                    _defineProperty(target, key, source[key]);
                });
            } else if (Object.getOwnPropertyDescriptors) {
                Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
            } else {
                ownKeys(source).forEach(function(key) {
                    Object.defineProperty(
                        target,
                        key,
                        Object.getOwnPropertyDescriptor(source, key)
                    );
                });
            }
        }

        return target;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function');
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                writable: true,
                configurable: true,
            },
        });
        if (superClass) _setPrototypeOf(subClass, superClass);
    }

    function _inheritsLoose(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        subClass.__proto__ = superClass;
    }

    function _getPrototypeOf(o) {
        _getPrototypeOf = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function _getPrototypeOf(o) {
                  return o.__proto__ || Object.getPrototypeOf(o);
              };
        return _getPrototypeOf(o);
    }

    function _setPrototypeOf(o, p) {
        _setPrototypeOf =
            Object.setPrototypeOf ||
            function _setPrototypeOf(o, p) {
                o.__proto__ = p;
                return o;
            };

        return _setPrototypeOf(o, p);
    }

    function isNativeReflectConstruct() {
        if (typeof Reflect === 'undefined' || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === 'function') return true;

        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));
            return true;
        } catch (e) {
            return false;
        }
    }

    function _construct(Parent, args, Class) {
        if (isNativeReflectConstruct()) {
            _construct = Reflect.construct;
        } else {
            _construct = function _construct(Parent, args, Class) {
                var a = [null];
                a.push.apply(a, args);
                var Constructor = Function.bind.apply(Parent, a);
                var instance = new Constructor();
                if (Class) _setPrototypeOf(instance, Class.prototype);
                return instance;
            };
        }

        return _construct.apply(null, arguments);
    }

    function _isNativeFunction(fn) {
        return Function.toString.call(fn).indexOf('[native code]') !== -1;
    }

    function _wrapNativeSuper(Class) {
        var _cache = typeof Map === 'function' ? new Map() : undefined;

        _wrapNativeSuper = function _wrapNativeSuper(Class) {
            if (Class === null || !_isNativeFunction(Class)) return Class;

            if (typeof Class !== 'function') {
                throw new TypeError('Super expression must either be null or a function');
            }

            if (typeof _cache !== 'undefined') {
                if (_cache.has(Class)) return _cache.get(Class);

                _cache.set(Class, Wrapper);
            }

            function Wrapper() {
                return _construct(Class, arguments, _getPrototypeOf(this).constructor);
            }

            Wrapper.prototype = Object.create(Class.prototype, {
                constructor: {
                    value: Wrapper,
                    enumerable: false,
                    writable: true,
                    configurable: true,
                },
            });
            return _setPrototypeOf(Wrapper, Class);
        };

        return _wrapNativeSuper(Class);
    }

    function _instanceof(left, right) {
        if (right != null && typeof Symbol !== 'undefined' && right[Symbol.hasInstance]) {
            return !!right[Symbol.hasInstance](left);
        } else {
            return left instanceof right;
        }
    }

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule
            ? obj
            : {
                  default: obj,
              };
    }

    function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
            return obj;
        } else {
            var newObj = {};

            if (obj != null) {
                for (var key in obj) {
                    if (Object.prototype.hasOwnProperty.call(obj, key)) {
                        var desc =
                            Object.defineProperty && Object.getOwnPropertyDescriptor
                                ? Object.getOwnPropertyDescriptor(obj, key)
                                : {};

                        if (desc.get || desc.set) {
                            Object.defineProperty(newObj, key, desc);
                        } else {
                            newObj[key] = obj[key];
                        }
                    }
                }
            }

            newObj.default = obj;
            return newObj;
        }
    }

    function _newArrowCheck(innerThis, boundThis) {
        if (innerThis !== boundThis) {
            throw new TypeError('Cannot instantiate an arrow function');
        }
    }

    function _objectDestructuringEmpty(obj) {
        if (obj == null) throw new TypeError('Cannot destructure undefined');
    }

    function _objectWithoutPropertiesLoose(source, excluded) {
        if (source == null) return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i;

        for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            target[key] = source[key];
        }

        return target;
    }

    function _objectWithoutProperties(source, excluded) {
        if (source == null) return {};

        var target = _objectWithoutPropertiesLoose(source, excluded);

        var key, i;

        if (Object.getOwnPropertySymbols) {
            var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

            for (i = 0; i < sourceSymbolKeys.length; i++) {
                key = sourceSymbolKeys[i];
                if (excluded.indexOf(key) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
                target[key] = source[key];
            }
        }

        return target;
    }

    function _assertThisInitialized(self) {
        if (self === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return self;
    }

    function _possibleConstructorReturn(self, call) {
        if (call && (typeof call === 'object' || typeof call === 'function')) {
            return call;
        }

        return _assertThisInitialized(self);
    }

    function _superPropBase(object, property) {
        while (!Object.prototype.hasOwnProperty.call(object, property)) {
            object = _getPrototypeOf(object);
            if (object === null) break;
        }

        return object;
    }

    function _get(target, property, receiver) {
        if (typeof Reflect !== 'undefined' && Reflect.get) {
            _get = Reflect.get;
        } else {
            _get = function _get(target, property, receiver) {
                var base = _superPropBase(target, property);

                if (!base) return;
                var desc = Object.getOwnPropertyDescriptor(base, property);

                if (desc.get) {
                    return desc.get.call(receiver);
                }

                return desc.value;
            };
        }

        return _get(target, property, receiver || target);
    }

    function set(target, property, value, receiver) {
        if (typeof Reflect !== 'undefined' && Reflect.set) {
            set = Reflect.set;
        } else {
            set = function set(target, property, value, receiver) {
                var base = _superPropBase(target, property);

                var desc;

                if (base) {
                    desc = Object.getOwnPropertyDescriptor(base, property);

                    if (desc.set) {
                        desc.set.call(receiver, value);
                        return true;
                    } else if (!desc.writable) {
                        return false;
                    }
                }

                desc = Object.getOwnPropertyDescriptor(receiver, property);

                if (desc) {
                    if (!desc.writable) {
                        return false;
                    }

                    desc.value = value;
                    Object.defineProperty(receiver, property, desc);
                } else {
                    _defineProperty(receiver, property, value);
                }

                return true;
            };
        }

        return set(target, property, value, receiver);
    }

    function _set(target, property, value, receiver, isStrict) {
        var s = set(target, property, value, receiver || target);

        if (!s && isStrict) {
            throw new Error('failed to set property');
        }

        return value;
    }

    function _taggedTemplateLiteral(strings, raw) {
        if (!raw) {
            raw = strings.slice(0);
        }

        return Object.freeze(
            Object.defineProperties(strings, {
                raw: {
                    value: Object.freeze(raw),
                },
            })
        );
    }

    function _taggedTemplateLiteralLoose(strings, raw) {
        if (!raw) {
            raw = strings.slice(0);
        }

        strings.raw = raw;
        return strings;
    }

    function _temporalRef(val, name) {
        if (val === _temporalUndefined) {
            throw new ReferenceError(name + ' is not defined - temporal dead zone');
        } else {
            return val;
        }
    }

    function _readOnlyError(name) {
        throw new Error('"' + name + '" is read-only');
    }

    function _classNameTDZError(name) {
        throw new Error('Class "' + name + '" cannot be referenced in computed property keys.');
    }

    var _temporalUndefined = {};

    function _slicedToArray(arr, i) {
        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
    }

    function _slicedToArrayLoose(arr, i) {
        return _arrayWithHoles(arr) || _iterableToArrayLimitLoose(arr, i) || _nonIterableRest();
    }

    function _toArray(arr) {
        return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();
    }

    function _toConsumableArray(arr) {
        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
    }

    function _arrayWithoutHoles(arr) {
        if (Array.isArray(arr)) {
            for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

            return arr2;
        }
    }

    function _arrayWithHoles(arr) {
        if (Array.isArray(arr)) return arr;
    }

    function _iterableToArray(iter) {
        if (
            Symbol.iterator in Object(iter) ||
            Object.prototype.toString.call(iter) === '[object Arguments]'
        )
            return Array.from(iter);
    }

    function _iterableToArrayLimit(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = undefined;

        try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                _arr.push(_s.value);

                if (i && _arr.length === i) break;
            }
        } catch (err) {
            _d = true;
            _e = err;
        } finally {
            try {
                if (!_n && _i['return'] != null) _i['return']();
            } finally {
                if (_d) throw _e;
            }
        }

        return _arr;
    }

    function _iterableToArrayLimitLoose(arr, i) {
        var _arr = [];

        for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done; ) {
            _arr.push(_step.value);

            if (i && _arr.length === i) break;
        }

        return _arr;
    }

    function _nonIterableSpread() {
        throw new TypeError('Invalid attempt to spread non-iterable instance');
    }

    function _nonIterableRest() {
        throw new TypeError('Invalid attempt to destructure non-iterable instance');
    }

    function _skipFirstGeneratorNext(fn) {
        return function() {
            var it = fn.apply(this, arguments);
            it.next();
            return it;
        };
    }

    function _toPrimitive(input, hint) {
        if (typeof input !== 'object' || input === null) return input;
        var prim = input[Symbol.toPrimitive];

        if (prim !== undefined) {
            var res = prim.call(input, hint || 'default');
            if (typeof res !== 'object') return res;
            throw new TypeError('@@toPrimitive must return a primitive value.');
        }

        return (hint === 'string' ? String : Number)(input);
    }

    function _toPropertyKey(arg) {
        var key = _toPrimitive(arg, 'string');

        return typeof key === 'symbol' ? key : String(key);
    }

    function _initializerWarningHelper(descriptor, context) {
        throw new Error(
            'Decorating class property failed. Please ensure that ' +
                'proposal-class-properties is enabled and set to use loose mode. ' +
                'To use proposal-class-properties in spec mode with decorators, wait for ' +
                'the next major version of decorators in stage 2.'
        );
    }

    function _initializerDefineProperty(target, property, descriptor, context) {
        if (!descriptor) return;
        Object.defineProperty(target, property, {
            enumerable: descriptor.enumerable,
            configurable: descriptor.configurable,
            writable: descriptor.writable,
            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0,
        });
    }

    function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
        var desc = {};
        Object.keys(descriptor).forEach(function(key) {
            desc[key] = descriptor[key];
        });
        desc.enumerable = !!desc.enumerable;
        desc.configurable = !!desc.configurable;

        if ('value' in desc || desc.initializer) {
            desc.writable = true;
        }

        desc = decorators
            .slice()
            .reverse()
            .reduce(function(desc, decorator) {
                return decorator(target, property, desc) || desc;
            }, desc);

        if (context && desc.initializer !== void 0) {
            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
            desc.initializer = undefined;
        }

        if (desc.initializer === void 0) {
            Object.defineProperty(target, property, desc);
            desc = null;
        }

        return desc;
    }

    var id = 0;

    function _classPrivateFieldLooseKey(name) {
        return '__private_' + id++ + '_' + name;
    }

    function _classPrivateFieldLooseBase(receiver, privateKey) {
        if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
            throw new TypeError('attempted to use private field on non-instance');
        }

        return receiver;
    }

    function _classPrivateFieldGet(receiver, privateMap) {
        var descriptor = privateMap.get(receiver);

        if (!descriptor) {
            throw new TypeError('attempted to get private field on non-instance');
        }

        if (descriptor.get) {
            return descriptor.get.call(receiver);
        }

        return descriptor.value;
    }

    function _classPrivateFieldSet(receiver, privateMap, value) {
        var descriptor = privateMap.get(receiver);

        if (!descriptor) {
            throw new TypeError('attempted to set private field on non-instance');
        }

        if (descriptor.set) {
            descriptor.set.call(receiver, value);
        } else {
            if (!descriptor.writable) {
                throw new TypeError('attempted to set read only private field');
            }

            descriptor.value = value;
        }

        return value;
    }

    function _classPrivateFieldDestructureSet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError('attempted to set private field on non-instance');
        }

        var descriptor = privateMap.get(receiver);

        if (descriptor.set) {
            if (!('__destrObj' in descriptor)) {
                descriptor.__destrObj = {
                    set value(v) {
                        descriptor.set.call(receiver, v);
                    },
                };
            }

            return descriptor.__destrObj;
        } else {
            if (!descriptor.writable) {
                throw new TypeError('attempted to set read only private field');
            }

            return descriptor;
        }
    }

    function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {
        if (receiver !== classConstructor) {
            throw new TypeError('Private static access of wrong provenance');
        }

        return descriptor.value;
    }

    function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {
        if (receiver !== classConstructor) {
            throw new TypeError('Private static access of wrong provenance');
        }

        if (!descriptor.writable) {
            throw new TypeError('attempted to set read only private field');
        }

        descriptor.value = value;
        return value;
    }

    function _classStaticPrivateMethodGet(receiver, classConstructor, method) {
        if (receiver !== classConstructor) {
            throw new TypeError('Private static access of wrong provenance');
        }

        return method;
    }

    function _classStaticPrivateMethodSet() {
        throw new TypeError('attempted to set read only static private field');
    }

    function _decorate(decorators, factory, superClass, mixins) {
        var api = _getDecoratorsApi();

        if (mixins) {
            for (var i = 0; i < mixins.length; i++) {
                api = mixins[i](api);
            }
        }

        var r = factory(function initialize(O) {
            api.initializeInstanceElements(O, decorated.elements);
        }, superClass);
        var decorated = api.decorateClass(
            _coalesceClassElements(r.d.map(_createElementDescriptor)),
            decorators
        );
        api.initializeClassElements(r.F, decorated.elements);
        return api.runClassFinishers(r.F, decorated.finishers);
    }

    function _getDecoratorsApi() {
        _getDecoratorsApi = function() {
            return api;
        };

        var api = {
            elementsDefinitionOrder: [['method'], ['field']],
            initializeInstanceElements: function(O, elements) {
                ['method', 'field'].forEach(function(kind) {
                    elements.forEach(function(element) {
                        if (element.kind === kind && element.placement === 'own') {
                            this.defineClassElement(O, element);
                        }
                    }, this);
                }, this);
            },
            initializeClassElements: function(F, elements) {
                var proto = F.prototype;
                ['method', 'field'].forEach(function(kind) {
                    elements.forEach(function(element) {
                        var placement = element.placement;

                        if (
                            element.kind === kind &&
                            (placement === 'static' || placement === 'prototype')
                        ) {
                            var receiver = placement === 'static' ? F : proto;
                            this.defineClassElement(receiver, element);
                        }
                    }, this);
                }, this);
            },
            defineClassElement: function(receiver, element) {
                var descriptor = element.descriptor;

                if (element.kind === 'field') {
                    var initializer = element.initializer;
                    descriptor = {
                        enumerable: descriptor.enumerable,
                        writable: descriptor.writable,
                        configurable: descriptor.configurable,
                        value: initializer === void 0 ? void 0 : initializer.call(receiver),
                    };
                }

                Object.defineProperty(receiver, element.key, descriptor);
            },
            decorateClass: function(elements, decorators) {
                var newElements = [];
                var finishers = [];
                var placements = {
                    static: [],
                    prototype: [],
                    own: [],
                };
                elements.forEach(function(element) {
                    this.addElementPlacement(element, placements);
                }, this);
                elements.forEach(function(element) {
                    if (!_hasDecorators(element)) return newElements.push(element);
                    var elementFinishersExtras = this.decorateElement(element, placements);
                    newElements.push(elementFinishersExtras.element);
                    newElements.push.apply(newElements, elementFinishersExtras.extras);
                    finishers.push.apply(finishers, elementFinishersExtras.finishers);
                }, this);

                if (!decorators) {
                    return {
                        elements: newElements,
                        finishers: finishers,
                    };
                }

                var result = this.decorateConstructor(newElements, decorators);
                finishers.push.apply(finishers, result.finishers);
                result.finishers = finishers;
                return result;
            },
            addElementPlacement: function(element, placements, silent) {
                var keys = placements[element.placement];

                if (!silent && keys.indexOf(element.key) !== -1) {
                    throw new TypeError('Duplicated element (' + element.key + ')');
                }

                keys.push(element.key);
            },
            decorateElement: function(element, placements) {
                var extras = [];
                var finishers = [];

                for (var decorators = element.decorators, i = decorators.length - 1; i >= 0; i--) {
                    var keys = placements[element.placement];
                    keys.splice(keys.indexOf(element.key), 1);
                    var elementObject = this.fromElementDescriptor(element);
                    var elementFinisherExtras = this.toElementFinisherExtras(
                        (0, decorators[i])(elementObject) || elementObject
                    );
                    element = elementFinisherExtras.element;
                    this.addElementPlacement(element, placements);

                    if (elementFinisherExtras.finisher) {
                        finishers.push(elementFinisherExtras.finisher);
                    }

                    var newExtras = elementFinisherExtras.extras;

                    if (newExtras) {
                        for (var j = 0; j < newExtras.length; j++) {
                            this.addElementPlacement(newExtras[j], placements);
                        }

                        extras.push.apply(extras, newExtras);
                    }
                }

                return {
                    element: element,
                    finishers: finishers,
                    extras: extras,
                };
            },
            decorateConstructor: function(elements, decorators) {
                var finishers = [];

                for (var i = decorators.length - 1; i >= 0; i--) {
                    var obj = this.fromClassDescriptor(elements);
                    var elementsAndFinisher = this.toClassDescriptor(
                        (0, decorators[i])(obj) || obj
                    );

                    if (elementsAndFinisher.finisher !== undefined) {
                        finishers.push(elementsAndFinisher.finisher);
                    }

                    if (elementsAndFinisher.elements !== undefined) {
                        elements = elementsAndFinisher.elements;

                        for (var j = 0; j < elements.length - 1; j++) {
                            for (var k = j + 1; k < elements.length; k++) {
                                if (
                                    elements[j].key === elements[k].key &&
                                    elements[j].placement === elements[k].placement
                                ) {
                                    throw new TypeError(
                                        'Duplicated element (' + elements[j].key + ')'
                                    );
                                }
                            }
                        }
                    }
                }

                return {
                    elements: elements,
                    finishers: finishers,
                };
            },
            fromElementDescriptor: function(element) {
                var obj = {
                    kind: element.kind,
                    key: element.key,
                    placement: element.placement,
                    descriptor: element.descriptor,
                };
                var desc = {
                    value: 'Descriptor',
                    configurable: true,
                };
                Object.defineProperty(obj, Symbol.toStringTag, desc);
                if (element.kind === 'field') obj.initializer = element.initializer;
                return obj;
            },
            toElementDescriptors: function(elementObjects) {
                if (elementObjects === undefined) return;
                return _toArray(elementObjects).map(function(elementObject) {
                    var element = this.toElementDescriptor(elementObject);
                    this.disallowProperty(elementObject, 'finisher', 'An element descriptor');
                    this.disallowProperty(elementObject, 'extras', 'An element descriptor');
                    return element;
                }, this);
            },
            toElementDescriptor: function(elementObject) {
                var kind = String(elementObject.kind);

                if (kind !== 'method' && kind !== 'field') {
                    throw new TypeError(
                        'An element descriptor\'s .kind property must be either "method" or' +
                            ' "field", but a decorator created an element descriptor with' +
                            ' .kind "' +
                            kind +
                            '"'
                    );
                }

                var key = _toPropertyKey(elementObject.key);

                var placement = String(elementObject.placement);

                if (placement !== 'static' && placement !== 'prototype' && placement !== 'own') {
                    throw new TypeError(
                        'An element descriptor\'s .placement property must be one of "static",' +
                            ' "prototype" or "own", but a decorator created an element descriptor' +
                            ' with .placement "' +
                            placement +
                            '"'
                    );
                }

                var descriptor = elementObject.descriptor;
                this.disallowProperty(elementObject, 'elements', 'An element descriptor');
                var element = {
                    kind: kind,
                    key: key,
                    placement: placement,
                    descriptor: Object.assign({}, descriptor),
                };

                if (kind !== 'field') {
                    this.disallowProperty(elementObject, 'initializer', 'A method descriptor');
                } else {
                    this.disallowProperty(
                        descriptor,
                        'get',
                        'The property descriptor of a field descriptor'
                    );
                    this.disallowProperty(
                        descriptor,
                        'set',
                        'The property descriptor of a field descriptor'
                    );
                    this.disallowProperty(
                        descriptor,
                        'value',
                        'The property descriptor of a field descriptor'
                    );
                    element.initializer = elementObject.initializer;
                }

                return element;
            },
            toElementFinisherExtras: function(elementObject) {
                var element = this.toElementDescriptor(elementObject);

                var finisher = _optionalCallableProperty(elementObject, 'finisher');

                var extras = this.toElementDescriptors(elementObject.extras);
                return {
                    element: element,
                    finisher: finisher,
                    extras: extras,
                };
            },
            fromClassDescriptor: function(elements) {
                var obj = {
                    kind: 'class',
                    elements: elements.map(this.fromElementDescriptor, this),
                };
                var desc = {
                    value: 'Descriptor',
                    configurable: true,
                };
                Object.defineProperty(obj, Symbol.toStringTag, desc);
                return obj;
            },
            toClassDescriptor: function(obj) {
                var kind = String(obj.kind);

                if (kind !== 'class') {
                    throw new TypeError(
                        'A class descriptor\'s .kind property must be "class", but a decorator' +
                            ' created a class descriptor with .kind "' +
                            kind +
                            '"'
                    );
                }

                this.disallowProperty(obj, 'key', 'A class descriptor');
                this.disallowProperty(obj, 'placement', 'A class descriptor');
                this.disallowProperty(obj, 'descriptor', 'A class descriptor');
                this.disallowProperty(obj, 'initializer', 'A class descriptor');
                this.disallowProperty(obj, 'extras', 'A class descriptor');

                var finisher = _optionalCallableProperty(obj, 'finisher');

                var elements = this.toElementDescriptors(obj.elements);
                return {
                    elements: elements,
                    finisher: finisher,
                };
            },
            runClassFinishers: function(constructor, finishers) {
                for (var i = 0; i < finishers.length; i++) {
                    var newConstructor = (0, finishers[i])(constructor);

                    if (newConstructor !== undefined) {
                        if (typeof newConstructor !== 'function') {
                            throw new TypeError('Finishers must return a constructor.');
                        }

                        constructor = newConstructor;
                    }
                }

                return constructor;
            },
            disallowProperty: function(obj, name, objectType) {
                if (obj[name] !== undefined) {
                    throw new TypeError(objectType + " can't have a ." + name + ' property.');
                }
            },
        };
        return api;
    }

    function _createElementDescriptor(def) {
        var key = _toPropertyKey(def.key);

        var descriptor;

        if (def.kind === 'method') {
            descriptor = {
                value: def.value,
                writable: true,
                configurable: true,
                enumerable: false,
            };
        } else if (def.kind === 'get') {
            descriptor = {
                get: def.value,
                configurable: true,
                enumerable: false,
            };
        } else if (def.kind === 'set') {
            descriptor = {
                set: def.value,
                configurable: true,
                enumerable: false,
            };
        } else if (def.kind === 'field') {
            descriptor = {
                configurable: true,
                writable: true,
                enumerable: true,
            };
        }

        var element = {
            kind: def.kind === 'field' ? 'field' : 'method',
            key: key,
            placement: def.static ? 'static' : def.kind === 'field' ? 'own' : 'prototype',
            descriptor: descriptor,
        };
        if (def.decorators) element.decorators = def.decorators;
        if (def.kind === 'field') element.initializer = def.value;
        return element;
    }

    function _coalesceGetterSetter(element, other) {
        if (element.descriptor.get !== undefined) {
            other.descriptor.get = element.descriptor.get;
        } else {
            other.descriptor.set = element.descriptor.set;
        }
    }

    function _coalesceClassElements(elements) {
        var newElements = [];

        var isSameElement = function(other) {
            return (
                other.kind === 'method' &&
                other.key === element.key &&
                other.placement === element.placement
            );
        };

        for (var i = 0; i < elements.length; i++) {
            var element = elements[i];
            var other;

            if (element.kind === 'method' && (other = newElements.find(isSameElement))) {
                if (_isDataDescriptor(element.descriptor) || _isDataDescriptor(other.descriptor)) {
                    if (_hasDecorators(element) || _hasDecorators(other)) {
                        throw new ReferenceError(
                            'Duplicated methods (' + element.key + ") can't be decorated."
                        );
                    }

                    other.descriptor = element.descriptor;
                } else {
                    if (_hasDecorators(element)) {
                        if (_hasDecorators(other)) {
                            throw new ReferenceError(
                                "Decorators can't be placed on different accessors with for " +
                                    'the same property (' +
                                    element.key +
                                    ').'
                            );
                        }

                        other.decorators = element.decorators;
                    }

                    _coalesceGetterSetter(element, other);
                }
            } else {
                newElements.push(element);
            }
        }

        return newElements;
    }

    function _hasDecorators(element) {
        return element.decorators && element.decorators.length;
    }

    function _isDataDescriptor(desc) {
        return desc !== undefined && !(desc.value === undefined && desc.writable === undefined);
    }

    function _optionalCallableProperty(obj, name) {
        var value = obj[name];

        if (value !== undefined && typeof value !== 'function') {
            throw new TypeError("Expected '" + name + "' to be a function");
        }

        return value;
    }

    function _classPrivateMethodGet(receiver, privateSet, fn) {
        if (!privateSet.has(receiver)) {
            throw new TypeError('attempted to get private field on non-instance');
        }

        return fn;
    }

    function _classPrivateMethodSet() {
        throw new TypeError('attempted to reassign private method');
    }

    function _wrapRegExp(re, groups) {
        _wrapRegExp = function(re, groups) {
            return new BabelRegExp(re, groups);
        };

        var _RegExp = _wrapNativeSuper(RegExp);

        var _super = RegExp.prototype;

        var _groups = new WeakMap();

        function BabelRegExp(re, groups) {
            var _this = _RegExp.call(this, re);

            _groups.set(_this, groups);

            return _this;
        }

        _inherits(BabelRegExp, _RegExp);

        BabelRegExp.prototype.exec = function(str) {
            var result = _super.exec.call(this, str);

            if (result) result.groups = buildGroups(result, this);
            return result;
        };

        BabelRegExp.prototype[Symbol.replace] = function(str, substitution) {
            if (typeof substitution === 'string') {
                var groups = _groups.get(this);

                return _super[Symbol.replace].call(
                    this,
                    str,
                    substitution.replace(/\$<([^>]+)>/g, function(_, name) {
                        return '$' + groups[name];
                    })
                );
            } else if (typeof substitution === 'function') {
                var _this = this;

                return _super[Symbol.replace].call(this, str, function() {
                    var args = [];
                    args.push.apply(args, arguments);

                    if (typeof args[args.length - 1] !== 'object') {
                        args.push(buildGroups(args, _this));
                    }

                    return substitution.apply(this, args);
                });
            } else {
                return _super[Symbol.replace].call(this, str, substitution);
            }
        };

        function buildGroups(result, re) {
            var g = _groups.get(re);

            return Object.keys(g).reduce(function(groups, name) {
                groups[name] = result[g[name]];
                return groups;
            }, Object.create(null));
        }

        return _wrapRegExp.apply(this, arguments);
    }

    var arrayRemove = function arrayRemove(arr, index) {
        return arr.splice(index, 1);
    };

    var run = function run(cb, sync) {
        if (sync) {
            cb();
        } else if (document.hidden) {
            Promise.resolve(1).then(cb);
        } else {
            setTimeout(cb, 0);
        }
    };

    var on = function on() {
        var listeners = [];
        var off = function off(event, cb) {
            arrayRemove(
                listeners,
                listeners.findIndex(function(listener) {
                    return listener.event === event && (listener.cb === cb || !cb);
                })
            );
        };
        var _fire = function fire(event, args, sync) {
            listeners
                .filter(function(listener) {
                    return listener.event === event;
                })
                .map(function(listener) {
                    return listener.cb;
                })
                .forEach(function(cb) {
                    return run(function() {
                        return cb.apply(void 0, _toConsumableArray(args));
                    }, sync);
                });
        };
        return {
            fireSync: function fireSync(event) {
                for (
                    var _len = arguments.length,
                        args = new Array(_len > 1 ? _len - 1 : 0),
                        _key = 1;
                    _key < _len;
                    _key++
                ) {
                    args[_key - 1] = arguments[_key];
                }
                _fire(event, args, true);
            },
            fire: function fire(event) {
                for (
                    var _len2 = arguments.length,
                        args = new Array(_len2 > 1 ? _len2 - 1 : 0),
                        _key2 = 1;
                    _key2 < _len2;
                    _key2++
                ) {
                    args[_key2 - 1] = arguments[_key2];
                }
                _fire(event, args, false);
            },
            on: function on(event, cb) {
                listeners.push({ event: event, cb: cb });
            },
            onOnce: function onOnce(event, _cb) {
                listeners.push({
                    event: event,
                    cb: function cb() {
                        off(event, _cb);
                        _cb.apply(void 0, arguments);
                    },
                });
            },
            off: off,
        };
    };

    var copyObjectPropertiesToObject = function copyObjectPropertiesToObject(
        src,
        target,
        excluded
    ) {
        Object.getOwnPropertyNames(src)
            .filter(function(property) {
                return !excluded.includes(property);
            })
            .forEach(function(key) {
                return Object.defineProperty(
                    target,
                    key,
                    Object.getOwnPropertyDescriptor(src, key)
                );
            });
    };

    var PRIVATE = [
        'fire',
        'process',
        'revert',
        'load',
        'on',
        'off',
        'onOnce',
        'retryLoad',
        'extend',
        'archive',
        'archived',
        'release',
        'released',
        'requestProcessing',
        'freeze',
    ];

    var createItemAPI = function createItemAPI(item) {
        var api = {};
        copyObjectPropertiesToObject(item, api, PRIVATE);
        return api;
    };

    var removeReleasedItems = function removeReleasedItems(items) {
        items.forEach(function(item, index) {
            if (item.released) {
                arrayRemove(items, index);
            }
        });
    };

    var ItemStatus = {
        INIT: 1,
        IDLE: 2,
        PROCESSING_QUEUED: 9,
        PROCESSING: 3,
        PROCESSING_COMPLETE: 5,
        PROCESSING_ERROR: 6,
        PROCESSING_REVERT_ERROR: 10,
        LOADING: 7,
        LOAD_ERROR: 8,
    };

    var FileOrigin = {
        INPUT: 1,
        LIMBO: 2,
        LOCAL: 3,
    };

    var getNonNumeric = function getNonNumeric(str) {
        return /[^0-9]+/.exec(str);
    };

    var getDecimalSeparator = function getDecimalSeparator() {
        return getNonNumeric((1.1).toLocaleString())[0];
    };

    var getThousandsSeparator = function getThousandsSeparator() {
        // Added for browsers that do not return the thousands separator (happend on native browser Android 4.4.4)
        // We check against the normal toString output and if they're the same return a comma when decimal separator is a dot
        var decimalSeparator = getDecimalSeparator();
        var thousandsStringWithSeparator = (1000.0).toLocaleString();
        var thousandsStringWithoutSeparator = (1000.0).toString();
        if (thousandsStringWithSeparator !== thousandsStringWithoutSeparator) {
            return getNonNumeric(thousandsStringWithSeparator)[0];
        }
        return decimalSeparator === '.' ? ',' : '.';
    };

    var Type = {
        BOOLEAN: 'boolean',
        INT: 'int',
        NUMBER: 'number',
        STRING: 'string',
        ARRAY: 'array',
        OBJECT: 'object',
        FUNCTION: 'function',
        ACTION: 'action',
        SERVER_API: 'serverapi',
        REGEX: 'regex',
    };

    // all registered filters
    var filters = [];

    // loops over matching filters and passes options to each filter, returning the mapped results
    var applyFilterChain = function applyFilterChain(key, value, utils) {
        return new Promise(function(resolve, reject) {
            // find matching filters for this key
            var matchingFilters = filters
                .filter(function(f) {
                    return f.key === key;
                })
                .map(function(f) {
                    return f.cb;
                });

            // resolve now
            if (matchingFilters.length === 0) {
                resolve(value);
                return;
            }

            // first filter to kick things of
            var initialFilter = matchingFilters.shift();

            // chain filters
            matchingFilters
                .reduce(
                    // loop over promises passing value to next promise
                    function(current, next) {
                        return current.then(function(value) {
                            return next(value, utils);
                        });
                    },

                    // call initial filter, will return a promise
                    initialFilter(value, utils)

                    // all executed
                )
                .then(function(value) {
                    return resolve(value);
                })
                .catch(function(error) {
                    return reject(error);
                });
        });
    };

    var applyFilters = function applyFilters(key, value, utils) {
        return filters
            .filter(function(f) {
                return f.key === key;
            })
            .map(function(f) {
                return f.cb(value, utils);
            });
    };

    // adds a new filter to the list
    var addFilter = function addFilter(key, cb) {
        return filters.push({ key: key, cb: cb });
    };

    var extendDefaultOptions = function extendDefaultOptions(additionalOptions) {
        return Object.assign(defaultOptions, additionalOptions);
    };

    var getOptions = function getOptions() {
        return Object.assign({}, defaultOptions);
    };

    var setOptions = function setOptions(opts) {
        forin(opts, function(key, value) {
            // key does not exist, so this option cannot be set
            if (!defaultOptions[key]) {
                return;
            }
            defaultOptions[key][0] = getValueByType(
                value,
                defaultOptions[key][0],
                defaultOptions[key][1]
            );
        });
    };

    // default options on app
    var defaultOptions = {
        // the id to add to the root element
        id: [null, Type.STRING],

        // input field name to use
        name: ['filepond', Type.STRING],

        // disable the field
        disabled: [false, Type.BOOLEAN],

        // classname to put on wrapper
        className: [null, Type.STRING],

        // is the field required
        required: [false, Type.BOOLEAN],

        // Allow media capture when value is set
        captureMethod: [null, Type.STRING],
        // - "camera", "microphone" or "camcorder",
        // - Does not work with multiple on apple devices
        // - If set, acceptedFileTypes must be made to match with media wildcard "image/*", "audio/*" or "video/*"

        // sync `acceptedFileTypes` property with `accept` attribute
        allowSyncAcceptAttribute: [true, Type.BOOLEAN],

        // Feature toggles
        allowDrop: [true, Type.BOOLEAN], // Allow dropping of files
        allowBrowse: [true, Type.BOOLEAN], // Allow browsing the file system
        allowPaste: [true, Type.BOOLEAN], // Allow pasting files
        allowMultiple: [false, Type.BOOLEAN], // Allow multiple files (disabled by default, as multiple attribute is also required on input to allow multiple)
        allowReplace: [true, Type.BOOLEAN], // Allow dropping a file on other file to replace it (only works when multiple is set to false)
        allowRevert: [true, Type.BOOLEAN], // Allows user to revert file upload
        allowRemove: [true, Type.BOOLEAN], // Allow user to remove a file
        allowProcess: [true, Type.BOOLEAN], // Allows user to process a file, when set to false, this removes the file upload button
        allowReorder: [false, Type.BOOLEAN], // Allow reordering of files
        allowDirectoriesOnly: [false, Type.BOOLEAN], // Allow only selecting directories with browse (no support for filtering dnd at this point)

        // Try store file if `server` not set
        storeAsFile: [false, Type.BOOLEAN],

        // Revert mode
        forceRevert: [false, Type.BOOLEAN], // Set to 'force' to require the file to be reverted before removal

        // Input requirements
        maxFiles: [null, Type.INT], // Max number of files
        checkValidity: [false, Type.BOOLEAN], // Enables custom validity messages

        // Where to put file
        itemInsertLocationFreedom: [true, Type.BOOLEAN], // Set to false to always add items to begin or end of list
        itemInsertLocation: ['before', Type.STRING], // Default index in list to add items that have been dropped at the top of the list
        itemInsertInterval: [75, Type.INT],

        // Drag 'n Drop related
        dropOnPage: [false, Type.BOOLEAN], // Allow dropping of files anywhere on page (prevents browser from opening file if dropped outside of Up)
        dropOnElement: [true, Type.BOOLEAN], // Drop needs to happen on element (set to false to also load drops outside of Up)
        dropValidation: [false, Type.BOOLEAN], // Enable or disable validating files on drop
        ignoredFiles: [['.ds_store', 'thumbs.db', 'desktop.ini'], Type.ARRAY],

        // Upload related
        instantUpload: [true, Type.BOOLEAN], // Should upload files immediately on drop
        maxParallelUploads: [2, Type.INT], // Maximum files to upload in parallel
        allowMinimumUploadDuration: [true, Type.BOOLEAN], // if true uploads take at least 750 ms, this ensures the user sees the upload progress giving trust the upload actually happened

        // Chunks
        chunkUploads: [false, Type.BOOLEAN], // Enable chunked uploads
        chunkForce: [false, Type.BOOLEAN], // Force use of chunk uploads even for files smaller than chunk size
        chunkSize: [5000000, Type.INT], // Size of chunks (5MB default)
        chunkRetryDelays: [[500, 1000, 3000], Type.ARRAY], // Amount of times to retry upload of a chunk when it fails

        // The server api end points to use for uploading (see docs)
        server: [null, Type.SERVER_API],

        // File size calculations, can set to 1024, this is only used for display, properties use file size base 1000
        fileSizeBase: [1000, Type.INT],

        // Labels and status messages
        labelFileSizeBytes: ['bytes', Type.STRING],
        labelFileSizeKilobytes: ['KB', Type.STRING],
        labelFileSizeMegabytes: ['MB', Type.STRING],
        labelFileSizeGigabytes: ['GB', Type.STRING],

        labelDecimalSeparator: [getDecimalSeparator(), Type.STRING], // Default is locale separator
        labelThousandsSeparator: [getThousandsSeparator(), Type.STRING], // Default is locale separator

        labelIdle: [
            'Drag & Drop your files or <span class="filepond--label-action">Browse</span>',
            Type.STRING,
        ],

        labelInvalidField: ['Field contains invalid files', Type.STRING],
        labelFileWaitingForSize: ['Waiting for size', Type.STRING],
        labelFileSizeNotAvailable: ['Size not available', Type.STRING],
        labelFileCountSingular: ['file in list', Type.STRING],
        labelFileCountPlural: ['files in list', Type.STRING],
        labelFileLoading: ['Loading', Type.STRING],
        labelFileAdded: ['Added', Type.STRING], // assistive only
        labelFileLoadError: ['Error during load', Type.STRING],
        labelFileRemoved: ['Removed', Type.STRING], // assistive only
        labelFileRemoveError: ['Error during remove', Type.STRING],
        labelFileProcessing: ['Uploading', Type.STRING],
        labelFileProcessingComplete: ['Upload complete', Type.STRING],
        labelFileProcessingAborted: ['Upload cancelled', Type.STRING],
        labelFileProcessingError: ['Error during upload', Type.STRING],
        labelFileProcessingRevertError: ['Error during revert', Type.STRING],

        labelTapToCancel: ['tap to cancel', Type.STRING],
        labelTapToRetry: ['tap to retry', Type.STRING],
        labelTapToUndo: ['tap to undo', Type.STRING],

        labelButtonRemoveItem: ['Remove', Type.STRING],
        labelButtonAbortItemLoad: ['Abort', Type.STRING],
        labelButtonRetryItemLoad: ['Retry', Type.STRING],
        labelButtonAbortItemProcessing: ['Cancel', Type.STRING],
        labelButtonUndoItemProcessing: ['Undo', Type.STRING],
        labelButtonRetryItemProcessing: ['Retry', Type.STRING],
        labelButtonProcessItem: ['Upload', Type.STRING],

        // make sure width and height plus viewpox are even numbers so icons are nicely centered
        iconRemove: [
            '<svg width="26" height="26" viewBox="0 0 26 26" xmlns="http://www.w3.org/2000/svg"><path d="M11.586 13l-2.293 2.293a1 1 0 0 0 1.414 1.414L13 14.414l2.293 2.293a1 1 0 0 0 1.414-1.414L14.414 13l2.293-2.293a1 1 0 0 0-1.414-1.414L13 11.586l-2.293-2.293a1 1 0 0 0-1.414 1.414L11.586 13z" fill="currentColor" fill-rule="nonzero"/></svg>',
            Type.STRING,
        ],

        iconProcess: [
            '<svg width="26" height="26" viewBox="0 0 26 26" xmlns="http://www.w3.org/2000/svg"><path d="M14 10.414v3.585a1 1 0 0 1-2 0v-3.585l-1.293 1.293a1 1 0 0 1-1.414-1.415l3-3a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1-1.414 1.415L14 10.414zM9 18a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2H9z" fill="currentColor" fill-rule="evenodd"/></svg>',
            Type.STRING,
        ],

        iconRetry: [
            '<svg width="26" height="26" viewBox="0 0 26 26" xmlns="http://www.w3.org/2000/svg"><path d="M10.81 9.185l-.038.02A4.997 4.997 0 0 0 8 13.683a5 5 0 0 0 5 5 5 5 0 0 0 5-5 1 1 0 0 1 2 0A7 7 0 1 1 9.722 7.496l-.842-.21a.999.999 0 1 1 .484-1.94l3.23.806c.535.133.86.675.73 1.21l-.804 3.233a.997.997 0 0 1-1.21.73.997.997 0 0 1-.73-1.21l.23-.928v-.002z" fill="currentColor" fill-rule="nonzero"/></svg>',
            Type.STRING,
        ],

        iconUndo: [
            '<svg width="26" height="26" viewBox="0 0 26 26" xmlns="http://www.w3.org/2000/svg"><path d="M9.185 10.81l.02-.038A4.997 4.997 0 0 1 13.683 8a5 5 0 0 1 5 5 5 5 0 0 1-5 5 1 1 0 0 0 0 2A7 7 0 1 0 7.496 9.722l-.21-.842a.999.999 0 1 0-1.94.484l.806 3.23c.133.535.675.86 1.21.73l3.233-.803a.997.997 0 0 0 .73-1.21.997.997 0 0 0-1.21-.73l-.928.23-.002-.001z" fill="currentColor" fill-rule="nonzero"/></svg>',
            Type.STRING,
        ],

        iconDone: [
            '<svg width="26" height="26" viewBox="0 0 26 26" xmlns="http://www.w3.org/2000/svg"><path d="M18.293 9.293a1 1 0 0 1 1.414 1.414l-7.002 7a1 1 0 0 1-1.414 0l-3.998-4a1 1 0 1 1 1.414-1.414L12 15.586l6.294-6.293z" fill="currentColor" fill-rule="nonzero"/></svg>',
            Type.STRING,
        ],

        // event handlers
        oninit: [null, Type.FUNCTION],
        onwarning: [null, Type.FUNCTION],
        onerror: [null, Type.FUNCTION],
        onactivatefile: [null, Type.FUNCTION],
        oninitfile: [null, Type.FUNCTION],
        onaddfilestart: [null, Type.FUNCTION],
        onaddfileprogress: [null, Type.FUNCTION],
        onaddfile: [null, Type.FUNCTION],
        onprocessfilestart: [null, Type.FUNCTION],
        onprocessfileprogress: [null, Type.FUNCTION],
        onprocessfileabort: [null, Type.FUNCTION],
        onprocessfilerevert: [null, Type.FUNCTION],
        onprocessfile: [null, Type.FUNCTION],
        onprocessfiles: [null, Type.FUNCTION],
        onremovefile: [null, Type.FUNCTION],
        onpreparefile: [null, Type.FUNCTION],
        onupdatefiles: [null, Type.FUNCTION],
        onreorderfiles: [null, Type.FUNCTION],

        // hooks
        beforeDropFile: [null, Type.FUNCTION],
        beforeAddFile: [null, Type.FUNCTION],
        beforeRemoveFile: [null, Type.FUNCTION],
        beforePrepareFile: [null, Type.FUNCTION],

        // styles
        stylePanelLayout: [null, Type.STRING], // null 'integrated', 'compact', 'circle'
        stylePanelAspectRatio: [null, Type.STRING], // null or '3:2' or 1
        styleItemPanelAspectRatio: [null, Type.STRING],
        styleButtonRemoveItemPosition: ['left', Type.STRING],
        styleButtonProcessItemPosition: ['right', Type.STRING],
        styleLoadIndicatorPosition: ['right', Type.STRING],
        styleProgressIndicatorPosition: ['right', Type.STRING],
        styleButtonRemoveItemAlign: [false, Type.BOOLEAN],

        // custom initial files array
        files: [[], Type.ARRAY],

        // show support by displaying credits
        credits: [['https://pqina.nl/', 'Powered by PQINA'], Type.ARRAY],
    };

    var getItemByQuery = function getItemByQuery(items, query) {
        // just return first index
        if (isEmpty(query)) {
            return items[0] || null;
        }

        // query is index
        if (isInt(query)) {
            return items[query] || null;
        }

        // if query is item, get the id
        if (typeof query === 'object') {
            query = query.id;
        }

        // assume query is a string and return item by id
        return (
            items.find(function(item) {
                return item.id === query;
            }) || null
        );
    };

    var getNumericAspectRatioFromString = function getNumericAspectRatioFromString(aspectRatio) {
        if (isEmpty(aspectRatio)) {
            return aspectRatio;
        }
        if (/:/.test(aspectRatio)) {
            var parts = aspectRatio.split(':');
            return parts[1] / parts[0];
        }
        return parseFloat(aspectRatio);
    };

    var getActiveItems = function getActiveItems(items) {
        return items.filter(function(item) {
            return !item.archived;
        });
    };

    var Status = {
        EMPTY: 0,
        IDLE: 1, // waiting
        ERROR: 2, // a file is in error state
        BUSY: 3, // busy processing or loading
        READY: 4, // all files uploaded
    };

    var res = null;
    var canUpdateFileInput = function canUpdateFileInput() {
        if (res === null) {
            try {
                var dataTransfer = new DataTransfer();
                dataTransfer.items.add(new File(['hello world'], 'This_Works.txt'));
                var el = document.createElement('input');
                el.setAttribute('type', 'file');
                el.files = dataTransfer.files;
                res = el.files.length === 1;
            } catch (err) {
                res = false;
            }
        }
        return res;
    };

    var ITEM_ERROR = [
        ItemStatus.LOAD_ERROR,
        ItemStatus.PROCESSING_ERROR,
        ItemStatus.PROCESSING_REVERT_ERROR,
    ];

    var ITEM_BUSY = [
        ItemStatus.LOADING,
        ItemStatus.PROCESSING,
        ItemStatus.PROCESSING_QUEUED,
        ItemStatus.INIT,
    ];

    var ITEM_READY = [ItemStatus.PROCESSING_COMPLETE];

    var isItemInErrorState = function isItemInErrorState(item) {
        return ITEM_ERROR.includes(item.status);
    };
    var isItemInBusyState = function isItemInBusyState(item) {
        return ITEM_BUSY.includes(item.status);
    };
    var isItemInReadyState = function isItemInReadyState(item) {
        return ITEM_READY.includes(item.status);
    };

    var isAsync = function isAsync(state) {
        return (
            isObject(state.options.server) &&
            (isObject(state.options.server.process) || isFunction(state.options.server.process))
        );
    };

    var queries = function queries(state) {
        return {
            GET_STATUS: function GET_STATUS() {
                var items = getActiveItems(state.items);
                var EMPTY = Status.EMPTY,
                    ERROR = Status.ERROR,
                    BUSY = Status.BUSY,
                    IDLE = Status.IDLE,
                    READY = Status.READY;

                if (items.length === 0) return EMPTY;

                if (items.some(isItemInErrorState)) return ERROR;

                if (items.some(isItemInBusyState)) return BUSY;

                if (items.some(isItemInReadyState)) return READY;

                return IDLE;
            },

            GET_ITEM: function GET_ITEM(query) {
                return getItemByQuery(state.items, query);
            },

            GET_ACTIVE_ITEM: function GET_ACTIVE_ITEM(query) {
                return getItemByQuery(getActiveItems(state.items), query);
            },

            GET_ACTIVE_ITEMS: function GET_ACTIVE_ITEMS() {
                return getActiveItems(state.items);
            },

            GET_ITEMS: function GET_ITEMS() {
                return state.items;
            },

            GET_ITEM_NAME: function GET_ITEM_NAME(query) {
                var item = getItemByQuery(state.items, query);
                return item ? item.filename : null;
            },

            GET_ITEM_SIZE: function GET_ITEM_SIZE(query) {
                var item = getItemByQuery(state.items, query);
                return item ? item.fileSize : null;
            },

            GET_STYLES: function GET_STYLES() {
                return Object.keys(state.options)
                    .filter(function(key) {
                        return /^style/.test(key);
                    })
                    .map(function(option) {
                        return {
                            name: option,
                            value: state.options[option],
                        };
                    });
            },

            GET_PANEL_ASPECT_RATIO: function GET_PANEL_ASPECT_RATIO() {
                var isShapeCircle = /circle/.test(state.options.stylePanelLayout);
                var aspectRatio = isShapeCircle
                    ? 1
                    : getNumericAspectRatioFromString(state.options.stylePanelAspectRatio);
                return aspectRatio;
            },

            GET_ITEM_PANEL_ASPECT_RATIO: function GET_ITEM_PANEL_ASPECT_RATIO() {
                return state.options.styleItemPanelAspectRatio;
            },

            GET_ITEMS_BY_STATUS: function GET_ITEMS_BY_STATUS(status) {
                return getActiveItems(state.items).filter(function(item) {
                    return item.status === status;
                });
            },

            GET_TOTAL_ITEMS: function GET_TOTAL_ITEMS() {
                return getActiveItems(state.items).length;
            },

            SHOULD_UPDATE_FILE_INPUT: function SHOULD_UPDATE_FILE_INPUT() {
                return state.options.storeAsFile && canUpdateFileInput() && !isAsync(state);
            },

            IS_ASYNC: function IS_ASYNC() {
                return isAsync(state);
            },

            GET_FILE_SIZE_LABELS: function GET_FILE_SIZE_LABELS(query) {
                return {
                    labelBytes: query('GET_LABEL_FILE_SIZE_BYTES') || undefined,
                    labelKilobytes: query('GET_LABEL_FILE_SIZE_KILOBYTES') || undefined,
                    labelMegabytes: query('GET_LABEL_FILE_SIZE_MEGABYTES') || undefined,
                    labelGigabytes: query('GET_LABEL_FILE_SIZE_GIGABYTES') || undefined,
                };
            },
        };
    };

    var hasRoomForItem = function hasRoomForItem(state) {
        var count = getActiveItems(state.items).length;

        // if cannot have multiple items, to add one item it should currently not contain items
        if (!state.options.allowMultiple) {
            return count === 0;
        }

        // if allows multiple items, we check if a max item count has been set, if not, there's no limit
        var maxFileCount = state.options.maxFiles;
        if (maxFileCount === null) {
            return true;
        }

        // we check if the current count is smaller than the max count, if so, another file can still be added
        if (count < maxFileCount) {
            return true;
        }

        // no more room for another file
        return false;
    };

    var limit = function limit(value, min, max) {
        return Math.max(Math.min(max, value), min);
    };

    var arrayInsert = function arrayInsert(arr, index, item) {
        return arr.splice(index, 0, item);
    };

    var insertItem = function insertItem(items, item, index) {
        if (isEmpty(item)) {
            return null;
        }

        // if index is undefined, append
        if (typeof index === 'undefined') {
            items.push(item);
            return item;
        }

        // limit the index to the size of the items array
        index = limit(index, 0, items.length);

        // add item to array
        arrayInsert(items, index, item);

        // expose
        return item;
    };

    var isBase64DataURI = function isBase64DataURI(str) {
        return /^\s*data:([a-z]+\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\-._~:@\/?%\s]*)\s*$/i.test(
            str
        );
    };

    var getFilenameFromURL = function getFilenameFromURL(url) {
        return url
            .split('/')
            .pop()
            .split('?')
            .shift();
    };

    var getExtensionFromFilename = function getExtensionFromFilename(name) {
        return name.split('.').pop();
    };

    var guesstimateExtension = function guesstimateExtension(type) {
        // if no extension supplied, exit here
        if (typeof type !== 'string') {
            return '';
        }

        // get subtype
        var subtype = type.split('/').pop();

        // is svg subtype
        if (/svg/.test(subtype)) {
            return 'svg';
        }

        if (/zip|compressed/.test(subtype)) {
            return 'zip';
        }

        if (/plain/.test(subtype)) {
            return 'txt';
        }

        if (/msword/.test(subtype)) {
            return 'doc';
        }

        // if is valid subtype
        if (/[a-z]+/.test(subtype)) {
            // always use jpg extension
            if (subtype === 'jpeg') {
                return 'jpg';
            }

            // return subtype
            return subtype;
        }

        return '';
    };

    var leftPad = function leftPad(value) {
        var padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        return (padding + value).slice(-padding.length);
    };

    var getDateString = function getDateString() {
        var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
        return (
            date.getFullYear() +
            '-' +
            leftPad(date.getMonth() + 1, '00') +
            '-' +
            leftPad(date.getDate(), '00') +
            '_' +
            leftPad(date.getHours(), '00') +
            '-' +
            leftPad(date.getMinutes(), '00') +
            '-' +
            leftPad(date.getSeconds(), '00')
        );
    };

    var getFileFromBlob = function getFileFromBlob(blob, filename) {
        var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        var extension = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        var file =
            typeof type === 'string'
                ? blob.slice(0, blob.size, type)
                : blob.slice(0, blob.size, blob.type);
        file.lastModifiedDate = new Date();

        // copy relative path
        if (blob._relativePath) file._relativePath = blob._relativePath;

        // if blob has name property, use as filename if no filename supplied
        if (!isString(filename)) {
            filename = getDateString();
        }

        // if filename supplied but no extension and filename has extension
        if (filename && extension === null && getExtensionFromFilename(filename)) {
            file.name = filename;
        } else {
            extension = extension || guesstimateExtension(file.type);
            file.name = filename + (extension ? '.' + extension : '');
        }

        return file;
    };

    var getBlobBuilder = function getBlobBuilder() {
        return (window.BlobBuilder =
            window.BlobBuilder ||
            window.WebKitBlobBuilder ||
            window.MozBlobBuilder ||
            window.MSBlobBuilder);
    };

    var createBlob = function createBlob(arrayBuffer, mimeType) {
        var BB = getBlobBuilder();

        if (BB) {
            var bb = new BB();
            bb.append(arrayBuffer);
            return bb.getBlob(mimeType);
        }

        return new Blob([arrayBuffer], {
            type: mimeType,
        });
    };

    var getBlobFromByteStringWithMimeType = function getBlobFromByteStringWithMimeType(
        byteString,
        mimeType
    ) {
        var ab = new ArrayBuffer(byteString.length);
        var ia = new Uint8Array(ab);

        for (var i = 0; i < byteString.length; i++) {
            ia[i] = byteString.charCodeAt(i);
        }

        return createBlob(ab, mimeType);
    };

    var getMimeTypeFromBase64DataURI = function getMimeTypeFromBase64DataURI(dataURI) {
        return (/^data:(.+);/.exec(dataURI) || [])[1] || null;
    };

    var getBase64DataFromBase64DataURI = function getBase64DataFromBase64DataURI(dataURI) {
        // get data part of string (remove data:image/jpeg...,)
        var data = dataURI.split(',')[1];

        // remove any whitespace as that causes InvalidCharacterError in IE
        return data.replace(/\s/g, '');
    };

    var getByteStringFromBase64DataURI = function getByteStringFromBase64DataURI(dataURI) {
        return atob(getBase64DataFromBase64DataURI(dataURI));
    };

    var getBlobFromBase64DataURI = function getBlobFromBase64DataURI(dataURI) {
        var mimeType = getMimeTypeFromBase64DataURI(dataURI);
        var byteString = getByteStringFromBase64DataURI(dataURI);

        return getBlobFromByteStringWithMimeType(byteString, mimeType);
    };

    var getFileFromBase64DataURI = function getFileFromBase64DataURI(dataURI, filename, extension) {
        return getFileFromBlob(getBlobFromBase64DataURI(dataURI), filename, null, extension);
    };

    var getFileNameFromHeader = function getFileNameFromHeader(header) {
        // test if is content disposition header, if not exit
        if (!/^content-disposition:/i.test(header)) return null;

        // get filename parts
        var matches = header
            .split(/filename=|filename\*=.+''/)
            .splice(1)
            .map(function(name) {
                return name.trim().replace(/^["']|[;"']{0,2}$/g, '');
            })
            .filter(function(name) {
                return name.length;
            });

        return matches.length ? decodeURI(matches[matches.length - 1]) : null;
    };

    var getFileSizeFromHeader = function getFileSizeFromHeader(header) {
        if (/content-length:/i.test(header)) {
            var size = header.match(/[0-9]+/)[0];
            return size ? parseInt(size, 10) : null;
        }
        return null;
    };

    var getTranfserIdFromHeader = function getTranfserIdFromHeader(header) {
        if (/x-content-transfer-id:/i.test(header)) {
            var id = (header.split(':')[1] || '').trim();
            return id || null;
        }
        return null;
    };

    var getFileInfoFromHeaders = function getFileInfoFromHeaders(headers) {
        var info = {
            source: null,
            name: null,
            size: null,
        };

        var rows = headers.split('\n');
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
            for (
                var _iterator = rows[Symbol.iterator](), _step;
                !(_iteratorNormalCompletion = (_step = _iterator.next()).done);
                _iteratorNormalCompletion = true
            ) {
                var header = _step.value;

                var name = getFileNameFromHeader(header);
                if (name) {
                    info.name = name;
                    continue;
                }

                var size = getFileSizeFromHeader(header);
                if (size) {
                    info.size = size;
                    continue;
                }

                var source = getTranfserIdFromHeader(header);
                if (source) {
                    info.source = source;
                    continue;
                }
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                }
            } finally {
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }

        return info;
    };

    var createFileLoader = function createFileLoader(fetchFn) {
        var state = {
            source: null,
            complete: false,
            progress: 0,
            size: null,
            timestamp: null,
            duration: 0,
            request: null,
        };

        var getProgress = function getProgress() {
            return state.progress;
        };
        var abort = function abort() {
            if (state.request && state.request.abort) {
                state.request.abort();
            }
        };

        // load source
        var load = function load() {
            // get quick reference
            var source = state.source;

            api.fire('init', source);

            // Load Files
            if (source instanceof File) {
                api.fire('load', source);
            } else if (source instanceof Blob) {
                // Load blobs, set default name to current date
                api.fire('load', getFileFromBlob(source, source.name));
            } else if (isBase64DataURI(source)) {
                // Load base 64, set default name to current date
                api.fire('load', getFileFromBase64DataURI(source));
            } else {
                // Deal as if is external URL, let's load it!
                loadURL(source);
            }
        };

        // loads a url
        var loadURL = function loadURL(url) {
            // is remote url and no fetch method supplied
            if (!fetchFn) {
                api.fire('error', {
                    type: 'error',
                    body: "Can't load URL",
                    code: 400,
                });

                return;
            }

            // set request start
            state.timestamp = Date.now();

            // load file
            state.request = fetchFn(
                url,
                function(response) {
                    // update duration
                    state.duration = Date.now() - state.timestamp;

                    // done!
                    state.complete = true;

                    // turn blob response into a file
                    if (response instanceof Blob) {
                        response = getFileFromBlob(
                            response,
                            response.name || getFilenameFromURL(url)
                        );
                    }

                    api.fire(
                        'load',
                        // if has received blob, we go with blob, if no response, we return null
                        response instanceof Blob ? response : response ? response.body : null
                    );
                },
                function(error) {
                    api.fire(
                        'error',
                        typeof error === 'string'
                            ? {
                                  type: 'error',
                                  code: 0,
                                  body: error,
                              }
                            : error
                    );
                },
                function(computable, current, total) {
                    // collected some meta data already
                    if (total) {
                        state.size = total;
                    }

                    // update duration
                    state.duration = Date.now() - state.timestamp;

                    // if we can't compute progress, we're not going to fire progress events
                    if (!computable) {
                        state.progress = null;
                        return;
                    }

                    // update progress percentage
                    state.progress = current / total;

                    // expose
                    api.fire('progress', state.progress);
                },
                function() {
                    api.fire('abort');
                },
                function(response) {
                    var fileinfo = getFileInfoFromHeaders(
                        typeof response === 'string' ? response : response.headers
                    );
                    api.fire('meta', {
                        size: state.size || fileinfo.size,
                        filename: fileinfo.name,
                        source: fileinfo.source,
                    });
                }
            );
        };

        var api = Object.assign({}, on(), {
            setSource: function setSource(source) {
                return (state.source = source);
            },
            getProgress: getProgress, // file load progress
            abort: abort, // abort file load
            load: load, // start load
        });

        return api;
    };

    var isGet = function isGet(method) {
        return /GET|HEAD/.test(method);
    };

    var sendRequest = function sendRequest(data, url, options) {
        var api = {
            onheaders: function onheaders() {},
            onprogress: function onprogress() {},
            onload: function onload() {},
            ontimeout: function ontimeout() {},
            onerror: function onerror() {},
            onabort: function onabort() {},
            abort: function abort() {
                aborted = true;
                xhr.abort();
            },
        };

        // timeout identifier, only used when timeout is defined
        var aborted = false;
        var headersReceived = false;

        // set default options
        options = Object.assign(
            {
                method: 'POST',
                headers: {},
                withCredentials: false,
            },
            options
        );

        // encode url
        url = encodeURI(url);

        // if method is GET, add any received data to url

        if (isGet(options.method) && data) {
            url =
                '' +
                url +
                encodeURIComponent(typeof data === 'string' ? data : JSON.stringify(data));
        }

        // create request
        var xhr = new XMLHttpRequest();

        // progress of load
        var process = isGet(options.method) ? xhr : xhr.upload;
        process.onprogress = function(e) {
            // no progress event when aborted ( onprogress is called once after abort() )
            if (aborted) {
                return;
            }

            api.onprogress(e.lengthComputable, e.loaded, e.total);
        };

        // tries to get header info to the app as fast as possible
        xhr.onreadystatechange = function() {
            // not interesting in these states ('unsent' and 'openend' as they don't give us any additional info)
            if (xhr.readyState < 2) {
                return;
            }

            // no server response
            if (xhr.readyState === 4 && xhr.status === 0) {
                return;
            }

            if (headersReceived) {
                return;
            }

            headersReceived = true;

            // we've probably received some useful data in response headers
            api.onheaders(xhr);
        };

        // load successful
        xhr.onload = function() {
            // is classified as valid response
            if (xhr.status >= 200 && xhr.status < 300) {
                api.onload(xhr);
            } else {
                api.onerror(xhr);
            }
        };

        // error during load
        xhr.onerror = function() {
            return api.onerror(xhr);
        };

        // request aborted
        xhr.onabort = function() {
            aborted = true;
            api.onabort();
        };

        // request timeout
        xhr.ontimeout = function() {
            return api.ontimeout(xhr);
        };

        // open up open up!
        xhr.open(options.method, url, true);

        // set timeout if defined (do it after open so IE11 plays ball)
        if (isInt(options.timeout)) {
            xhr.timeout = options.timeout;
        }

        // add headers
        Object.keys(options.headers).forEach(function(key) {
            var value = unescape(encodeURIComponent(options.headers[key]));
            xhr.setRequestHeader(key, value);
        });

        // set type of response
        if (options.responseType) {
            xhr.responseType = options.responseType;
        }

        // set credentials
        if (options.withCredentials) {
            xhr.withCredentials = true;
        }

        // let's send our data
        xhr.send(data);

        return api;
    };

    var createResponse = function createResponse(type, code, body, headers) {
        return {
            type: type,
            code: code,
            body: body,
            headers: headers,
        };
    };

    var createTimeoutResponse = function createTimeoutResponse(cb) {
        return function(xhr) {
            cb(createResponse('error', 0, 'Timeout', xhr.getAllResponseHeaders()));
        };
    };

    var hasQS = function hasQS(str) {
        return /\?/.test(str);
    };
    var buildURL = function buildURL() {
        var url = '';
        for (var _len = arguments.length, parts = new Array(_len), _key = 0; _key < _len; _key++) {
            parts[_key] = arguments[_key];
        }
        parts.forEach(function(part) {
            url += hasQS(url) && hasQS(part) ? part.replace(/\?/, '&') : part;
        });
        return url;
    };

    var createFetchFunction = function createFetchFunction() {
        var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
        var action = arguments.length > 1 ? arguments[1] : undefined;
        // custom handler (should also handle file, load, error, progress and abort)
        if (typeof action === 'function') {
            return action;
        }

        // no action supplied
        if (!action || !isString(action.url)) {
            return null;
        }

        // set onload hanlder
        var onload =
            action.onload ||
            function(res) {
                return res;
            };
        var onerror =
            action.onerror ||
            function(res) {
                return null;
            };

        // internal handler
        return function(url, load, error, progress, abort, headers) {
            // do local or remote request based on if the url is external
            var request = sendRequest(
                url,
                buildURL(apiUrl, action.url),
                Object.assign({}, action, {
                    responseType: 'blob',
                })
            );

            request.onload = function(xhr) {
                // get headers
                var headers = xhr.getAllResponseHeaders();

                // get filename
                var filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);

                // create response
                load(
                    createResponse(
                        'load',
                        xhr.status,
                        action.method === 'HEAD'
                            ? null
                            : getFileFromBlob(onload(xhr.response), filename),
                        headers
                    )
                );
            };

            request.onerror = function(xhr) {
                error(
                    createResponse(
                        'error',
                        xhr.status,
                        onerror(xhr.response) || xhr.statusText,
                        xhr.getAllResponseHeaders()
                    )
                );
            };

            request.onheaders = function(xhr) {
                headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));
            };

            request.ontimeout = createTimeoutResponse(error);
            request.onprogress = progress;
            request.onabort = abort;

            // should return request
            return request;
        };
    };

    var ChunkStatus = {
        QUEUED: 0,
        COMPLETE: 1,
        PROCESSING: 2,
        ERROR: 3,
        WAITING: 4,
    };

    /*
                                                       function signature:
                                                         (file, metadata, load, error, progress, abort, transfer, options) => {
                                                           return {
                                                           abort:() => {}
                                                         }
                                                       }
                                                       */

    // apiUrl, action, name, file, metadata, load, error, progress, abort, transfer, options
    var processFileChunked = function processFileChunked(
        apiUrl,
        action,
        name,
        file,
        metadata,
        load,
        error,
        progress,
        abort,
        transfer,
        options
    ) {
        // all chunks
        var chunks = [];
        var chunkTransferId = options.chunkTransferId,
            chunkServer = options.chunkServer,
            chunkSize = options.chunkSize,
            chunkRetryDelays = options.chunkRetryDelays;

        // default state
        var state = {
            serverId: chunkTransferId,
            aborted: false,
        };

        // set onload handlers
        var ondata =
            action.ondata ||
            function(fd) {
                return fd;
            };
        var onload =
            action.onload ||
            function(xhr, method) {
                return method === 'HEAD' ? xhr.getResponseHeader('Upload-Offset') : xhr.response;
            };
        var onerror =
            action.onerror ||
            function(res) {
                return null;
            };

        // create server hook
        var requestTransferId = function requestTransferId(cb) {
            var formData = new FormData();

            // add metadata under same name
            if (isObject(metadata)) formData.append(name, JSON.stringify(metadata));

            var headers =
                typeof action.headers === 'function'
                    ? action.headers(file, metadata)
                    : Object.assign({}, action.headers, {
                          'Upload-Length': file.size,
                      });

            var requestParams = Object.assign({}, action, {
                headers: headers,
            });

            // send request object
            var request = sendRequest(
                ondata(formData),
                buildURL(apiUrl, action.url),
                requestParams
            );

            request.onload = function(xhr) {
                return cb(onload(xhr, requestParams.method));
            };

            request.onerror = function(xhr) {
                return error(
                    createResponse(
                        'error',
                        xhr.status,
                        onerror(xhr.response) || xhr.statusText,
                        xhr.getAllResponseHeaders()
                    )
                );
            };

            request.ontimeout = createTimeoutResponse(error);
        };

        var requestTransferOffset = function requestTransferOffset(cb) {
            var requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);

            var headers =
                typeof action.headers === 'function'
                    ? action.headers(state.serverId)
                    : Object.assign({}, action.headers);

            var requestParams = {
                headers: headers,
                method: 'HEAD',
            };

            var request = sendRequest(null, requestUrl, requestParams);

            request.onload = function(xhr) {
                return cb(onload(xhr, requestParams.method));
            };

            request.onerror = function(xhr) {
                return error(
                    createResponse(
                        'error',
                        xhr.status,
                        onerror(xhr.response) || xhr.statusText,
                        xhr.getAllResponseHeaders()
                    )
                );
            };

            request.ontimeout = createTimeoutResponse(error);
        };

        // create chunks
        var lastChunkIndex = Math.floor(file.size / chunkSize);
        for (var i = 0; i <= lastChunkIndex; i++) {
            var offset = i * chunkSize;
            var data = file.slice(offset, offset + chunkSize, 'application/offset+octet-stream');
            chunks[i] = {
                index: i,
                size: data.size,
                offset: offset,
                data: data,
                file: file,
                progress: 0,
                retries: _toConsumableArray(chunkRetryDelays),
                status: ChunkStatus.QUEUED,
                error: null,
                request: null,
                timeout: null,
            };
        }

        var completeProcessingChunks = function completeProcessingChunks() {
            return load(state.serverId);
        };

        var canProcessChunk = function canProcessChunk(chunk) {
            return chunk.status === ChunkStatus.QUEUED || chunk.status === ChunkStatus.ERROR;
        };

        var processChunk = function processChunk(chunk) {
            // processing is paused, wait here
            if (state.aborted) return;

            // get next chunk to process
            chunk = chunk || chunks.find(canProcessChunk);

            // no more chunks to process
            if (!chunk) {
                // all done?
                if (
                    chunks.every(function(chunk) {
                        return chunk.status === ChunkStatus.COMPLETE;
                    })
                ) {
                    completeProcessingChunks();
                }

                // no chunk to handle
                return;
            }

            // now processing this chunk
            chunk.status = ChunkStatus.PROCESSING;
            chunk.progress = null;

            // allow parsing of formdata
            var ondata =
                chunkServer.ondata ||
                function(fd) {
                    return fd;
                };
            var onerror =
                chunkServer.onerror ||
                function(res) {
                    return null;
                };

            // send request object
            var requestUrl = buildURL(apiUrl, chunkServer.url, state.serverId);

            var headers =
                typeof chunkServer.headers === 'function'
                    ? chunkServer.headers(chunk)
                    : Object.assign({}, chunkServer.headers, {
                          'Content-Type': 'application/offset+octet-stream',
                          'Upload-Offset': chunk.offset,
                          'Upload-Length': file.size,
                          'Upload-Name': file.name,
                      });

            var request = (chunk.request = sendRequest(
                ondata(chunk.data),
                requestUrl,
                Object.assign({}, chunkServer, {
                    headers: headers,
                })
            ));

            request.onload = function() {
                // done!
                chunk.status = ChunkStatus.COMPLETE;

                // remove request reference
                chunk.request = null;

                // start processing more chunks
                processChunks();
            };

            request.onprogress = function(lengthComputable, loaded, total) {
                chunk.progress = lengthComputable ? loaded : null;
                updateTotalProgress();
            };

            request.onerror = function(xhr) {
                chunk.status = ChunkStatus.ERROR;
                chunk.request = null;
                chunk.error = onerror(xhr.response) || xhr.statusText;
                if (!retryProcessChunk(chunk)) {
                    error(
                        createResponse(
                            'error',
                            xhr.status,
                            onerror(xhr.response) || xhr.statusText,
                            xhr.getAllResponseHeaders()
                        )
                    );
                }
            };

            request.ontimeout = function(xhr) {
                chunk.status = ChunkStatus.ERROR;
                chunk.request = null;
                if (!retryProcessChunk(chunk)) {
                    createTimeoutResponse(error)(xhr);
                }
            };

            request.onabort = function() {
                chunk.status = ChunkStatus.QUEUED;
                chunk.request = null;
                abort();
            };
        };

        var retryProcessChunk = function retryProcessChunk(chunk) {
            // no more retries left
            if (chunk.retries.length === 0) return false;

            // new retry
            chunk.status = ChunkStatus.WAITING;
            clearTimeout(chunk.timeout);
            chunk.timeout = setTimeout(function() {
                processChunk(chunk);
            }, chunk.retries.shift());

            // we're going to retry
            return true;
        };

        var updateTotalProgress = function updateTotalProgress() {
            // calculate total progress fraction
            var totalBytesTransfered = chunks.reduce(function(p, chunk) {
                if (p === null || chunk.progress === null) return null;
                return p + chunk.progress;
            }, 0);

            // can't compute progress
            if (totalBytesTransfered === null) return progress(false, 0, 0);

            // calculate progress values
            var totalSize = chunks.reduce(function(total, chunk) {
                return total + chunk.size;
            }, 0);

            // can update progress indicator
            progress(true, totalBytesTransfered, totalSize);
        };

        // process new chunks
        var processChunks = function processChunks() {
            var totalProcessing = chunks.filter(function(chunk) {
                return chunk.status === ChunkStatus.PROCESSING;
            }).length;
            if (totalProcessing >= 1) return;
            processChunk();
        };

        var abortChunks = function abortChunks() {
            chunks.forEach(function(chunk) {
                clearTimeout(chunk.timeout);
                if (chunk.request) {
                    chunk.request.abort();
                }
            });
        };

        // let's go!
        if (!state.serverId) {
            requestTransferId(function(serverId) {
                // stop here if aborted, might have happened in between request and callback
                if (state.aborted) return;

                // pass back to item so we can use it if something goes wrong
                transfer(serverId);

                // store internally
                state.serverId = serverId;
                processChunks();
            });
        } else {
            requestTransferOffset(function(offset) {
                // stop here if aborted, might have happened in between request and callback
                if (state.aborted) return;

                // mark chunks with lower offset as complete
                chunks
                    .filter(function(chunk) {
                        return chunk.offset < offset;
                    })
                    .forEach(function(chunk) {
                        chunk.status = ChunkStatus.COMPLETE;
                        chunk.progress = chunk.size;
                    });

                // continue processing
                processChunks();
            });
        }

        return {
            abort: function abort() {
                state.aborted = true;
                abortChunks();
            },
        };
    };

    /*
                                                               function signature:
                                                                 (file, metadata, load, error, progress, abort) => {
                                                                   return {
                                                                   abort:() => {}
                                                                 }
                                                               }
                                                               */
    var createFileProcessorFunction = function createFileProcessorFunction(
        apiUrl,
        action,
        name,
        options
    ) {
        return function(file, metadata, load, error, progress, abort, transfer) {
            // no file received
            if (!file) return;

            // if was passed a file, and we can chunk it, exit here
            var canChunkUpload = options.chunkUploads;
            var shouldChunkUpload = canChunkUpload && file.size > options.chunkSize;
            var willChunkUpload = canChunkUpload && (shouldChunkUpload || options.chunkForce);
            if (file instanceof Blob && willChunkUpload)
                return processFileChunked(
                    apiUrl,
                    action,
                    name,
                    file,
                    metadata,
                    load,
                    error,
                    progress,
                    abort,
                    transfer,
                    options
                );

            // set handlers
            var ondata =
                action.ondata ||
                function(fd) {
                    return fd;
                };
            var onload =
                action.onload ||
                function(res) {
                    return res;
                };
            var onerror =
                action.onerror ||
                function(res) {
                    return null;
                };

            var headers =
                typeof action.headers === 'function'
                    ? action.headers(file, metadata) || {}
                    : Object.assign(
                          {},

                          action.headers
                      );

            var requestParams = Object.assign({}, action, {
                headers: headers,
            });

            // create formdata object
            var formData = new FormData();

            // add metadata under same name
            if (isObject(metadata)) {
                formData.append(name, JSON.stringify(metadata));
            }

            // Turn into an array of objects so no matter what the input, we can handle it the same way
            (file instanceof Blob ? [{ name: null, file: file }] : file).forEach(function(item) {
                formData.append(
                    name,
                    item.file,
                    item.name === null ? item.file.name : '' + item.name + item.file.name
                );
            });

            // send request object
            var request = sendRequest(
                ondata(formData),
                buildURL(apiUrl, action.url),
                requestParams
            );
            request.onload = function(xhr) {
                load(
                    createResponse(
                        'load',
                        xhr.status,
                        onload(xhr.response),
                        xhr.getAllResponseHeaders()
                    )
                );
            };

            request.onerror = function(xhr) {
                error(
                    createResponse(
                        'error',
                        xhr.status,
                        onerror(xhr.response) || xhr.statusText,
                        xhr.getAllResponseHeaders()
                    )
                );
            };

            request.ontimeout = createTimeoutResponse(error);
            request.onprogress = progress;
            request.onabort = abort;

            // should return request
            return request;
        };
    };

    var createProcessorFunction = function createProcessorFunction() {
        var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
        var action = arguments.length > 1 ? arguments[1] : undefined;
        var name = arguments.length > 2 ? arguments[2] : undefined;
        var options = arguments.length > 3 ? arguments[3] : undefined;

        // custom handler (should also handle file, load, error, progress and abort)
        if (typeof action === 'function')
            return function() {
                for (
                    var _len = arguments.length, params = new Array(_len), _key = 0;
                    _key < _len;
                    _key++
                ) {
                    params[_key] = arguments[_key];
                }
                return action.apply(void 0, [name].concat(params, [options]));
            };

        // no action supplied
        if (!action || !isString(action.url)) return null;

        // internal handler
        return createFileProcessorFunction(apiUrl, action, name, options);
    };

    /*
                                                      function signature:
                                                      (uniqueFileId, load, error) => { }
                                                      */
    var createRevertFunction = function createRevertFunction() {
        var apiUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
        var action = arguments.length > 1 ? arguments[1] : undefined;
        // is custom implementation
        if (typeof action === 'function') {
            return action;
        }

        // no action supplied, return stub function, interface will work, but file won't be removed
        if (!action || !isString(action.url)) {
            return function(uniqueFileId, load) {
                return load();
            };
        }

        // set onload hanlder
        var onload =
            action.onload ||
            function(res) {
                return res;
            };
        var onerror =
            action.onerror ||
            function(res) {
                return null;
            };

        // internal implementation
        return function(uniqueFileId, load, error) {
            var request = sendRequest(
                uniqueFileId,
                apiUrl + action.url,
                action // contains method, headers and withCredentials properties
            );
            request.onload = function(xhr) {
                load(
                    createResponse(
                        'load',
                        xhr.status,
                        onload(xhr.response),
                        xhr.getAllResponseHeaders()
                    )
                );
            };

            request.onerror = function(xhr) {
                error(
                    createResponse(
                        'error',
                        xhr.status,
                        onerror(xhr.response) || xhr.statusText,
                        xhr.getAllResponseHeaders()
                    )
                );
            };

            request.ontimeout = createTimeoutResponse(error);

            return request;
        };
    };

    var getRandomNumber = function getRandomNumber() {
        var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
        return min + Math.random() * (max - min);
    };

    var createPerceivedPerformanceUpdater = function createPerceivedPerformanceUpdater(cb) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;
        var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var tickMin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 25;
        var tickMax = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 250;
        var timeout = null;
        var start = Date.now();

        var tick = function tick() {
            var runtime = Date.now() - start;
            var delay = getRandomNumber(tickMin, tickMax);

            if (runtime + delay > duration) {
                delay = runtime + delay - duration;
            }

            var progress = runtime / duration;
            if (progress >= 1 || document.hidden) {
                cb(1);
                return;
            }

            cb(progress);

            timeout = setTimeout(tick, delay);
        };

        if (duration > 0) tick();

        return {
            clear: function clear() {
                clearTimeout(timeout);
            },
        };
    };

    var createFileProcessor = function createFileProcessor(processFn, options) {
        var state = {
            complete: false,
            perceivedProgress: 0,
            perceivedPerformanceUpdater: null,
            progress: null,
            timestamp: null,
            perceivedDuration: 0,
            duration: 0,
            request: null,
            response: null,
        };
        var allowMinimumUploadDuration = options.allowMinimumUploadDuration;

        var process = function process(file, metadata) {
            var progressFn = function progressFn() {
                // we've not yet started the real download, stop here
                // the request might not go through, for instance, there might be some server trouble
                // if state.progress is null, the server does not allow computing progress and we show the spinner instead
                if (state.duration === 0 || state.progress === null) return;

                // as we're now processing, fire the progress event
                api.fire('progress', api.getProgress());
            };

            var completeFn = function completeFn() {
                state.complete = true;
                api.fire('load-perceived', state.response.body);
            };

            // let's start processing
            api.fire('start');

            // set request start
            state.timestamp = Date.now();

            // create perceived performance progress indicator
            state.perceivedPerformanceUpdater = createPerceivedPerformanceUpdater(
                function(progress) {
                    state.perceivedProgress = progress;
                    state.perceivedDuration = Date.now() - state.timestamp;

                    progressFn();

                    // if fake progress is done, and a response has been received,
                    // and we've not yet called the complete method
                    if (state.response && state.perceivedProgress === 1 && !state.complete) {
                        // we done!
                        completeFn();
                    }
                },
                // random delay as in a list of files you start noticing
                // files uploading at the exact same speed
                allowMinimumUploadDuration ? getRandomNumber(750, 1500) : 0
            );

            // remember request so we can abort it later
            state.request = processFn(
                // the file to process
                file,

                // the metadata to send along
                metadata,

                // callbacks (load, error, progress, abort, transfer)
                // load expects the body to be a server id if
                // you want to make use of revert
                function(response) {
                    // we put the response in state so we can access
                    // it outside of this method
                    state.response = isObject(response)
                        ? response
                        : {
                              type: 'load',
                              code: 200,
                              body: '' + response,
                              headers: {},
                          };

                    // update duration
                    state.duration = Date.now() - state.timestamp;

                    // force progress to 1 as we're now done
                    state.progress = 1;

                    // actual load is done let's share results
                    api.fire('load', state.response.body);

                    // we are really done
                    // if perceived progress is 1 ( wait for perceived progress to complete )
                    // or if server does not support progress ( null )
                    if (
                        !allowMinimumUploadDuration ||
                        (allowMinimumUploadDuration && state.perceivedProgress === 1)
                    ) {
                        completeFn();
                    }
                },

                // error is expected to be an object with type, code, body
                function(error) {
                    // cancel updater
                    state.perceivedPerformanceUpdater.clear();

                    // update others about this error
                    api.fire(
                        'error',
                        isObject(error)
                            ? error
                            : {
                                  type: 'error',
                                  code: 0,
                                  body: '' + error,
                              }
                    );
                },

                // actual processing progress
                function(computable, current, total) {
                    // update actual duration
                    state.duration = Date.now() - state.timestamp;

                    // update actual progress
                    state.progress = computable ? current / total : null;

                    progressFn();
                },

                // abort does not expect a value
                function() {
                    // stop updater
                    state.perceivedPerformanceUpdater.clear();

                    // fire the abort event so we can switch visuals
                    api.fire('abort', state.response ? state.response.body : null);
                },

                // register the id for this transfer
                function(transferId) {
                    api.fire('transfer', transferId);
                }
            );
        };

        var abort = function abort() {
            // no request running, can't abort
            if (!state.request) return;

            // stop updater
            state.perceivedPerformanceUpdater.clear();

            // abort actual request
            if (state.request.abort) state.request.abort();

            // if has response object, we've completed the request
            state.complete = true;
        };

        var reset = function reset() {
            abort();
            state.complete = false;
            state.perceivedProgress = 0;
            state.progress = 0;
            state.timestamp = null;
            state.perceivedDuration = 0;
            state.duration = 0;
            state.request = null;
            state.response = null;
        };

        var getProgress = allowMinimumUploadDuration
            ? function() {
                  return state.progress ? Math.min(state.progress, state.perceivedProgress) : null;
              }
            : function() {
                  return state.progress || null;
              };

        var getDuration = allowMinimumUploadDuration
            ? function() {
                  return Math.min(state.duration, state.perceivedDuration);
              }
            : function() {
                  return state.duration;
              };

        var api = Object.assign({}, on(), {
            process: process, // start processing file
            abort: abort, // abort active process request
            getProgress: getProgress,
            getDuration: getDuration,
            reset: reset,
        });

        return api;
    };

    var getFilenameWithoutExtension = function getFilenameWithoutExtension(name) {
        return name.substring(0, name.lastIndexOf('.')) || name;
    };

    var createFileStub = function createFileStub(source) {
        var data = [source.name, source.size, source.type];

        // is blob or base64, then we need to set the name
        if (source instanceof Blob || isBase64DataURI(source)) {
            data[0] = source.name || getDateString();
        } else if (isBase64DataURI(source)) {
            // if is base64 data uri we need to determine the average size and type
            data[1] = source.length;
            data[2] = getMimeTypeFromBase64DataURI(source);
        } else if (isString(source)) {
            // url
            data[0] = getFilenameFromURL(source);
            data[1] = 0;
            data[2] = 'application/octet-stream';
        }

        return {
            name: data[0],
            size: data[1],
            type: data[2],
        };
    };

    var isFile = function isFile(value) {
        return !!(value instanceof File || (value instanceof Blob && value.name));
    };

    var deepCloneObject = function deepCloneObject(src) {
        if (!isObject(src)) return src;
        var target = isArray(src) ? [] : {};
        for (var key in src) {
            if (!src.hasOwnProperty(key)) continue;
            var v = src[key];
            target[key] = v && isObject(v) ? deepCloneObject(v) : v;
        }
        return target;
    };

    var createItem = function createItem() {
        var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        var serverFileReference =
            arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        // unique id for this item, is used to identify the item across views
        var id = getUniqueId();

        /**
         * Internal item state
         */
        var state = {
            // is archived
            archived: false,

            // if is frozen, no longer fires events
            frozen: false,

            // removed from view
            released: false,

            // original source
            source: null,

            // file model reference
            file: file,

            // id of file on server
            serverFileReference: serverFileReference,

            // id of file transfer on server
            transferId: null,

            // is aborted
            processingAborted: false,

            // current item status
            status: serverFileReference ? ItemStatus.PROCESSING_COMPLETE : ItemStatus.INIT,

            // active processes
            activeLoader: null,
            activeProcessor: null,
        };

        // callback used when abort processing is called to link back to the resolve method
        var abortProcessingRequestComplete = null;

        /**
         * Externally added item metadata
         */
        var metadata = {};

        // item data
        var setStatus = function setStatus(status) {
            return (state.status = status);
        };

        // fire event unless the item has been archived
        var fire = function fire(event) {
            if (state.released || state.frozen) return;
            for (
                var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
                _key < _len;
                _key++
            ) {
                params[_key - 1] = arguments[_key];
            }
            api.fire.apply(api, [event].concat(params));
        };

        // file data
        var getFileExtension = function getFileExtension() {
            return getExtensionFromFilename(state.file.name);
        };
        var getFileType = function getFileType() {
            return state.file.type;
        };
        var getFileSize = function getFileSize() {
            return state.file.size;
        };
        var getFile = function getFile() {
            return state.file;
        };

        //
        // logic to load a file
        //
        var load = function load(source, loader, onload) {
            // remember the original item source
            state.source = source;

            // source is known
            api.fireSync('init');

            // file stub is already there
            if (state.file) {
                api.fireSync('load-skip');
                return;
            }

            // set a stub file object while loading the actual data
            state.file = createFileStub(source);

            // starts loading
            loader.on('init', function() {
                fire('load-init');
            });

            // we'eve received a size indication, let's update the stub
            loader.on('meta', function(meta) {
                // set size of file stub
                state.file.size = meta.size;

                // set name of file stub
                state.file.filename = meta.filename;

                // if has received source, we done
                if (meta.source) {
                    origin = FileOrigin.LIMBO;
                    state.serverFileReference = meta.source;
                    state.status = ItemStatus.PROCESSING_COMPLETE;
                }

                // size has been updated
                fire('load-meta');
            });

            // the file is now loading we need to update the progress indicators
            loader.on('progress', function(progress) {
                setStatus(ItemStatus.LOADING);

                fire('load-progress', progress);
            });

            // an error was thrown while loading the file, we need to switch to error state
            loader.on('error', function(error) {
                setStatus(ItemStatus.LOAD_ERROR);

                fire('load-request-error', error);
            });

            // user or another process aborted the file load (cannot retry)
            loader.on('abort', function() {
                setStatus(ItemStatus.INIT);
                fire('load-abort');
            });

            // done loading
            loader.on('load', function(file) {
                // as we've now loaded the file the loader is no longer required
                state.activeLoader = null;

                // called when file has loaded succesfully
                var success = function success(result) {
                    // set (possibly) transformed file
                    state.file = isFile(result) ? result : state.file;

                    // file received
                    if (origin === FileOrigin.LIMBO && state.serverFileReference) {
                        setStatus(ItemStatus.PROCESSING_COMPLETE);
                    } else {
                        setStatus(ItemStatus.IDLE);
                    }

                    fire('load');
                };

                var error = function error(result) {
                    // set original file
                    state.file = file;
                    fire('load-meta');

                    setStatus(ItemStatus.LOAD_ERROR);
                    fire('load-file-error', result);
                };

                // if we already have a server file reference, we don't need to call the onload method
                if (state.serverFileReference) {
                    success(file);
                    return;
                }

                // no server id, let's give this file the full treatment
                onload(file, success, error);
            });

            // set loader source data
            loader.setSource(source);

            // set as active loader
            state.activeLoader = loader;

            // load the source data
            loader.load();
        };

        var retryLoad = function retryLoad() {
            if (!state.activeLoader) {
                return;
            }
            state.activeLoader.load();
        };

        var abortLoad = function abortLoad() {
            if (state.activeLoader) {
                state.activeLoader.abort();
                return;
            }
            setStatus(ItemStatus.INIT);
            fire('load-abort');
        };

        //
        // logic to process a file
        //
        var process = function process(processor, onprocess) {
            // processing was aborted
            if (state.processingAborted) {
                state.processingAborted = false;
                return;
            }

            // now processing
            setStatus(ItemStatus.PROCESSING);

            // reset abort callback
            abortProcessingRequestComplete = null;

            // if no file loaded we'll wait for the load event
            if (!(state.file instanceof Blob)) {
                api.on('load', function() {
                    process(processor, onprocess);
                });
                return;
            }

            // setup processor
            processor.on('load', function(serverFileReference) {
                // need this id to be able to revert the upload
                state.transferId = null;
                state.serverFileReference = serverFileReference;
            });

            // register transfer id
            processor.on('transfer', function(transferId) {
                // need this id to be able to revert the upload
                state.transferId = transferId;
            });

            processor.on('load-perceived', function(serverFileReference) {
                // no longer required
                state.activeProcessor = null;

                // need this id to be able to rever the upload
                state.transferId = null;
                state.serverFileReference = serverFileReference;

                setStatus(ItemStatus.PROCESSING_COMPLETE);
                fire('process-complete', serverFileReference);
            });

            processor.on('start', function() {
                fire('process-start');
            });

            processor.on('error', function(error) {
                state.activeProcessor = null;
                setStatus(ItemStatus.PROCESSING_ERROR);
                fire('process-error', error);
            });

            processor.on('abort', function(serverFileReference) {
                state.activeProcessor = null;

                // if file was uploaded but processing was cancelled during perceived processor time store file reference
                state.serverFileReference = serverFileReference;

                setStatus(ItemStatus.IDLE);
                fire('process-abort');

                // has timeout so doesn't interfere with remove action
                if (abortProcessingRequestComplete) {
                    abortProcessingRequestComplete();
                }
            });

            processor.on('progress', function(progress) {
                fire('process-progress', progress);
            });

            // when successfully transformed
            var success = function success(file) {
                // if was archived in the mean time, don't process
                if (state.archived) return;

                // process file!
                processor.process(file, Object.assign({}, metadata));
            };

            // something went wrong during transform phase
            var error = console.error;

            // start processing the file
            onprocess(state.file, success, error);

            // set as active processor
            state.activeProcessor = processor;
        };

        var requestProcessing = function requestProcessing() {
            state.processingAborted = false;
            setStatus(ItemStatus.PROCESSING_QUEUED);
        };

        var abortProcessing = function abortProcessing() {
            return new Promise(function(resolve) {
                if (!state.activeProcessor) {
                    state.processingAborted = true;

                    setStatus(ItemStatus.IDLE);
                    fire('process-abort');

                    resolve();
                    return;
                }

                abortProcessingRequestComplete = function abortProcessingRequestComplete() {
                    resolve();
                };

                state.activeProcessor.abort();
            });
        };

        //
        // logic to revert a processed file
        //
        var revert = function revert(revertFileUpload, forceRevert) {
            return new Promise(function(resolve, reject) {
                // a completed upload will have a serverFileReference, a failed chunked upload where
                // getting a serverId succeeded but >=0 chunks have been uploaded will have transferId set
                var serverTransferId =
                    state.serverFileReference !== null
                        ? state.serverFileReference
                        : state.transferId;

                // cannot revert without a server id for this process
                if (serverTransferId === null) {
                    resolve();
                    return;
                }

                // revert the upload (fire and forget)
                revertFileUpload(
                    serverTransferId,
                    function() {
                        // reset file server id and transfer id as now it's not available on the server
                        state.serverFileReference = null;
                        state.transferId = null;
                        resolve();
                    },
                    function(error) {
                        // don't set error state when reverting is optional, it will always resolve
                        if (!forceRevert) {
                            resolve();
                            return;
                        }

                        // oh no errors
                        setStatus(ItemStatus.PROCESSING_REVERT_ERROR);
                        fire('process-revert-error');
                        reject(error);
                    }
                );

                // fire event
                setStatus(ItemStatus.IDLE);
                fire('process-revert');
            });
        };

        // exposed methods
        var _setMetadata = function setMetadata(key, value, silent) {
            var keys = key.split('.');
            var root = keys[0];
            var last = keys.pop();
            var data = metadata;
            keys.forEach(function(key) {
                return (data = data[key]);
            });

            // compare old value against new value, if they're the same, we're not updating
            if (JSON.stringify(data[last]) === JSON.stringify(value)) return;

            // update value
            data[last] = value;

            // fire update
            fire('metadata-update', {
                key: root,
                value: metadata[root],
                silent: silent,
            });
        };

        var getMetadata = function getMetadata(key) {
            return deepCloneObject(key ? metadata[key] : metadata);
        };

        var api = Object.assign(
            {
                id: {
                    get: function get() {
                        return id;
                    },
                },
                origin: {
                    get: function get() {
                        return origin;
                    },
                    set: function set(value) {
                        return (origin = value);
                    },
                },
                serverId: {
                    get: function get() {
                        return state.serverFileReference;
                    },
                },
                transferId: {
                    get: function get() {
                        return state.transferId;
                    },
                },
                status: {
                    get: function get() {
                        return state.status;
                    },
                },
                filename: {
                    get: function get() {
                        return state.file.name;
                    },
                },
                filenameWithoutExtension: {
                    get: function get() {
                        return getFilenameWithoutExtension(state.file.name);
                    },
                },
                fileExtension: { get: getFileExtension },
                fileType: { get: getFileType },
                fileSize: { get: getFileSize },
                file: { get: getFile },
                relativePath: {
                    get: function get() {
                        return state.file._relativePath;
                    },
                },

                source: {
                    get: function get() {
                        return state.source;
                    },
                },

                getMetadata: getMetadata,
                setMetadata: function setMetadata(key, value, silent) {
                    if (isObject(key)) {
                        var data = key;
                        Object.keys(data).forEach(function(key) {
                            _setMetadata(key, data[key], value);
                        });
                        return key;
                    }
                    _setMetadata(key, value, silent);
                    return value;
                },

                extend: function extend(name, handler) {
                    return (itemAPI[name] = handler);
                },

                abortLoad: abortLoad,
                retryLoad: retryLoad,
                requestProcessing: requestProcessing,
                abortProcessing: abortProcessing,

                load: load,
                process: process,
                revert: revert,
            },

            on(),
            {
                freeze: function freeze() {
                    return (state.frozen = true);
                },

                release: function release() {
                    return (state.released = true);
                },
                released: {
                    get: function get() {
                        return state.released;
                    },
                },

                archive: function archive() {
                    return (state.archived = true);
                },
                archived: {
                    get: function get() {
                        return state.archived;
                    },
                },
            }
        );

        // create it here instead of returning it instantly so we can extend it later
        var itemAPI = createObject(api);

        return itemAPI;
    };

    var getItemIndexByQuery = function getItemIndexByQuery(items, query) {
        // just return first index
        if (isEmpty(query)) {
            return 0;
        }

        // invalid queries
        if (!isString(query)) {
            return -1;
        }

        // return item by id (or -1 if not found)
        return items.findIndex(function(item) {
            return item.id === query;
        });
    };

    var getItemById = function getItemById(items, itemId) {
        var index = getItemIndexByQuery(items, itemId);
        if (index < 0) {
            return;
        }
        return items[index] || null;
    };

    var fetchBlob = function fetchBlob(url, load, error, progress, abort, headers) {
        var request = sendRequest(null, url, {
            method: 'GET',
            responseType: 'blob',
        });

        request.onload = function(xhr) {
            // get headers
            var headers = xhr.getAllResponseHeaders();

            // get filename
            var filename = getFileInfoFromHeaders(headers).name || getFilenameFromURL(url);

            // create response
            load(
                createResponse('load', xhr.status, getFileFromBlob(xhr.response, filename), headers)
            );
        };

        request.onerror = function(xhr) {
            error(createResponse('error', xhr.status, xhr.statusText, xhr.getAllResponseHeaders()));
        };

        request.onheaders = function(xhr) {
            headers(createResponse('headers', xhr.status, null, xhr.getAllResponseHeaders()));
        };

        request.ontimeout = createTimeoutResponse(error);
        request.onprogress = progress;
        request.onabort = abort;

        // should return request
        return request;
    };

    var getDomainFromURL = function getDomainFromURL(url) {
        if (url.indexOf('//') === 0) {
            url = location.protocol + url;
        }
        return url
            .toLowerCase()
            .replace('blob:', '')
            .replace(/([a-z])?:\/\//, '$1')
            .split('/')[0];
    };

    var isExternalURL = function isExternalURL(url) {
        return (
            (url.indexOf(':') > -1 || url.indexOf('//') > -1) &&
            getDomainFromURL(location.href) !== getDomainFromURL(url)
        );
    };

    var dynamicLabel = function dynamicLabel(label) {
        return function() {
            return isFunction(label) ? label.apply(void 0, arguments) : label;
        };
    };

    var isMockItem = function isMockItem(item) {
        return !isFile(item.file);
    };

    var listUpdated = function listUpdated(dispatch, state) {
        clearTimeout(state.listUpdateTimeout);
        state.listUpdateTimeout = setTimeout(function() {
            dispatch('DID_UPDATE_ITEMS', { items: getActiveItems(state.items) });
        }, 0);
    };

    var optionalPromise = function optionalPromise(fn) {
        for (
            var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
            _key < _len;
            _key++
        ) {
            params[_key - 1] = arguments[_key];
        }
        return new Promise(function(resolve) {
            if (!fn) {
                return resolve(true);
            }

            var result = fn.apply(void 0, params);

            if (result == null) {
                return resolve(true);
            }

            if (typeof result === 'boolean') {
                return resolve(result);
            }

            if (typeof result.then === 'function') {
                result.then(resolve);
            }
        });
    };

    var sortItems = function sortItems(state, compare) {
        state.items.sort(function(a, b) {
            return compare(createItemAPI(a), createItemAPI(b));
        });
    };

    // returns item based on state
    var getItemByQueryFromState = function getItemByQueryFromState(state, itemHandler) {
        return function() {
            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var query = _ref.query,
                _ref$success = _ref.success,
                success = _ref$success === void 0 ? function() {} : _ref$success,
                _ref$failure = _ref.failure,
                failure = _ref$failure === void 0 ? function() {} : _ref$failure,
                options = _objectWithoutProperties(_ref, ['query', 'success', 'failure']);
            var item = getItemByQuery(state.items, query);
            if (!item) {
                failure({
                    error: createResponse('error', 0, 'Item not found'),
                    file: null,
                });

                return;
            }
            itemHandler(item, success, failure, options || {});
        };
    };

    var actions = function actions(dispatch, query, state) {
        return {
            /**
             * Aborts all ongoing processes
             */
            ABORT_ALL: function ABORT_ALL() {
                getActiveItems(state.items).forEach(function(item) {
                    item.freeze();
                    item.abortLoad();
                    item.abortProcessing();
                });
            },

            /**
             * Sets initial files
             */
            DID_SET_FILES: function DID_SET_FILES(_ref2) {
                var _ref2$value = _ref2.value,
                    value = _ref2$value === void 0 ? [] : _ref2$value;
                // map values to file objects
                var files = value.map(function(file) {
                    return {
                        source: file.source ? file.source : file,
                        options: file.options,
                    };
                });

                // loop over files, if file is in list, leave it be, if not, remove
                // test if items should be moved
                var activeItems = getActiveItems(state.items);

                activeItems.forEach(function(item) {
                    // if item not is in new value, remove
                    if (
                        !files.find(function(file) {
                            return file.source === item.source || file.source === item.file;
                        })
                    ) {
                        dispatch('REMOVE_ITEM', { query: item, remove: false });
                    }
                });

                // add new files
                activeItems = getActiveItems(state.items);
                files.forEach(function(file, index) {
                    // if file is already in list
                    if (
                        activeItems.find(function(item) {
                            return item.source === file.source || item.file === file.source;
                        })
                    )
                        return;

                    // not in list, add
                    dispatch(
                        'ADD_ITEM',
                        Object.assign({}, file, {
                            interactionMethod: InteractionMethod.NONE,
                            index: index,
                        })
                    );
                });
            },

            DID_UPDATE_ITEM_METADATA: function DID_UPDATE_ITEM_METADATA(_ref3) {
                var id = _ref3.id,
                    action = _ref3.action,
                    change = _ref3.change;
                // don't do anything
                if (change.silent) return;

                // if is called multiple times in close succession we combined all calls together to save resources
                clearTimeout(state.itemUpdateTimeout);
                state.itemUpdateTimeout = setTimeout(function() {
                    var item = getItemById(state.items, id);

                    // only revert and attempt to upload when we're uploading to a server
                    if (!query('IS_ASYNC')) {
                        // should we update the output data
                        applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {
                            item: item,
                            query: query,
                            action: action,
                            change: change,
                        }).then(function(shouldPrepareOutput) {
                            // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook
                            var beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');
                            if (beforePrepareFile)
                                shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);

                            if (!shouldPrepareOutput) return;

                            dispatch(
                                'REQUEST_PREPARE_OUTPUT',
                                {
                                    query: id,
                                    item: item,
                                    success: function success(file) {
                                        dispatch('DID_PREPARE_OUTPUT', { id: id, file: file });
                                    },
                                },

                                true
                            );
                        });

                        return;
                    }

                    // if is local item we need to enable upload button so change can be propagated to server
                    if (item.origin === FileOrigin.LOCAL) {
                        dispatch('DID_LOAD_ITEM', {
                            id: item.id,
                            error: null,
                            serverFileReference: item.source,
                        });
                    }

                    // for async scenarios
                    var upload = function upload() {
                        // we push this forward a bit so the interface is updated correctly
                        setTimeout(function() {
                            dispatch('REQUEST_ITEM_PROCESSING', { query: id });
                        }, 32);
                    };

                    var revert = function revert(doUpload) {
                        item.revert(
                            createRevertFunction(
                                state.options.server.url,
                                state.options.server.revert
                            ),
                            query('GET_FORCE_REVERT')
                        )
                            .then(doUpload ? upload : function() {})
                            .catch(function() {});
                    };

                    var abort = function abort(doUpload) {
                        item.abortProcessing().then(doUpload ? upload : function() {});
                    };

                    // if we should re-upload the file immediately
                    if (item.status === ItemStatus.PROCESSING_COMPLETE) {
                        return revert(state.options.instantUpload);
                    }

                    // if currently uploading, cancel upload
                    if (item.status === ItemStatus.PROCESSING) {
                        return abort(state.options.instantUpload);
                    }

                    if (state.options.instantUpload) {
                        upload();
                    }
                }, 0);
            },

            MOVE_ITEM: function MOVE_ITEM(_ref4) {
                var query = _ref4.query,
                    index = _ref4.index;
                var item = getItemByQuery(state.items, query);
                if (!item) return;
                var currentIndex = state.items.indexOf(item);
                index = limit(index, 0, state.items.length - 1);
                if (currentIndex === index) return;
                state.items.splice(index, 0, state.items.splice(currentIndex, 1)[0]);
            },

            SORT: function SORT(_ref5) {
                var compare = _ref5.compare;
                sortItems(state, compare);
                dispatch('DID_SORT_ITEMS', {
                    items: query('GET_ACTIVE_ITEMS'),
                });
            },

            ADD_ITEMS: function ADD_ITEMS(_ref6) {
                var items = _ref6.items,
                    index = _ref6.index,
                    interactionMethod = _ref6.interactionMethod,
                    _ref6$success = _ref6.success,
                    success = _ref6$success === void 0 ? function() {} : _ref6$success,
                    _ref6$failure = _ref6.failure,
                    failure = _ref6$failure === void 0 ? function() {} : _ref6$failure;
                var currentIndex = index;

                if (index === -1 || typeof index === 'undefined') {
                    var insertLocation = query('GET_ITEM_INSERT_LOCATION');
                    var totalItems = query('GET_TOTAL_ITEMS');
                    currentIndex = insertLocation === 'before' ? 0 : totalItems;
                }

                var ignoredFiles = query('GET_IGNORED_FILES');
                var isValidFile = function isValidFile(source) {
                    return isFile(source)
                        ? !ignoredFiles.includes(source.name.toLowerCase())
                        : !isEmpty(source);
                };
                var validItems = items.filter(isValidFile);

                var promises = validItems.map(function(source) {
                    return new Promise(function(resolve, reject) {
                        dispatch('ADD_ITEM', {
                            interactionMethod: interactionMethod,
                            source: source.source || source,
                            success: resolve,
                            failure: reject,
                            index: currentIndex++,
                            options: source.options || {},
                        });
                    });
                });

                Promise.all(promises)
                    .then(success)
                    .catch(failure);
            },

            /**
             * @param source
             * @param index
             * @param interactionMethod
             */
            ADD_ITEM: function ADD_ITEM(_ref7) {
                var source = _ref7.source,
                    _ref7$index = _ref7.index,
                    index = _ref7$index === void 0 ? -1 : _ref7$index,
                    interactionMethod = _ref7.interactionMethod,
                    _ref7$success = _ref7.success,
                    success = _ref7$success === void 0 ? function() {} : _ref7$success,
                    _ref7$failure = _ref7.failure,
                    failure = _ref7$failure === void 0 ? function() {} : _ref7$failure,
                    _ref7$options = _ref7.options,
                    options = _ref7$options === void 0 ? {} : _ref7$options;
                // if no source supplied
                if (isEmpty(source)) {
                    failure({
                        error: createResponse('error', 0, 'No source'),
                        file: null,
                    });

                    return;
                }

                // filter out invalid file items, used to filter dropped directory contents
                if (
                    isFile(source) &&
                    state.options.ignoredFiles.includes(source.name.toLowerCase())
                ) {
                    // fail silently
                    return;
                }

                // test if there's still room in the list of files
                if (!hasRoomForItem(state)) {
                    // if multiple allowed, we can't replace
                    // or if only a single item is allowed but we're not allowed to replace it we exit
                    if (
                        state.options.allowMultiple ||
                        (!state.options.allowMultiple && !state.options.allowReplace)
                    ) {
                        var error = createResponse('warning', 0, 'Max files');

                        dispatch('DID_THROW_MAX_FILES', {
                            source: source,
                            error: error,
                        });

                        failure({ error: error, file: null });

                        return;
                    }

                    // let's replace the item
                    // id of first item we're about to remove
                    var _item = getActiveItems(state.items)[0];

                    // if has been processed remove it from the server as well
                    if (
                        _item.status === ItemStatus.PROCESSING_COMPLETE ||
                        _item.status === ItemStatus.PROCESSING_REVERT_ERROR
                    ) {
                        var forceRevert = query('GET_FORCE_REVERT');
                        _item
                            .revert(
                                createRevertFunction(
                                    state.options.server.url,
                                    state.options.server.revert
                                ),
                                forceRevert
                            )
                            .then(function() {
                                if (!forceRevert) return;

                                // try to add now
                                dispatch('ADD_ITEM', {
                                    source: source,
                                    index: index,
                                    interactionMethod: interactionMethod,
                                    success: success,
                                    failure: failure,
                                    options: options,
                                });
                            })
                            .catch(function() {}); // no need to handle this catch state for now

                        if (forceRevert) return;
                    }

                    // remove first item as it will be replaced by this item
                    dispatch('REMOVE_ITEM', { query: _item.id });
                }

                // where did the file originate
                var origin =
                    options.type === 'local'
                        ? FileOrigin.LOCAL
                        : options.type === 'limbo'
                        ? FileOrigin.LIMBO
                        : FileOrigin.INPUT;

                // create a new blank item
                var item = createItem(
                    // where did this file come from
                    origin,

                    // an input file never has a server file reference
                    origin === FileOrigin.INPUT ? null : source,

                    // file mock data, if defined
                    options.file
                );

                // set initial meta data
                Object.keys(options.metadata || {}).forEach(function(key) {
                    item.setMetadata(key, options.metadata[key]);
                });

                // created the item, let plugins add methods
                applyFilters('DID_CREATE_ITEM', item, { query: query, dispatch: dispatch });

                // where to insert new items
                var itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');

                // adjust index if is not allowed to pick location
                if (!state.options.itemInsertLocationFreedom) {
                    index = itemInsertLocation === 'before' ? -1 : state.items.length;
                }

                // add item to list
                insertItem(state.items, item, index);

                // sort items in list
                if (isFunction(itemInsertLocation) && source) {
                    sortItems(state, itemInsertLocation);
                }

                // get a quick reference to the item id
                var id = item.id;

                // observe item events
                item.on('init', function() {
                    dispatch('DID_INIT_ITEM', { id: id });
                });

                item.on('load-init', function() {
                    dispatch('DID_START_ITEM_LOAD', { id: id });
                });

                item.on('load-meta', function() {
                    dispatch('DID_UPDATE_ITEM_META', { id: id });
                });

                item.on('load-progress', function(progress) {
                    dispatch('DID_UPDATE_ITEM_LOAD_PROGRESS', { id: id, progress: progress });
                });

                item.on('load-request-error', function(error) {
                    var mainStatus = dynamicLabel(state.options.labelFileLoadError)(error);

                    // is client error, no way to recover
                    if (error.code >= 400 && error.code < 500) {
                        dispatch('DID_THROW_ITEM_INVALID', {
                            id: id,
                            error: error,
                            status: {
                                main: mainStatus,
                                sub: error.code + ' (' + error.body + ')',
                            },
                        });

                        // reject the file so can be dealt with through API
                        failure({ error: error, file: createItemAPI(item) });
                        return;
                    }

                    // is possible server error, so might be possible to retry
                    dispatch('DID_THROW_ITEM_LOAD_ERROR', {
                        id: id,
                        error: error,
                        status: {
                            main: mainStatus,
                            sub: state.options.labelTapToRetry,
                        },
                    });
                });

                item.on('load-file-error', function(error) {
                    dispatch('DID_THROW_ITEM_INVALID', {
                        id: id,
                        error: error.status,
                        status: error.status,
                    });

                    failure({ error: error.status, file: createItemAPI(item) });
                });

                item.on('load-abort', function() {
                    dispatch('REMOVE_ITEM', { query: id });
                });

                item.on('load-skip', function() {
                    dispatch('COMPLETE_LOAD_ITEM', {
                        query: id,
                        item: item,
                        data: {
                            source: source,
                            success: success,
                        },
                    });
                });

                item.on('load', function() {
                    var handleAdd = function handleAdd(shouldAdd) {
                        // no should not add this file
                        if (!shouldAdd) {
                            dispatch('REMOVE_ITEM', {
                                query: id,
                            });

                            return;
                        }

                        // now interested in metadata updates
                        item.on('metadata-update', function(change) {
                            dispatch('DID_UPDATE_ITEM_METADATA', { id: id, change: change });
                        });

                        // let plugins decide if the output data should be prepared at this point
                        // means we'll do this and wait for idle state
                        applyFilterChain('SHOULD_PREPARE_OUTPUT', false, {
                            item: item,
                            query: query,
                        }).then(function(shouldPrepareOutput) {
                            // plugins determined the output data should be prepared (or not), can be adjusted with beforePrepareOutput hook
                            var beforePrepareFile = query('GET_BEFORE_PREPARE_FILE');
                            if (beforePrepareFile)
                                shouldPrepareOutput = beforePrepareFile(item, shouldPrepareOutput);

                            var loadComplete = function loadComplete() {
                                dispatch('COMPLETE_LOAD_ITEM', {
                                    query: id,
                                    item: item,
                                    data: {
                                        source: source,
                                        success: success,
                                    },
                                });

                                listUpdated(dispatch, state);
                            };

                            // exit
                            if (shouldPrepareOutput) {
                                // wait for idle state and then run PREPARE_OUTPUT
                                dispatch(
                                    'REQUEST_PREPARE_OUTPUT',
                                    {
                                        query: id,
                                        item: item,
                                        success: function success(file) {
                                            dispatch('DID_PREPARE_OUTPUT', { id: id, file: file });
                                            loadComplete();
                                        },
                                    },

                                    true
                                );

                                return;
                            }

                            loadComplete();
                        });
                    };

                    // item loaded, allow plugins to
                    // - read data (quickly)
                    // - add metadata
                    applyFilterChain('DID_LOAD_ITEM', item, { query: query, dispatch: dispatch })
                        .then(function() {
                            optionalPromise(query('GET_BEFORE_ADD_FILE'), createItemAPI(item)).then(
                                handleAdd
                            );
                        })
                        .catch(function(e) {
                            if (!e || !e.error || !e.status) return handleAdd(false);
                            dispatch('DID_THROW_ITEM_INVALID', {
                                id: id,
                                error: e.error,
                                status: e.status,
                            });
                        });
                });

                item.on('process-start', function() {
                    dispatch('DID_START_ITEM_PROCESSING', { id: id });
                });

                item.on('process-progress', function(progress) {
                    dispatch('DID_UPDATE_ITEM_PROCESS_PROGRESS', { id: id, progress: progress });
                });

                item.on('process-error', function(error) {
                    dispatch('DID_THROW_ITEM_PROCESSING_ERROR', {
                        id: id,
                        error: error,
                        status: {
                            main: dynamicLabel(state.options.labelFileProcessingError)(error),
                            sub: state.options.labelTapToRetry,
                        },
                    });
                });

                item.on('process-revert-error', function(error) {
                    dispatch('DID_THROW_ITEM_PROCESSING_REVERT_ERROR', {
                        id: id,
                        error: error,
                        status: {
                            main: dynamicLabel(state.options.labelFileProcessingRevertError)(error),
                            sub: state.options.labelTapToRetry,
                        },
                    });
                });

                item.on('process-complete', function(serverFileReference) {
                    dispatch('DID_COMPLETE_ITEM_PROCESSING', {
                        id: id,
                        error: null,
                        serverFileReference: serverFileReference,
                    });

                    dispatch('DID_DEFINE_VALUE', { id: id, value: serverFileReference });
                });

                item.on('process-abort', function() {
                    dispatch('DID_ABORT_ITEM_PROCESSING', { id: id });
                });

                item.on('process-revert', function() {
                    dispatch('DID_REVERT_ITEM_PROCESSING', { id: id });
                    dispatch('DID_DEFINE_VALUE', { id: id, value: null });
                });

                // let view know the item has been inserted
                dispatch('DID_ADD_ITEM', {
                    id: id,
                    index: index,
                    interactionMethod: interactionMethod,
                });

                listUpdated(dispatch, state);

                // start loading the source
                var _ref8 = state.options.server || {},
                    url = _ref8.url,
                    load = _ref8.load,
                    restore = _ref8.restore,
                    fetch = _ref8.fetch;

                item.load(
                    source,

                    // this creates a function that loads the file based on the type of file (string, base64, blob, file) and location of file (local, remote, limbo)
                    createFileLoader(
                        origin === FileOrigin.INPUT
                            ? // input, if is remote, see if should use custom fetch, else use default fetchBlob
                              isString(source) && isExternalURL(source)
                                ? fetch
                                    ? createFetchFunction(url, fetch)
                                    : fetchBlob // remote url
                                : fetchBlob // try to fetch url
                            : // limbo or local
                            origin === FileOrigin.LIMBO
                            ? createFetchFunction(url, restore) // limbo
                            : createFetchFunction(url, load) // local
                    ),

                    // called when the file is loaded so it can be piped through the filters
                    function(file, success, error) {
                        // let's process the file
                        applyFilterChain('LOAD_FILE', file, { query: query })
                            .then(success)
                            .catch(error);
                    }
                );
            },

            REQUEST_PREPARE_OUTPUT: function REQUEST_PREPARE_OUTPUT(_ref9) {
                var item = _ref9.item,
                    success = _ref9.success,
                    _ref9$failure = _ref9.failure,
                    failure = _ref9$failure === void 0 ? function() {} : _ref9$failure;
                // error response if item archived
                var err = {
                    error: createResponse('error', 0, 'Item not found'),
                    file: null,
                };

                // don't handle archived items, an item could have been archived (load aborted) while waiting to be prepared
                if (item.archived) return failure(err);

                // allow plugins to alter the file data
                applyFilterChain('PREPARE_OUTPUT', item.file, { query: query, item: item }).then(
                    function(result) {
                        applyFilterChain('COMPLETE_PREPARE_OUTPUT', result, {
                            query: query,
                            item: item,
                        }).then(function(result) {
                            // don't handle archived items, an item could have been archived (load aborted) while being prepared
                            if (item.archived) return failure(err);

                            // we done!
                            success(result);
                        });
                    }
                );
            },

            COMPLETE_LOAD_ITEM: function COMPLETE_LOAD_ITEM(_ref10) {
                var item = _ref10.item,
                    data = _ref10.data;
                var success = data.success,
                    source = data.source;

                // sort items in list
                var itemInsertLocation = query('GET_ITEM_INSERT_LOCATION');
                if (isFunction(itemInsertLocation) && source) {
                    sortItems(state, itemInsertLocation);
                }

                // let interface know the item has loaded
                dispatch('DID_LOAD_ITEM', {
                    id: item.id,
                    error: null,
                    serverFileReference: item.origin === FileOrigin.INPUT ? null : source,
                });

                // item has been successfully loaded and added to the
                // list of items so can now be safely returned for use
                success(createItemAPI(item));

                // if this is a local server file we need to show a different state
                if (item.origin === FileOrigin.LOCAL) {
                    dispatch('DID_LOAD_LOCAL_ITEM', { id: item.id });
                    return;
                }

                // if is a temp server file we prevent async upload call here (as the file is already on the server)
                if (item.origin === FileOrigin.LIMBO) {
                    dispatch('DID_COMPLETE_ITEM_PROCESSING', {
                        id: item.id,
                        error: null,
                        serverFileReference: source,
                    });

                    dispatch('DID_DEFINE_VALUE', {
                        id: item.id,
                        value: item.serverId || source,
                    });

                    return;
                }

                // id we are allowed to upload the file immediately, lets do it
                if (query('IS_ASYNC') && state.options.instantUpload) {
                    dispatch('REQUEST_ITEM_PROCESSING', { query: item.id });
                }
            },

            RETRY_ITEM_LOAD: getItemByQueryFromState(state, function(item) {
                // try loading the source one more time
                item.retryLoad();
            }),

            REQUEST_ITEM_PREPARE: getItemByQueryFromState(state, function(item, _success, failure) {
                dispatch(
                    'REQUEST_PREPARE_OUTPUT',
                    {
                        query: item.id,
                        item: item,
                        success: function success(file) {
                            dispatch('DID_PREPARE_OUTPUT', { id: item.id, file: file });
                            _success({
                                file: item,
                                output: file,
                            });
                        },
                        failure: failure,
                    },

                    true
                );
            }),

            REQUEST_ITEM_PROCESSING: getItemByQueryFromState(state, function(
                item,
                success,
                failure
            ) {
                // cannot be queued (or is already queued)
                var itemCanBeQueuedForProcessing =
                    // waiting for something
                    item.status === ItemStatus.IDLE ||
                    // processing went wrong earlier
                    item.status === ItemStatus.PROCESSING_ERROR;

                // not ready to be processed
                if (!itemCanBeQueuedForProcessing) {
                    var processNow = function processNow() {
                        return dispatch('REQUEST_ITEM_PROCESSING', {
                            query: item,
                            success: success,
                            failure: failure,
                        });
                    };

                    var process = function process() {
                        return document.hidden ? processNow() : setTimeout(processNow, 32);
                    };

                    // if already done processing or tried to revert but didn't work, try again
                    if (
                        item.status === ItemStatus.PROCESSING_COMPLETE ||
                        item.status === ItemStatus.PROCESSING_REVERT_ERROR
                    ) {
                        item.revert(
                            createRevertFunction(
                                state.options.server.url,
                                state.options.server.revert
                            ),
                            query('GET_FORCE_REVERT')
                        )
                            .then(process)
                            .catch(function() {}); // don't continue with processing if something went wrong
                    } else if (item.status === ItemStatus.PROCESSING) {
                        item.abortProcessing().then(process);
                    }

                    return;
                }

                // already queued for processing
                if (item.status === ItemStatus.PROCESSING_QUEUED) return;

                item.requestProcessing();

                dispatch('DID_REQUEST_ITEM_PROCESSING', { id: item.id });

                dispatch('PROCESS_ITEM', { query: item, success: success, failure: failure }, true);
            }),

            PROCESS_ITEM: getItemByQueryFromState(state, function(item, success, failure) {
                var maxParallelUploads = query('GET_MAX_PARALLEL_UPLOADS');
                var totalCurrentUploads = query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING)
                    .length;

                // queue and wait till queue is freed up
                if (totalCurrentUploads === maxParallelUploads) {
                    // queue for later processing
                    state.processingQueue.push({
                        id: item.id,
                        success: success,
                        failure: failure,
                    });

                    // stop it!
                    return;
                }

                // if was not queued or is already processing exit here
                if (item.status === ItemStatus.PROCESSING) return;

                var processNext = function processNext() {
                    // process queueud items
                    var queueEntry = state.processingQueue.shift();

                    // no items left
                    if (!queueEntry) return;

                    // get item reference
                    var id = queueEntry.id,
                        success = queueEntry.success,
                        failure = queueEntry.failure;
                    var itemReference = getItemByQuery(state.items, id);

                    // if item was archived while in queue, jump to next
                    if (!itemReference || itemReference.archived) {
                        processNext();
                        return;
                    }

                    // process queued item
                    dispatch(
                        'PROCESS_ITEM',
                        { query: id, success: success, failure: failure },
                        true
                    );
                };

                // we done function
                item.onOnce('process-complete', function() {
                    success(createItemAPI(item));
                    processNext();

                    // if origin is local, and we're instant uploading, trigger remove of original
                    // as revert will remove file from list
                    var server = state.options.server;
                    var instantUpload = state.options.instantUpload;
                    if (
                        instantUpload &&
                        item.origin === FileOrigin.LOCAL &&
                        isFunction(server.remove)
                    ) {
                        var noop = function noop() {};
                        item.origin = FileOrigin.LIMBO;
                        state.options.server.remove(item.source, noop, noop);
                    }

                    // All items processed? No errors?
                    var allItemsProcessed =
                        query('GET_ITEMS_BY_STATUS', ItemStatus.PROCESSING_COMPLETE).length ===
                        state.items.length;
                    if (allItemsProcessed) {
                        dispatch('DID_COMPLETE_ITEM_PROCESSING_ALL');
                    }
                });

                // we error function
                item.onOnce('process-error', function(error) {
                    failure({ error: error, file: createItemAPI(item) });
                    processNext();
                });

                // start file processing
                var options = state.options;
                item.process(
                    createFileProcessor(
                        createProcessorFunction(
                            options.server.url,
                            options.server.process,
                            options.name,
                            {
                                chunkTransferId: item.transferId,
                                chunkServer: options.server.patch,
                                chunkUploads: options.chunkUploads,
                                chunkForce: options.chunkForce,
                                chunkSize: options.chunkSize,
                                chunkRetryDelays: options.chunkRetryDelays,
                            }
                        ),

                        {
                            allowMinimumUploadDuration: query('GET_ALLOW_MINIMUM_UPLOAD_DURATION'),
                        }
                    ),

                    // called when the file is about to be processed so it can be piped through the transform filters
                    function(file, success, error) {
                        // allow plugins to alter the file data
                        applyFilterChain('PREPARE_OUTPUT', file, { query: query, item: item })
                            .then(function(file) {
                                dispatch('DID_PREPARE_OUTPUT', { id: item.id, file: file });

                                success(file);
                            })
                            .catch(error);
                    }
                );
            }),

            RETRY_ITEM_PROCESSING: getItemByQueryFromState(state, function(item) {
                dispatch('REQUEST_ITEM_PROCESSING', { query: item });
            }),

            REQUEST_REMOVE_ITEM: getItemByQueryFromState(state, function(item) {
                optionalPromise(query('GET_BEFORE_REMOVE_FILE'), createItemAPI(item)).then(function(
                    shouldRemove
                ) {
                    if (!shouldRemove) {
                        return;
                    }
                    dispatch('REMOVE_ITEM', { query: item });
                });
            }),

            RELEASE_ITEM: getItemByQueryFromState(state, function(item) {
                item.release();
            }),

            REMOVE_ITEM: getItemByQueryFromState(state, function(item, success, failure, options) {
                var removeFromView = function removeFromView() {
                    // get id reference
                    var id = item.id;

                    // archive the item, this does not remove it from the list
                    getItemById(state.items, id).archive();

                    // tell the view the item has been removed
                    dispatch('DID_REMOVE_ITEM', { error: null, id: id, item: item });

                    // now the list has been modified
                    listUpdated(dispatch, state);

                    // correctly removed
                    success(createItemAPI(item));
                };

                // if this is a local file and the `server.remove` function has been configured,
                // send source there so dev can remove file from server
                var server = state.options.server;
                if (
                    item.origin === FileOrigin.LOCAL &&
                    server &&
                    isFunction(server.remove) &&
                    options.remove !== false
                ) {
                    dispatch('DID_START_ITEM_REMOVE', { id: item.id });

                    server.remove(
                        item.source,
                        function() {
                            return removeFromView();
                        },
                        function(status) {
                            dispatch('DID_THROW_ITEM_REMOVE_ERROR', {
                                id: item.id,
                                error: createResponse('error', 0, status, null),
                                status: {
                                    main: dynamicLabel(state.options.labelFileRemoveError)(status),
                                    sub: state.options.labelTapToRetry,
                                },
                            });
                        }
                    );
                } else {
                    // if is requesting revert and can revert need to call revert handler (not calling request_ because that would also trigger beforeRemoveHook)
                    if (
                        (options.revert &&
                            item.origin !== FileOrigin.LOCAL &&
                            item.serverId !== null) ||
                        // if chunked uploads are enabled and we're uploading in chunks for this specific file
                        // or if the file isn't big enough for chunked uploads but chunkForce is set then call
                        // revert before removing from the view...
                        (state.options.chunkUploads && item.file.size > state.options.chunkSize) ||
                        (state.options.chunkUploads && state.options.chunkForce)
                    ) {
                        item.revert(
                            createRevertFunction(
                                state.options.server.url,
                                state.options.server.revert
                            ),
                            query('GET_FORCE_REVERT')
                        );
                    }

                    // can now safely remove from view
                    removeFromView();
                }
            }),

            ABORT_ITEM_LOAD: getItemByQueryFromState(state, function(item) {
                item.abortLoad();
            }),

            ABORT_ITEM_PROCESSING: getItemByQueryFromState(state, function(item) {
                // test if is already processed
                if (item.serverId) {
                    dispatch('REVERT_ITEM_PROCESSING', { id: item.id });
                    return;
                }

                // abort
                item.abortProcessing().then(function() {
                    var shouldRemove = state.options.instantUpload;
                    if (shouldRemove) {
                        dispatch('REMOVE_ITEM', { query: item.id });
                    }
                });
            }),

            REQUEST_REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, function(item) {
                // not instant uploading, revert immediately
                if (!state.options.instantUpload) {
                    dispatch('REVERT_ITEM_PROCESSING', { query: item });
                    return;
                }

                // if we're instant uploading the file will also be removed if we revert,
                // so if a before remove file hook is defined we need to run it now
                var handleRevert = function handleRevert(shouldRevert) {
                    if (!shouldRevert) return;
                    dispatch('REVERT_ITEM_PROCESSING', { query: item });
                };

                var fn = query('GET_BEFORE_REMOVE_FILE');
                if (!fn) {
                    return handleRevert(true);
                }

                var requestRemoveResult = fn(createItemAPI(item));
                if (requestRemoveResult == null) {
                    // undefined or null
                    return handleRevert(true);
                }

                if (typeof requestRemoveResult === 'boolean') {
                    return handleRevert(requestRemoveResult);
                }

                if (typeof requestRemoveResult.then === 'function') {
                    requestRemoveResult.then(handleRevert);
                }
            }),

            REVERT_ITEM_PROCESSING: getItemByQueryFromState(state, function(item) {
                item.revert(
                    createRevertFunction(state.options.server.url, state.options.server.revert),
                    query('GET_FORCE_REVERT')
                )
                    .then(function() {
                        var shouldRemove = state.options.instantUpload || isMockItem(item);
                        if (shouldRemove) {
                            dispatch('REMOVE_ITEM', { query: item.id });
                        }
                    })
                    .catch(function() {});
            }),

            SET_OPTIONS: function SET_OPTIONS(_ref11) {
                var options = _ref11.options;
                // get all keys passed
                var optionKeys = Object.keys(options);

                // get prioritized keyed to include (remove once not in options object)
                var prioritizedOptionKeys = PrioritizedOptions.filter(function(key) {
                    return optionKeys.includes(key);
                });

                // order the keys, prioritized first, then rest
                var orderedOptionKeys = [].concat(
                    _toConsumableArray(prioritizedOptionKeys),
                    _toConsumableArray(
                        Object.keys(options).filter(function(key) {
                            return !prioritizedOptionKeys.includes(key);
                        })
                    )
                );

                // dispatch set event for each option
                orderedOptionKeys.forEach(function(key) {
                    dispatch('SET_' + fromCamels(key, '_').toUpperCase(), {
                        value: options[key],
                    });
                });
            },
        };
    };

    var PrioritizedOptions = ['server'];

    var formatFilename = function formatFilename(name) {
        return name;
    };

    var createElement$1 = function createElement(tagName) {
        return document.createElement(tagName);
    };

    var text = function text(node, value) {
        var textNode = node.childNodes[0];
        if (!textNode) {
            textNode = document.createTextNode(value);
            node.appendChild(textNode);
        } else if (value !== textNode.nodeValue) {
            textNode.nodeValue = value;
        }
    };

    var polarToCartesian = function polarToCartesian(centerX, centerY, radius, angleInDegrees) {
        var angleInRadians = (((angleInDegrees % 360) - 90) * Math.PI) / 180.0;
        return {
            x: centerX + radius * Math.cos(angleInRadians),
            y: centerY + radius * Math.sin(angleInRadians),
        };
    };

    var describeArc = function describeArc(x, y, radius, startAngle, endAngle, arcSweep) {
        var start = polarToCartesian(x, y, radius, endAngle);
        var end = polarToCartesian(x, y, radius, startAngle);
        return ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');
    };

    var percentageArc = function percentageArc(x, y, radius, from, to) {
        var arcSweep = 1;
        if (to > from && to - from <= 0.5) {
            arcSweep = 0;
        }
        if (from > to && from - to >= 0.5) {
            arcSweep = 0;
        }
        return describeArc(
            x,
            y,
            radius,
            Math.min(0.9999, from) * 360,
            Math.min(0.9999, to) * 360,
            arcSweep
        );
    };

    var create = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;
        // start at 0
        props.spin = false;
        props.progress = 0;
        props.opacity = 0;

        // svg
        var svg = createElement('svg');
        root.ref.path = createElement('path', {
            'stroke-width': 2,
            'stroke-linecap': 'round',
        });

        svg.appendChild(root.ref.path);

        root.ref.svg = svg;

        root.appendChild(svg);
    };

    var write = function write(_ref2) {
        var root = _ref2.root,
            props = _ref2.props;
        if (props.opacity === 0) {
            return;
        }

        if (props.align) {
            root.element.dataset.align = props.align;
        }

        // get width of stroke
        var ringStrokeWidth = parseInt(attr(root.ref.path, 'stroke-width'), 10);

        // calculate size of ring
        var size = root.rect.element.width * 0.5;

        // ring state
        var ringFrom = 0;
        var ringTo = 0;

        // now in busy mode
        if (props.spin) {
            ringFrom = 0;
            ringTo = 0.5;
        } else {
            ringFrom = 0;
            ringTo = props.progress;
        }

        // get arc path
        var coordinates = percentageArc(size, size, size - ringStrokeWidth, ringFrom, ringTo);

        // update progress bar
        attr(root.ref.path, 'd', coordinates);

        // hide while contains 0 value
        attr(root.ref.path, 'stroke-opacity', props.spin || props.progress > 0 ? 1 : 0);
    };

    var progressIndicator = createView({
        tag: 'div',
        name: 'progress-indicator',
        ignoreRectUpdate: true,
        ignoreRect: true,
        create: create,
        write: write,
        mixins: {
            apis: ['progress', 'spin', 'align'],
            styles: ['opacity'],
            animations: {
                opacity: { type: 'tween', duration: 500 },
                progress: {
                    type: 'spring',
                    stiffness: 0.95,
                    damping: 0.65,
                    mass: 10,
                },
            },
        },
    });

    var create$1 = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;
        root.element.innerHTML = (props.icon || '') + ('<span>' + props.label + '</span>');

        props.isDisabled = false;
    };

    var write$1 = function write(_ref2) {
        var root = _ref2.root,
            props = _ref2.props;
        var isDisabled = props.isDisabled;
        var shouldDisable = root.query('GET_DISABLED') || props.opacity === 0;

        if (shouldDisable && !isDisabled) {
            props.isDisabled = true;
            attr(root.element, 'disabled', 'disabled');
        } else if (!shouldDisable && isDisabled) {
            props.isDisabled = false;
            root.element.removeAttribute('disabled');
        }
    };

    var fileActionButton = createView({
        tag: 'button',
        attributes: {
            type: 'button',
        },

        ignoreRect: true,
        ignoreRectUpdate: true,
        name: 'file-action-button',
        mixins: {
            apis: ['label'],
            styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],
            animations: {
                scaleX: 'spring',
                scaleY: 'spring',
                translateX: 'spring',
                translateY: 'spring',
                opacity: { type: 'tween', duration: 250 },
            },

            listeners: true,
        },

        create: create$1,
        write: write$1,
    });

    var toNaturalFileSize = function toNaturalFileSize(bytes) {
        var decimalSeparator =
            arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.';
        var base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;
        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
        var _options$labelBytes = options.labelBytes,
            labelBytes = _options$labelBytes === void 0 ? 'bytes' : _options$labelBytes,
            _options$labelKilobyt = options.labelKilobytes,
            labelKilobytes = _options$labelKilobyt === void 0 ? 'KB' : _options$labelKilobyt,
            _options$labelMegabyt = options.labelMegabytes,
            labelMegabytes = _options$labelMegabyt === void 0 ? 'MB' : _options$labelMegabyt,
            _options$labelGigabyt = options.labelGigabytes,
            labelGigabytes = _options$labelGigabyt === void 0 ? 'GB' : _options$labelGigabyt;

        // no negative byte sizes
        bytes = Math.round(Math.abs(bytes));

        var KB = base;
        var MB = base * base;
        var GB = base * base * base;

        // just bytes
        if (bytes < KB) {
            return bytes + ' ' + labelBytes;
        }

        // kilobytes
        if (bytes < MB) {
            return Math.floor(bytes / KB) + ' ' + labelKilobytes;
        }

        // megabytes
        if (bytes < GB) {
            return removeDecimalsWhenZero(bytes / MB, 1, decimalSeparator) + ' ' + labelMegabytes;
        }

        // gigabytes
        return removeDecimalsWhenZero(bytes / GB, 2, decimalSeparator) + ' ' + labelGigabytes;
    };

    var removeDecimalsWhenZero = function removeDecimalsWhenZero(value, decimalCount, separator) {
        return value
            .toFixed(decimalCount)
            .split('.')
            .filter(function(part) {
                return part !== '0';
            })
            .join(separator);
    };

    var create$2 = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;
        // filename
        var fileName = createElement$1('span');
        fileName.className = 'filepond--file-info-main';
        // hide for screenreaders
        // the file is contained in a fieldset with legend that contains the filename
        // no need to read it twice
        attr(fileName, 'aria-hidden', 'true');
        root.appendChild(fileName);
        root.ref.fileName = fileName;

        // filesize
        var fileSize = createElement$1('span');
        fileSize.className = 'filepond--file-info-sub';
        root.appendChild(fileSize);
        root.ref.fileSize = fileSize;

        // set initial values
        text(fileSize, root.query('GET_LABEL_FILE_WAITING_FOR_SIZE'));
        text(fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));
    };

    var updateFile = function updateFile(_ref2) {
        var root = _ref2.root,
            props = _ref2.props;
        text(
            root.ref.fileSize,
            toNaturalFileSize(
                root.query('GET_ITEM_SIZE', props.id),
                '.',
                root.query('GET_FILE_SIZE_BASE'),
                root.query('GET_FILE_SIZE_LABELS', root.query)
            )
        );

        text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));
    };

    var updateFileSizeOnError = function updateFileSizeOnError(_ref3) {
        var root = _ref3.root,
            props = _ref3.props;
        // if size is available don't fallback to unknown size message
        if (isInt(root.query('GET_ITEM_SIZE', props.id))) {
            updateFile({ root: root, props: props });
            return;
        }

        text(root.ref.fileSize, root.query('GET_LABEL_FILE_SIZE_NOT_AVAILABLE'));
    };

    var fileInfo = createView({
        name: 'file-info',
        ignoreRect: true,
        ignoreRectUpdate: true,
        write: createRoute({
            DID_LOAD_ITEM: updateFile,
            DID_UPDATE_ITEM_META: updateFile,
            DID_THROW_ITEM_LOAD_ERROR: updateFileSizeOnError,
            DID_THROW_ITEM_INVALID: updateFileSizeOnError,
        }),

        didCreateView: function didCreateView(root) {
            applyFilters('CREATE_VIEW', Object.assign({}, root, { view: root }));
        },
        create: create$2,
        mixins: {
            styles: ['translateX', 'translateY'],
            animations: {
                translateX: 'spring',
                translateY: 'spring',
            },
        },
    });

    var toPercentage = function toPercentage(value) {
        return Math.round(value * 100);
    };

    var create$3 = function create(_ref) {
        var root = _ref.root;

        // main status
        var main = createElement$1('span');
        main.className = 'filepond--file-status-main';
        root.appendChild(main);
        root.ref.main = main;

        // sub status
        var sub = createElement$1('span');
        sub.className = 'filepond--file-status-sub';
        root.appendChild(sub);
        root.ref.sub = sub;

        didSetItemLoadProgress({ root: root, action: { progress: null } });
    };

    var didSetItemLoadProgress = function didSetItemLoadProgress(_ref2) {
        var root = _ref2.root,
            action = _ref2.action;
        var title =
            action.progress === null
                ? root.query('GET_LABEL_FILE_LOADING')
                : root.query('GET_LABEL_FILE_LOADING') + ' ' + toPercentage(action.progress) + '%';

        text(root.ref.main, title);
        text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));
    };

    var didSetItemProcessProgress = function didSetItemProcessProgress(_ref3) {
        var root = _ref3.root,
            action = _ref3.action;
        var title =
            action.progress === null
                ? root.query('GET_LABEL_FILE_PROCESSING')
                : root.query('GET_LABEL_FILE_PROCESSING') +
                  ' ' +
                  toPercentage(action.progress) +
                  '%';

        text(root.ref.main, title);
        text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));
    };

    var didRequestItemProcessing = function didRequestItemProcessing(_ref4) {
        var root = _ref4.root;
        text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING'));
        text(root.ref.sub, root.query('GET_LABEL_TAP_TO_CANCEL'));
    };

    var didAbortItemProcessing = function didAbortItemProcessing(_ref5) {
        var root = _ref5.root;
        text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_ABORTED'));
        text(root.ref.sub, root.query('GET_LABEL_TAP_TO_RETRY'));
    };

    var didCompleteItemProcessing = function didCompleteItemProcessing(_ref6) {
        var root = _ref6.root;
        text(root.ref.main, root.query('GET_LABEL_FILE_PROCESSING_COMPLETE'));
        text(root.ref.sub, root.query('GET_LABEL_TAP_TO_UNDO'));
    };

    var clear = function clear(_ref7) {
        var root = _ref7.root;
        text(root.ref.main, '');
        text(root.ref.sub, '');
    };

    var error = function error(_ref8) {
        var root = _ref8.root,
            action = _ref8.action;
        text(root.ref.main, action.status.main);
        text(root.ref.sub, action.status.sub);
    };

    var fileStatus = createView({
        name: 'file-status',
        ignoreRect: true,
        ignoreRectUpdate: true,
        write: createRoute({
            DID_LOAD_ITEM: clear,
            DID_REVERT_ITEM_PROCESSING: clear,
            DID_REQUEST_ITEM_PROCESSING: didRequestItemProcessing,
            DID_ABORT_ITEM_PROCESSING: didAbortItemProcessing,
            DID_COMPLETE_ITEM_PROCESSING: didCompleteItemProcessing,
            DID_UPDATE_ITEM_PROCESS_PROGRESS: didSetItemProcessProgress,
            DID_UPDATE_ITEM_LOAD_PROGRESS: didSetItemLoadProgress,
            DID_THROW_ITEM_LOAD_ERROR: error,
            DID_THROW_ITEM_INVALID: error,
            DID_THROW_ITEM_PROCESSING_ERROR: error,
            DID_THROW_ITEM_PROCESSING_REVERT_ERROR: error,
            DID_THROW_ITEM_REMOVE_ERROR: error,
        }),

        didCreateView: function didCreateView(root) {
            applyFilters('CREATE_VIEW', Object.assign({}, root, { view: root }));
        },
        create: create$3,
        mixins: {
            styles: ['translateX', 'translateY', 'opacity'],
            animations: {
                opacity: { type: 'tween', duration: 250 },
                translateX: 'spring',
                translateY: 'spring',
            },
        },
    });

    /**
     * Button definitions for the file view
     */

    var Buttons = {
        AbortItemLoad: {
            label: 'GET_LABEL_BUTTON_ABORT_ITEM_LOAD',
            action: 'ABORT_ITEM_LOAD',
            className: 'filepond--action-abort-item-load',
            align: 'LOAD_INDICATOR_POSITION', // right
        },
        RetryItemLoad: {
            label: 'GET_LABEL_BUTTON_RETRY_ITEM_LOAD',
            action: 'RETRY_ITEM_LOAD',
            icon: 'GET_ICON_RETRY',
            className: 'filepond--action-retry-item-load',
            align: 'BUTTON_PROCESS_ITEM_POSITION', // right
        },
        RemoveItem: {
            label: 'GET_LABEL_BUTTON_REMOVE_ITEM',
            action: 'REQUEST_REMOVE_ITEM',
            icon: 'GET_ICON_REMOVE',
            className: 'filepond--action-remove-item',
            align: 'BUTTON_REMOVE_ITEM_POSITION', // left
        },
        ProcessItem: {
            label: 'GET_LABEL_BUTTON_PROCESS_ITEM',
            action: 'REQUEST_ITEM_PROCESSING',
            icon: 'GET_ICON_PROCESS',
            className: 'filepond--action-process-item',
            align: 'BUTTON_PROCESS_ITEM_POSITION', // right
        },
        AbortItemProcessing: {
            label: 'GET_LABEL_BUTTON_ABORT_ITEM_PROCESSING',
            action: 'ABORT_ITEM_PROCESSING',
            className: 'filepond--action-abort-item-processing',
            align: 'BUTTON_PROCESS_ITEM_POSITION', // right
        },
        RetryItemProcessing: {
            label: 'GET_LABEL_BUTTON_RETRY_ITEM_PROCESSING',
            action: 'RETRY_ITEM_PROCESSING',
            icon: 'GET_ICON_RETRY',
            className: 'filepond--action-retry-item-processing',
            align: 'BUTTON_PROCESS_ITEM_POSITION', // right
        },
        RevertItemProcessing: {
            label: 'GET_LABEL_BUTTON_UNDO_ITEM_PROCESSING',
            action: 'REQUEST_REVERT_ITEM_PROCESSING',
            icon: 'GET_ICON_UNDO',
            className: 'filepond--action-revert-item-processing',
            align: 'BUTTON_PROCESS_ITEM_POSITION', // right
        },
    };

    // make a list of buttons, we can then remove buttons from this list if they're disabled
    var ButtonKeys = [];
    forin(Buttons, function(key) {
        ButtonKeys.push(key);
    });

    var calculateFileInfoOffset = function calculateFileInfoOffset(root) {
        if (getRemoveIndicatorAligment(root) === 'right') return 0;
        var buttonRect = root.ref.buttonRemoveItem.rect.element;
        return buttonRect.hidden ? null : buttonRect.width + buttonRect.left;
    };

    var calculateButtonWidth = function calculateButtonWidth(root) {
        var buttonRect = root.ref.buttonAbortItemLoad.rect.element;
        return buttonRect.width;
    };

    // Force on full pixels so text stays crips
    var calculateFileVerticalCenterOffset = function calculateFileVerticalCenterOffset(root) {
        return Math.floor(root.ref.buttonRemoveItem.rect.element.height / 4);
    };
    var calculateFileHorizontalCenterOffset = function calculateFileHorizontalCenterOffset(root) {
        return Math.floor(root.ref.buttonRemoveItem.rect.element.left / 2);
    };

    var getLoadIndicatorAlignment = function getLoadIndicatorAlignment(root) {
        return root.query('GET_STYLE_LOAD_INDICATOR_POSITION');
    };
    var getProcessIndicatorAlignment = function getProcessIndicatorAlignment(root) {
        return root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION');
    };
    var getRemoveIndicatorAligment = function getRemoveIndicatorAligment(root) {
        return root.query('GET_STYLE_BUTTON_REMOVE_ITEM_POSITION');
    };

    var DefaultStyle = {
        buttonAbortItemLoad: { opacity: 0 },
        buttonRetryItemLoad: { opacity: 0 },
        buttonRemoveItem: { opacity: 0 },
        buttonProcessItem: { opacity: 0 },
        buttonAbortItemProcessing: { opacity: 0 },
        buttonRetryItemProcessing: { opacity: 0 },
        buttonRevertItemProcessing: { opacity: 0 },
        loadProgressIndicator: { opacity: 0, align: getLoadIndicatorAlignment },
        processProgressIndicator: { opacity: 0, align: getProcessIndicatorAlignment },
        processingCompleteIndicator: { opacity: 0, scaleX: 0.75, scaleY: 0.75 },
        info: { translateX: 0, translateY: 0, opacity: 0 },
        status: { translateX: 0, translateY: 0, opacity: 0 },
    };

    var IdleStyle = {
        buttonRemoveItem: { opacity: 1 },
        buttonProcessItem: { opacity: 1 },
        info: { translateX: calculateFileInfoOffset },
        status: { translateX: calculateFileInfoOffset },
    };

    var ProcessingStyle = {
        buttonAbortItemProcessing: { opacity: 1 },
        processProgressIndicator: { opacity: 1 },
        status: { opacity: 1 },
    };

    var StyleMap = {
        DID_THROW_ITEM_INVALID: {
            buttonRemoveItem: { opacity: 1 },
            info: { translateX: calculateFileInfoOffset },
            status: { translateX: calculateFileInfoOffset, opacity: 1 },
        },

        DID_START_ITEM_LOAD: {
            buttonAbortItemLoad: { opacity: 1 },
            loadProgressIndicator: { opacity: 1 },
            status: { opacity: 1 },
        },

        DID_THROW_ITEM_LOAD_ERROR: {
            buttonRetryItemLoad: { opacity: 1 },
            buttonRemoveItem: { opacity: 1 },
            info: { translateX: calculateFileInfoOffset },
            status: { opacity: 1 },
        },

        DID_START_ITEM_REMOVE: {
            processProgressIndicator: { opacity: 1, align: getRemoveIndicatorAligment },
            info: { translateX: calculateFileInfoOffset },
            status: { opacity: 0 },
        },

        DID_THROW_ITEM_REMOVE_ERROR: {
            processProgressIndicator: { opacity: 0, align: getRemoveIndicatorAligment },
            buttonRemoveItem: { opacity: 1 },
            info: { translateX: calculateFileInfoOffset },
            status: { opacity: 1, translateX: calculateFileInfoOffset },
        },

        DID_LOAD_ITEM: IdleStyle,
        DID_LOAD_LOCAL_ITEM: {
            buttonRemoveItem: { opacity: 1 },
            info: { translateX: calculateFileInfoOffset },
            status: { translateX: calculateFileInfoOffset },
        },

        DID_START_ITEM_PROCESSING: ProcessingStyle,
        DID_REQUEST_ITEM_PROCESSING: ProcessingStyle,
        DID_UPDATE_ITEM_PROCESS_PROGRESS: ProcessingStyle,
        DID_COMPLETE_ITEM_PROCESSING: {
            buttonRevertItemProcessing: { opacity: 1 },
            info: { opacity: 1 },
            status: { opacity: 1 },
        },

        DID_THROW_ITEM_PROCESSING_ERROR: {
            buttonRemoveItem: { opacity: 1 },
            buttonRetryItemProcessing: { opacity: 1 },
            status: { opacity: 1 },
            info: { translateX: calculateFileInfoOffset },
        },

        DID_THROW_ITEM_PROCESSING_REVERT_ERROR: {
            buttonRevertItemProcessing: { opacity: 1 },
            status: { opacity: 1 },
            info: { opacity: 1 },
        },

        DID_ABORT_ITEM_PROCESSING: {
            buttonRemoveItem: { opacity: 1 },
            buttonProcessItem: { opacity: 1 },
            info: { translateX: calculateFileInfoOffset },
            status: { opacity: 1 },
        },

        DID_REVERT_ITEM_PROCESSING: IdleStyle,
    };

    // complete indicator view
    var processingCompleteIndicatorView = createView({
        create: function create(_ref) {
            var root = _ref.root;
            root.element.innerHTML = root.query('GET_ICON_DONE');
        },
        name: 'processing-complete-indicator',
        ignoreRect: true,
        mixins: {
            styles: ['scaleX', 'scaleY', 'opacity'],
            animations: {
                scaleX: 'spring',
                scaleY: 'spring',
                opacity: { type: 'tween', duration: 250 },
            },
        },
    });

    /**
     * Creates the file view
     */
    var create$4 = function create(_ref2) {
        var root = _ref2.root,
            props = _ref2.props;
        // copy Buttons object
        var LocalButtons = Object.keys(Buttons).reduce(function(prev, curr) {
            prev[curr] = Object.assign({}, Buttons[curr]);
            return prev;
        }, {});
        var id = props.id;

        // allow reverting upload
        var allowRevert = root.query('GET_ALLOW_REVERT');

        // allow remove file
        var allowRemove = root.query('GET_ALLOW_REMOVE');

        // allow processing upload
        var allowProcess = root.query('GET_ALLOW_PROCESS');

        // is instant uploading, need this to determine the icon of the undo button
        var instantUpload = root.query('GET_INSTANT_UPLOAD');

        // is async set up
        var isAsync = root.query('IS_ASYNC');

        // should align remove item buttons
        var alignRemoveItemButton = root.query('GET_STYLE_BUTTON_REMOVE_ITEM_ALIGN');

        // enabled buttons array
        var buttonFilter;
        if (isAsync) {
            if (allowProcess && !allowRevert) {
                // only remove revert button
                buttonFilter = function buttonFilter(key) {
                    return !/RevertItemProcessing/.test(key);
                };
            } else if (!allowProcess && allowRevert) {
                // only remove process button
                buttonFilter = function buttonFilter(key) {
                    return !/ProcessItem|RetryItemProcessing|AbortItemProcessing/.test(key);
                };
            } else if (!allowProcess && !allowRevert) {
                // remove all process buttons
                buttonFilter = function buttonFilter(key) {
                    return !/Process/.test(key);
                };
            }
        } else {
            // no process controls available
            buttonFilter = function buttonFilter(key) {
                return !/Process/.test(key);
            };
        }

        var enabledButtons = buttonFilter ? ButtonKeys.filter(buttonFilter) : ButtonKeys.concat();

        // update icon and label for revert button when instant uploading
        if (instantUpload && allowRevert) {
            LocalButtons['RevertItemProcessing'].label = 'GET_LABEL_BUTTON_REMOVE_ITEM';
            LocalButtons['RevertItemProcessing'].icon = 'GET_ICON_REMOVE';
        }

        // remove last button (revert) if not allowed
        if (isAsync && !allowRevert) {
            var map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];
            map.info.translateX = calculateFileHorizontalCenterOffset;
            map.info.translateY = calculateFileVerticalCenterOffset;
            map.status.translateY = calculateFileVerticalCenterOffset;
            map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };
        }

        // should align center
        if (isAsync && !allowProcess) {
            [
                'DID_START_ITEM_PROCESSING',
                'DID_REQUEST_ITEM_PROCESSING',
                'DID_UPDATE_ITEM_PROCESS_PROGRESS',
                'DID_THROW_ITEM_PROCESSING_ERROR',
            ].forEach(function(key) {
                StyleMap[key].status.translateY = calculateFileVerticalCenterOffset;
            });
            StyleMap['DID_THROW_ITEM_PROCESSING_ERROR'].status.translateX = calculateButtonWidth;
        }

        // move remove button to right
        if (alignRemoveItemButton && allowRevert) {
            LocalButtons['RevertItemProcessing'].align = 'BUTTON_REMOVE_ITEM_POSITION';
            var _map = StyleMap['DID_COMPLETE_ITEM_PROCESSING'];
            _map.info.translateX = calculateFileInfoOffset;
            _map.status.translateY = calculateFileVerticalCenterOffset;
            _map.processingCompleteIndicator = { opacity: 1, scaleX: 1, scaleY: 1 };
        }

        // show/hide RemoveItem button
        if (!allowRemove) {
            LocalButtons['RemoveItem'].disabled = true;
        }

        // create the button views
        forin(LocalButtons, function(key, definition) {
            // create button
            var buttonView = root.createChildView(fileActionButton, {
                label: root.query(definition.label),
                icon: root.query(definition.icon),
                opacity: 0,
            });

            // should be appended?
            if (enabledButtons.includes(key)) {
                root.appendChildView(buttonView);
            }

            // toggle
            if (definition.disabled) {
                buttonView.element.setAttribute('disabled', 'disabled');
                buttonView.element.setAttribute('hidden', 'hidden');
            }

            // add position attribute
            buttonView.element.dataset.align = root.query('GET_STYLE_' + definition.align);

            // add class
            buttonView.element.classList.add(definition.className);

            // handle interactions
            buttonView.on('click', function(e) {
                e.stopPropagation();
                if (definition.disabled) return;
                root.dispatch(definition.action, { query: id });
            });

            // set reference
            root.ref['button' + key] = buttonView;
        });

        // checkmark
        root.ref.processingCompleteIndicator = root.appendChildView(
            root.createChildView(processingCompleteIndicatorView)
        );

        root.ref.processingCompleteIndicator.element.dataset.align = root.query(
            'GET_STYLE_BUTTON_PROCESS_ITEM_POSITION'
        );

        // create file info view
        root.ref.info = root.appendChildView(root.createChildView(fileInfo, { id: id }));

        // create file status view
        root.ref.status = root.appendChildView(root.createChildView(fileStatus, { id: id }));

        // add progress indicators
        var loadIndicatorView = root.appendChildView(
            root.createChildView(progressIndicator, {
                opacity: 0,
                align: root.query('GET_STYLE_LOAD_INDICATOR_POSITION'),
            })
        );

        loadIndicatorView.element.classList.add('filepond--load-indicator');
        root.ref.loadProgressIndicator = loadIndicatorView;

        var progressIndicatorView = root.appendChildView(
            root.createChildView(progressIndicator, {
                opacity: 0,
                align: root.query('GET_STYLE_PROGRESS_INDICATOR_POSITION'),
            })
        );

        progressIndicatorView.element.classList.add('filepond--process-indicator');
        root.ref.processProgressIndicator = progressIndicatorView;

        // current active styles
        root.ref.activeStyles = [];
    };

    var write$2 = function write(_ref3) {
        var root = _ref3.root,
            actions = _ref3.actions,
            props = _ref3.props;
        // route actions
        route({ root: root, actions: actions, props: props });

        // select last state change action
        var action = actions
            .concat()
            .filter(function(action) {
                return /^DID_/.test(action.type);
            })
            .reverse()
            .find(function(action) {
                return StyleMap[action.type];
            });

        // a new action happened, let's get the matching styles
        if (action) {
            // define new active styles
            root.ref.activeStyles = [];

            var stylesToApply = StyleMap[action.type];
            forin(DefaultStyle, function(name, defaultStyles) {
                // get reference to control
                var control = root.ref[name];

                // loop over all styles for this control
                forin(defaultStyles, function(key, defaultValue) {
                    var value =
                        stylesToApply[name] && typeof stylesToApply[name][key] !== 'undefined'
                            ? stylesToApply[name][key]
                            : defaultValue;
                    root.ref.activeStyles.push({ control: control, key: key, value: value });
                });
            });
        }

        // apply active styles to element
        root.ref.activeStyles.forEach(function(_ref4) {
            var control = _ref4.control,
                key = _ref4.key,
                value = _ref4.value;
            control[key] = typeof value === 'function' ? value(root) : value;
        });
    };

    var route = createRoute({
        DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING: function DID_SET_LABEL_BUTTON_ABORT_ITEM_PROCESSING(
            _ref5
        ) {
            var root = _ref5.root,
                action = _ref5.action;
            root.ref.buttonAbortItemProcessing.label = action.value;
        },
        DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD: function DID_SET_LABEL_BUTTON_ABORT_ITEM_LOAD(_ref6) {
            var root = _ref6.root,
                action = _ref6.action;
            root.ref.buttonAbortItemLoad.label = action.value;
        },
        DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL: function DID_SET_LABEL_BUTTON_ABORT_ITEM_REMOVAL(
            _ref7
        ) {
            var root = _ref7.root,
                action = _ref7.action;
            root.ref.buttonAbortItemRemoval.label = action.value;
        },
        DID_REQUEST_ITEM_PROCESSING: function DID_REQUEST_ITEM_PROCESSING(_ref8) {
            var root = _ref8.root;
            root.ref.processProgressIndicator.spin = true;
            root.ref.processProgressIndicator.progress = 0;
        },
        DID_START_ITEM_LOAD: function DID_START_ITEM_LOAD(_ref9) {
            var root = _ref9.root;
            root.ref.loadProgressIndicator.spin = true;
            root.ref.loadProgressIndicator.progress = 0;
        },
        DID_START_ITEM_REMOVE: function DID_START_ITEM_REMOVE(_ref10) {
            var root = _ref10.root;
            root.ref.processProgressIndicator.spin = true;
            root.ref.processProgressIndicator.progress = 0;
        },
        DID_UPDATE_ITEM_LOAD_PROGRESS: function DID_UPDATE_ITEM_LOAD_PROGRESS(_ref11) {
            var root = _ref11.root,
                action = _ref11.action;
            root.ref.loadProgressIndicator.spin = false;
            root.ref.loadProgressIndicator.progress = action.progress;
        },
        DID_UPDATE_ITEM_PROCESS_PROGRESS: function DID_UPDATE_ITEM_PROCESS_PROGRESS(_ref12) {
            var root = _ref12.root,
                action = _ref12.action;
            root.ref.processProgressIndicator.spin = false;
            root.ref.processProgressIndicator.progress = action.progress;
        },
    });

    var file = createView({
        create: create$4,
        write: write$2,
        didCreateView: function didCreateView(root) {
            applyFilters('CREATE_VIEW', Object.assign({}, root, { view: root }));
        },
        name: 'file',
    });

    /**
     * Creates the file view
     */
    var create$5 = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;

        // filename
        root.ref.fileName = createElement$1('legend');
        root.appendChild(root.ref.fileName);

        // file appended
        root.ref.file = root.appendChildView(root.createChildView(file, { id: props.id }));

        // data has moved to data.js
        root.ref.data = false;
    };

    /**
     * Data storage
     */
    var didLoadItem = function didLoadItem(_ref2) {
        var root = _ref2.root,
            props = _ref2.props;
        // updates the legend of the fieldset so screenreaders can better group buttons
        text(root.ref.fileName, formatFilename(root.query('GET_ITEM_NAME', props.id)));
    };

    var fileWrapper = createView({
        create: create$5,
        ignoreRect: true,
        write: createRoute({
            DID_LOAD_ITEM: didLoadItem,
        }),

        didCreateView: function didCreateView(root) {
            applyFilters('CREATE_VIEW', Object.assign({}, root, { view: root }));
        },
        tag: 'fieldset',
        name: 'file-wrapper',
    });

    var PANEL_SPRING_PROPS = { type: 'spring', damping: 0.6, mass: 7 };

    var create$6 = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;
        [
            {
                name: 'top',
            },

            {
                name: 'center',
                props: {
                    translateY: null,
                    scaleY: null,
                },

                mixins: {
                    animations: {
                        scaleY: PANEL_SPRING_PROPS,
                    },

                    styles: ['translateY', 'scaleY'],
                },
            },

            {
                name: 'bottom',
                props: {
                    translateY: null,
                },

                mixins: {
                    animations: {
                        translateY: PANEL_SPRING_PROPS,
                    },

                    styles: ['translateY'],
                },
            },
        ].forEach(function(section) {
            createSection(root, section, props.name);
        });

        root.element.classList.add('filepond--' + props.name);

        root.ref.scalable = null;
    };

    var createSection = function createSection(root, section, className) {
        var viewConstructor = createView({
            name: 'panel-' + section.name + ' filepond--' + className,
            mixins: section.mixins,
            ignoreRectUpdate: true,
        });

        var view = root.createChildView(viewConstructor, section.props);

        root.ref[section.name] = root.appendChildView(view);
    };

    var write$3 = function write(_ref2) {
        var root = _ref2.root,
            props = _ref2.props;

        // update scalable state
        if (root.ref.scalable === null || props.scalable !== root.ref.scalable) {
            root.ref.scalable = isBoolean(props.scalable) ? props.scalable : true;
            root.element.dataset.scalable = root.ref.scalable;
        }

        // no height, can't set
        if (!props.height) return;

        // get child rects
        var topRect = root.ref.top.rect.element;
        var bottomRect = root.ref.bottom.rect.element;

        // make sure height never is smaller than bottom and top seciton heights combined (will probably never happen, but who knows)
        var height = Math.max(topRect.height + bottomRect.height, props.height);

        // offset center part
        root.ref.center.translateY = topRect.height;

        // scale center part
        // use math ceil to prevent transparent lines because of rounding errors
        root.ref.center.scaleY = (height - topRect.height - bottomRect.height) / 100;

        // offset bottom part
        root.ref.bottom.translateY = height - bottomRect.height;
    };

    var panel = createView({
        name: 'panel',
        read: function read(_ref3) {
            var root = _ref3.root,
                props = _ref3.props;
            return (props.heightCurrent = root.ref.bottom.translateY);
        },
        write: write$3,
        create: create$6,
        ignoreRect: true,
        mixins: {
            apis: ['height', 'heightCurrent', 'scalable'],
        },
    });

    var createDragHelper = function createDragHelper(items) {
        var itemIds = items.map(function(item) {
            return item.id;
        });
        var prevIndex = undefined;
        return {
            setIndex: function setIndex(index) {
                prevIndex = index;
            },
            getIndex: function getIndex() {
                return prevIndex;
            },
            getItemIndex: function getItemIndex(item) {
                return itemIds.indexOf(item.id);
            },
        };
    };

    var ITEM_TRANSLATE_SPRING = {
        type: 'spring',
        stiffness: 0.75,
        damping: 0.45,
        mass: 10,
    };

    var ITEM_SCALE_SPRING = 'spring';

    var StateMap = {
        DID_START_ITEM_LOAD: 'busy',
        DID_UPDATE_ITEM_LOAD_PROGRESS: 'loading',
        DID_THROW_ITEM_INVALID: 'load-invalid',
        DID_THROW_ITEM_LOAD_ERROR: 'load-error',
        DID_LOAD_ITEM: 'idle',
        DID_THROW_ITEM_REMOVE_ERROR: 'remove-error',
        DID_START_ITEM_REMOVE: 'busy',
        DID_START_ITEM_PROCESSING: 'busy processing',
        DID_REQUEST_ITEM_PROCESSING: 'busy processing',
        DID_UPDATE_ITEM_PROCESS_PROGRESS: 'processing',
        DID_COMPLETE_ITEM_PROCESSING: 'processing-complete',
        DID_THROW_ITEM_PROCESSING_ERROR: 'processing-error',
        DID_THROW_ITEM_PROCESSING_REVERT_ERROR: 'processing-revert-error',
        DID_ABORT_ITEM_PROCESSING: 'cancelled',
        DID_REVERT_ITEM_PROCESSING: 'idle',
    };

    /**
     * Creates the file view
     */
    var create$7 = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;

        // select
        root.ref.handleClick = function(e) {
            return root.dispatch('DID_ACTIVATE_ITEM', { id: props.id });
        };

        // set id
        root.element.id = 'filepond--item-' + props.id;
        root.element.addEventListener('click', root.ref.handleClick);

        // file view
        root.ref.container = root.appendChildView(
            root.createChildView(fileWrapper, { id: props.id })
        );

        // file panel
        root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'item-panel' }));

        // default start height
        root.ref.panel.height = null;

        // by default not marked for removal
        props.markedForRemoval = false;

        // if not allowed to reorder file items, exit here
        if (!root.query('GET_ALLOW_REORDER')) return;

        // set to idle so shows grab cursor
        root.element.dataset.dragState = 'idle';

        var grab = function grab(e) {
            if (!e.isPrimary) return;

            var removedActivateListener = false;

            var origin = {
                x: e.pageX,
                y: e.pageY,
            };

            props.dragOrigin = {
                x: root.translateX,
                y: root.translateY,
            };

            props.dragCenter = {
                x: e.offsetX,
                y: e.offsetY,
            };

            var dragState = createDragHelper(root.query('GET_ACTIVE_ITEMS'));

            root.dispatch('DID_GRAB_ITEM', { id: props.id, dragState: dragState });

            var drag = function drag(e) {
                if (!e.isPrimary) return;

                e.stopPropagation();
                e.preventDefault();

                props.dragOffset = {
                    x: e.pageX - origin.x,
                    y: e.pageY - origin.y,
                };

                // if dragged stop listening to clicks, will re-add when done dragging
                var dist =
                    props.dragOffset.x * props.dragOffset.x +
                    props.dragOffset.y * props.dragOffset.y;
                if (dist > 16 && !removedActivateListener) {
                    removedActivateListener = true;
                    root.element.removeEventListener('click', root.ref.handleClick);
                }

                root.dispatch('DID_DRAG_ITEM', { id: props.id, dragState: dragState });
            };

            var drop = function drop(e) {
                if (!e.isPrimary) return;

                document.removeEventListener('pointermove', drag);
                document.removeEventListener('pointerup', drop);

                props.dragOffset = {
                    x: e.pageX - origin.x,
                    y: e.pageY - origin.y,
                };

                root.dispatch('DID_DROP_ITEM', { id: props.id, dragState: dragState });

                // start listening to clicks again
                if (removedActivateListener) {
                    setTimeout(function() {
                        return root.element.addEventListener('click', root.ref.handleClick);
                    }, 0);
                }
            };

            document.addEventListener('pointermove', drag);
            document.addEventListener('pointerup', drop);
        };

        root.element.addEventListener('pointerdown', grab);
    };

    var route$1 = createRoute({
        DID_UPDATE_PANEL_HEIGHT: function DID_UPDATE_PANEL_HEIGHT(_ref2) {
            var root = _ref2.root,
                action = _ref2.action;
            root.height = action.height;
        },
    });

    var write$4 = createRoute(
        {
            DID_GRAB_ITEM: function DID_GRAB_ITEM(_ref3) {
                var root = _ref3.root,
                    props = _ref3.props;
                props.dragOrigin = {
                    x: root.translateX,
                    y: root.translateY,
                };
            },
            DID_DRAG_ITEM: function DID_DRAG_ITEM(_ref4) {
                var root = _ref4.root;
                root.element.dataset.dragState = 'drag';
            },
            DID_DROP_ITEM: function DID_DROP_ITEM(_ref5) {
                var root = _ref5.root,
                    props = _ref5.props;
                props.dragOffset = null;
                props.dragOrigin = null;
                root.element.dataset.dragState = 'drop';
            },
        },
        function(_ref6) {
            var root = _ref6.root,
                actions = _ref6.actions,
                props = _ref6.props,
                shouldOptimize = _ref6.shouldOptimize;

            if (root.element.dataset.dragState === 'drop') {
                if (root.scaleX <= 1) {
                    root.element.dataset.dragState = 'idle';
                }
            }

            // select last state change action
            var action = actions
                .concat()
                .filter(function(action) {
                    return /^DID_/.test(action.type);
                })
                .reverse()
                .find(function(action) {
                    return StateMap[action.type];
                });

            // no need to set same state twice
            if (action && action.type !== props.currentState) {
                // set current state
                props.currentState = action.type;

                // set state
                root.element.dataset.filepondItemState = StateMap[props.currentState] || '';
            }

            // route actions
            var aspectRatio =
                root.query('GET_ITEM_PANEL_ASPECT_RATIO') || root.query('GET_PANEL_ASPECT_RATIO');
            if (!aspectRatio) {
                route$1({ root: root, actions: actions, props: props });
                if (!root.height && root.ref.container.rect.element.height > 0) {
                    root.height = root.ref.container.rect.element.height;
                }
            } else if (!shouldOptimize) {
                root.height = root.rect.element.width * aspectRatio;
            }

            // sync panel height with item height
            if (shouldOptimize) {
                root.ref.panel.height = null;
            }

            root.ref.panel.height = root.height;
        }
    );

    var item = createView({
        create: create$7,
        write: write$4,
        destroy: function destroy(_ref7) {
            var root = _ref7.root,
                props = _ref7.props;
            root.element.removeEventListener('click', root.ref.handleClick);
            root.dispatch('RELEASE_ITEM', { query: props.id });
        },
        tag: 'li',
        name: 'item',
        mixins: {
            apis: [
                'id',
                'interactionMethod',
                'markedForRemoval',
                'spawnDate',
                'dragCenter',
                'dragOrigin',
                'dragOffset',
            ],
            styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity', 'height'],

            animations: {
                scaleX: ITEM_SCALE_SPRING,
                scaleY: ITEM_SCALE_SPRING,
                translateX: ITEM_TRANSLATE_SPRING,
                translateY: ITEM_TRANSLATE_SPRING,
                opacity: { type: 'tween', duration: 150 },
            },
        },
    });

    var getItemsPerRow = function(horizontalSpace, itemWidth) {
        // add one pixel leeway, when using percentages for item width total items can be 1.99 per row

        return Math.max(1, Math.floor((horizontalSpace + 1) / itemWidth));
    };

    var getItemIndexByPosition = function getItemIndexByPosition(view, children, positionInView) {
        if (!positionInView) return;

        var horizontalSpace = view.rect.element.width;
        // const children = view.childViews;
        var l = children.length;
        var last = null;

        // -1, don't move items to accomodate (either add to top or bottom)
        if (l === 0 || positionInView.top < children[0].rect.element.top) return -1;

        // let's get the item width
        var item = children[0];
        var itemRect = item.rect.element;
        var itemHorizontalMargin = itemRect.marginLeft + itemRect.marginRight;
        var itemWidth = itemRect.width + itemHorizontalMargin;
        var itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);

        // stack
        if (itemsPerRow === 1) {
            for (var index = 0; index < l; index++) {
                var child = children[index];
                var childMid = child.rect.outer.top + child.rect.element.height * 0.5;
                if (positionInView.top < childMid) {
                    return index;
                }
            }
            return l;
        }

        // grid
        var itemVerticalMargin = itemRect.marginTop + itemRect.marginBottom;
        var itemHeight = itemRect.height + itemVerticalMargin;
        for (var _index = 0; _index < l; _index++) {
            var indexX = _index % itemsPerRow;
            var indexY = Math.floor(_index / itemsPerRow);

            var offsetX = indexX * itemWidth;
            var offsetY = indexY * itemHeight;

            var itemTop = offsetY - itemRect.marginTop;
            var itemRight = offsetX + itemWidth;
            var itemBottom = offsetY + itemHeight + itemRect.marginBottom;

            if (positionInView.top < itemBottom && positionInView.top > itemTop) {
                if (positionInView.left < itemRight) {
                    return _index;
                } else if (_index !== l - 1) {
                    last = _index;
                } else {
                    last = null;
                }
            }
        }

        if (last !== null) {
            return last;
        }

        return l;
    };

    var dropAreaDimensions = {
        height: 0,
        width: 0,
        get getHeight() {
            return this.height;
        },
        set setHeight(val) {
            if (this.height === 0 || val === 0) this.height = val;
        },
        get getWidth() {
            return this.width;
        },
        set setWidth(val) {
            if (this.width === 0 || val === 0) this.width = val;
        },
        setDimensions: function setDimensions(height, width) {
            if (this.height === 0 || height === 0) this.height = height;
            if (this.width === 0 || width === 0) this.width = width;
        },
    };

    var create$8 = function create(_ref) {
        var root = _ref.root;
        // need to set role to list as otherwise it won't be read as a list by VoiceOver
        attr(root.element, 'role', 'list');

        root.ref.lastItemSpanwDate = Date.now();
    };

    /**
     * Inserts a new item
     * @param root
     * @param action
     */
    var addItemView = function addItemView(_ref2) {
        var root = _ref2.root,
            action = _ref2.action;
        var id = action.id,
            index = action.index,
            interactionMethod = action.interactionMethod;

        root.ref.addIndex = index;

        var now = Date.now();
        var spawnDate = now;
        var opacity = 1;

        if (interactionMethod !== InteractionMethod.NONE) {
            opacity = 0;
            var cooldown = root.query('GET_ITEM_INSERT_INTERVAL');
            var dist = now - root.ref.lastItemSpanwDate;
            spawnDate = dist < cooldown ? now + (cooldown - dist) : now;
        }

        root.ref.lastItemSpanwDate = spawnDate;

        root.appendChildView(
            root.createChildView(
                // view type
                item,

                // props
                {
                    spawnDate: spawnDate,
                    id: id,
                    opacity: opacity,
                    interactionMethod: interactionMethod,
                }
            ),

            index
        );
    };

    var moveItem = function moveItem(item, x, y) {
        var vx = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        var vy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
        // set to null to remove animation while dragging
        if (item.dragOffset) {
            item.translateX = null;
            item.translateY = null;
            item.translateX = item.dragOrigin.x + item.dragOffset.x;
            item.translateY = item.dragOrigin.y + item.dragOffset.y;
            item.scaleX = 1.025;
            item.scaleY = 1.025;
        } else {
            item.translateX = x;
            item.translateY = y;

            if (Date.now() > item.spawnDate) {
                // reveal element
                if (item.opacity === 0) {
                    introItemView(item, x, y, vx, vy);
                }

                // make sure is default scale every frame
                item.scaleX = 1;
                item.scaleY = 1;
                item.opacity = 1;
            }
        }
    };

    var introItemView = function introItemView(item, x, y, vx, vy) {
        if (item.interactionMethod === InteractionMethod.NONE) {
            item.translateX = null;
            item.translateX = x;
            item.translateY = null;
            item.translateY = y;
        } else if (item.interactionMethod === InteractionMethod.DROP) {
            item.translateX = null;
            item.translateX = x - vx * 20;

            item.translateY = null;
            item.translateY = y - vy * 10;

            item.scaleX = 0.8;
            item.scaleY = 0.8;
        } else if (item.interactionMethod === InteractionMethod.BROWSE) {
            item.translateY = null;
            item.translateY = y - 30;
        } else if (item.interactionMethod === InteractionMethod.API) {
            item.translateX = null;
            item.translateX = x - 30;
            item.translateY = null;
        }
    };

    /**
     * Removes an existing item
     * @param root
     * @param action
     */
    var removeItemView = function removeItemView(_ref3) {
        var root = _ref3.root,
            action = _ref3.action;
        var id = action.id;

        // get the view matching the given id
        var view = root.childViews.find(function(child) {
            return child.id === id;
        });

        // if no view found, exit
        if (!view) {
            return;
        }

        // animate view out of view
        view.scaleX = 0.9;
        view.scaleY = 0.9;
        view.opacity = 0;

        // mark for removal
        view.markedForRemoval = true;
    };

    var getItemHeight = function getItemHeight(child) {
        return (
            child.rect.element.height +
            child.rect.element.marginBottom * 0.5 +
            child.rect.element.marginTop * 0.5
        );
    };
    var getItemWidth = function getItemWidth(child) {
        return (
            child.rect.element.width +
            child.rect.element.marginLeft * 0.5 +
            child.rect.element.marginRight * 0.5
        );
    };

    var dragItem = function dragItem(_ref4) {
        var root = _ref4.root,
            action = _ref4.action;
        var id = action.id,
            dragState = action.dragState;

        // reference to item
        var item = root.query('GET_ITEM', { id: id });

        // get the view matching the given id
        var view = root.childViews.find(function(child) {
            return child.id === id;
        });

        var numItems = root.childViews.length;
        var oldIndex = dragState.getItemIndex(item);

        // if no view found, exit
        if (!view) return;

        var dragPosition = {
            x: view.dragOrigin.x + view.dragOffset.x + view.dragCenter.x,
            y: view.dragOrigin.y + view.dragOffset.y + view.dragCenter.y,
        };

        // get drag area dimensions
        var dragHeight = getItemHeight(view);
        var dragWidth = getItemWidth(view);

        // get rows and columns (There will always be at least one row and one column if a file is present)
        var cols = Math.floor(root.rect.outer.width / dragWidth);
        if (cols > numItems) cols = numItems;

        // rows are used to find when we have left the preview area bounding box
        var rows = Math.floor(numItems / cols + 1);

        dropAreaDimensions.setHeight = dragHeight * rows;
        dropAreaDimensions.setWidth = dragWidth * cols;

        // get new index of dragged item
        var location = {
            y: Math.floor(dragPosition.y / dragHeight),
            x: Math.floor(dragPosition.x / dragWidth),
            getGridIndex: function getGridIndex() {
                if (
                    dragPosition.y > dropAreaDimensions.getHeight ||
                    dragPosition.y < 0 ||
                    dragPosition.x > dropAreaDimensions.getWidth ||
                    dragPosition.x < 0
                )
                    return oldIndex;
                return this.y * cols + this.x;
            },
            getColIndex: function getColIndex() {
                var items = root.query('GET_ACTIVE_ITEMS');
                var visibleChildren = root.childViews.filter(function(child) {
                    return child.rect.element.height;
                });
                var children = items.map(function(item) {
                    return visibleChildren.find(function(childView) {
                        return childView.id === item.id;
                    });
                });

                var currentIndex = children.findIndex(function(child) {
                    return child === view;
                });
                var dragHeight = getItemHeight(view);
                var l = children.length;
                var idx = l;
                var childHeight = 0;
                var childBottom = 0;
                var childTop = 0;
                for (var i = 0; i < l; i++) {
                    childHeight = getItemHeight(children[i]);
                    childTop = childBottom;
                    childBottom = childTop + childHeight;
                    if (dragPosition.y < childBottom) {
                        if (currentIndex > i) {
                            if (dragPosition.y < childTop + dragHeight) {
                                idx = i;
                                break;
                            }
                            continue;
                        }
                        idx = i;
                        break;
                    }
                }
                return idx;
            },
        };

        // get new index
        var index = cols > 1 ? location.getGridIndex() : location.getColIndex();
        root.dispatch('MOVE_ITEM', { query: view, index: index });

        // if the index of the item changed, dispatch reorder action
        var currentIndex = dragState.getIndex();

        if (currentIndex === undefined || currentIndex !== index) {
            dragState.setIndex(index);

            if (currentIndex === undefined) return;

            root.dispatch('DID_REORDER_ITEMS', {
                items: root.query('GET_ACTIVE_ITEMS'),
                origin: oldIndex,
                target: index,
            });
        }
    };

    /**
     * Setup action routes
     */
    var route$2 = createRoute({
        DID_ADD_ITEM: addItemView,
        DID_REMOVE_ITEM: removeItemView,
        DID_DRAG_ITEM: dragItem,
    });

    /**
     * Write to view
     * @param root
     * @param actions
     * @param props
     */
    var write$5 = function write(_ref5) {
        var root = _ref5.root,
            props = _ref5.props,
            actions = _ref5.actions,
            shouldOptimize = _ref5.shouldOptimize;
        // route actions
        route$2({ root: root, props: props, actions: actions });
        var dragCoordinates = props.dragCoordinates;

        // available space on horizontal axis
        var horizontalSpace = root.rect.element.width;

        // only draw children that have dimensions
        var visibleChildren = root.childViews.filter(function(child) {
            return child.rect.element.height;
        });

        // sort based on current active items
        var children = root
            .query('GET_ACTIVE_ITEMS')
            .map(function(item) {
                return visibleChildren.find(function(child) {
                    return child.id === item.id;
                });
            })
            .filter(function(item) {
                return item;
            });

        // get index
        var dragIndex = dragCoordinates
            ? getItemIndexByPosition(root, children, dragCoordinates)
            : null;

        // add index is used to reserve the dropped/added item index till the actual item is rendered
        var addIndex = root.ref.addIndex || null;

        // add index no longer needed till possibly next draw
        root.ref.addIndex = null;

        var dragIndexOffset = 0;
        var removeIndexOffset = 0;
        var addIndexOffset = 0;

        if (children.length === 0) return;

        var childRect = children[0].rect.element;
        var itemVerticalMargin = childRect.marginTop + childRect.marginBottom;
        var itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;
        var itemWidth = childRect.width + itemHorizontalMargin;
        var itemHeight = childRect.height + itemVerticalMargin;
        var itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);

        // stack
        if (itemsPerRow === 1) {
            var offsetY = 0;
            var dragOffset = 0;

            children.forEach(function(child, index) {
                if (dragIndex) {
                    var dist = index - dragIndex;
                    if (dist === -2) {
                        dragOffset = -itemVerticalMargin * 0.25;
                    } else if (dist === -1) {
                        dragOffset = -itemVerticalMargin * 0.75;
                    } else if (dist === 0) {
                        dragOffset = itemVerticalMargin * 0.75;
                    } else if (dist === 1) {
                        dragOffset = itemVerticalMargin * 0.25;
                    } else {
                        dragOffset = 0;
                    }
                }

                if (shouldOptimize) {
                    child.translateX = null;
                    child.translateY = null;
                }

                if (!child.markedForRemoval) {
                    moveItem(child, 0, offsetY + dragOffset);
                }

                var itemHeight = child.rect.element.height + itemVerticalMargin;

                var visualHeight = itemHeight * (child.markedForRemoval ? child.opacity : 1);

                offsetY += visualHeight;
            });
        }
        // grid
        else {
            var prevX = 0;
            var prevY = 0;

            children.forEach(function(child, index) {
                if (index === dragIndex) {
                    dragIndexOffset = 1;
                }

                if (index === addIndex) {
                    addIndexOffset += 1;
                }

                if (child.markedForRemoval && child.opacity < 0.5) {
                    removeIndexOffset -= 1;
                }

                var visualIndex = index + addIndexOffset + dragIndexOffset + removeIndexOffset;

                var indexX = visualIndex % itemsPerRow;
                var indexY = Math.floor(visualIndex / itemsPerRow);

                var offsetX = indexX * itemWidth;
                var offsetY = indexY * itemHeight;

                var vectorX = Math.sign(offsetX - prevX);
                var vectorY = Math.sign(offsetY - prevY);

                prevX = offsetX;
                prevY = offsetY;

                if (child.markedForRemoval) return;

                if (shouldOptimize) {
                    child.translateX = null;
                    child.translateY = null;
                }

                moveItem(child, offsetX, offsetY, vectorX, vectorY);
            });
        }
    };

    /**
     * Filters actions that are meant specifically for a certain child of the list
     * @param child
     * @param actions
     */
    var filterSetItemActions = function filterSetItemActions(child, actions) {
        return actions.filter(function(action) {
            // if action has an id, filter out actions that don't have this child id
            if (action.data && action.data.id) {
                return child.id === action.data.id;
            }

            // allow all other actions
            return true;
        });
    };

    var list = createView({
        create: create$8,
        write: write$5,
        tag: 'ul',
        name: 'list',
        didWriteView: function didWriteView(_ref6) {
            var root = _ref6.root;
            root.childViews
                .filter(function(view) {
                    return view.markedForRemoval && view.opacity === 0 && view.resting;
                })
                .forEach(function(view) {
                    view._destroy();
                    root.removeChildView(view);
                });
        },
        filterFrameActionsForChild: filterSetItemActions,
        mixins: {
            apis: ['dragCoordinates'],
        },
    });

    var create$9 = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;
        root.ref.list = root.appendChildView(root.createChildView(list));
        props.dragCoordinates = null;
        props.overflowing = false;
    };

    var storeDragCoordinates = function storeDragCoordinates(_ref2) {
        var root = _ref2.root,
            props = _ref2.props,
            action = _ref2.action;
        if (!root.query('GET_ITEM_INSERT_LOCATION_FREEDOM')) return;
        props.dragCoordinates = {
            left: action.position.scopeLeft - root.ref.list.rect.element.left,
            top:
                action.position.scopeTop -
                (root.rect.outer.top + root.rect.element.marginTop + root.rect.element.scrollTop),
        };
    };

    var clearDragCoordinates = function clearDragCoordinates(_ref3) {
        var props = _ref3.props;
        props.dragCoordinates = null;
    };

    var route$3 = createRoute({
        DID_DRAG: storeDragCoordinates,
        DID_END_DRAG: clearDragCoordinates,
    });

    var write$6 = function write(_ref4) {
        var root = _ref4.root,
            props = _ref4.props,
            actions = _ref4.actions;

        // route actions
        route$3({ root: root, props: props, actions: actions });

        // current drag position
        root.ref.list.dragCoordinates = props.dragCoordinates;

        // if currently overflowing but no longer received overflow
        if (props.overflowing && !props.overflow) {
            props.overflowing = false;

            // reset overflow state
            root.element.dataset.state = '';
            root.height = null;
        }

        // if is not overflowing currently but does receive overflow value
        if (props.overflow) {
            var newHeight = Math.round(props.overflow);
            if (newHeight !== root.height) {
                props.overflowing = true;
                root.element.dataset.state = 'overflow';
                root.height = newHeight;
            }
        }
    };

    var listScroller = createView({
        create: create$9,
        write: write$6,
        name: 'list-scroller',
        mixins: {
            apis: ['overflow', 'dragCoordinates'],
            styles: ['height', 'translateY'],
            animations: {
                translateY: 'spring',
            },
        },
    });

    var attrToggle = function attrToggle(element, name, state) {
        var enabledValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
        if (state) {
            attr(element, name, enabledValue);
        } else {
            element.removeAttribute(name);
        }
    };

    var resetFileInput = function resetFileInput(input) {
        // no value, no need to reset
        if (!input || input.value === '') {
            return;
        }

        try {
            // for modern browsers
            input.value = '';
        } catch (err) {}

        // for IE10
        if (input.value) {
            // quickly append input to temp form and reset form
            var form = createElement$1('form');
            var parentNode = input.parentNode;
            var ref = input.nextSibling;
            form.appendChild(input);
            form.reset();

            // re-inject input where it originally was
            if (ref) {
                parentNode.insertBefore(input, ref);
            } else {
                parentNode.appendChild(input);
            }
        }
    };

    var create$a = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;

        // set id so can be referenced from outside labels
        root.element.id = 'filepond--browser-' + props.id;

        // set name of element (is removed when a value is set)
        attr(root.element, 'name', root.query('GET_NAME'));

        // we have to link this element to the status element
        attr(root.element, 'aria-controls', 'filepond--assistant-' + props.id);

        // set label, we use labelled by as otherwise the screenreader does not read the "browse" text in the label (as it has tabindex: 0)
        attr(root.element, 'aria-labelledby', 'filepond--drop-label-' + props.id);

        // set configurable props
        setAcceptedFileTypes({
            root: root,
            action: { value: root.query('GET_ACCEPTED_FILE_TYPES') },
        });
        toggleAllowMultiple({ root: root, action: { value: root.query('GET_ALLOW_MULTIPLE') } });
        toggleDirectoryFilter({
            root: root,
            action: { value: root.query('GET_ALLOW_DIRECTORIES_ONLY') },
        });
        toggleDisabled({ root: root });
        toggleRequired({ root: root, action: { value: root.query('GET_REQUIRED') } });
        setCaptureMethod({ root: root, action: { value: root.query('GET_CAPTURE_METHOD') } });

        // handle changes to the input field
        root.ref.handleChange = function(e) {
            if (!root.element.value) {
                return;
            }

            // extract files and move value of webkitRelativePath path to _relativePath
            var files = Array.from(root.element.files).map(function(file) {
                file._relativePath = file.webkitRelativePath;
                return file;
            });

            // we add a little delay so the OS file select window can move out of the way before we add our file
            setTimeout(function() {
                // load files
                props.onload(files);

                // reset input, it's just for exposing a method to drop files, should not retain any state
                resetFileInput(root.element);
            }, 250);
        };

        root.element.addEventListener('change', root.ref.handleChange);
    };

    var setAcceptedFileTypes = function setAcceptedFileTypes(_ref2) {
        var root = _ref2.root,
            action = _ref2.action;
        if (!root.query('GET_ALLOW_SYNC_ACCEPT_ATTRIBUTE')) return;
        attrToggle(
            root.element,
            'accept',
            !!action.value,
            action.value ? action.value.join(',') : ''
        );
    };

    var toggleAllowMultiple = function toggleAllowMultiple(_ref3) {
        var root = _ref3.root,
            action = _ref3.action;
        attrToggle(root.element, 'multiple', action.value);
    };

    var toggleDirectoryFilter = function toggleDirectoryFilter(_ref4) {
        var root = _ref4.root,
            action = _ref4.action;
        attrToggle(root.element, 'webkitdirectory', action.value);
    };

    var toggleDisabled = function toggleDisabled(_ref5) {
        var root = _ref5.root;
        var isDisabled = root.query('GET_DISABLED');
        var doesAllowBrowse = root.query('GET_ALLOW_BROWSE');
        var disableField = isDisabled || !doesAllowBrowse;
        attrToggle(root.element, 'disabled', disableField);
    };

    var toggleRequired = function toggleRequired(_ref6) {
        var root = _ref6.root,
            action = _ref6.action;
        // want to remove required, always possible
        if (!action.value) {
            attrToggle(root.element, 'required', false);
        }
        // if want to make required, only possible when zero items
        else if (root.query('GET_TOTAL_ITEMS') === 0) {
            attrToggle(root.element, 'required', true);
        }
    };

    var setCaptureMethod = function setCaptureMethod(_ref7) {
        var root = _ref7.root,
            action = _ref7.action;
        attrToggle(
            root.element,
            'capture',
            !!action.value,
            action.value === true ? '' : action.value
        );
    };

    var updateRequiredStatus = function updateRequiredStatus(_ref8) {
        var root = _ref8.root;
        var element = root.element;
        // always remove the required attribute when more than zero items
        if (root.query('GET_TOTAL_ITEMS') > 0) {
            attrToggle(element, 'required', false);
            attrToggle(element, 'name', false);
        } else {
            // add name attribute
            attrToggle(element, 'name', true, root.query('GET_NAME'));

            // remove any validation messages
            var shouldCheckValidity = root.query('GET_CHECK_VALIDITY');
            if (shouldCheckValidity) {
                element.setCustomValidity('');
            }

            // we only add required if the field has been deemed required
            if (root.query('GET_REQUIRED')) {
                attrToggle(element, 'required', true);
            }
        }
    };

    var updateFieldValidityStatus = function updateFieldValidityStatus(_ref9) {
        var root = _ref9.root;
        var shouldCheckValidity = root.query('GET_CHECK_VALIDITY');
        if (!shouldCheckValidity) return;
        root.element.setCustomValidity(root.query('GET_LABEL_INVALID_FIELD'));
    };

    var browser = createView({
        tag: 'input',
        name: 'browser',
        ignoreRect: true,
        ignoreRectUpdate: true,
        attributes: {
            type: 'file',
        },

        create: create$a,
        destroy: function destroy(_ref10) {
            var root = _ref10.root;
            root.element.removeEventListener('change', root.ref.handleChange);
        },
        write: createRoute({
            DID_LOAD_ITEM: updateRequiredStatus,
            DID_REMOVE_ITEM: updateRequiredStatus,
            DID_THROW_ITEM_INVALID: updateFieldValidityStatus,

            DID_SET_DISABLED: toggleDisabled,
            DID_SET_ALLOW_BROWSE: toggleDisabled,
            DID_SET_ALLOW_DIRECTORIES_ONLY: toggleDirectoryFilter,
            DID_SET_ALLOW_MULTIPLE: toggleAllowMultiple,
            DID_SET_ACCEPTED_FILE_TYPES: setAcceptedFileTypes,
            DID_SET_CAPTURE_METHOD: setCaptureMethod,
            DID_SET_REQUIRED: toggleRequired,
        }),
    });

    var Key = {
        ENTER: 13,
        SPACE: 32,
    };

    var create$b = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;

        // create the label and link it to the file browser
        var label = createElement$1('label');
        attr(label, 'for', 'filepond--browser-' + props.id);

        // use for labeling file input (aria-labelledby on file input)
        attr(label, 'id', 'filepond--drop-label-' + props.id);

        // hide the label for screenreaders, the input element will read the contents of the label when it's focussed. If we don't set aria-hidden the screenreader will also navigate the contents of the label separately from the input.
        attr(label, 'aria-hidden', 'true');

        // handle keys
        root.ref.handleKeyDown = function(e) {
            var isActivationKey = e.keyCode === Key.ENTER || e.keyCode === Key.SPACE;
            if (!isActivationKey) return;
            // stops from triggering the element a second time
            e.preventDefault();

            // click link (will then in turn activate file input)
            root.ref.label.click();
        };

        root.ref.handleClick = function(e) {
            var isLabelClick = e.target === label || label.contains(e.target);

            // don't want to click twice
            if (isLabelClick) return;

            // click link (will then in turn activate file input)
            root.ref.label.click();
        };

        // attach events
        label.addEventListener('keydown', root.ref.handleKeyDown);
        root.element.addEventListener('click', root.ref.handleClick);

        // update
        updateLabelValue(label, props.caption);

        // add!
        root.appendChild(label);
        root.ref.label = label;
    };

    var updateLabelValue = function updateLabelValue(label, value) {
        label.innerHTML = value;
        var clickable = label.querySelector('.filepond--label-action');
        if (clickable) {
            attr(clickable, 'tabindex', '0');
        }
        return value;
    };

    var dropLabel = createView({
        name: 'drop-label',
        ignoreRect: true,
        create: create$b,
        destroy: function destroy(_ref2) {
            var root = _ref2.root;
            root.ref.label.addEventListener('keydown', root.ref.handleKeyDown);
            root.element.removeEventListener('click', root.ref.handleClick);
        },
        write: createRoute({
            DID_SET_LABEL_IDLE: function DID_SET_LABEL_IDLE(_ref3) {
                var root = _ref3.root,
                    action = _ref3.action;
                updateLabelValue(root.ref.label, action.value);
            },
        }),

        mixins: {
            styles: ['opacity', 'translateX', 'translateY'],
            animations: {
                opacity: { type: 'tween', duration: 150 },
                translateX: 'spring',
                translateY: 'spring',
            },
        },
    });

    var blob = createView({
        name: 'drip-blob',
        ignoreRect: true,
        mixins: {
            styles: ['translateX', 'translateY', 'scaleX', 'scaleY', 'opacity'],
            animations: {
                scaleX: 'spring',
                scaleY: 'spring',
                translateX: 'spring',
                translateY: 'spring',
                opacity: { type: 'tween', duration: 250 },
            },
        },
    });

    var addBlob = function addBlob(_ref) {
        var root = _ref.root;
        var centerX = root.rect.element.width * 0.5;
        var centerY = root.rect.element.height * 0.5;

        root.ref.blob = root.appendChildView(
            root.createChildView(blob, {
                opacity: 0,
                scaleX: 2.5,
                scaleY: 2.5,
                translateX: centerX,
                translateY: centerY,
            })
        );
    };

    var moveBlob = function moveBlob(_ref2) {
        var root = _ref2.root,
            action = _ref2.action;
        if (!root.ref.blob) {
            addBlob({ root: root });
            return;
        }

        root.ref.blob.translateX = action.position.scopeLeft;
        root.ref.blob.translateY = action.position.scopeTop;
        root.ref.blob.scaleX = 1;
        root.ref.blob.scaleY = 1;
        root.ref.blob.opacity = 1;
    };

    var hideBlob = function hideBlob(_ref3) {
        var root = _ref3.root;
        if (!root.ref.blob) {
            return;
        }
        root.ref.blob.opacity = 0;
    };

    var explodeBlob = function explodeBlob(_ref4) {
        var root = _ref4.root;
        if (!root.ref.blob) {
            return;
        }
        root.ref.blob.scaleX = 2.5;
        root.ref.blob.scaleY = 2.5;
        root.ref.blob.opacity = 0;
    };

    var write$7 = function write(_ref5) {
        var root = _ref5.root,
            props = _ref5.props,
            actions = _ref5.actions;
        route$4({ root: root, props: props, actions: actions });
        var blob = root.ref.blob;

        if (actions.length === 0 && blob && blob.opacity === 0) {
            root.removeChildView(blob);
            root.ref.blob = null;
        }
    };

    var route$4 = createRoute({
        DID_DRAG: moveBlob,
        DID_DROP: explodeBlob,
        DID_END_DRAG: hideBlob,
    });

    var drip = createView({
        ignoreRect: true,
        ignoreRectUpdate: true,
        name: 'drip',
        write: write$7,
    });

    var setInputFiles = function setInputFiles(element, files) {
        try {
            // Create a DataTransfer instance and add a newly created file
            var dataTransfer = new DataTransfer();
            files.forEach(function(file) {
                if (file instanceof File) {
                    dataTransfer.items.add(file);
                } else {
                    dataTransfer.items.add(
                        new File([file], file.name, {
                            type: file.type,
                        })
                    );
                }
            });

            // Assign the DataTransfer files list to the file input
            element.files = dataTransfer.files;
        } catch (err) {
            return false;
        }
        return true;
    };

    var create$c = function create(_ref) {
        var root = _ref.root;
        return (root.ref.fields = {});
    };

    var getField = function getField(root, id) {
        return root.ref.fields[id];
    };

    var syncFieldPositionsWithItems = function syncFieldPositionsWithItems(root) {
        root.query('GET_ACTIVE_ITEMS').forEach(function(item) {
            if (!root.ref.fields[item.id]) return;
            root.element.appendChild(root.ref.fields[item.id]);
        });
    };

    var didReorderItems = function didReorderItems(_ref2) {
        var root = _ref2.root;
        return syncFieldPositionsWithItems(root);
    };

    var didAddItem = function didAddItem(_ref3) {
        var root = _ref3.root,
            action = _ref3.action;
        var fileItem = root.query('GET_ITEM', action.id);
        var isLocalFile = fileItem.origin === FileOrigin.LOCAL;
        var shouldUseFileInput = !isLocalFile && root.query('SHOULD_UPDATE_FILE_INPUT');
        var dataContainer = createElement$1('input');
        dataContainer.type = shouldUseFileInput ? 'file' : 'hidden';
        dataContainer.name = root.query('GET_NAME');
        dataContainer.disabled = root.query('GET_DISABLED');
        root.ref.fields[action.id] = dataContainer;
        syncFieldPositionsWithItems(root);
    };

    var didLoadItem$1 = function didLoadItem(_ref4) {
        var root = _ref4.root,
            action = _ref4.action;
        var field = getField(root, action.id);
        if (!field) return;

        // store server ref in hidden input
        if (action.serverFileReference !== null) field.value = action.serverFileReference;

        // store file item in file input
        if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;

        var fileItem = root.query('GET_ITEM', action.id);
        setInputFiles(field, [fileItem.file]);
    };

    var didPrepareOutput = function didPrepareOutput(_ref5) {
        var root = _ref5.root,
            action = _ref5.action;
        // this timeout pushes the handler after 'load'
        if (!root.query('SHOULD_UPDATE_FILE_INPUT')) return;
        setTimeout(function() {
            var field = getField(root, action.id);
            if (!field) return;
            setInputFiles(field, [action.file]);
        }, 0);
    };

    var didSetDisabled = function didSetDisabled(_ref6) {
        var root = _ref6.root;
        root.element.disabled = root.query('GET_DISABLED');
    };

    var didRemoveItem = function didRemoveItem(_ref7) {
        var root = _ref7.root,
            action = _ref7.action;
        var field = getField(root, action.id);
        if (!field) return;
        if (field.parentNode) field.parentNode.removeChild(field);
        delete root.ref.fields[action.id];
    };

    // only runs for server files (so doesn't deal with file input)
    var didDefineValue = function didDefineValue(_ref8) {
        var root = _ref8.root,
            action = _ref8.action;
        var field = getField(root, action.id);
        if (!field) return;
        if (action.value === null) {
            // clear field value
            field.removeAttribute('value');
        } else {
            // set field value
            field.value = action.value;
        }
        syncFieldPositionsWithItems(root);
    };

    var write$8 = createRoute({
        DID_SET_DISABLED: didSetDisabled,
        DID_ADD_ITEM: didAddItem,
        DID_LOAD_ITEM: didLoadItem$1,
        DID_REMOVE_ITEM: didRemoveItem,
        DID_DEFINE_VALUE: didDefineValue,
        DID_PREPARE_OUTPUT: didPrepareOutput,
        DID_REORDER_ITEMS: didReorderItems,
        DID_SORT_ITEMS: didReorderItems,
    });

    var data = createView({
        tag: 'fieldset',
        name: 'data',
        create: create$c,
        write: write$8,
        ignoreRect: true,
    });

    var getRootNode = function getRootNode(element) {
        return 'getRootNode' in element ? element.getRootNode() : document;
    };

    var images = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];
    var text$1 = ['css', 'csv', 'html', 'txt'];
    var map = {
        zip: 'zip|compressed',
        epub: 'application/epub+zip',
    };

    var guesstimateMimeType = function guesstimateMimeType() {
        var extension = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
        extension = extension.toLowerCase();
        if (images.includes(extension)) {
            return (
                'image/' +
                (extension === 'jpg' ? 'jpeg' : extension === 'svg' ? 'svg+xml' : extension)
            );
        }
        if (text$1.includes(extension)) {
            return 'text/' + extension;
        }

        return map[extension] || '';
    };

    var requestDataTransferItems = function requestDataTransferItems(dataTransfer) {
        return new Promise(function(resolve, reject) {
            // try to get links from transfer, if found we'll exit immediately (unless a file is in the dataTransfer as well, this is because Firefox could represent the file as a URL and a file object at the same time)
            var links = getLinks(dataTransfer);
            if (links.length && !hasFiles(dataTransfer)) {
                return resolve(links);
            }
            // try to get files from the transfer
            getFiles(dataTransfer).then(resolve);
        });
    };

    /**
     * Test if datatransfer has files
     */
    var hasFiles = function hasFiles(dataTransfer) {
        if (dataTransfer.files) return dataTransfer.files.length > 0;
        return false;
    };

    /**
     * Extracts files from a DataTransfer object
     */
    var getFiles = function getFiles(dataTransfer) {
        return new Promise(function(resolve, reject) {
            // get the transfer items as promises
            var promisedFiles = (dataTransfer.items ? Array.from(dataTransfer.items) : [])
                // only keep file system items (files and directories)
                .filter(function(item) {
                    return isFileSystemItem(item);
                })

                // map each item to promise
                .map(function(item) {
                    return getFilesFromItem(item);
                });

            // if is empty, see if we can extract some info from the files property as a fallback
            if (!promisedFiles.length) {
                // TODO: test for directories (should not be allowed)
                // Use FileReader, problem is that the files property gets lost in the process
                resolve(dataTransfer.files ? Array.from(dataTransfer.files) : []);
                return;
            }

            // done!
            Promise.all(promisedFiles)
                .then(function(returnedFileGroups) {
                    // flatten groups
                    var files = [];
                    returnedFileGroups.forEach(function(group) {
                        files.push.apply(files, group);
                    });

                    // done (filter out empty files)!
                    resolve(
                        files
                            .filter(function(file) {
                                return file;
                            })
                            .map(function(file) {
                                if (!file._relativePath)
                                    file._relativePath = file.webkitRelativePath;
                                return file;
                            })
                    );
                })
                .catch(console.error);
        });
    };

    var isFileSystemItem = function isFileSystemItem(item) {
        if (isEntry(item)) {
            var entry = getAsEntry(item);
            if (entry) {
                return entry.isFile || entry.isDirectory;
            }
        }
        return item.kind === 'file';
    };

    var getFilesFromItem = function getFilesFromItem(item) {
        return new Promise(function(resolve, reject) {
            if (isDirectoryEntry(item)) {
                getFilesInDirectory(getAsEntry(item))
                    .then(resolve)
                    .catch(reject);
                return;
            }

            resolve([item.getAsFile()]);
        });
    };

    var getFilesInDirectory = function getFilesInDirectory(entry) {
        return new Promise(function(resolve, reject) {
            var files = [];

            // the total entries to read
            var dirCounter = 0;
            var fileCounter = 0;

            var resolveIfDone = function resolveIfDone() {
                if (fileCounter === 0 && dirCounter === 0) {
                    resolve(files);
                }
            };

            // the recursive function
            var readEntries = function readEntries(dirEntry) {
                dirCounter++;

                var directoryReader = dirEntry.createReader();

                // directories are returned in batches, we need to process all batches before we're done
                var readBatch = function readBatch() {
                    directoryReader.readEntries(function(entries) {
                        if (entries.length === 0) {
                            dirCounter--;
                            resolveIfDone();
                            return;
                        }

                        entries.forEach(function(entry) {
                            // recursively read more directories
                            if (entry.isDirectory) {
                                readEntries(entry);
                            } else {
                                // read as file
                                fileCounter++;

                                entry.file(function(file) {
                                    var correctedFile = correctMissingFileType(file);
                                    if (entry.fullPath)
                                        correctedFile._relativePath = entry.fullPath;
                                    files.push(correctedFile);
                                    fileCounter--;
                                    resolveIfDone();
                                });
                            }
                        });

                        // try to get next batch of files
                        readBatch();
                    }, reject);
                };

                // read first batch of files
                readBatch();
            };

            // go!
            readEntries(entry);
        });
    };

    var correctMissingFileType = function correctMissingFileType(file) {
        if (file.type.length) return file;
        var date = file.lastModifiedDate;
        var name = file.name;
        var type = guesstimateMimeType(getExtensionFromFilename(file.name));
        if (!type.length) return file;
        file = file.slice(0, file.size, type);
        file.name = name;
        file.lastModifiedDate = date;
        return file;
    };

    var isDirectoryEntry = function isDirectoryEntry(item) {
        return isEntry(item) && (getAsEntry(item) || {}).isDirectory;
    };

    var isEntry = function isEntry(item) {
        return 'webkitGetAsEntry' in item;
    };

    var getAsEntry = function getAsEntry(item) {
        return item.webkitGetAsEntry();
    };

    /**
     * Extracts links from a DataTransfer object
     */
    var getLinks = function getLinks(dataTransfer) {
        var links = [];
        try {
            // look in meta data property
            links = getLinksFromTransferMetaData(dataTransfer);
            if (links.length) {
                return links;
            }
            links = getLinksFromTransferURLData(dataTransfer);
        } catch (e) {
            // nope nope nope (probably IE trouble)
        }
        return links;
    };

    var getLinksFromTransferURLData = function getLinksFromTransferURLData(dataTransfer) {
        var data = dataTransfer.getData('url');
        if (typeof data === 'string' && data.length) {
            return [data];
        }
        return [];
    };

    var getLinksFromTransferMetaData = function getLinksFromTransferMetaData(dataTransfer) {
        var data = dataTransfer.getData('text/html');
        if (typeof data === 'string' && data.length) {
            var matches = data.match(/src\s*=\s*"(.+?)"/);
            if (matches) {
                return [matches[1]];
            }
        }
        return [];
    };

    var dragNDropObservers = [];

    var eventPosition = function eventPosition(e) {
        return {
            pageLeft: e.pageX,
            pageTop: e.pageY,
            scopeLeft: e.offsetX || e.layerX,
            scopeTop: e.offsetY || e.layerY,
        };
    };

    var createDragNDropClient = function createDragNDropClient(
        element,
        scopeToObserve,
        filterElement
    ) {
        var observer = getDragNDropObserver(scopeToObserve);

        var client = {
            element: element,
            filterElement: filterElement,
            state: null,
            ondrop: function ondrop() {},
            onenter: function onenter() {},
            ondrag: function ondrag() {},
            onexit: function onexit() {},
            onload: function onload() {},
            allowdrop: function allowdrop() {},
        };

        client.destroy = observer.addListener(client);

        return client;
    };

    var getDragNDropObserver = function getDragNDropObserver(element) {
        // see if already exists, if so, return
        var observer = dragNDropObservers.find(function(item) {
            return item.element === element;
        });
        if (observer) {
            return observer;
        }

        // create new observer, does not yet exist for this element
        var newObserver = createDragNDropObserver(element);
        dragNDropObservers.push(newObserver);
        return newObserver;
    };

    var createDragNDropObserver = function createDragNDropObserver(element) {
        var clients = [];

        var routes = {
            dragenter: dragenter,
            dragover: dragover,
            dragleave: dragleave,
            drop: drop,
        };

        var handlers = {};

        forin(routes, function(event, createHandler) {
            handlers[event] = createHandler(element, clients);
            element.addEventListener(event, handlers[event], false);
        });

        var observer = {
            element: element,
            addListener: function addListener(client) {
                // add as client
                clients.push(client);

                // return removeListener function
                return function() {
                    // remove client
                    clients.splice(clients.indexOf(client), 1);

                    // if no more clients, clean up observer
                    if (clients.length === 0) {
                        dragNDropObservers.splice(dragNDropObservers.indexOf(observer), 1);

                        forin(routes, function(event) {
                            element.removeEventListener(event, handlers[event], false);
                        });
                    }
                };
            },
        };

        return observer;
    };

    var elementFromPoint = function elementFromPoint(root, point) {
        if (!('elementFromPoint' in root)) {
            root = document;
        }
        return root.elementFromPoint(point.x, point.y);
    };

    var isEventTarget = function isEventTarget(e, target) {
        // get root
        var root = getRootNode(target);

        // get element at position
        // if root is not actual shadow DOM and does not have elementFromPoint method, use the one on document
        var elementAtPosition = elementFromPoint(root, {
            x: e.pageX - window.pageXOffset,
            y: e.pageY - window.pageYOffset,
        });

        // test if target is the element or if one of its children is
        return elementAtPosition === target || target.contains(elementAtPosition);
    };

    var initialTarget = null;

    var setDropEffect = function setDropEffect(dataTransfer, effect) {
        // is in try catch as IE11 will throw error if not
        try {
            dataTransfer.dropEffect = effect;
        } catch (e) {}
    };

    var dragenter = function dragenter(root, clients) {
        return function(e) {
            e.preventDefault();

            initialTarget = e.target;

            clients.forEach(function(client) {
                var element = client.element,
                    onenter = client.onenter;

                if (isEventTarget(e, element)) {
                    client.state = 'enter';

                    // fire enter event
                    onenter(eventPosition(e));
                }
            });
        };
    };

    var dragover = function dragover(root, clients) {
        return function(e) {
            e.preventDefault();

            var dataTransfer = e.dataTransfer;

            requestDataTransferItems(dataTransfer).then(function(items) {
                var overDropTarget = false;

                clients.some(function(client) {
                    var filterElement = client.filterElement,
                        element = client.element,
                        onenter = client.onenter,
                        onexit = client.onexit,
                        ondrag = client.ondrag,
                        allowdrop = client.allowdrop;

                    // by default we can drop
                    setDropEffect(dataTransfer, 'copy');

                    // allow transfer of these items
                    var allowsTransfer = allowdrop(items);

                    // only used when can be dropped on page
                    if (!allowsTransfer) {
                        setDropEffect(dataTransfer, 'none');
                        return;
                    }

                    // targetting this client
                    if (isEventTarget(e, element)) {
                        overDropTarget = true;

                        // had no previous state, means we are entering this client
                        if (client.state === null) {
                            client.state = 'enter';
                            onenter(eventPosition(e));
                            return;
                        }

                        // now over element (no matter if it allows the drop or not)
                        client.state = 'over';

                        // needs to allow transfer
                        if (filterElement && !allowsTransfer) {
                            setDropEffect(dataTransfer, 'none');
                            return;
                        }

                        // dragging
                        ondrag(eventPosition(e));
                    } else {
                        // should be over an element to drop
                        if (filterElement && !overDropTarget) {
                            setDropEffect(dataTransfer, 'none');
                        }

                        // might have just left this client?
                        if (client.state) {
                            client.state = null;
                            onexit(eventPosition(e));
                        }
                    }
                });
            });
        };
    };

    var drop = function drop(root, clients) {
        return function(e) {
            e.preventDefault();

            var dataTransfer = e.dataTransfer;

            requestDataTransferItems(dataTransfer).then(function(items) {
                clients.forEach(function(client) {
                    var filterElement = client.filterElement,
                        element = client.element,
                        ondrop = client.ondrop,
                        onexit = client.onexit,
                        allowdrop = client.allowdrop;

                    client.state = null;

                    // if we're filtering on element we need to be over the element to drop
                    if (filterElement && !isEventTarget(e, element)) return;

                    // no transfer for this client
                    if (!allowdrop(items)) return onexit(eventPosition(e));

                    // we can drop these items on this client
                    ondrop(eventPosition(e), items);
                });
            });
        };
    };

    var dragleave = function dragleave(root, clients) {
        return function(e) {
            if (initialTarget !== e.target) {
                return;
            }

            clients.forEach(function(client) {
                var onexit = client.onexit;

                client.state = null;

                onexit(eventPosition(e));
            });
        };
    };

    var createHopper = function createHopper(scope, validateItems, options) {
        // is now hopper scope
        scope.classList.add('filepond--hopper');

        // shortcuts
        var catchesDropsOnPage = options.catchesDropsOnPage,
            requiresDropOnElement = options.requiresDropOnElement,
            _options$filterItems = options.filterItems,
            filterItems =
                _options$filterItems === void 0
                    ? function(items) {
                          return items;
                      }
                    : _options$filterItems;

        // create a dnd client
        var client = createDragNDropClient(
            scope,
            catchesDropsOnPage ? document.documentElement : scope,
            requiresDropOnElement
        );

        // current client state
        var lastState = '';
        var currentState = '';

        // determines if a file may be dropped
        client.allowdrop = function(items) {
            // TODO: if we can, throw error to indicate the items cannot by dropped

            return validateItems(filterItems(items));
        };

        client.ondrop = function(position, items) {
            var filteredItems = filterItems(items);

            if (!validateItems(filteredItems)) {
                api.ondragend(position);
                return;
            }

            currentState = 'drag-drop';

            api.onload(filteredItems, position);
        };

        client.ondrag = function(position) {
            api.ondrag(position);
        };

        client.onenter = function(position) {
            currentState = 'drag-over';

            api.ondragstart(position);
        };

        client.onexit = function(position) {
            currentState = 'drag-exit';

            api.ondragend(position);
        };

        var api = {
            updateHopperState: function updateHopperState() {
                if (lastState !== currentState) {
                    scope.dataset.hopperState = currentState;
                    lastState = currentState;
                }
            },
            onload: function onload() {},
            ondragstart: function ondragstart() {},
            ondrag: function ondrag() {},
            ondragend: function ondragend() {},
            destroy: function destroy() {
                // destroy client
                client.destroy();
            },
        };

        return api;
    };

    var listening = false;
    var listeners$1 = [];

    var handlePaste = function handlePaste(e) {
        // if is pasting in input or textarea and the target is outside of a filepond scope, ignore
        var activeEl = document.activeElement;
        if (activeEl && /textarea|input/i.test(activeEl.nodeName)) {
            // test textarea or input is contained in filepond root
            var inScope = false;
            var element = activeEl;
            while (element !== document.body) {
                if (element.classList.contains('filepond--root')) {
                    inScope = true;
                    break;
                }
                element = element.parentNode;
            }

            if (!inScope) return;
        }

        requestDataTransferItems(e.clipboardData).then(function(files) {
            // no files received
            if (!files.length) {
                return;
            }

            // notify listeners of received files
            listeners$1.forEach(function(listener) {
                return listener(files);
            });
        });
    };

    var listen = function listen(cb) {
        // can't add twice
        if (listeners$1.includes(cb)) {
            return;
        }

        // add initial listener
        listeners$1.push(cb);

        // setup paste listener for entire page
        if (listening) {
            return;
        }

        listening = true;
        document.addEventListener('paste', handlePaste);
    };

    var unlisten = function unlisten(listener) {
        arrayRemove(listeners$1, listeners$1.indexOf(listener));

        // clean up
        if (listeners$1.length === 0) {
            document.removeEventListener('paste', handlePaste);
            listening = false;
        }
    };

    var createPaster = function createPaster() {
        var cb = function cb(files) {
            api.onload(files);
        };

        var api = {
            destroy: function destroy() {
                unlisten(cb);
            },
            onload: function onload() {},
        };

        listen(cb);

        return api;
    };

    /**
     * Creates the file view
     */
    var create$d = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;
        root.element.id = 'filepond--assistant-' + props.id;
        attr(root.element, 'role', 'status');
        attr(root.element, 'aria-live', 'polite');
        attr(root.element, 'aria-relevant', 'additions');
    };

    var addFilesNotificationTimeout = null;
    var notificationClearTimeout = null;

    var filenames = [];

    var assist = function assist(root, message) {
        root.element.textContent = message;
    };

    var clear$1 = function clear(root) {
        root.element.textContent = '';
    };

    var listModified = function listModified(root, filename, label) {
        var total = root.query('GET_TOTAL_ITEMS');
        assist(
            root,
            label +
                ' ' +
                filename +
                ', ' +
                total +
                ' ' +
                (total === 1
                    ? root.query('GET_LABEL_FILE_COUNT_SINGULAR')
                    : root.query('GET_LABEL_FILE_COUNT_PLURAL'))
        );

        // clear group after set amount of time so the status is not read twice
        clearTimeout(notificationClearTimeout);
        notificationClearTimeout = setTimeout(function() {
            clear$1(root);
        }, 1500);
    };

    var isUsingFilePond = function isUsingFilePond(root) {
        return root.element.parentNode.contains(document.activeElement);
    };

    var itemAdded = function itemAdded(_ref2) {
        var root = _ref2.root,
            action = _ref2.action;
        if (!isUsingFilePond(root)) {
            return;
        }

        root.element.textContent = '';
        var item = root.query('GET_ITEM', action.id);
        filenames.push(item.filename);

        clearTimeout(addFilesNotificationTimeout);
        addFilesNotificationTimeout = setTimeout(function() {
            listModified(root, filenames.join(', '), root.query('GET_LABEL_FILE_ADDED'));

            filenames.length = 0;
        }, 750);
    };

    var itemRemoved = function itemRemoved(_ref3) {
        var root = _ref3.root,
            action = _ref3.action;
        if (!isUsingFilePond(root)) {
            return;
        }

        var item = action.item;
        listModified(root, item.filename, root.query('GET_LABEL_FILE_REMOVED'));
    };

    var itemProcessed = function itemProcessed(_ref4) {
        var root = _ref4.root,
            action = _ref4.action;
        // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file

        var item = root.query('GET_ITEM', action.id);
        var filename = item.filename;
        var label = root.query('GET_LABEL_FILE_PROCESSING_COMPLETE');

        assist(root, filename + ' ' + label);
    };

    var itemProcessedUndo = function itemProcessedUndo(_ref5) {
        var root = _ref5.root,
            action = _ref5.action;
        var item = root.query('GET_ITEM', action.id);
        var filename = item.filename;
        var label = root.query('GET_LABEL_FILE_PROCESSING_ABORTED');

        assist(root, filename + ' ' + label);
    };

    var itemError = function itemError(_ref6) {
        var root = _ref6.root,
            action = _ref6.action;
        var item = root.query('GET_ITEM', action.id);
        var filename = item.filename;

        // will also notify the user when FilePond is not being used, as the user might be occupied with other activities while uploading a file

        assist(root, action.status.main + ' ' + filename + ' ' + action.status.sub);
    };

    var assistant = createView({
        create: create$d,
        ignoreRect: true,
        ignoreRectUpdate: true,
        write: createRoute({
            DID_LOAD_ITEM: itemAdded,
            DID_REMOVE_ITEM: itemRemoved,
            DID_COMPLETE_ITEM_PROCESSING: itemProcessed,

            DID_ABORT_ITEM_PROCESSING: itemProcessedUndo,
            DID_REVERT_ITEM_PROCESSING: itemProcessedUndo,

            DID_THROW_ITEM_REMOVE_ERROR: itemError,
            DID_THROW_ITEM_LOAD_ERROR: itemError,
            DID_THROW_ITEM_INVALID: itemError,
            DID_THROW_ITEM_PROCESSING_ERROR: itemError,
        }),

        tag: 'span',
        name: 'assistant',
    });

    var toCamels = function toCamels(string) {
        var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';
        return string.replace(new RegExp(separator + '.', 'g'), function(sub) {
            return sub.charAt(1).toUpperCase();
        });
    };

    var debounce = function debounce(func) {
        var interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;
        var immidiateOnly =
            arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
        var last = Date.now();
        var timeout = null;

        return function() {
            for (
                var _len = arguments.length, args = new Array(_len), _key = 0;
                _key < _len;
                _key++
            ) {
                args[_key] = arguments[_key];
            }
            clearTimeout(timeout);

            var dist = Date.now() - last;

            var fn = function fn() {
                last = Date.now();
                func.apply(void 0, args);
            };

            if (dist < interval) {
                // we need to delay by the difference between interval and dist
                // for example: if distance is 10 ms and interval is 16 ms,
                // we need to wait an additional 6ms before calling the function)
                if (!immidiateOnly) {
                    timeout = setTimeout(fn, interval - dist);
                }
            } else {
                // go!
                fn();
            }
        };
    };

    var MAX_FILES_LIMIT = 1000000;

    var prevent = function prevent(e) {
        return e.preventDefault();
    };

    var create$e = function create(_ref) {
        var root = _ref.root,
            props = _ref.props;
        // Add id
        var id = root.query('GET_ID');
        if (id) {
            root.element.id = id;
        }

        // Add className
        var className = root.query('GET_CLASS_NAME');
        if (className) {
            className
                .split(' ')
                .filter(function(name) {
                    return name.length;
                })
                .forEach(function(name) {
                    root.element.classList.add(name);
                });
        }

        // Field label
        root.ref.label = root.appendChildView(
            root.createChildView(
                dropLabel,
                Object.assign({}, props, {
                    translateY: null,
                    caption: root.query('GET_LABEL_IDLE'),
                })
            )
        );

        // List of items
        root.ref.list = root.appendChildView(
            root.createChildView(listScroller, { translateY: null })
        );

        // Background panel
        root.ref.panel = root.appendChildView(root.createChildView(panel, { name: 'panel-root' }));

        // Assistant notifies assistive tech when content changes
        root.ref.assistant = root.appendChildView(
            root.createChildView(assistant, Object.assign({}, props))
        );

        // Data
        root.ref.data = root.appendChildView(root.createChildView(data, Object.assign({}, props)));

        // Measure (tests if fixed height was set)
        // DOCTYPE needs to be set for this to work
        root.ref.measure = createElement$1('div');
        root.ref.measure.style.height = '100%';
        root.element.appendChild(root.ref.measure);

        // information on the root height or fixed height status
        root.ref.bounds = null;

        // apply initial style properties
        root.query('GET_STYLES')
            .filter(function(style) {
                return !isEmpty(style.value);
            })
            .map(function(_ref2) {
                var name = _ref2.name,
                    value = _ref2.value;
                root.element.dataset[name] = value;
            });

        // determine if width changed
        root.ref.widthPrevious = null;
        root.ref.widthUpdated = debounce(function() {
            root.ref.updateHistory = [];
            root.dispatch('DID_RESIZE_ROOT');
        }, 250);

        // history of updates
        root.ref.previousAspectRatio = null;
        root.ref.updateHistory = [];

        // prevent scrolling and zooming on iOS (only if supports pointer events, for then we can enable reorder)
        var canHover = window.matchMedia('(pointer: fine) and (hover: hover)').matches;
        var hasPointerEvents = 'PointerEvent' in window;
        if (root.query('GET_ALLOW_REORDER') && hasPointerEvents && !canHover) {
            root.element.addEventListener('touchmove', prevent, { passive: false });
            root.element.addEventListener('gesturestart', prevent);
        }

        // add credits
        var credits = root.query('GET_CREDITS');
        var hasCredits = credits.length === 2;
        if (hasCredits) {
            var frag = document.createElement('a');
            frag.className = 'filepond--credits';
            frag.setAttribute('aria-hidden', 'true');
            frag.href = credits[0];
            frag.tabindex = -1;
            frag.target = '_blank';
            frag.rel = 'noopener noreferrer';
            frag.textContent = credits[1];
            root.element.appendChild(frag);
            root.ref.credits = frag;
        }
    };

    var write$9 = function write(_ref3) {
        var root = _ref3.root,
            props = _ref3.props,
            actions = _ref3.actions;
        // route actions
        route$5({ root: root, props: props, actions: actions });

        // apply style properties
        actions
            .filter(function(action) {
                return /^DID_SET_STYLE_/.test(action.type);
            })
            .filter(function(action) {
                return !isEmpty(action.data.value);
            })
            .map(function(_ref4) {
                var type = _ref4.type,
                    data = _ref4.data;
                var name = toCamels(type.substring(8).toLowerCase(), '_');
                root.element.dataset[name] = data.value;
                root.invalidateLayout();
            });

        if (root.rect.element.hidden) return;

        if (root.rect.element.width !== root.ref.widthPrevious) {
            root.ref.widthPrevious = root.rect.element.width;
            root.ref.widthUpdated();
        }

        // get box bounds, we do this only once
        var bounds = root.ref.bounds;
        if (!bounds) {
            bounds = root.ref.bounds = calculateRootBoundingBoxHeight(root);

            // destroy measure element
            root.element.removeChild(root.ref.measure);
            root.ref.measure = null;
        }

        // get quick references to various high level parts of the upload tool
        var _root$ref = root.ref,
            hopper = _root$ref.hopper,
            label = _root$ref.label,
            list = _root$ref.list,
            panel = _root$ref.panel;

        // sets correct state to hopper scope
        if (hopper) {
            hopper.updateHopperState();
        }

        // bool to indicate if we're full or not
        var aspectRatio = root.query('GET_PANEL_ASPECT_RATIO');
        var isMultiItem = root.query('GET_ALLOW_MULTIPLE');
        var totalItems = root.query('GET_TOTAL_ITEMS');
        var maxItems = isMultiItem ? root.query('GET_MAX_FILES') || MAX_FILES_LIMIT : 1;
        var atMaxCapacity = totalItems === maxItems;

        // action used to add item
        var addAction = actions.find(function(action) {
            return action.type === 'DID_ADD_ITEM';
        });

        // if reached max capacity and we've just reached it
        if (atMaxCapacity && addAction) {
            // get interaction type
            var interactionMethod = addAction.data.interactionMethod;

            // hide label
            label.opacity = 0;

            if (isMultiItem) {
                label.translateY = -40;
            } else {
                if (interactionMethod === InteractionMethod.API) {
                    label.translateX = 40;
                } else if (interactionMethod === InteractionMethod.BROWSE) {
                    label.translateY = 40;
                } else {
                    label.translateY = 30;
                }
            }
        } else if (!atMaxCapacity) {
            label.opacity = 1;
            label.translateX = 0;
            label.translateY = 0;
        }

        var listItemMargin = calculateListItemMargin(root);

        var listHeight = calculateListHeight(root);

        var labelHeight = label.rect.element.height;
        var currentLabelHeight = !isMultiItem || atMaxCapacity ? 0 : labelHeight;

        var listMarginTop = atMaxCapacity ? list.rect.element.marginTop : 0;
        var listMarginBottom = totalItems === 0 ? 0 : list.rect.element.marginBottom;

        var visualHeight =
            currentLabelHeight + listMarginTop + listHeight.visual + listMarginBottom;
        var boundsHeight =
            currentLabelHeight + listMarginTop + listHeight.bounds + listMarginBottom;

        // link list to label bottom position
        list.translateY =
            Math.max(0, currentLabelHeight - list.rect.element.marginTop) - listItemMargin.top;

        if (aspectRatio) {
            // fixed aspect ratio

            // calculate height based on width
            var width = root.rect.element.width;
            var height = width * aspectRatio;

            // clear history if aspect ratio has changed
            if (aspectRatio !== root.ref.previousAspectRatio) {
                root.ref.previousAspectRatio = aspectRatio;
                root.ref.updateHistory = [];
            }

            // remember this width
            var history = root.ref.updateHistory;
            history.push(width);

            var MAX_BOUNCES = 2;
            if (history.length > MAX_BOUNCES * 2) {
                var l = history.length;
                var bottom = l - 10;
                var bounces = 0;
                for (var i = l; i >= bottom; i--) {
                    if (history[i] === history[i - 2]) {
                        bounces++;
                    }

                    if (bounces >= MAX_BOUNCES) {
                        // dont adjust height
                        return;
                    }
                }
            }

            // fix height of panel so it adheres to aspect ratio
            panel.scalable = false;
            panel.height = height;

            // available height for list
            var listAvailableHeight =
                // the height of the panel minus the label height
                height -
                currentLabelHeight -
                // the room we leave open between the end of the list and the panel bottom
                (listMarginBottom - listItemMargin.bottom) -
                // if we're full we need to leave some room between the top of the panel and the list
                (atMaxCapacity ? listMarginTop : 0);

            if (listHeight.visual > listAvailableHeight) {
                list.overflow = listAvailableHeight;
            } else {
                list.overflow = null;
            }

            // set container bounds (so pushes siblings downwards)
            root.height = height;
        } else if (bounds.fixedHeight) {
            // fixed height

            // fix height of panel
            panel.scalable = false;

            // available height for list
            var _listAvailableHeight =
                // the height of the panel minus the label height
                bounds.fixedHeight -
                currentLabelHeight -
                // the room we leave open between the end of the list and the panel bottom
                (listMarginBottom - listItemMargin.bottom) -
                // if we're full we need to leave some room between the top of the panel and the list
                (atMaxCapacity ? listMarginTop : 0);

            // set list height
            if (listHeight.visual > _listAvailableHeight) {
                list.overflow = _listAvailableHeight;
            } else {
                list.overflow = null;
            }

            // no need to set container bounds as these are handles by CSS fixed height
        } else if (bounds.cappedHeight) {
            // max-height

            // not a fixed height panel
            var isCappedHeight = visualHeight >= bounds.cappedHeight;
            var panelHeight = Math.min(bounds.cappedHeight, visualHeight);
            panel.scalable = true;
            panel.height = isCappedHeight
                ? panelHeight
                : panelHeight - listItemMargin.top - listItemMargin.bottom;

            // available height for list
            var _listAvailableHeight2 =
                // the height of the panel minus the label height
                panelHeight -
                currentLabelHeight -
                // the room we leave open between the end of the list and the panel bottom
                (listMarginBottom - listItemMargin.bottom) -
                // if we're full we need to leave some room between the top of the panel and the list
                (atMaxCapacity ? listMarginTop : 0);

            // set list height (if is overflowing)
            if (visualHeight > bounds.cappedHeight && listHeight.visual > _listAvailableHeight2) {
                list.overflow = _listAvailableHeight2;
            } else {
                list.overflow = null;
            }

            // set container bounds (so pushes siblings downwards)
            root.height = Math.min(
                bounds.cappedHeight,
                boundsHeight - listItemMargin.top - listItemMargin.bottom
            );
        } else {
            // flexible height

            // not a fixed height panel
            var itemMargin = totalItems > 0 ? listItemMargin.top + listItemMargin.bottom : 0;
            panel.scalable = true;
            panel.height = Math.max(labelHeight, visualHeight - itemMargin);

            // set container bounds (so pushes siblings downwards)
            root.height = Math.max(labelHeight, boundsHeight - itemMargin);
        }

        // move credits to bottom
        if (root.ref.credits && panel.heightCurrent)
            root.ref.credits.style.transform = 'translateY(' + panel.heightCurrent + 'px)';
    };

    var calculateListItemMargin = function calculateListItemMargin(root) {
        var item = root.ref.list.childViews[0].childViews[0];
        return item
            ? {
                  top: item.rect.element.marginTop,
                  bottom: item.rect.element.marginBottom,
              }
            : {
                  top: 0,
                  bottom: 0,
              };
    };

    var calculateListHeight = function calculateListHeight(root) {
        var visual = 0;
        var bounds = 0;

        // get file list reference
        var scrollList = root.ref.list;
        var itemList = scrollList.childViews[0];
        var visibleChildren = itemList.childViews.filter(function(child) {
            return child.rect.element.height;
        });
        var children = root
            .query('GET_ACTIVE_ITEMS')
            .map(function(item) {
                return visibleChildren.find(function(child) {
                    return child.id === item.id;
                });
            })
            .filter(function(item) {
                return item;
            });

        // no children, done!
        if (children.length === 0) return { visual: visual, bounds: bounds };

        var horizontalSpace = itemList.rect.element.width;
        var dragIndex = getItemIndexByPosition(itemList, children, scrollList.dragCoordinates);

        var childRect = children[0].rect.element;

        var itemVerticalMargin = childRect.marginTop + childRect.marginBottom;
        var itemHorizontalMargin = childRect.marginLeft + childRect.marginRight;

        var itemWidth = childRect.width + itemHorizontalMargin;
        var itemHeight = childRect.height + itemVerticalMargin;

        var newItem = typeof dragIndex !== 'undefined' && dragIndex >= 0 ? 1 : 0;
        var removedItem = children.find(function(child) {
            return child.markedForRemoval && child.opacity < 0.45;
        })
            ? -1
            : 0;
        var verticalItemCount = children.length + newItem + removedItem;
        var itemsPerRow = getItemsPerRow(horizontalSpace, itemWidth);

        // stack
        if (itemsPerRow === 1) {
            children.forEach(function(item) {
                var height = item.rect.element.height + itemVerticalMargin;
                bounds += height;
                visual += height * item.opacity;
            });
        }
        // grid
        else {
            bounds = Math.ceil(verticalItemCount / itemsPerRow) * itemHeight;
            visual = bounds;
        }

        return { visual: visual, bounds: bounds };
    };

    var calculateRootBoundingBoxHeight = function calculateRootBoundingBoxHeight(root) {
        var height = root.ref.measureHeight || null;
        var cappedHeight = parseInt(root.style.maxHeight, 10) || null;
        var fixedHeight = height === 0 ? null : height;

        return {
            cappedHeight: cappedHeight,
            fixedHeight: fixedHeight,
        };
    };

    var exceedsMaxFiles = function exceedsMaxFiles(root, items) {
        var allowReplace = root.query('GET_ALLOW_REPLACE');
        var allowMultiple = root.query('GET_ALLOW_MULTIPLE');
        var totalItems = root.query('GET_TOTAL_ITEMS');
        var maxItems = root.query('GET_MAX_FILES');

        // total amount of items being dragged
        var totalBrowseItems = items.length;

        // if does not allow multiple items and dragging more than one item
        if (!allowMultiple && totalBrowseItems > 1) {
            root.dispatch('DID_THROW_MAX_FILES', {
                source: items,
                error: createResponse('warning', 0, 'Max files'),
            });

            return true;
        }

        // limit max items to one if not allowed to drop multiple items
        maxItems = allowMultiple ? maxItems : 1;

        if (!allowMultiple && allowReplace) {
            // There is only one item, so there is room to replace or add an item
            return false;
        }

        // no more room?
        var hasMaxItems = isInt(maxItems);
        if (hasMaxItems && totalItems + totalBrowseItems > maxItems) {
            root.dispatch('DID_THROW_MAX_FILES', {
                source: items,
                error: createResponse('warning', 0, 'Max files'),
            });

            return true;
        }

        return false;
    };

    var getDragIndex = function getDragIndex(list, children, position) {
        var itemList = list.childViews[0];
        return getItemIndexByPosition(itemList, children, {
            left: position.scopeLeft - itemList.rect.element.left,
            top:
                position.scopeTop -
                (list.rect.outer.top + list.rect.element.marginTop + list.rect.element.scrollTop),
        });
    };

    /**
     * Enable or disable file drop functionality
     */
    var toggleDrop = function toggleDrop(root) {
        var isAllowed = root.query('GET_ALLOW_DROP');
        var isDisabled = root.query('GET_DISABLED');
        var enabled = isAllowed && !isDisabled;
        if (enabled && !root.ref.hopper) {
            var hopper = createHopper(
                root.element,
                function(items) {
                    // allow quick validation of dropped items
                    var beforeDropFile =
                        root.query('GET_BEFORE_DROP_FILE') ||
                        function() {
                            return true;
                        };

                    // all items should be validated by all filters as valid
                    var dropValidation = root.query('GET_DROP_VALIDATION');
                    return dropValidation
                        ? items.every(function(item) {
                              return (
                                  applyFilters('ALLOW_HOPPER_ITEM', item, {
                                      query: root.query,
                                  }).every(function(result) {
                                      return result === true;
                                  }) && beforeDropFile(item)
                              );
                          })
                        : true;
                },
                {
                    filterItems: function filterItems(items) {
                        var ignoredFiles = root.query('GET_IGNORED_FILES');
                        return items.filter(function(item) {
                            if (isFile(item)) {
                                return !ignoredFiles.includes(item.name.toLowerCase());
                            }
                            return true;
                        });
                    },
                    catchesDropsOnPage: root.query('GET_DROP_ON_PAGE'),
                    requiresDropOnElement: root.query('GET_DROP_ON_ELEMENT'),
                }
            );

            hopper.onload = function(items, position) {
                // get item children elements and sort based on list sort
                var list = root.ref.list.childViews[0];
                var visibleChildren = list.childViews.filter(function(child) {
                    return child.rect.element.height;
                });
                var children = root
                    .query('GET_ACTIVE_ITEMS')
                    .map(function(item) {
                        return visibleChildren.find(function(child) {
                            return child.id === item.id;
                        });
                    })
                    .filter(function(item) {
                        return item;
                    });

                applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(function(
                    queue
                ) {
                    // these files don't fit so stop here
                    if (exceedsMaxFiles(root, queue)) return false;

                    // go
                    root.dispatch('ADD_ITEMS', {
                        items: queue,
                        index: getDragIndex(root.ref.list, children, position),
                        interactionMethod: InteractionMethod.DROP,
                    });
                });

                root.dispatch('DID_DROP', { position: position });

                root.dispatch('DID_END_DRAG', { position: position });
            };

            hopper.ondragstart = function(position) {
                root.dispatch('DID_START_DRAG', { position: position });
            };

            hopper.ondrag = debounce(function(position) {
                root.dispatch('DID_DRAG', { position: position });
            });

            hopper.ondragend = function(position) {
                root.dispatch('DID_END_DRAG', { position: position });
            };

            root.ref.hopper = hopper;

            root.ref.drip = root.appendChildView(root.createChildView(drip));
        } else if (!enabled && root.ref.hopper) {
            root.ref.hopper.destroy();
            root.ref.hopper = null;
            root.removeChildView(root.ref.drip);
        }
    };

    /**
     * Enable or disable browse functionality
     */
    var toggleBrowse = function toggleBrowse(root, props) {
        var isAllowed = root.query('GET_ALLOW_BROWSE');
        var isDisabled = root.query('GET_DISABLED');
        var enabled = isAllowed && !isDisabled;
        if (enabled && !root.ref.browser) {
            root.ref.browser = root.appendChildView(
                root.createChildView(
                    browser,
                    Object.assign({}, props, {
                        onload: function onload(items) {
                            applyFilterChain('ADD_ITEMS', items, {
                                dispatch: root.dispatch,
                            }).then(function(queue) {
                                // these files don't fit so stop here
                                if (exceedsMaxFiles(root, queue)) return false;

                                // add items!
                                root.dispatch('ADD_ITEMS', {
                                    items: queue,
                                    index: -1,
                                    interactionMethod: InteractionMethod.BROWSE,
                                });
                            });
                        },
                    })
                ),

                0
            );
        } else if (!enabled && root.ref.browser) {
            root.removeChildView(root.ref.browser);
            root.ref.browser = null;
        }
    };

    /**
     * Enable or disable paste functionality
     */
    var togglePaste = function togglePaste(root) {
        var isAllowed = root.query('GET_ALLOW_PASTE');
        var isDisabled = root.query('GET_DISABLED');
        var enabled = isAllowed && !isDisabled;
        if (enabled && !root.ref.paster) {
            root.ref.paster = createPaster();
            root.ref.paster.onload = function(items) {
                applyFilterChain('ADD_ITEMS', items, { dispatch: root.dispatch }).then(function(
                    queue
                ) {
                    // these files don't fit so stop here
                    if (exceedsMaxFiles(root, queue)) return false;

                    // add items!
                    root.dispatch('ADD_ITEMS', {
                        items: queue,
                        index: -1,
                        interactionMethod: InteractionMethod.PASTE,
                    });
                });
            };
        } else if (!enabled && root.ref.paster) {
            root.ref.paster.destroy();
            root.ref.paster = null;
        }
    };

    /**
     * Route actions
     */
    var route$5 = createRoute({
        DID_SET_ALLOW_BROWSE: function DID_SET_ALLOW_BROWSE(_ref5) {
            var root = _ref5.root,
                props = _ref5.props;
            toggleBrowse(root, props);
        },
        DID_SET_ALLOW_DROP: function DID_SET_ALLOW_DROP(_ref6) {
            var root = _ref6.root;
            toggleDrop(root);
        },
        DID_SET_ALLOW_PASTE: function DID_SET_ALLOW_PASTE(_ref7) {
            var root = _ref7.root;
            togglePaste(root);
        },
        DID_SET_DISABLED: function DID_SET_DISABLED(_ref8) {
            var root = _ref8.root,
                props = _ref8.props;
            toggleDrop(root);
            togglePaste(root);
            toggleBrowse(root, props);
            var isDisabled = root.query('GET_DISABLED');
            if (isDisabled) {
                root.element.dataset.disabled = 'disabled';
            } else {
                // delete root.element.dataset.disabled; <= this does not work on iOS 10
                root.element.removeAttribute('data-disabled');
            }
        },
    });

    var root = createView({
        name: 'root',
        read: function read(_ref9) {
            var root = _ref9.root;
            if (root.ref.measure) {
                root.ref.measureHeight = root.ref.measure.offsetHeight;
            }
        },
        create: create$e,
        write: write$9,
        destroy: function destroy(_ref10) {
            var root = _ref10.root;
            if (root.ref.paster) {
                root.ref.paster.destroy();
            }
            if (root.ref.hopper) {
                root.ref.hopper.destroy();
            }
            root.element.removeEventListener('touchmove', prevent);
            root.element.removeEventListener('gesturestart', prevent);
        },
        mixins: {
            styles: ['height'],
        },
    });

    // creates the app
    var createApp = function createApp() {
        var initialOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        // let element
        var originalElement = null;

        // get default options
        var defaultOptions = getOptions();

        // create the data store, this will contain all our app info
        var store = createStore(
            // initial state (should be serializable)
            createInitialState(defaultOptions),

            // queries
            [queries, createOptionQueries(defaultOptions)],

            // action handlers
            [actions, createOptionActions(defaultOptions)]
        );

        // set initial options
        store.dispatch('SET_OPTIONS', { options: initialOptions });

        // kick thread if visibility changes
        var visibilityHandler = function visibilityHandler() {
            if (document.hidden) return;
            store.dispatch('KICK');
        };
        document.addEventListener('visibilitychange', visibilityHandler);

        // re-render on window resize start and finish
        var resizeDoneTimer = null;
        var isResizing = false;
        var isResizingHorizontally = false;
        var initialWindowWidth = null;
        var currentWindowWidth = null;
        var resizeHandler = function resizeHandler() {
            if (!isResizing) {
                isResizing = true;
            }
            clearTimeout(resizeDoneTimer);
            resizeDoneTimer = setTimeout(function() {
                isResizing = false;
                initialWindowWidth = null;
                currentWindowWidth = null;
                if (isResizingHorizontally) {
                    isResizingHorizontally = false;
                    store.dispatch('DID_STOP_RESIZE');
                }
            }, 500);
        };
        window.addEventListener('resize', resizeHandler);

        // render initial view
        var view = root(store, { id: getUniqueId() });

        //
        // PRIVATE API -------------------------------------------------------------------------------------
        //
        var isResting = false;
        var isHidden = false;

        var readWriteApi = {
            // necessary for update loop

            /**
             * Reads from dom (never call manually)
             * @private
             */
            _read: function _read() {
                // test if we're resizing horizontally
                // TODO: see if we can optimize this by measuring root rect
                if (isResizing) {
                    currentWindowWidth = window.innerWidth;
                    if (!initialWindowWidth) {
                        initialWindowWidth = currentWindowWidth;
                    }

                    if (!isResizingHorizontally && currentWindowWidth !== initialWindowWidth) {
                        store.dispatch('DID_START_RESIZE');
                        isResizingHorizontally = true;
                    }
                }

                if (isHidden && isResting) {
                    // test if is no longer hidden
                    isResting = view.element.offsetParent === null;
                }

                // if resting, no need to read as numbers will still all be correct
                if (isResting) return;

                // read view data
                view._read();

                // if is hidden we need to know so we exit rest mode when revealed
                isHidden = view.rect.element.hidden;
            },

            /**
             * Writes to dom (never call manually)
             * @private
             */
            _write: function _write(ts) {
                // get all actions from store
                var actions = store
                    .processActionQueue()

                    // filter out set actions (these will automatically trigger DID_SET)
                    .filter(function(action) {
                        return !/^SET_/.test(action.type);
                    });

                // if was idling and no actions stop here
                if (isResting && !actions.length) return;

                // some actions might trigger events
                routeActionsToEvents(actions);

                // update the view
                isResting = view._write(ts, actions, isResizingHorizontally);

                // will clean up all archived items
                removeReleasedItems(store.query('GET_ITEMS'));

                // now idling
                if (isResting) {
                    store.processDispatchQueue();
                }
            },
        };

        //
        // EXPOSE EVENTS -------------------------------------------------------------------------------------
        //
        var createEvent = function createEvent(name) {
            return function(data) {
                // create default event
                var event = {
                    type: name,
                };

                // no data to add
                if (!data) {
                    return event;
                }

                // copy relevant props
                if (data.hasOwnProperty('error')) {
                    event.error = data.error ? Object.assign({}, data.error) : null;
                }

                if (data.status) {
                    event.status = Object.assign({}, data.status);
                }

                if (data.file) {
                    event.output = data.file;
                }

                // only source is available, else add item if possible
                if (data.source) {
                    event.file = data.source;
                } else if (data.item || data.id) {
                    var item = data.item ? data.item : store.query('GET_ITEM', data.id);
                    event.file = item ? createItemAPI(item) : null;
                }

                // map all items in a possible items array
                if (data.items) {
                    event.items = data.items.map(createItemAPI);
                }

                // if this is a progress event add the progress amount
                if (/progress/.test(name)) {
                    event.progress = data.progress;
                }

                // copy relevant props
                if (data.hasOwnProperty('origin') && data.hasOwnProperty('target')) {
                    event.origin = data.origin;
                    event.target = data.target;
                }

                return event;
            };
        };

        var eventRoutes = {
            DID_DESTROY: createEvent('destroy'),

            DID_INIT: createEvent('init'),

            DID_THROW_MAX_FILES: createEvent('warning'),

            DID_INIT_ITEM: createEvent('initfile'),
            DID_START_ITEM_LOAD: createEvent('addfilestart'),
            DID_UPDATE_ITEM_LOAD_PROGRESS: createEvent('addfileprogress'),
            DID_LOAD_ITEM: createEvent('addfile'),

            DID_THROW_ITEM_INVALID: [createEvent('error'), createEvent('addfile')],

            DID_THROW_ITEM_LOAD_ERROR: [createEvent('error'), createEvent('addfile')],

            DID_THROW_ITEM_REMOVE_ERROR: [createEvent('error'), createEvent('removefile')],

            DID_PREPARE_OUTPUT: createEvent('preparefile'),

            DID_START_ITEM_PROCESSING: createEvent('processfilestart'),
            DID_UPDATE_ITEM_PROCESS_PROGRESS: createEvent('processfileprogress'),
            DID_ABORT_ITEM_PROCESSING: createEvent('processfileabort'),
            DID_COMPLETE_ITEM_PROCESSING: createEvent('processfile'),
            DID_COMPLETE_ITEM_PROCESSING_ALL: createEvent('processfiles'),
            DID_REVERT_ITEM_PROCESSING: createEvent('processfilerevert'),

            DID_THROW_ITEM_PROCESSING_ERROR: [createEvent('error'), createEvent('processfile')],

            DID_REMOVE_ITEM: createEvent('removefile'),

            DID_UPDATE_ITEMS: createEvent('updatefiles'),

            DID_ACTIVATE_ITEM: createEvent('activatefile'),

            DID_REORDER_ITEMS: createEvent('reorderfiles'),
        };

        var exposeEvent = function exposeEvent(event) {
            // create event object to be dispatched
            var detail = Object.assign({ pond: exports }, event);
            delete detail.type;
            view.element.dispatchEvent(
                new CustomEvent('FilePond:' + event.type, {
                    // event info
                    detail: detail,

                    // event behaviour
                    bubbles: true,
                    cancelable: true,
                    composed: true, // triggers listeners outside of shadow root
                })
            );

            // event object to params used for `on()` event handlers and callbacks `oninit()`
            var params = [];

            // if is possible error event, make it the first param
            if (event.hasOwnProperty('error')) {
                params.push(event.error);
            }

            // file is always section
            if (event.hasOwnProperty('file')) {
                params.push(event.file);
            }

            // append other props
            var filtered = ['type', 'error', 'file'];
            Object.keys(event)
                .filter(function(key) {
                    return !filtered.includes(key);
                })
                .forEach(function(key) {
                    return params.push(event[key]);
                });

            // on(type, () => { })
            exports.fire.apply(exports, [event.type].concat(params));

            // oninit = () => {}
            var handler = store.query('GET_ON' + event.type.toUpperCase());
            if (handler) {
                handler.apply(void 0, params);
            }
        };

        var routeActionsToEvents = function routeActionsToEvents(actions) {
            if (!actions.length) return;
            actions
                .filter(function(action) {
                    return eventRoutes[action.type];
                })
                .forEach(function(action) {
                    var routes = eventRoutes[action.type];
                    (Array.isArray(routes) ? routes : [routes]).forEach(function(route) {
                        // this isn't fantastic, but because of the stacking of settimeouts plugins can handle the did_load before the did_init
                        if (action.type === 'DID_INIT_ITEM') {
                            exposeEvent(route(action.data));
                        } else {
                            setTimeout(function() {
                                exposeEvent(route(action.data));
                            }, 0);
                        }
                    });
                });
        };

        //
        // PUBLIC API -------------------------------------------------------------------------------------
        //
        var setOptions = function setOptions(options) {
            return store.dispatch('SET_OPTIONS', { options: options });
        };

        var getFile = function getFile(query) {
            return store.query('GET_ACTIVE_ITEM', query);
        };

        var prepareFile = function prepareFile(query) {
            return new Promise(function(resolve, reject) {
                store.dispatch('REQUEST_ITEM_PREPARE', {
                    query: query,
                    success: function success(item) {
                        resolve(item);
                    },
                    failure: function failure(error) {
                        reject(error);
                    },
                });
            });
        };

        var addFile = function addFile(source) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            return new Promise(function(resolve, reject) {
                addFiles([{ source: source, options: options }], { index: options.index })
                    .then(function(items) {
                        return resolve(items && items[0]);
                    })
                    .catch(reject);
            });
        };

        var isFilePondFile = function isFilePondFile(obj) {
            return obj.file && obj.id;
        };

        var removeFile = function removeFile(query, options) {
            // if only passed options
            if (typeof query === 'object' && !isFilePondFile(query) && !options) {
                options = query;
                query = undefined;
            }

            // request item removal
            store.dispatch('REMOVE_ITEM', Object.assign({}, options, { query: query }));

            // see if item has been removed
            return store.query('GET_ACTIVE_ITEM', query) === null;
        };

        var addFiles = function addFiles() {
            for (
                var _len = arguments.length, args = new Array(_len), _key = 0;
                _key < _len;
                _key++
            ) {
                args[_key] = arguments[_key];
            }
            return new Promise(function(resolve, reject) {
                var sources = [];
                var options = {};

                // user passed a sources array
                if (isArray(args[0])) {
                    sources.push.apply(sources, args[0]);
                    Object.assign(options, args[1] || {});
                } else {
                    // user passed sources as arguments, last one might be options object
                    var lastArgument = args[args.length - 1];
                    if (typeof lastArgument === 'object' && !(lastArgument instanceof Blob)) {
                        Object.assign(options, args.pop());
                    }

                    // add rest to sources
                    sources.push.apply(sources, args);
                }

                store.dispatch('ADD_ITEMS', {
                    items: sources,
                    index: options.index,
                    interactionMethod: InteractionMethod.API,
                    success: resolve,
                    failure: reject,
                });
            });
        };

        var getFiles = function getFiles() {
            return store.query('GET_ACTIVE_ITEMS');
        };

        var processFile = function processFile(query) {
            return new Promise(function(resolve, reject) {
                store.dispatch('REQUEST_ITEM_PROCESSING', {
                    query: query,
                    success: function success(item) {
                        resolve(item);
                    },
                    failure: function failure(error) {
                        reject(error);
                    },
                });
            });
        };

        var prepareFiles = function prepareFiles() {
            for (
                var _len2 = arguments.length, args = new Array(_len2), _key2 = 0;
                _key2 < _len2;
                _key2++
            ) {
                args[_key2] = arguments[_key2];
            }
            var queries = Array.isArray(args[0]) ? args[0] : args;
            var items = queries.length ? queries : getFiles();
            return Promise.all(items.map(prepareFile));
        };

        var processFiles = function processFiles() {
            for (
                var _len3 = arguments.length, args = new Array(_len3), _key3 = 0;
                _key3 < _len3;
                _key3++
            ) {
                args[_key3] = arguments[_key3];
            }
            var queries = Array.isArray(args[0]) ? args[0] : args;
            if (!queries.length) {
                var files = getFiles().filter(function(item) {
                    return (
                        !(item.status === ItemStatus.IDLE && item.origin === FileOrigin.LOCAL) &&
                        item.status !== ItemStatus.PROCESSING &&
                        item.status !== ItemStatus.PROCESSING_COMPLETE &&
                        item.status !== ItemStatus.PROCESSING_REVERT_ERROR
                    );
                });

                return Promise.all(files.map(processFile));
            }
            return Promise.all(queries.map(processFile));
        };

        var removeFiles = function removeFiles() {
            for (
                var _len4 = arguments.length, args = new Array(_len4), _key4 = 0;
                _key4 < _len4;
                _key4++
            ) {
                args[_key4] = arguments[_key4];
            }

            var queries = Array.isArray(args[0]) ? args[0] : args;

            var options;
            if (typeof queries[queries.length - 1] === 'object') {
                options = queries.pop();
            } else if (Array.isArray(args[0])) {
                options = args[1];
            }

            var files = getFiles();

            if (!queries.length)
                return Promise.all(
                    files.map(function(file) {
                        return removeFile(file, options);
                    })
                );

            // when removing by index the indexes shift after each file removal so we need to convert indexes to ids
            var mappedQueries = queries
                .map(function(query) {
                    return isNumber(query) ? (files[query] ? files[query].id : null) : query;
                })
                .filter(function(query) {
                    return query;
                });

            return mappedQueries.map(function(q) {
                return removeFile(q, options);
            });
        };

        var exports = Object.assign(
            {},

            on(),
            {},

            readWriteApi,
            {},

            createOptionAPI(store, defaultOptions),
            {
                /**
                 * Override options defined in options object
                 * @param options
                 */
                setOptions: setOptions,

                /**
                 * Load the given file
                 * @param source - the source of the file (either a File, base64 data uri or url)
                 * @param options - object, { index: 0 }
                 */
                addFile: addFile,

                /**
                 * Load the given files
                 * @param sources - the sources of the files to load
                 * @param options - object, { index: 0 }
                 */
                addFiles: addFiles,

                /**
                 * Returns the file objects matching the given query
                 * @param query { string, number, null }
                 */
                getFile: getFile,

                /**
                 * Upload file with given name
                 * @param query { string, number, null  }
                 */
                processFile: processFile,

                /**
                 * Request prepare output for file with given name
                 * @param query { string, number, null  }
                 */
                prepareFile: prepareFile,

                /**
                 * Removes a file by its name
                 * @param query { string, number, null  }
                 */
                removeFile: removeFile,

                /**
                 * Moves a file to a new location in the files list
                 */
                moveFile: function moveFile(query, index) {
                    return store.dispatch('MOVE_ITEM', { query: query, index: index });
                },

                /**
                 * Returns all files (wrapped in public api)
                 */
                getFiles: getFiles,

                /**
                 * Starts uploading all files
                 */
                processFiles: processFiles,

                /**
                 * Clears all files from the files list
                 */
                removeFiles: removeFiles,

                /**
                 * Starts preparing output of all files
                 */
                prepareFiles: prepareFiles,

                /**
                 * Sort list of files
                 */
                sort: function sort(compare) {
                    return store.dispatch('SORT', { compare: compare });
                },

                /**
                 * Browse the file system for a file
                 */
                browse: function browse() {
                    // needs to be trigger directly as user action needs to be traceable (is not traceable in requestAnimationFrame)
                    var input = view.element.querySelector('input[type=file]');
                    if (input) {
                        input.click();
                    }
                },

                /**
                 * Destroys the app
                 */
                destroy: function destroy() {
                    // request destruction
                    exports.fire('destroy', view.element);

                    // stop active processes (file uploads, fetches, stuff like that)
                    // loop over items and depending on states call abort for ongoing processes
                    store.dispatch('ABORT_ALL');

                    // destroy view
                    view._destroy();

                    // stop listening to resize
                    window.removeEventListener('resize', resizeHandler);

                    // stop listening to the visiblitychange event
                    document.removeEventListener('visibilitychange', visibilityHandler);

                    // dispatch destroy
                    store.dispatch('DID_DESTROY');
                },

                /**
                 * Inserts the plugin before the target element
                 */
                insertBefore: function insertBefore$1(element) {
                    return insertBefore(view.element, element);
                },

                /**
                 * Inserts the plugin after the target element
                 */
                insertAfter: function insertAfter$1(element) {
                    return insertAfter(view.element, element);
                },

                /**
                 * Appends the plugin to the target element
                 */
                appendTo: function appendTo(element) {
                    return element.appendChild(view.element);
                },

                /**
                 * Replaces an element with the app
                 */
                replaceElement: function replaceElement(element) {
                    // insert the app before the element
                    insertBefore(view.element, element);

                    // remove the original element
                    element.parentNode.removeChild(element);

                    // remember original element
                    originalElement = element;
                },

                /**
                 * Restores the original element
                 */
                restoreElement: function restoreElement() {
                    if (!originalElement) {
                        return; // no element to restore
                    }

                    // restore original element
                    insertAfter(originalElement, view.element);

                    // remove our element
                    view.element.parentNode.removeChild(view.element);

                    // remove reference
                    originalElement = null;
                },

                /**
                 * Returns true if the app root is attached to given element
                 * @param element
                 */
                isAttachedTo: function isAttachedTo(element) {
                    return view.element === element || originalElement === element;
                },

                /**
                 * Returns the root element
                 */
                element: {
                    get: function get() {
                        return view.element;
                    },
                },

                /**
                 * Returns the current pond status
                 */
                status: {
                    get: function get() {
                        return store.query('GET_STATUS');
                    },
                },
            }
        );

        // Done!
        store.dispatch('DID_INIT');

        // create actual api object
        return createObject(exports);
    };

    var createAppObject = function createAppObject() {
        var customOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        // default options
        var defaultOptions = {};
        forin(getOptions(), function(key, value) {
            defaultOptions[key] = value[0];
        });

        // set app options
        var app = createApp(
            Object.assign(
                {},

                defaultOptions,
                {},

                customOptions
            )
        );

        // return the plugin instance
        return app;
    };

    var lowerCaseFirstLetter = function lowerCaseFirstLetter(string) {
        return string.charAt(0).toLowerCase() + string.slice(1);
    };

    var attributeNameToPropertyName = function attributeNameToPropertyName(attributeName) {
        return toCamels(attributeName.replace(/^data-/, ''));
    };

    var mapObject = function mapObject(object, propertyMap) {
        // remove unwanted
        forin(propertyMap, function(selector, mapping) {
            forin(object, function(property, value) {
                // create regexp shortcut
                var selectorRegExp = new RegExp(selector);

                // tests if
                var matches = selectorRegExp.test(property);

                // no match, skip
                if (!matches) {
                    return;
                }

                // if there's a mapping, the original property is always removed
                delete object[property];

                // should only remove, we done!
                if (mapping === false) {
                    return;
                }

                // move value to new property
                if (isString(mapping)) {
                    object[mapping] = value;
                    return;
                }

                // move to group
                var group = mapping.group;
                if (isObject(mapping) && !object[group]) {
                    object[group] = {};
                }

                object[group][lowerCaseFirstLetter(property.replace(selectorRegExp, ''))] = value;
            });

            // do submapping
            if (mapping.mapping) {
                mapObject(object[mapping.group], mapping.mapping);
            }
        });
    };

    var getAttributesAsObject = function getAttributesAsObject(node) {
        var attributeMapping =
            arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        // turn attributes into object
        var attributes = [];
        forin(node.attributes, function(index) {
            attributes.push(node.attributes[index]);
        });

        var output = attributes
            .filter(function(attribute) {
                return attribute.name;
            })
            .reduce(function(obj, attribute) {
                var value = attr(node, attribute.name);

                obj[attributeNameToPropertyName(attribute.name)] =
                    value === attribute.name ? true : value;
                return obj;
            }, {});

        // do mapping of object properties
        mapObject(output, attributeMapping);

        return output;
    };

    var createAppAtElement = function createAppAtElement(element) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        // how attributes of the input element are mapped to the options for the plugin
        var attributeMapping = {
            // translate to other name
            '^class$': 'className',
            '^multiple$': 'allowMultiple',
            '^capture$': 'captureMethod',
            '^webkitdirectory$': 'allowDirectoriesOnly',

            // group under single property
            '^server': {
                group: 'server',
                mapping: {
                    '^process': {
                        group: 'process',
                    },

                    '^revert': {
                        group: 'revert',
                    },

                    '^fetch': {
                        group: 'fetch',
                    },

                    '^restore': {
                        group: 'restore',
                    },

                    '^load': {
                        group: 'load',
                    },
                },
            },

            // don't include in object
            '^type$': false,
            '^files$': false,
        };

        // add additional option translators
        applyFilters('SET_ATTRIBUTE_TO_OPTION_MAP', attributeMapping);

        // create final options object by setting options object and then overriding options supplied on element
        var mergedOptions = Object.assign({}, options);

        var attributeOptions = getAttributesAsObject(
            element.nodeName === 'FIELDSET' ? element.querySelector('input[type=file]') : element,
            attributeMapping
        );

        // merge with options object
        Object.keys(attributeOptions).forEach(function(key) {
            if (isObject(attributeOptions[key])) {
                if (!isObject(mergedOptions[key])) {
                    mergedOptions[key] = {};
                }
                Object.assign(mergedOptions[key], attributeOptions[key]);
            } else {
                mergedOptions[key] = attributeOptions[key];
            }
        });

        // if parent is a fieldset, get files from parent by selecting all input fields that are not file upload fields
        // these will then be automatically set to the initial files
        mergedOptions.files = (options.files || []).concat(
            Array.from(element.querySelectorAll('input:not([type=file])')).map(function(input) {
                return {
                    source: input.value,
                    options: {
                        type: input.dataset.type,
                    },
                };
            })
        );

        // build plugin
        var app = createAppObject(mergedOptions);

        // add already selected files
        if (element.files) {
            Array.from(element.files).forEach(function(file) {
                app.addFile(file);
            });
        }

        // replace the target element
        app.replaceElement(element);

        // expose
        return app;
    };

    // if an element is passed, we create the instance at that element, if not, we just create an up object
    var createApp$1 = function createApp() {
        return isNode(arguments.length <= 0 ? undefined : arguments[0])
            ? createAppAtElement.apply(void 0, arguments)
            : createAppObject.apply(void 0, arguments);
    };

    var PRIVATE_METHODS = ['fire', '_read', '_write'];

    var createAppAPI = function createAppAPI(app) {
        var api = {};

        copyObjectPropertiesToObject(app, api, PRIVATE_METHODS);

        return api;
    };

    /**
     * Replaces placeholders in given string with replacements
     * @param string - "Foo {bar}""
     * @param replacements - { "bar": 10 }
     */
    var replaceInString = function replaceInString(string, replacements) {
        return string.replace(/(?:{([a-zA-Z]+)})/g, function(match, group) {
            return replacements[group];
        });
    };

    var createWorker = function createWorker(fn) {
        var workerBlob = new Blob(['(', fn.toString(), ')()'], {
            type: 'application/javascript',
        });

        var workerURL = URL.createObjectURL(workerBlob);
        var worker = new Worker(workerURL);

        return {
            transfer: function transfer(message, cb) {},
            post: function post(message, cb, transferList) {
                var id = getUniqueId();

                worker.onmessage = function(e) {
                    if (e.data.id === id) {
                        cb(e.data.message);
                    }
                };

                worker.postMessage(
                    {
                        id: id,
                        message: message,
                    },

                    transferList
                );
            },
            terminate: function terminate() {
                worker.terminate();
                URL.revokeObjectURL(workerURL);
            },
        };
    };

    var loadImage = function loadImage(url) {
        return new Promise(function(resolve, reject) {
            var img = new Image();
            img.onload = function() {
                resolve(img);
            };
            img.onerror = function(e) {
                reject(e);
            };
            img.src = url;
        });
    };

    var renameFile = function renameFile(file, name) {
        var renamedFile = file.slice(0, file.size, file.type);
        renamedFile.lastModifiedDate = file.lastModifiedDate;
        renamedFile.name = name;
        return renamedFile;
    };

    var copyFile = function copyFile(file) {
        return renameFile(file, file.name);
    };

    // already registered plugins (can't register twice)
    var registeredPlugins = [];

    // pass utils to plugin
    var createAppPlugin = function createAppPlugin(plugin) {
        // already registered
        if (registeredPlugins.includes(plugin)) {
            return;
        }

        // remember this plugin
        registeredPlugins.push(plugin);

        // setup!
        var pluginOutline = plugin({
            addFilter: addFilter,
            utils: {
                Type: Type,
                forin: forin,
                isString: isString,
                isFile: isFile,
                toNaturalFileSize: toNaturalFileSize,
                replaceInString: replaceInString,
                getExtensionFromFilename: getExtensionFromFilename,
                getFilenameWithoutExtension: getFilenameWithoutExtension,
                guesstimateMimeType: guesstimateMimeType,
                getFileFromBlob: getFileFromBlob,
                getFilenameFromURL: getFilenameFromURL,
                createRoute: createRoute,
                createWorker: createWorker,
                createView: createView,
                createItemAPI: createItemAPI,
                loadImage: loadImage,
                copyFile: copyFile,
                renameFile: renameFile,
                createBlob: createBlob,
                applyFilterChain: applyFilterChain,
                text: text,
                getNumericAspectRatioFromString: getNumericAspectRatioFromString,
            },

            views: {
                fileActionButton: fileActionButton,
            },
        });

        // add plugin options to default options
        extendDefaultOptions(pluginOutline.options);
    };

    // feature detection used by supported() method
    var isOperaMini = function isOperaMini() {
        return Object.prototype.toString.call(window.operamini) === '[object OperaMini]';
    };
    var hasPromises = function hasPromises() {
        return 'Promise' in window;
    };
    var hasBlobSlice = function hasBlobSlice() {
        return 'slice' in Blob.prototype;
    };
    var hasCreateObjectURL = function hasCreateObjectURL() {
        return 'URL' in window && 'createObjectURL' in window.URL;
    };
    var hasVisibility = function hasVisibility() {
        return 'visibilityState' in document;
    };
    var hasTiming = function hasTiming() {
        return 'performance' in window;
    }; // iOS 8.x
    var hasCSSSupports = function hasCSSSupports() {
        return 'supports' in (window.CSS || {});
    }; // use to detect Safari 9+
    var isIE11 = function isIE11() {
        return /MSIE|Trident/.test(window.navigator.userAgent);
    };

    var supported = (function() {
        // Runs immediately and then remembers result for subsequent calls
        var isSupported =
            // Has to be a browser
            isBrowser() &&
            // Can't run on Opera Mini due to lack of everything
            !isOperaMini() &&
            // Require these APIs to feature detect a modern browser
            hasVisibility() &&
            hasPromises() &&
            hasBlobSlice() &&
            hasCreateObjectURL() &&
            hasTiming() &&
            // doesn't need CSSSupports but is a good way to detect Safari 9+ (we do want to support IE11 though)
            (hasCSSSupports() || isIE11());

        return function() {
            return isSupported;
        };
    })();

    /**
     * Plugin internal state (over all instances)
     */
    var state = {
        // active app instances, used to redraw the apps and to find the later
        apps: [],
    };

    // plugin name
    var name = 'filepond';

    /**
     * Public Plugin methods
     */
    var fn = function fn() {};
    exports.Status = {};
    exports.FileStatus = {};
    exports.FileOrigin = {};
    exports.OptionTypes = {};
    exports.create = fn;
    exports.destroy = fn;
    exports.parse = fn;
    exports.find = fn;
    exports.registerPlugin = fn;
    exports.getOptions = fn;
    exports.setOptions = fn;

    // if not supported, no API
    if (supported()) {
        // start painter and fire load event
        createPainter(
            function() {
                state.apps.forEach(function(app) {
                    return app._read();
                });
            },
            function(ts) {
                state.apps.forEach(function(app) {
                    return app._write(ts);
                });
            }
        );

        // fire loaded event so we know when FilePond is available
        var dispatch = function dispatch() {
            // let others know we have area ready
            document.dispatchEvent(
                new CustomEvent('FilePond:loaded', {
                    detail: {
                        supported: supported,
                        create: exports.create,
                        destroy: exports.destroy,
                        parse: exports.parse,
                        find: exports.find,
                        registerPlugin: exports.registerPlugin,
                        setOptions: exports.setOptions,
                    },
                })
            );

            // clean up event
            document.removeEventListener('DOMContentLoaded', dispatch);
        };

        if (document.readyState !== 'loading') {
            // move to back of execution queue, FilePond should have been exported by then
            setTimeout(function() {
                return dispatch();
            }, 0);
        } else {
            document.addEventListener('DOMContentLoaded', dispatch);
        }

        // updates the OptionTypes object based on the current options
        var updateOptionTypes = function updateOptionTypes() {
            return forin(getOptions(), function(key, value) {
                exports.OptionTypes[key] = value[1];
            });
        };

        exports.Status = Object.assign({}, Status);
        exports.FileOrigin = Object.assign({}, FileOrigin);
        exports.FileStatus = Object.assign({}, ItemStatus);

        exports.OptionTypes = {};
        updateOptionTypes();

        // create method, creates apps and adds them to the app array
        exports.create = function create() {
            var app = createApp$1.apply(void 0, arguments);
            app.on('destroy', exports.destroy);
            state.apps.push(app);
            return createAppAPI(app);
        };

        // destroys apps and removes them from the app array
        exports.destroy = function destroy(hook) {
            // returns true if the app was destroyed successfully
            var indexToRemove = state.apps.findIndex(function(app) {
                return app.isAttachedTo(hook);
            });
            if (indexToRemove >= 0) {
                // remove from apps
                var app = state.apps.splice(indexToRemove, 1)[0];

                // restore original dom element
                app.restoreElement();

                return true;
            }

            return false;
        };

        // parses the given context for plugins (does not include the context element itself)
        exports.parse = function parse(context) {
            // get all possible hooks
            var matchedHooks = Array.from(context.querySelectorAll('.' + name));

            // filter out already active hooks
            var newHooks = matchedHooks.filter(function(newHook) {
                return !state.apps.find(function(app) {
                    return app.isAttachedTo(newHook);
                });
            });

            // create new instance for each hook
            return newHooks.map(function(hook) {
                return exports.create(hook);
            });
        };

        // returns an app based on the given element hook
        exports.find = function find(hook) {
            var app = state.apps.find(function(app) {
                return app.isAttachedTo(hook);
            });
            if (!app) {
                return null;
            }
            return createAppAPI(app);
        };

        // adds a plugin extension
        exports.registerPlugin = function registerPlugin() {
            for (
                var _len = arguments.length, plugins = new Array(_len), _key = 0;
                _key < _len;
                _key++
            ) {
                plugins[_key] = arguments[_key];
            }

            // register plugins
            plugins.forEach(createAppPlugin);

            // update OptionTypes, each plugin might have extended the default options
            updateOptionTypes();
        };

        exports.getOptions = function getOptions$1() {
            var opts = {};
            forin(getOptions(), function(key, value) {
                opts[key] = value[0];
            });
            return opts;
        };

        exports.setOptions = function setOptions$1(opts) {
            if (isObject(opts)) {
                // update existing plugins
                state.apps.forEach(function(app) {
                    app.setOptions(opts);
                });

                // override defaults
                setOptions(opts);
            }

            // return new options
            return exports.getOptions();
        };
    }

    exports.supported = supported;

    Object.defineProperty(exports, '__esModule', { value: true });
});


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/DateRangePicker.js":
/*!****************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/DateRangePicker.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DateRangePicker)
/* harmony export */ });
/* harmony import */ var _lib_event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/event.js */ "./node_modules/flowbite-datepicker/js/lib/event.js");
/* harmony import */ var _lib_date_format_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/date-format.js */ "./node_modules/flowbite-datepicker/js/lib/date-format.js");
/* harmony import */ var _Datepicker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Datepicker.js */ "./node_modules/flowbite-datepicker/js/Datepicker.js");




// filter out the config options inapproprite to pass to Datepicker
function filterOptions(options) {
  const newOpts = Object.assign({}, options);

  delete newOpts.inputs;
  delete newOpts.allowOneSidedRange;
  delete newOpts.maxNumberOfDates; // to ensure each datepicker handles a single date

  return newOpts;
}

function setupDatepicker(rangepicker, changeDateListener, el, options) {
  (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_0__.registerListeners)(rangepicker, [
    [el, 'changeDate', changeDateListener],
  ]);
  new _Datepicker_js__WEBPACK_IMPORTED_MODULE_2__["default"](el, options, rangepicker);
}

function onChangeDate(rangepicker, ev) {
  // to prevent both datepickers trigger the other side's update each other
  if (rangepicker._updating) {
    return;
  }
  rangepicker._updating = true;

  const target = ev.target;
  if (target.datepicker === undefined) {
    return;
  }

  const datepickers = rangepicker.datepickers;
  const setDateOptions = {render: false};
  const changedSide = rangepicker.inputs.indexOf(target);
  const otherSide = changedSide === 0 ? 1 : 0;
  const changedDate = datepickers[changedSide].dates[0];
  const otherDate = datepickers[otherSide].dates[0];

  if (changedDate !== undefined && otherDate !== undefined) {
    // if the start of the range > the end, swap them
    if (changedSide === 0 && changedDate > otherDate) {
      datepickers[0].setDate(otherDate, setDateOptions);
      datepickers[1].setDate(changedDate, setDateOptions);
    } else if (changedSide === 1 && changedDate < otherDate) {
      datepickers[0].setDate(changedDate, setDateOptions);
      datepickers[1].setDate(otherDate, setDateOptions);
    }
  } else if (!rangepicker.allowOneSidedRange) {
    // to prevent the range from becoming one-sided, copy changed side's
    // selection (no matter if it's empty) to the other side
    if (changedDate !== undefined || otherDate !== undefined) {
      setDateOptions.clear = true;
      datepickers[otherSide].setDate(datepickers[changedSide].dates, setDateOptions);
    }
  }
  datepickers[0].picker.update().render();
  datepickers[1].picker.update().render();
  delete rangepicker._updating;
}

/**
 * Class representing a date range picker
 */
class DateRangePicker  {
  /**
   * Create a date range picker
   * @param  {Element} element - element to bind a date range picker
   * @param  {Object} [options] - config options
   */
  constructor(element, options = {}) {
    const inputs = Array.isArray(options.inputs)
      ? options.inputs
      : Array.from(element.querySelectorAll('input'));
    if (inputs.length < 2) {
      return;
    }

    element.rangepicker = this;
    this.element = element;
    this.inputs = inputs.slice(0, 2);
    this.allowOneSidedRange = !!options.allowOneSidedRange;

    const changeDateListener = onChangeDate.bind(null, this);
    const cleanOptions = filterOptions(options);
    // in order for initial date setup to work right when pcicLvel > 0,
    // let Datepicker constructor add the instance to the rangepicker
    const datepickers = [];
    Object.defineProperty(this, 'datepickers', {
      get() {
        return datepickers;
      },
    });
    setupDatepicker(this, changeDateListener, this.inputs[0], cleanOptions);
    setupDatepicker(this, changeDateListener, this.inputs[1], cleanOptions);
    Object.freeze(datepickers);
    // normalize the range if inital dates are given
    if (datepickers[0].dates.length > 0) {
      onChangeDate(this, {target: this.inputs[0]});
    } else if (datepickers[1].dates.length > 0) {
      onChangeDate(this, {target: this.inputs[1]});
    }
  }

  /**
   * @type {Array} - selected date of the linked date pickers
   */
  get dates() {
    return this.datepickers.length === 2
      ? [
          this.datepickers[0].dates[0],
          this.datepickers[1].dates[0],
        ]
      : undefined;
  }

  /**
   * Set new values to the config options
   * @param {Object} options - config options to update
   */
  setOptions(options) {
    this.allowOneSidedRange = !!options.allowOneSidedRange;

    const cleanOptions = filterOptions(options);
    this.datepickers[0].setOptions(cleanOptions);
    this.datepickers[1].setOptions(cleanOptions);
  }

  /**
   * Destroy the DateRangePicker instance
   * @return {DateRangePicker} - the instance destroyed
   */
  destroy() {
    this.datepickers[0].destroy();
    this.datepickers[1].destroy();
    (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_0__.unregisterListeners)(this);
    delete this.element.rangepicker;
  }

  /**
   * Get the start and end dates of the date range
   *
   * The method returns Date objects by default. If format string is passed,
   * it returns date strings formatted in given format.
   * The result array always contains 2 items (start date/end date) and
   * undefined is used for unselected side. (e.g. If none is selected,
   * the result will be [undefined, undefined]. If only the end date is set
   * when allowOneSidedRange config option is true, [undefined, endDate] will
   * be returned.)
   *
   * @param  {String} [format] - Format string to stringify the dates
   * @return {Array} - Start and end dates
   */
  getDates(format = undefined) {
    const callback = format
      ? date => (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_1__.formatDate)(date, format, this.datepickers[0].config.locale)
      : date => new Date(date);

    return this.dates.map(date => date === undefined ? date : callback(date));
  }

  /**
   * Set the start and end dates of the date range
   *
   * The method calls datepicker.setDate() internally using each of the
   * arguments in start→end order.
   *
   * When a clear: true option object is passed instead of a date, the method
   * clears the date.
   *
   * If an invalid date, the same date as the current one or an option object
   * without clear: true is passed, the method considers that argument as an
   * "ineffective" argument because calling datepicker.setDate() with those
   * values makes no changes to the date selection.
   *
   * When the allowOneSidedRange config option is false, passing {clear: true}
   * to clear the range works only when it is done to the last effective
   * argument (in other words, passed to rangeEnd or to rangeStart along with
   * ineffective rangeEnd). This is because when the date range is changed,
   * it gets normalized based on the last change at the end of the changing
   * process.
   *
   * @param {Date|Number|String|Object} rangeStart - Start date of the range
   * or {clear: true} to clear the date
   * @param {Date|Number|String|Object} rangeEnd - End date of the range
   * or {clear: true} to clear the date
   */
  setDates(rangeStart, rangeEnd) {
    const [datepicker0, datepicker1] = this.datepickers;
    const origDates = this.dates;

    // If range normalization runs on every change, we can't set a new range
    // that starts after the end of the current range correctly because the
    // normalization process swaps start↔︎end right after setting the new start
    // date. To prevent this, the normalization process needs to run once after
    // both of the new dates are set.
    this._updating = true;
    datepicker0.setDate(rangeStart);
    datepicker1.setDate(rangeEnd);
    delete this._updating;

    if (datepicker1.dates[0] !== origDates[1]) {
      onChangeDate(this, {target: this.inputs[1]});
    } else if (datepicker0.dates[0] !== origDates[0]) {
      onChangeDate(this, {target: this.inputs[0]});
    }
  }
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/Datepicker.js":
/*!***********************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/Datepicker.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Datepicker)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");
/* harmony import */ var _lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/date-format.js */ "./node_modules/flowbite-datepicker/js/lib/date-format.js");
/* harmony import */ var _lib_event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/event.js */ "./node_modules/flowbite-datepicker/js/lib/event.js");
/* harmony import */ var _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./i18n/base-locales.js */ "./node_modules/flowbite-datepicker/js/i18n/base-locales.js");
/* harmony import */ var _options_defaultOptions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./options/defaultOptions.js */ "./node_modules/flowbite-datepicker/js/options/defaultOptions.js");
/* harmony import */ var _options_processOptions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./options/processOptions.js */ "./node_modules/flowbite-datepicker/js/options/processOptions.js");
/* harmony import */ var _picker_Picker_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./picker/Picker.js */ "./node_modules/flowbite-datepicker/js/picker/Picker.js");
/* harmony import */ var _events_functions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./events/functions.js */ "./node_modules/flowbite-datepicker/js/events/functions.js");
/* harmony import */ var _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./events/inputFieldListeners.js */ "./node_modules/flowbite-datepicker/js/events/inputFieldListeners.js");
/* harmony import */ var _events_otherListeners_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./events/otherListeners.js */ "./node_modules/flowbite-datepicker/js/events/otherListeners.js");












function stringifyDates(dates, config) {
  return dates
    .map(dt => (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.formatDate)(dt, config.format, config.locale))
    .join(config.dateDelimiter);
}

// parse input dates and create an array of time values for selection
// returns undefined if there are no valid dates in inputDates
// when origDates (current selection) is passed, the function works to mix
// the input dates into the current selection
function processInputDates(datepicker, inputDates, clear = false) {
  const {config, dates: origDates, rangepicker} = datepicker;
  if (inputDates.length === 0) {
    // empty input is considered valid unless origiDates is passed
    return clear ? [] : undefined;
  }

  const rangeEnd = rangepicker && datepicker === rangepicker.datepickers[1];
  let newDates = inputDates.reduce((dates, dt) => {
    let date = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(dt, config.format, config.locale);
    if (date === undefined) {
      return dates;
    }
    if (config.pickLevel > 0) {
      // adjust to 1st of the month/Jan 1st of the year
      // or to the last day of the monh/Dec 31st of the year if the datepicker
      // is the range-end picker of a rangepicker
      const dt = new Date(date);
      if (config.pickLevel === 1) {
        date = rangeEnd
          ? dt.setMonth(dt.getMonth() + 1, 0)
          : dt.setDate(1);
      } else {
        date = rangeEnd
          ? dt.setFullYear(dt.getFullYear() + 1, 0, 0)
          : dt.setMonth(0, 1);
      }
    }
    if (
      (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.isInRange)(date, config.minDate, config.maxDate)
      && !dates.includes(date)
      && !config.datesDisabled.includes(date)
      && !config.daysOfWeekDisabled.includes(new Date(date).getDay())
    ) {
      dates.push(date);
    }
    return dates;
  }, []);
  if (newDates.length === 0) {
    return;
  }
  if (config.multidate && !clear) {
    // get the synmetric difference between origDates and newDates
    newDates = newDates.reduce((dates, date) => {
      if (!origDates.includes(date)) {
        dates.push(date);
      }
      return dates;
    }, origDates.filter(date => !newDates.includes(date)));
  }
  // do length check always because user can input multiple dates regardless of the mode
  return config.maxNumberOfDates && newDates.length > config.maxNumberOfDates
    ? newDates.slice(config.maxNumberOfDates * -1)
    : newDates;
}

// refresh the UI elements
// modes: 1: input only, 2, picker only, 3 both
function refreshUI(datepicker, mode = 3, quickRender = true) {
  const {config, picker, inputField} = datepicker;
  if (mode & 2) {
    const newView = picker.active ? config.pickLevel : config.startView;
    picker.update().changeView(newView).render(quickRender);
  }
  if (mode & 1 && inputField) {
    inputField.value = stringifyDates(datepicker.dates, config);
  }
}

function setDate(datepicker, inputDates, options) {
  let {clear, render, autohide} = options;
  if (render === undefined) {
    render = true;
  }
  if (!render) {
    autohide = false;
  } else if (autohide === undefined) {
    autohide = datepicker.config.autohide;
  }

  const newDates = processInputDates(datepicker, inputDates, clear);
  if (!newDates) {
    return;
  }
  if (newDates.toString() !== datepicker.dates.toString()) {
    datepicker.dates = newDates;
    refreshUI(datepicker, render ? 3 : 1);
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(datepicker, 'changeDate');
  } else {
    refreshUI(datepicker, 1);
  }
  if (autohide) {
    datepicker.hide();
  }
}

/**
 * Class representing a date picker
 */
class Datepicker {
  /**
   * Create a date picker
   * @param  {Element} element - element to bind a date picker
   * @param  {Object} [options] - config options
   * @param  {DateRangePicker} [rangepicker] - DateRangePicker instance the
   * date picker belongs to. Use this only when creating date picker as a part
   * of date range picker
   */
  constructor(element, options = {}, rangepicker = undefined) {
    element.datepicker = this;
    this.element = element;

    // set up config
    const config = this.config = Object.assign({
      buttonClass: (options.buttonClass && String(options.buttonClass)) || 'button',
      container: document.body,
      defaultViewDate: (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.today)(),
      maxDate: undefined,
      minDate: undefined,
    }, (0,_options_processOptions_js__WEBPACK_IMPORTED_MODULE_6__["default"])(_options_defaultOptions_js__WEBPACK_IMPORTED_MODULE_5__["default"], this));
    this._options = options;
    Object.assign(config, (0,_options_processOptions_js__WEBPACK_IMPORTED_MODULE_6__["default"])(options, this));

    // configure by type
    const inline = this.inline = element.tagName !== 'INPUT';
    let inputField;
    let initialDates;

    if (inline) {
      config.container = element;
      initialDates = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToArray)(element.dataset.date, config.dateDelimiter);
      delete element.dataset.date;
    } else {
      const container = options.container ? document.querySelector(options.container) : null;
      if (container) {
        config.container = container;
      }
      inputField = this.inputField = element;
      inputField.classList.add('datepicker-input');
      initialDates = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToArray)(inputField.value, config.dateDelimiter);
    }
    if (rangepicker) {
      // check validiry
      const index = rangepicker.inputs.indexOf(inputField);
      const datepickers = rangepicker.datepickers;
      if (index < 0 || index > 1 || !Array.isArray(datepickers)) {
        throw Error('Invalid rangepicker object.');
      }
      // attach itaelf to the rangepicker here so that processInputDates() can
      // determine if this is the range-end picker of the rangepicker while
      // setting inital values when pickLevel > 0
      datepickers[index] = this;
      // add getter for rangepicker
      Object.defineProperty(this, 'rangepicker', {
        get() {
          return rangepicker;
        },
      });
    }

    // set initial dates
    this.dates = [];
    // process initial value
    const inputDateValues = processInputDates(this, initialDates);
    if (inputDateValues && inputDateValues.length > 0) {
      this.dates = inputDateValues;
    }
    if (inputField) {
      inputField.value = stringifyDates(this.dates, config);
    }

    const picker = this.picker = new _picker_Picker_js__WEBPACK_IMPORTED_MODULE_7__["default"](this);

    if (inline) {
      this.show();
    } else {
      // set up event listeners in other modes
      const onMousedownDocument = _events_otherListeners_js__WEBPACK_IMPORTED_MODULE_10__.onClickOutside.bind(null, this);
      const listeners = [
        [inputField, 'keydown', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onKeydown.bind(null, this)],
        [inputField, 'focus', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onFocus.bind(null, this)],
        [inputField, 'mousedown', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onMousedown.bind(null, this)],
        [inputField, 'click', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickInput.bind(null, this)],
        [inputField, 'paste', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onPaste.bind(null, this)],
        [document, 'mousedown', onMousedownDocument],
        [document, 'touchstart', onMousedownDocument],
        [window, 'resize', picker.place.bind(picker)]
      ];
      (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_3__.registerListeners)(this, listeners);
    }
  }

  /**
   * Format Date object or time value in given format and language
   * @param  {Date|Number} date - date or time value to format
   * @param  {String|Object} format - format string or object that contains
   * toDisplay() custom formatter, whose signature is
   * - args:
   *   - date: {Date} - Date instance of the date passed to the method
   *   - format: {Object} - the format object passed to the method
   *   - locale: {Object} - locale for the language specified by `lang`
   * - return:
   *     {String} formatted date
   * @param  {String} [lang=en] - language code for the locale to use
   * @return {String} formatted date
   */
  static formatDate(date, format, lang) {
    return (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.formatDate)(date, format, lang && _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales[lang] || _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales.en);
  }

  /**
   * Parse date string
   * @param  {String|Date|Number} dateStr - date string, Date object or time
   * value to parse
   * @param  {String|Object} format - format string or object that contains
   * toValue() custom parser, whose signature is
   * - args:
   *   - dateStr: {String|Date|Number} - the dateStr passed to the method
   *   - format: {Object} - the format object passed to the method
   *   - locale: {Object} - locale for the language specified by `lang`
   * - return:
   *     {Date|Number} parsed date or its time value
   * @param  {String} [lang=en] - language code for the locale to use
   * @return {Number} time value of parsed date
   */
  static parseDate(dateStr, format, lang) {
    return (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(dateStr, format, lang && _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales[lang] || _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales.en);
  }

  /**
   * @type {Object} - Installed locales in `[languageCode]: localeObject` format
   * en`:_English (US)_ is pre-installed.
   */
  static get locales() {
    return _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales;
  }

  /**
   * @type {Boolean} - Whether the picker element is shown. `true` whne shown
   */
  get active() {
    return !!(this.picker && this.picker.active);
  }

  /**
   * @type {HTMLDivElement} - DOM object of picker element
   */
  get pickerElement() {
    return this.picker ? this.picker.element : undefined;
  }

  /**
   * Set new values to the config options
   * @param {Object} options - config options to update
   */
  setOptions(options) {
    const picker = this.picker;
    const newOptions = (0,_options_processOptions_js__WEBPACK_IMPORTED_MODULE_6__["default"])(options, this);
    Object.assign(this._options, options);
    Object.assign(this.config, newOptions);
    picker.setOptions(newOptions);

    refreshUI(this, 3);
  }

  /**
   * Show the picker element
   */
  show() {
    if (this.inputField) {
      if (this.inputField.disabled) {
        return;
      }
      if (this.inputField !== document.activeElement) {
        this._showing = true;
        this.inputField.focus();
        delete this._showing;
      }
    }
    this.picker.show();
  }

  /**
   * Hide the picker element
   * Not available on inline picker
   */
  hide() {
    if (this.inline) {
      return;
    }
    this.picker.hide();
    this.picker.update().changeView(this.config.startView).render();
  }

  /**
   * Destroy the Datepicker instance
   * @return {Detepicker} - the instance destroyed
   */
  destroy() {
    this.hide();
    (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_3__.unregisterListeners)(this);
    this.picker.detach();
    if (!this.inline) {
      this.inputField.classList.remove('datepicker-input');
    }
    delete this.element.datepicker;
    return this;
  }

  /**
   * Get the selected date(s)
   *
   * The method returns a Date object of selected date by default, and returns
   * an array of selected dates in multidate mode. If format string is passed,
   * it returns date string(s) formatted in given format.
   *
   * @param  {String} [format] - Format string to stringify the date(s)
   * @return {Date|String|Date[]|String[]} - selected date(s), or if none is
   * selected, empty array in multidate mode and untitled in sigledate mode
   */
  getDate(format = undefined) {
    const callback = format
      ? date => (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.formatDate)(date, format, this.config.locale)
      : date => new Date(date);

    if (this.config.multidate) {
      return this.dates.map(callback);
    }
    if (this.dates.length > 0) {
      return callback(this.dates[0]);
    }
  }

  /**
   * Set selected date(s)
   *
   * In multidate mode, you can pass multiple dates as a series of arguments
   * or an array. (Since each date is parsed individually, the type of the
   * dates doesn't have to be the same.)
   * The given dates are used to toggle the select status of each date. The
   * number of selected dates is kept from exceeding the length set to
   * maxNumberOfDates.
   *
   * With clear: true option, the method can be used to clear the selection
   * and to replace the selection instead of toggling in multidate mode.
   * If the option is passed with no date arguments or an empty dates array,
   * it works as "clear" (clear the selection then set nothing), and if the
   * option is passed with new dates to select, it works as "replace" (clear
   * the selection then set the given dates)
   *
   * When render: false option is used, the method omits re-rendering the
   * picker element. In this case, you need to call refresh() method later in
   * order for the picker element to reflect the changes. The input field is
   * refreshed always regardless of this option.
   *
   * When invalid (unparsable, repeated, disabled or out-of-range) dates are
   * passed, the method ignores them and applies only valid ones. In the case
   * that all the given dates are invalid, which is distinguished from passing
   * no dates, the method considers it as an error and leaves the selection
   * untouched.
   *
   * @param {...(Date|Number|String)|Array} [dates] - Date strings, Date
   * objects, time values or mix of those for new selection
   * @param {Object} [options] - function options
   * - clear: {boolean} - Whether to clear the existing selection
   *     defualt: false
   * - render: {boolean} - Whether to re-render the picker element
   *     default: true
   * - autohide: {boolean} - Whether to hide the picker element after re-render
   *     Ignored when used with render: false
   *     default: config.autohide
   */
  setDate(...args) {
    const dates = [...args];
    const opts = {};
    const lastArg = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.lastItemOf)(args);
    if (
      typeof lastArg === 'object'
      && !Array.isArray(lastArg)
      && !(lastArg instanceof Date)
      && lastArg
    ) {
      Object.assign(opts, dates.pop());
    }

    const inputDates = Array.isArray(dates[0]) ? dates[0] : dates;
    setDate(this, inputDates, opts);
  }

  /**
   * Update the selected date(s) with input field's value
   * Not available on inline picker
   *
   * The input field will be refreshed with properly formatted date string.
   *
   * @param  {Object} [options] - function options
   * - autohide: {boolean} - whether to hide the picker element after refresh
   *     default: false
   */
  update(options = undefined) {
    if (this.inline) {
      return;
    }

    const opts = {clear: true, autohide: !!(options && options.autohide)};
    const inputDates = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToArray)(this.inputField.value, this.config.dateDelimiter);
    setDate(this, inputDates, opts);
  }

  /**
   * Refresh the picker element and the associated input field
   * @param {String} [target] - target item when refreshing one item only
   * 'picker' or 'input'
   * @param {Boolean} [forceRender] - whether to re-render the picker element
   * regardless of its state instead of optimized refresh
   */
  refresh(target = undefined, forceRender = false) {
    if (target && typeof target !== 'string') {
      forceRender = target;
      target = undefined;
    }

    let mode;
    if (target === 'picker') {
      mode = 2;
    } else if (target === 'input') {
      mode = 1;
    } else {
      mode = 3;
    }
    refreshUI(this, mode, !forceRender);
  }

  /**
   * Enter edit mode
   * Not available on inline picker or when the picker element is hidden
   */
  enterEditMode() {
    if (this.inline || !this.picker.active || this.editMode) {
      return;
    }
    this.editMode = true;
    this.inputField.classList.add('in-edit', 'border-blue-700');
  }

  /**
   * Exit from edit mode
   * Not available on inline picker
   * @param  {Object} [options] - function options
   * - update: {boolean} - whether to call update() after exiting
   *     If false, input field is revert to the existing selection
   *     default: false
   */
  exitEditMode(options = undefined) {
    if (this.inline || !this.editMode) {
      return;
    }
    const opts = Object.assign({update: false}, options);
    delete this.editMode;
    this.inputField.classList.remove('in-edit', 'border-blue-700');
    if (opts.update) {
      this.update(opts);
    }
  }
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/events/functions.js":
/*!*****************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/events/functions.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "goToPrevOrNext": () => (/* binding */ goToPrevOrNext),
/* harmony export */   "switchView": () => (/* binding */ switchView),
/* harmony export */   "triggerDatepickerEvent": () => (/* binding */ triggerDatepickerEvent),
/* harmony export */   "unfocus": () => (/* binding */ unfocus)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");



function triggerDatepickerEvent(datepicker, type) {
  const detail = {
    date: datepicker.getDate(),
    viewDate: new Date(datepicker.picker.viewDate),
    viewId: datepicker.picker.currentView.id,
    datepicker,
  };
  datepicker.element.dispatchEvent(new CustomEvent(type, {detail}));
}

// direction: -1 (to previous), 1 (to next)
function goToPrevOrNext(datepicker, direction) {
  const {minDate, maxDate} = datepicker.config;
  const {currentView, viewDate} = datepicker.picker;
  let newViewDate;
  switch (currentView.id) {
    case 0:
      newViewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addMonths)(viewDate, direction);
      break;
    case 1:
      newViewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears)(viewDate, direction);
      break;
    default:
      newViewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears)(viewDate, direction * currentView.navStep);
  }
  newViewDate = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.limitToRange)(newViewDate, minDate, maxDate);
  datepicker.picker.changeFocus(newViewDate).render();
}

function switchView(datepicker) {
  const viewId = datepicker.picker.currentView.id;
  if (viewId === datepicker.config.maxView) {
    return;
  }
  datepicker.picker.changeView(viewId + 1).render();
}

function unfocus(datepicker) {
  if (datepicker.config.updateOnBlur) {
    datepicker.update({autohide: true});
  } else {
    datepicker.refresh('input');
    datepicker.hide();
  }
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/events/inputFieldListeners.js":
/*!***************************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/events/inputFieldListeners.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onClickInput": () => (/* binding */ onClickInput),
/* harmony export */   "onFocus": () => (/* binding */ onFocus),
/* harmony export */   "onKeydown": () => (/* binding */ onKeydown),
/* harmony export */   "onMousedown": () => (/* binding */ onMousedown),
/* harmony export */   "onPaste": () => (/* binding */ onPaste)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./functions.js */ "./node_modules/flowbite-datepicker/js/events/functions.js");




// Find the closest date that doesn't meet the condition for unavailable date
// Returns undefined if no available date is found
// addFn: function to calculate the next date
//   - args: time value, amount
// increase: amount to pass to addFn
// testFn: function to test the unavailablity of the date
//   - args: time value; retun: true if unavailable
function findNextAvailableOne(date, addFn, increase, testFn, min, max) {
  if (!(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.isInRange)(date, min, max)) {
    return;
  }
  if (testFn(date)) {
    const newDate = addFn(date, increase);
    return findNextAvailableOne(newDate, addFn, increase, testFn, min, max);
  }
  return date;
}

// direction: -1 (left/up), 1 (right/down)
// vertical: true for up/down, false for left/right
function moveByArrowKey(datepicker, ev, direction, vertical) {
  const picker = datepicker.picker;
  const currentView = picker.currentView;
  const step = currentView.step || 1;
  let viewDate = picker.viewDate;
  let addFn;
  let testFn;
  switch (currentView.id) {
    case 0:
      if (vertical) {
        viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addDays)(viewDate, direction * 7);
      } else if (ev.ctrlKey || ev.metaKey) {
        viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears)(viewDate, direction);
      } else {
        viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addDays)(viewDate, direction);
      }
      addFn = _lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addDays;
      testFn = (date) => currentView.disabled.includes(date);
      break;
    case 1:
      viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addMonths)(viewDate, vertical ? direction * 4 : direction);
      addFn = _lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addMonths;
      testFn = (date) => {
        const dt = new Date(date);
        const {year, disabled} = currentView;
        return dt.getFullYear() === year && disabled.includes(dt.getMonth());
      };
      break;
    default:
      viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears)(viewDate, direction * (vertical ? 4 : 1) * step);
      addFn = _lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears;
      testFn = date => currentView.disabled.includes((0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(date, step));
  }
  viewDate = findNextAvailableOne(
    viewDate,
    addFn,
    direction < 0 ? -step : step,
    testFn,
    currentView.minDate,
    currentView.maxDate
  );
  if (viewDate !== undefined) {
    picker.changeFocus(viewDate).render();
  }
}

function onKeydown(datepicker, ev) {
  if (ev.key === 'Tab') {
    (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.unfocus)(datepicker);
    return;
  }

  const picker = datepicker.picker;
  const {id, isMinView} = picker.currentView;
  if (!picker.active) {
    switch (ev.key) {
      case 'ArrowDown':
      case 'Escape':
        picker.show();
        break;
      case 'Enter':
        datepicker.update();
        break;
      default:
        return;
    }
  } else if (datepicker.editMode) {
    switch (ev.key) {
      case 'Escape':
        picker.hide();
        break;
      case 'Enter':
        datepicker.exitEditMode({update: true, autohide: datepicker.config.autohide});
        break;
      default:
        return;
    }
  } else {
    switch (ev.key) {
      case 'Escape':
        picker.hide();
        break;
      case 'ArrowLeft':
        if (ev.ctrlKey || ev.metaKey) {
          (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.goToPrevOrNext)(datepicker, -1);
        } else if (ev.shiftKey) {
          datepicker.enterEditMode();
          return;
        } else {
          moveByArrowKey(datepicker, ev, -1, false);
        }
        break;
      case 'ArrowRight':
        if (ev.ctrlKey || ev.metaKey) {
          (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.goToPrevOrNext)(datepicker, 1);
        } else if (ev.shiftKey) {
          datepicker.enterEditMode();
          return;
        } else {
          moveByArrowKey(datepicker, ev, 1, false);
        }
        break;
      case 'ArrowUp':
        if (ev.ctrlKey || ev.metaKey) {
          (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.switchView)(datepicker);
        } else if (ev.shiftKey) {
          datepicker.enterEditMode();
          return;
        } else {
          moveByArrowKey(datepicker, ev, -1, true);
        }
        break;
      case 'ArrowDown':
        if (ev.shiftKey && !ev.ctrlKey && !ev.metaKey) {
          datepicker.enterEditMode();
          return;
        }
        moveByArrowKey(datepicker, ev, 1, true);
        break;
      case 'Enter':
        if (isMinView) {
          datepicker.setDate(picker.viewDate);
        } else {
          picker.changeView(id - 1).render();
        }
        break;
      case 'Backspace':
      case 'Delete':
        datepicker.enterEditMode();
        return;
      default:
        if (ev.key.length === 1 && !ev.ctrlKey && !ev.metaKey) {
          datepicker.enterEditMode();
        }
        return;
    }
  }
  ev.preventDefault();
  ev.stopPropagation();
}

function onFocus(datepicker) {
  if (datepicker.config.showOnFocus && !datepicker._showing) {
    datepicker.show();
  }
}

// for the prevention for entering edit mode while getting focus on click
function onMousedown(datepicker, ev) {
  const el = ev.target;
  if (datepicker.picker.active || datepicker.config.showOnClick) {
    el._active = el === document.activeElement;
    el._clicking = setTimeout(() => {
      delete el._active;
      delete el._clicking;
    }, 2000);
  }
}

function onClickInput(datepicker, ev) {
  const el = ev.target;
  if (!el._clicking) {
    return;
  }
  clearTimeout(el._clicking);
  delete el._clicking;

  if (el._active) {
    datepicker.enterEditMode();
  }
  delete el._active;

  if (datepicker.config.showOnClick) {
    datepicker.show();
  }
}

function onPaste(datepicker, ev) {
  if (ev.clipboardData.types.includes('text/plain')) {
    datepicker.enterEditMode();
  }
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/events/otherListeners.js":
/*!**********************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/events/otherListeners.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onClickOutside": () => (/* binding */ onClickOutside)
/* harmony export */ });
/* harmony import */ var _lib_event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/event.js */ "./node_modules/flowbite-datepicker/js/lib/event.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions.js */ "./node_modules/flowbite-datepicker/js/events/functions.js");



// for the `document` to delegate the events from outside the picker/input field
function onClickOutside(datepicker, ev) {
  const element = datepicker.element;
  if (element !== document.activeElement) {
    return;
  }
  const pickerElem = datepicker.picker.element;
  if ((0,_lib_event_js__WEBPACK_IMPORTED_MODULE_0__.findElementInEventPath)(ev, el => el === element || el === pickerElem)) {
    return;
  }
  (0,_functions_js__WEBPACK_IMPORTED_MODULE_1__.unfocus)(datepicker);
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/events/pickerListeners.js":
/*!***********************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/events/pickerListeners.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onClickClearBtn": () => (/* binding */ onClickClearBtn),
/* harmony export */   "onClickNextBtn": () => (/* binding */ onClickNextBtn),
/* harmony export */   "onClickPicker": () => (/* binding */ onClickPicker),
/* harmony export */   "onClickPrevBtn": () => (/* binding */ onClickPrevBtn),
/* harmony export */   "onClickTodayBtn": () => (/* binding */ onClickTodayBtn),
/* harmony export */   "onClickView": () => (/* binding */ onClickView),
/* harmony export */   "onClickViewSwitch": () => (/* binding */ onClickViewSwitch)
/* harmony export */ });
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");
/* harmony import */ var _lib_event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/event.js */ "./node_modules/flowbite-datepicker/js/lib/event.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./functions.js */ "./node_modules/flowbite-datepicker/js/events/functions.js");




function goToSelectedMonthOrYear(datepicker, selection) {
  const picker = datepicker.picker;
  const viewDate = new Date(picker.viewDate);
  const viewId = picker.currentView.id;
  const newDate = viewId === 1
    ? (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_0__.addMonths)(viewDate, selection - viewDate.getMonth())
    : (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_0__.addYears)(viewDate, selection - viewDate.getFullYear());

  picker.changeFocus(newDate).changeView(viewId - 1).render();
}

function onClickTodayBtn(datepicker) {
  const picker = datepicker.picker;
  const currentDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_0__.today)();
  if (datepicker.config.todayBtnMode === 1) {
    if (datepicker.config.autohide) {
      datepicker.setDate(currentDate);
      return;
    }
    datepicker.setDate(currentDate, {render: false});
    picker.update();
  }
  if (picker.viewDate !== currentDate) {
    picker.changeFocus(currentDate);
  }
  picker.changeView(0).render();
}

function onClickClearBtn(datepicker) {
  datepicker.setDate({clear: true});
}

function onClickViewSwitch(datepicker) {
  (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.switchView)(datepicker);
}

function onClickPrevBtn(datepicker) {
  (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.goToPrevOrNext)(datepicker, -1);
}

function onClickNextBtn(datepicker) {
  (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.goToPrevOrNext)(datepicker, 1);
}

// For the picker's main block to delegete the events from `datepicker-cell`s
function onClickView(datepicker, ev) {
  const target = (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_1__.findElementInEventPath)(ev, '.datepicker-cell');
  if (!target || target.classList.contains('disabled')) {
    return;
  }

  const {id, isMinView} = datepicker.picker.currentView;
  if (isMinView) {
    datepicker.setDate(Number(target.dataset.date));
  } else if (id === 1) {
    goToSelectedMonthOrYear(datepicker, Number(target.dataset.month));
  } else {
    goToSelectedMonthOrYear(datepicker, Number(target.dataset.year));
  }
}

function onClickPicker(datepicker) {
  if (!datepicker.inline && !datepicker.config.disableTouchKeyboard) {
    datepicker.inputField.focus();
  }
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/i18n/base-locales.js":
/*!******************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/i18n/base-locales.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "locales": () => (/* binding */ locales)
/* harmony export */ });
// default locales
const locales = {
  en: {
    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    today: "Today",
    clear: "Clear",
    titleFormat: "MM y"
  }
};


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/i18n/locales/lv.js":
/*!****************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/i18n/locales/lv.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Latvian translation for bootstrap-datepicker
 * Artis Avotins <artis@apit.lv>
 */

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  lv: {
    days: ["Svētdiena", "Pirmdiena", "Otrdiena", "Trešdiena", "Ceturtdiena", "Piektdiena", "Sestdiena"],
    daysShort: ["Sv", "P", "O", "T", "C", "Pk", "S"],
    daysMin: ["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"],
    months: ["Janvāris", "Februāris", "Marts", "Aprīlis", "Maijs", "Jūnijs", "Jūlijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"],
    monthsShort: ["Jan", "Feb", "Mar", "Apr", "Mai", "Jūn", "Jūl", "Aug", "Sep", "Okt", "Nov", "Dec"],
    monthsTitle: "Mēneši",
    today: "Šodien",
    clear: "Nodzēst",
    weekStart: 1
  }
});


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/lib/date-format.js":
/*!****************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/lib/date-format.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatDate": () => (/* binding */ formatDate),
/* harmony export */   "parseDate": () => (/* binding */ parseDate),
/* harmony export */   "reFormatTokens": () => (/* binding */ reFormatTokens),
/* harmony export */   "reNonDateParts": () => (/* binding */ reNonDateParts)
/* harmony export */ });
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");



// pattern for format parts
const reFormatTokens = /dd?|DD?|mm?|MM?|yy?(?:yy)?/;
// pattern for non date parts
const reNonDateParts = /[\s!-/:-@[-`{-~年月日]+/;
// cache for persed formats
let knownFormats = {};
// parse funtions for date parts
const parseFns = {
  y(date, year) {
    return new Date(date).setFullYear(parseInt(year, 10));
  },
  m(date, month, locale) {
    const newDate = new Date(date);
    let monthIndex = parseInt(month, 10) - 1;

    if (isNaN(monthIndex)) {
      if (!month) {
        return NaN;
      }

      const monthName = month.toLowerCase();
      const compareNames = name => name.toLowerCase().startsWith(monthName);
      // compare with both short and full names because some locales have periods
      // in the short names (not equal to the first X letters of the full names)
      monthIndex = locale.monthsShort.findIndex(compareNames);
      if (monthIndex < 0) {
        monthIndex = locale.months.findIndex(compareNames);
      }
      if (monthIndex < 0) {
        return NaN;
      }
    }

    newDate.setMonth(monthIndex);
    return newDate.getMonth() !== normalizeMonth(monthIndex)
      ? newDate.setDate(0)
      : newDate.getTime();
  },
  d(date, day) {
    return new Date(date).setDate(parseInt(day, 10));
  },
};
// format functions for date parts
const formatFns = {
  d(date) {
    return date.getDate();
  },
  dd(date) {
    return padZero(date.getDate(), 2);
  },
  D(date, locale) {
    return locale.daysShort[date.getDay()];
  },
  DD(date, locale) {
    return locale.days[date.getDay()];
  },
  m(date) {
    return date.getMonth() + 1;
  },
  mm(date) {
    return padZero(date.getMonth() + 1, 2);
  },
  M(date, locale) {
    return locale.monthsShort[date.getMonth()];
  },
  MM(date, locale) {
    return locale.months[date.getMonth()];
  },
  y(date) {
    return date.getFullYear();
  },
  yy(date) {
    return padZero(date.getFullYear(), 2).slice(-2);
  },
  yyyy(date) {
    return padZero(date.getFullYear(), 4);
  },
};

// get month index in normal range (0 - 11) from any number
function normalizeMonth(monthIndex) {
  return monthIndex > -1 ? monthIndex % 12 : normalizeMonth(monthIndex + 12);
}

function padZero(num, length) {
  return num.toString().padStart(length, '0');
}

function parseFormatString(format) {
  if (typeof format !== 'string') {
    throw new Error("Invalid date format.");
  }
  if (format in knownFormats) {
    return knownFormats[format];
  }

  // sprit the format string into parts and seprators
  const separators = format.split(reFormatTokens);
  const parts = format.match(new RegExp(reFormatTokens, 'g'));
  if (separators.length === 0 || !parts) {
    throw new Error("Invalid date format.");
  }

  // collect format functions used in the format
  const partFormatters = parts.map(token => formatFns[token]);

  // collect parse function keys used in the format
  // iterate over parseFns' keys in order to keep the order of the keys.
  const partParserKeys = Object.keys(parseFns).reduce((keys, key) => {
    const token = parts.find(part => part[0] !== 'D' && part[0].toLowerCase() === key);
    if (token) {
      keys.push(key);
    }
    return keys;
  }, []);

  return knownFormats[format] = {
    parser(dateStr, locale) {
      const dateParts = dateStr.split(reNonDateParts).reduce((dtParts, part, index) => {
        if (part.length > 0 && parts[index]) {
          const token = parts[index][0];
          if (token === 'M') {
            dtParts.m = part;
          } else if (token !== 'D') {
            dtParts[token] = part;
          }
        }
        return dtParts;
      }, {});

      // iterate over partParserkeys so that the parsing is made in the oder
      // of year, month and day to prevent the day parser from correcting last
      // day of month wrongly
      return partParserKeys.reduce((origDate, key) => {
        const newDate = parseFns[key](origDate, dateParts[key], locale);
        // ingnore the part failed to parse
        return isNaN(newDate) ? origDate : newDate;
      }, (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.today)());
    },
    formatter(date, locale) {
      let dateStr = partFormatters.reduce((str, fn, index) => {
        return str += `${separators[index]}${fn(date, locale)}`;
      }, '');
      // separators' length is always parts' length + 1,
      return dateStr += (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.lastItemOf)(separators);
    },
  };
}

function parseDate(dateStr, format, locale) {
  if (dateStr instanceof Date || typeof dateStr === 'number') {
    const date = (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.stripTime)(dateStr);
    return isNaN(date) ? undefined : date;
  }
  if (!dateStr) {
    return undefined;
  }
  if (dateStr === 'today') {
    return (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.today)();
  }

  if (format && format.toValue) {
    const date = format.toValue(dateStr, format, locale);
    return isNaN(date) ? undefined : (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.stripTime)(date);
  }

  return parseFormatString(format).parser(dateStr, locale);
}

function formatDate(date, format, locale) {
  if (isNaN(date) || (!date && date !== 0)) {
    return '';
  }

  const dateObj = typeof date === 'number' ? new Date(date) : date;

  if (format.toDisplay) {
    return format.toDisplay(dateObj, format, locale);
  }

  return parseFormatString(format).formatter(dateObj, locale);
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/lib/date.js":
/*!*********************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/lib/date.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addDays": () => (/* binding */ addDays),
/* harmony export */   "addMonths": () => (/* binding */ addMonths),
/* harmony export */   "addWeeks": () => (/* binding */ addWeeks),
/* harmony export */   "addYears": () => (/* binding */ addYears),
/* harmony export */   "dateValue": () => (/* binding */ dateValue),
/* harmony export */   "dayOfTheWeekOf": () => (/* binding */ dayOfTheWeekOf),
/* harmony export */   "getWeek": () => (/* binding */ getWeek),
/* harmony export */   "startOfYearPeriod": () => (/* binding */ startOfYearPeriod),
/* harmony export */   "stripTime": () => (/* binding */ stripTime),
/* harmony export */   "today": () => (/* binding */ today)
/* harmony export */ });
function stripTime(timeValue) {
  return new Date(timeValue).setHours(0, 0, 0, 0);
}

function today() {
  return new Date().setHours(0, 0, 0, 0);
}

// Get the time value of the start of given date or year, month and day
function dateValue(...args) {
  switch (args.length) {
    case 0:
      return today();
    case 1:
      return stripTime(args[0]);
  }

  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999
  const newDate = new Date(0);
  newDate.setFullYear(...args);
  return newDate.setHours(0, 0, 0, 0);
}

function addDays(date, amount) {
  const newDate = new Date(date);
  return newDate.setDate(newDate.getDate() + amount);
}

function addWeeks(date, amount) {
  return addDays(date, amount * 7);
}

function addMonths(date, amount) {
  // If the day of the date is not in the new month, the last day of the new
  // month will be returned. e.g. Jan 31 + 1 month → Feb 28 (not Mar 03)
  const newDate = new Date(date);
  const monthsToSet = newDate.getMonth() + amount;
  let expectedMonth = monthsToSet % 12;
  if (expectedMonth < 0) {
    expectedMonth += 12;
  }

  const time = newDate.setMonth(monthsToSet);
  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;
}

function addYears(date, amount) {
  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the
  // new year will be returned.
  const newDate = new Date(date);
  const expectedMonth = newDate.getMonth();
  const time = newDate.setFullYear(newDate.getFullYear() + amount);
  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;
}

// Calculate the distance bettwen 2 days of the week
function dayDiff(day, from) {
  return (day - from + 7) % 7;
}

// Get the date of the specified day of the week of given base date
function dayOfTheWeekOf(baseDate, dayOfWeek, weekStart = 0) {
  const baseDay = new Date(baseDate).getDay();
  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));
}

// Get the ISO week of a date
function getWeek(date) {
  // start of ISO week is Monday
  const thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);
  // 1st week == the week where the 4th of January is in
  const firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);
  return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;
}

// Get the start year of the period of years that includes given date
// years: length of the year period
function startOfYearPeriod(date, years) {
  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */
  const year = new Date(date).getFullYear();
  return Math.floor(year / years) * years;
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/lib/dom.js":
/*!********************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/lib/dom.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "emptyChildNodes": () => (/* binding */ emptyChildNodes),
/* harmony export */   "hideElement": () => (/* binding */ hideElement),
/* harmony export */   "isVisible": () => (/* binding */ isVisible),
/* harmony export */   "parseHTML": () => (/* binding */ parseHTML),
/* harmony export */   "replaceChildNodes": () => (/* binding */ replaceChildNodes),
/* harmony export */   "showElement": () => (/* binding */ showElement)
/* harmony export */ });
const range = document.createRange();

function parseHTML(html) {
  return range.createContextualFragment(html);
}

// equivalent to jQuery's :visble
function isVisible(el) {
  return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length);
}

function hideElement(el) {
  if (el.style.display === 'none') {
    return;
  }
  // back up the existing display setting in data-style-display
  if (el.style.display) {
    el.dataset.styleDisplay = el.style.display;
  }
  el.style.display = 'none';
}

function showElement(el) {
  if (el.style.display !== 'none') {
    return;
  }
  if (el.dataset.styleDisplay) {
    // restore backed-up dispay property
    el.style.display = el.dataset.styleDisplay;
    delete el.dataset.styleDisplay;
  } else {
    el.style.display = '';
  }
}

function emptyChildNodes(el) {
  if (el.firstChild) {
    el.removeChild(el.firstChild);
    emptyChildNodes(el);
  }
}

function replaceChildNodes(el, newChildNodes) {
  emptyChildNodes(el);
  if (newChildNodes instanceof DocumentFragment) {
    el.appendChild(newChildNodes);
  } else if (typeof newChildNodes === 'string') {
    el.appendChild(parseHTML(newChildNodes));
  } else if (typeof newChildNodes.forEach === 'function') {
    newChildNodes.forEach((node) => {
      el.appendChild(node);
    });
  }
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/lib/event.js":
/*!**********************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/lib/event.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "findElementInEventPath": () => (/* binding */ findElementInEventPath),
/* harmony export */   "registerListeners": () => (/* binding */ registerListeners),
/* harmony export */   "unregisterListeners": () => (/* binding */ unregisterListeners)
/* harmony export */ });
const listenerRegistry = new WeakMap();
const {addEventListener, removeEventListener} = EventTarget.prototype;

// Register event listeners to a key object
// listeners: array of listener definitions;
//   - each definition must be a flat array of event target and the arguments
//     used to call addEventListener() on the target
function registerListeners(keyObj, listeners) {
  let registered = listenerRegistry.get(keyObj);
  if (!registered) {
    registered = [];
    listenerRegistry.set(keyObj, registered);
  }
  listeners.forEach((listener) => {
    addEventListener.call(...listener);
    registered.push(listener);
  });
}

function unregisterListeners(keyObj) {
  let listeners = listenerRegistry.get(keyObj);
  if (!listeners) {
    return;
  }
  listeners.forEach((listener) => {
    removeEventListener.call(...listener);
  });
  listenerRegistry.delete(keyObj);
}

// Event.composedPath() polyfill for Edge
// based on https://gist.github.com/kleinfreund/e9787d73776c0e3750dcfcdc89f100ec
if (!Event.prototype.composedPath) {
  const getComposedPath = (node, path = []) => {
    path.push(node);

    let parent;
    if (node.parentNode) {
      parent = node.parentNode;
    } else if (node.host) { // ShadowRoot
      parent = node.host;
    } else if (node.defaultView) {  // Document
      parent = node.defaultView;
    }
    return parent ? getComposedPath(parent, path) : path;
  };

  Event.prototype.composedPath = function () {
    return getComposedPath(this.target);
  };
}

function findFromPath(path, criteria, currentTarget, index = 0) {
  const el = path[index];
  if (criteria(el)) {
    return el;
  } else if (el === currentTarget || !el.parentElement) {
    // stop when reaching currentTarget or <html>
    return;
  }
  return findFromPath(path, criteria, currentTarget, index + 1);
}

// Search for the actual target of a delegated event
function findElementInEventPath(ev, selector) {
  const criteria = typeof selector === 'function' ? selector : el => el.matches(selector);
  return findFromPath(ev.composedPath(), criteria, ev.currentTarget);
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/lib/utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/lib/utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTagRepeat": () => (/* binding */ createTagRepeat),
/* harmony export */   "hasProperty": () => (/* binding */ hasProperty),
/* harmony export */   "isInRange": () => (/* binding */ isInRange),
/* harmony export */   "lastItemOf": () => (/* binding */ lastItemOf),
/* harmony export */   "limitToRange": () => (/* binding */ limitToRange),
/* harmony export */   "optimizeTemplateHTML": () => (/* binding */ optimizeTemplateHTML),
/* harmony export */   "pushUnique": () => (/* binding */ pushUnique),
/* harmony export */   "stringToArray": () => (/* binding */ stringToArray)
/* harmony export */ });
function hasProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

function lastItemOf(arr) {
  return arr[arr.length - 1];
}

// push only the items not included in the array
function pushUnique(arr, ...items) {
  items.forEach((item) => {
    if (arr.includes(item)) {
      return;
    }
    arr.push(item);
  });
  return arr;
}

function stringToArray(str, separator) {
  // convert empty string to an empty array
  return str ? str.split(separator) : [];
}

function isInRange(testVal, min, max) {
  const minOK = min === undefined || testVal >= min;
  const maxOK = max === undefined || testVal <= max;
  return minOK && maxOK;
}

function limitToRange(val, min, max) {
  if (val < min) {
    return min;
  }
  if (val > max) {
    return max;
  }
  return val;
}

function createTagRepeat(tagName, repeat, attributes = {}, index = 0, html = '') {
  const openTagSrc = Object.keys(attributes).reduce((src, attr) => {
    let val = attributes[attr];
    if (typeof val === 'function') {
      val = val(index);
    }
    return `${src} ${attr}="${val}"`;
  }, tagName);
  html += `<${openTagSrc}></${tagName}>`;

  const next = index + 1;
  return next < repeat
    ? createTagRepeat(tagName, repeat, attributes, next, html)
    : html;
}

// Remove the spacing surrounding tags for HTML parser not to create text nodes
// before/after elements
function optimizeTemplateHTML(html) {
  return html.replace(/>\s+/g, '>').replace(/\s+</, '<');
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/options/defaultOptions.js":
/*!***********************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/options/defaultOptions.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// config options updatable by setOptions() and their default values
const defaultOptions = {
  autohide: false,
  beforeShowDay: null,
  beforeShowDecade: null,
  beforeShowMonth: null,
  beforeShowYear: null,
  calendarWeeks: false,
  clearBtn: false,
  dateDelimiter: ',',
  datesDisabled: [],
  daysOfWeekDisabled: [],
  daysOfWeekHighlighted: [],
  defaultViewDate: undefined, // placeholder, defaults to today() by the program
  disableTouchKeyboard: false,
  format: 'mm/dd/yyyy',
  language: 'en',
  maxDate: null,
  maxNumberOfDates: 1,
  maxView: 3,
  minDate: null,
  nextArrow: '<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>',
  orientation: 'auto',
  pickLevel: 0,
  prevArrow: '<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>',
  showDaysOfWeek: true,
  showOnClick: true,
  showOnFocus: true,
  startView: 0,
  title: '',
  todayBtn: false,
  todayBtnMode: 0,
  todayHighlight: false,
  updateOnBlur: true,
  weekStart: 0,
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defaultOptions);


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/options/processOptions.js":
/*!***********************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/options/processOptions.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ processOptions)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");
/* harmony import */ var _lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/date-format.js */ "./node_modules/flowbite-datepicker/js/lib/date-format.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/dom.js */ "./node_modules/flowbite-datepicker/js/lib/dom.js");
/* harmony import */ var _defaultOptions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultOptions.js */ "./node_modules/flowbite-datepicker/js/options/defaultOptions.js");






const {
  language: defaultLang,
  format: defaultFormat,
  weekStart: defaultWeekStart,
} = _defaultOptions_js__WEBPACK_IMPORTED_MODULE_4__["default"];

// Reducer function to filter out invalid day-of-week from the input
function sanitizeDOW(dow, day) {
  return dow.length < 6 && day >= 0 && day < 7
    ? (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(dow, day)
    : dow;
}

function calcEndOfWeek(startOfWeek) {
  return (startOfWeek + 6) % 7;
}

// validate input date. if invalid, fallback to the original value
function validateDate(value, format, locale, origValue) {
  const date = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(value, format, locale);
  return date !== undefined ? date : origValue;
}

// Validate viewId. if invalid, fallback to the original value
function validateViewId(value, origValue, max = 3) {
  const viewId = parseInt(value, 10);
  return viewId >= 0 && viewId <= max ? viewId : origValue;
}

// Create Datepicker configuration to set
function processOptions(options, datepicker) {
  const inOpts = Object.assign({}, options);
  const config = {};
  const locales = datepicker.constructor.locales;
  let {
    format,
    language,
    locale,
    maxDate,
    maxView,
    minDate,
    pickLevel,
    startView,
    weekStart,
  } = datepicker.config || {};

  if (inOpts.language) {
    let lang;
    if (inOpts.language !== language) {
      if (locales[inOpts.language]) {
        lang = inOpts.language;
      } else {
        // Check if langauge + region tag can fallback to the one without
        // region (e.g. fr-CA → fr)
        lang = inOpts.language.split('-')[0];
        if (locales[lang] === undefined) {
          lang = false;
        }
      }
    }
    delete inOpts.language;
    if (lang) {
      language = config.language = lang;

      // update locale as well when updating language
      const origLocale = locale || locales[defaultLang];
      // use default language's properties for the fallback
      locale = Object.assign({
        format: defaultFormat,
        weekStart: defaultWeekStart
      }, locales[defaultLang]);
      if (language !== defaultLang) {
        Object.assign(locale, locales[language]);
      }
      config.locale = locale;
      // if format and/or weekStart are the same as old locale's defaults,
      // update them to new locale's defaults
      if (format === origLocale.format) {
        format = config.format = locale.format;
      }
      if (weekStart === origLocale.weekStart) {
        weekStart = config.weekStart = locale.weekStart;
        config.weekEnd = calcEndOfWeek(locale.weekStart);
      }
    }
  }

  if (inOpts.format) {
    const hasToDisplay = typeof inOpts.format.toDisplay === 'function';
    const hasToValue = typeof inOpts.format.toValue === 'function';
    const validFormatString = _lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.reFormatTokens.test(inOpts.format);
    if ((hasToDisplay && hasToValue) || validFormatString) {
      format = config.format = inOpts.format;
    }
    delete inOpts.format;
  }

  //*** dates ***//
  // while min and maxDate for "no limit" in the options are better to be null
  // (especially when updating), the ones in the config have to be undefined
  // because null is treated as 0 (= unix epoch) when comparing with time value
  let minDt = minDate;
  let maxDt = maxDate;
  if (inOpts.minDate !== undefined) {
    minDt = inOpts.minDate === null
      ? (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(0, 0, 1)  // set 0000-01-01 to prevent negative values for year
      : validateDate(inOpts.minDate, format, locale, minDt);
    delete inOpts.minDate;
  }
  if (inOpts.maxDate !== undefined) {
    maxDt = inOpts.maxDate === null
      ? undefined
      : validateDate(inOpts.maxDate, format, locale, maxDt);
    delete inOpts.maxDate;
  }
  if (maxDt < minDt) {
    minDate = config.minDate = maxDt;
    maxDate = config.maxDate = minDt;
  } else {
    if (minDate !== minDt) {
      minDate = config.minDate = minDt;
    }
    if (maxDate !== maxDt) {
      maxDate = config.maxDate = maxDt;
    }
  }

  if (inOpts.datesDisabled) {
    config.datesDisabled = inOpts.datesDisabled.reduce((dates, dt) => {
      const date = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(dt, format, locale);
      return date !== undefined ? (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(dates, date) : dates;
    }, []);
    delete inOpts.datesDisabled;
  }
  if (inOpts.defaultViewDate !== undefined) {
    const viewDate = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(inOpts.defaultViewDate, format, locale);
    if (viewDate !== undefined) {
      config.defaultViewDate = viewDate;
    }
    delete inOpts.defaultViewDate;
  }

  //*** days of week ***//
  if (inOpts.weekStart !== undefined) {
    const wkStart = Number(inOpts.weekStart) % 7;
    if (!isNaN(wkStart)) {
      weekStart = config.weekStart = wkStart;
      config.weekEnd = calcEndOfWeek(wkStart);
    }
    delete inOpts.weekStart;
  }
  if (inOpts.daysOfWeekDisabled) {
    config.daysOfWeekDisabled = inOpts.daysOfWeekDisabled.reduce(sanitizeDOW, []);
    delete inOpts.daysOfWeekDisabled;
  }
  if (inOpts.daysOfWeekHighlighted) {
    config.daysOfWeekHighlighted = inOpts.daysOfWeekHighlighted.reduce(sanitizeDOW, []);
    delete inOpts.daysOfWeekHighlighted;
  }

  //*** multi date ***//
  if (inOpts.maxNumberOfDates !== undefined) {
    const maxNumberOfDates = parseInt(inOpts.maxNumberOfDates, 10);
    if (maxNumberOfDates >= 0) {
      config.maxNumberOfDates = maxNumberOfDates;
      config.multidate = maxNumberOfDates !== 1;
    }
    delete inOpts.maxNumberOfDates;
  }
  if (inOpts.dateDelimiter) {
    config.dateDelimiter = String(inOpts.dateDelimiter);
    delete inOpts.dateDelimiter;
  }

  //*** pick level & view ***//
  let newPickLevel = pickLevel;
  if (inOpts.pickLevel !== undefined) {
    newPickLevel = validateViewId(inOpts.pickLevel, 2);
    delete inOpts.pickLevel;
  }
  if (newPickLevel !== pickLevel) {
    pickLevel = config.pickLevel = newPickLevel;
  }

  let newMaxView = maxView;
  if (inOpts.maxView !== undefined) {
    newMaxView = validateViewId(inOpts.maxView, maxView);
    delete inOpts.maxView;
  }
  // ensure max view >= pick level
  newMaxView = pickLevel > newMaxView ? pickLevel : newMaxView;
  if (newMaxView !== maxView) {
    maxView = config.maxView = newMaxView;
  }

  let newStartView = startView;
  if (inOpts.startView !== undefined) {
    newStartView = validateViewId(inOpts.startView, newStartView);
    delete inOpts.startView;
  }
  // ensure pick level <= start view <= max view
  if (newStartView < pickLevel) {
    newStartView = pickLevel;
  } else if (newStartView > maxView) {
    newStartView = maxView;
  }
  if (newStartView !== startView) {
    config.startView = newStartView;
  }

  //*** template ***//
  if (inOpts.prevArrow) {
    const prevArrow = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.parseHTML)(inOpts.prevArrow);
    if (prevArrow.childNodes.length > 0) {
      config.prevArrow = prevArrow.childNodes;
    }
    delete inOpts.prevArrow;
  }
  if (inOpts.nextArrow) {
    const nextArrow = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.parseHTML)(inOpts.nextArrow);
    if (nextArrow.childNodes.length > 0) {
      config.nextArrow = nextArrow.childNodes;
    }
    delete inOpts.nextArrow;
  }

  //*** misc ***//
  if (inOpts.disableTouchKeyboard !== undefined) {
    config.disableTouchKeyboard = 'ontouchstart' in document && !!inOpts.disableTouchKeyboard;
    delete inOpts.disableTouchKeyboard;
  }
  if (inOpts.orientation) {
    const orientation = inOpts.orientation.toLowerCase().split(/\s+/g);
    config.orientation = {
      x: orientation.find(x => (x === 'left' || x === 'right')) || 'auto',
      y: orientation.find(y => (y === 'top' || y === 'bottom')) || 'auto',
    };
    delete inOpts.orientation;
  }
  if (inOpts.todayBtnMode !== undefined) {
    switch(inOpts.todayBtnMode) {
      case 0:
      case 1:
        config.todayBtnMode = inOpts.todayBtnMode;
    }
    delete inOpts.todayBtnMode;
  }

  //*** copy the rest ***//
  Object.keys(inOpts).forEach((key) => {
    if (inOpts[key] !== undefined && (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(_defaultOptions_js__WEBPACK_IMPORTED_MODULE_4__["default"], key)) {
      config[key] = inOpts[key];
    }
  });

  return config;
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/picker/Picker.js":
/*!**************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/picker/Picker.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Picker)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/dom.js */ "./node_modules/flowbite-datepicker/js/lib/dom.js");
/* harmony import */ var _lib_event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/event.js */ "./node_modules/flowbite-datepicker/js/lib/event.js");
/* harmony import */ var _templates_pickerTemplate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./templates/pickerTemplate.js */ "./node_modules/flowbite-datepicker/js/picker/templates/pickerTemplate.js");
/* harmony import */ var _views_DaysView_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./views/DaysView.js */ "./node_modules/flowbite-datepicker/js/picker/views/DaysView.js");
/* harmony import */ var _views_MonthsView_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./views/MonthsView.js */ "./node_modules/flowbite-datepicker/js/picker/views/MonthsView.js");
/* harmony import */ var _views_YearsView_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./views/YearsView.js */ "./node_modules/flowbite-datepicker/js/picker/views/YearsView.js");
/* harmony import */ var _events_functions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../events/functions.js */ "./node_modules/flowbite-datepicker/js/events/functions.js");
/* harmony import */ var _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../events/pickerListeners.js */ "./node_modules/flowbite-datepicker/js/events/pickerListeners.js");











function processPickerOptions(picker, options) {
  if (options.title !== undefined) {
    if (options.title) {
      picker.controls.title.textContent = options.title;
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.showElement)(picker.controls.title);
    } else {
      picker.controls.title.textContent = '';
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.hideElement)(picker.controls.title);
    }
  }
  if (options.prevArrow) {
    const prevBtn = picker.controls.prevBtn;
    (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.emptyChildNodes)(prevBtn);
    options.prevArrow.forEach((node) => {
      prevBtn.appendChild(node.cloneNode(true));
    });
  }
  if (options.nextArrow) {
    const nextBtn = picker.controls.nextBtn;
    (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.emptyChildNodes)(nextBtn);
    options.nextArrow.forEach((node) => {
      nextBtn.appendChild(node.cloneNode(true));
    });
  }
  if (options.locale) {
    picker.controls.todayBtn.textContent = options.locale.today;
    picker.controls.clearBtn.textContent = options.locale.clear;
  }
  if (options.todayBtn !== undefined) {
    if (options.todayBtn) {
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.showElement)(picker.controls.todayBtn);
    } else {
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.hideElement)(picker.controls.todayBtn);
    }
  }
  if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'minDate') || (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'maxDate')) {
    const {minDate, maxDate} = picker.datepicker.config;
    picker.controls.todayBtn.disabled = !(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.isInRange)((0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.today)(), minDate, maxDate);
  }
  if (options.clearBtn !== undefined) {
    if (options.clearBtn) {
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.showElement)(picker.controls.clearBtn);
    } else {
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.hideElement)(picker.controls.clearBtn);
    }
  }
}

// Compute view date to reset, which will be...
// - the last item of the selected dates or defaultViewDate if no selection
// - limitted to minDate or maxDate if it exceeds the range
function computeResetViewDate(datepicker) {
  const {dates, config} = datepicker;
  const viewDate = dates.length > 0 ? (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.lastItemOf)(dates) : config.defaultViewDate;
  return (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.limitToRange)(viewDate, config.minDate, config.maxDate);
}

// Change current view's view date
function setViewDate(picker, newDate) {
  const oldViewDate = new Date(picker.viewDate);
  const newViewDate = new Date(newDate);
  const {id, year, first, last} = picker.currentView;
  const viewYear = newViewDate.getFullYear();

  picker.viewDate = newDate;
  if (viewYear !== oldViewDate.getFullYear()) {
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(picker.datepicker, 'changeYear');
  }
  if (newViewDate.getMonth() !== oldViewDate.getMonth()) {
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(picker.datepicker, 'changeMonth');
  }

  // return whether the new date is in different period on time from the one
  // displayed in the current view
  // when true, the view needs to be re-rendered on the next UI refresh.
  switch (id) {
    case 0:
      return newDate < first || newDate > last;
    case 1:
      return viewYear !== year;
    default:
      return viewYear < first || viewYear > last;
  }
}

function getTextDirection(el) {
  return window.getComputedStyle(el).direction;
}

// Class representing the picker UI
class Picker {
  constructor(datepicker) {
    this.datepicker = datepicker;

    const template = _templates_pickerTemplate_js__WEBPACK_IMPORTED_MODULE_4__["default"].replace(/%buttonClass%/g, datepicker.config.buttonClass);
    const element = this.element = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.parseHTML)(template).firstChild;
    const [header, main, footer] = element.firstChild.children;
    const title = header.firstElementChild;
    const [prevBtn, viewSwitch, nextBtn] = header.lastElementChild.children;
    const [todayBtn, clearBtn] = footer.firstChild.children;
    const controls = {
      title,
      prevBtn,
      viewSwitch,
      nextBtn,
      todayBtn,
      clearBtn,
    };
    this.main = main;
    this.controls = controls;

    const elementClass = datepicker.inline ? 'inline' : 'dropdown';
    element.classList.add(`datepicker-${elementClass}`);
    elementClass === 'dropdown' ? element.classList.add('dropdown', 'absolute', 'top-0', 'left-0', 'z-50', 'pt-2') : null;

    processPickerOptions(this, datepicker.config);
    this.viewDate = computeResetViewDate(datepicker);

    // set up event listeners
    (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_3__.registerListeners)(datepicker, [
      [element, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickPicker.bind(null, datepicker), {capture: true}],
      [main, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickView.bind(null, datepicker)],
      [controls.viewSwitch, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickViewSwitch.bind(null, datepicker)],
      [controls.prevBtn, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickPrevBtn.bind(null, datepicker)],
      [controls.nextBtn, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickNextBtn.bind(null, datepicker)],
      [controls.todayBtn, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickTodayBtn.bind(null, datepicker)],
      [controls.clearBtn, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickClearBtn.bind(null, datepicker)],
    ]);

    // set up views
    this.views = [
      new _views_DaysView_js__WEBPACK_IMPORTED_MODULE_5__["default"](this),
      new _views_MonthsView_js__WEBPACK_IMPORTED_MODULE_6__["default"](this),
      new _views_YearsView_js__WEBPACK_IMPORTED_MODULE_7__["default"](this, {id: 2, name: 'years', cellClass: 'year', step: 1}),
      new _views_YearsView_js__WEBPACK_IMPORTED_MODULE_7__["default"](this, {id: 3, name: 'decades', cellClass: 'decade', step: 10}),
    ];
    this.currentView = this.views[datepicker.config.startView];

    this.currentView.render();
    this.main.appendChild(this.currentView.element);
    datepicker.config.container.appendChild(this.element);
  }

  setOptions(options) {
    processPickerOptions(this, options);
    this.views.forEach((view) => {
      view.init(options, false);
    });
    this.currentView.render();
  }

  detach() {
    this.datepicker.config.container.removeChild(this.element);
  }

  show() {
    if (this.active) {
      return;
    }
    this.element.classList.add('active', 'block');
    this.element.classList.remove('hidden');
    this.active = true;

    const datepicker = this.datepicker;
    if (!datepicker.inline) {
      // ensure picker's direction matches input's
      const inputDirection = getTextDirection(datepicker.inputField);
      if (inputDirection !== getTextDirection(datepicker.config.container)) {
        this.element.dir = inputDirection;
      } else if (this.element.dir) {
        this.element.removeAttribute('dir');
      }

      this.place();
      if (datepicker.config.disableTouchKeyboard) {
        datepicker.inputField.blur();
      }
    }
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(datepicker, 'show');
  }

  hide() {
    if (!this.active) {
      return;
    }
    this.datepicker.exitEditMode();
    this.element.classList.remove('active', 'block');
    this.element.classList.add('active', 'block', 'hidden');
    this.active = false;
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(this.datepicker, 'hide');
  }

  place() {
    const {classList, style} = this.element;
    const {config, inputField} = this.datepicker;
    const container = config.container;
    const {
      width: calendarWidth,
      height: calendarHeight,
    } = this.element.getBoundingClientRect();
    const {
      left: containerLeft,
      top: containerTop,
      width: containerWidth,
    } = container.getBoundingClientRect();
    const {
      left: inputLeft,
      top: inputTop,
      width: inputWidth,
      height: inputHeight
    } = inputField.getBoundingClientRect();
    let {x: orientX, y: orientY} = config.orientation;
    let scrollTop;
    let left;
    let top;

    if (container === document.body) {
      scrollTop = window.scrollY;
      left = inputLeft + window.scrollX;
      top = inputTop + scrollTop;
    } else {
      scrollTop = container.scrollTop;
      left = inputLeft - containerLeft;
      top = inputTop - containerTop + scrollTop;
    }

    if (orientX === 'auto') {
      if (left < 0) {
        // align to the left and move into visible area if input's left edge < window's
        orientX = 'left';
        left = 10;
      } else if (left + calendarWidth > containerWidth) {
        // align to the right if canlendar's right edge > container's
        orientX = 'right';
      } else {
        orientX = getTextDirection(inputField) === 'rtl' ? 'right' : 'left';
      }
    }
    if (orientX === 'right') {
      left -= calendarWidth - inputWidth;
    }

    if (orientY === 'auto') {
      orientY = top - calendarHeight < scrollTop ? 'bottom' : 'top';
    }
    if (orientY === 'top') {
      top -= calendarHeight;
    } else {
      top += inputHeight;
    }

    classList.remove(
      'datepicker-orient-top',
      'datepicker-orient-bottom',
      'datepicker-orient-right',
      'datepicker-orient-left'
    );
    classList.add(`datepicker-orient-${orientY}`, `datepicker-orient-${orientX}`);

    style.top = top ? `${top}px` : top;
    style.left = left ? `${left}px` : left;
  }

  setViewSwitchLabel(labelText) {
    this.controls.viewSwitch.textContent = labelText;
  }

  setPrevBtnDisabled(disabled) {
    this.controls.prevBtn.disabled = disabled;
  }

  setNextBtnDisabled(disabled) {
    this.controls.nextBtn.disabled = disabled;
  }

  changeView(viewId) {
    const oldView = this.currentView;
    const newView =  this.views[viewId];
    if (newView.id !== oldView.id) {
      this.currentView = newView;
      this._renderMethod = 'render';
      (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(this.datepicker, 'changeView');
      this.main.replaceChild(newView.element, oldView.element);
    }
    return this;
  }

  // Change the focused date (view date)
  changeFocus(newViewDate) {
    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refreshFocus';
    this.views.forEach((view) => {
      view.updateFocus();
    });
    return this;
  }

  // Apply the change of the selected dates
  update() {
    const newViewDate = computeResetViewDate(this.datepicker);
    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refresh';
    this.views.forEach((view) => {
      view.updateFocus();
      view.updateSelection();
    });
    return this;
  }

  // Refresh the picker UI
  render(quickRender = true) {
    const renderMethod = (quickRender && this._renderMethod) || 'render';
    delete this._renderMethod;

    this.currentView[renderMethod]();
  }
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/picker/templates/calendarWeeksTemplate.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/picker/templates/calendarWeeksTemplate.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");


const calendarWeeksTemplate = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.optimizeTemplateHTML)(`<div class="calendar-weeks">
  <div class="days-of-week flex"><span class="dow h-6 leading-6 text-sm font-medium text-gray-500 dark:text-gray-400"></span></div>
  <div class="weeks">${(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 6, {class: 'week block flex-1 leading-9 border-0 rounded-lg cursor-default text-center text-gray-900 font-semibold text-sm'})}</div>
</div>`);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (calendarWeeksTemplate);


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/picker/templates/daysTemplate.js":
/*!******************************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/picker/templates/daysTemplate.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");


const daysTemplate = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.optimizeTemplateHTML)(`<div class="days">
  <div class="days-of-week grid grid-cols-7 mb-1">${(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 7, {class: 'dow block flex-1 leading-9 border-0 rounded-lg cursor-default text-center text-gray-900 font-semibold text-sm'})}</div>
  <div class="datepicker-grid w-64 grid grid-cols-7">${(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 42 , {class: 'block flex-1 leading-9 border-0 rounded-lg cursor-default text-center text-gray-900 font-semibold text-sm h-6 leading-6 text-sm font-medium text-gray-500 dark:text-gray-400'})}</div>
</div>`);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (daysTemplate);


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/picker/templates/pickerTemplate.js":
/*!********************************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/picker/templates/pickerTemplate.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");


const pickerTemplate = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.optimizeTemplateHTML)(`<div class="datepicker hidden">
  <div class="datepicker-picker inline-block rounded-lg bg-white dark:bg-gray-700 shadow-lg p-4">
    <div class="datepicker-header">
      <div class="datepicker-title bg-white dark:bg-gray-700 dark:text-white px-2 py-3 text-center font-semibold"></div>
      <div class="datepicker-controls flex justify-between mb-2">
        <button type="button" class="bg-white dark:bg-gray-700 rounded-lg text-gray-500 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white text-lg p-2.5 focus:outline-none focus:ring-2 focus:ring-gray-200 prev-btn"></button>
        <button type="button" class="text-sm rounded-lg text-gray-900 dark:text-white bg-white dark:bg-gray-700 font-semibold py-2.5 px-5 hover:bg-gray-100 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-200 view-switch"></button>
        <button type="button" class="bg-white dark:bg-gray-700 rounded-lg text-gray-500 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-white text-lg p-2.5 focus:outline-none focus:ring-2 focus:ring-gray-200 next-btn"></button>
      </div>
    </div>
    <div class="datepicker-main p-1"></div>
    <div class="datepicker-footer">
      <div class="datepicker-controls flex space-x-2 mt-2">
        <button type="button" class="%buttonClass% today-btn text-white bg-blue-700 dark:bg-blue-600 hover:bg-blue-800 dark:hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2 text-center w-1/2"></button>
        <button type="button" class="%buttonClass% clear-btn text-gray-900 dark:text-white bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-600 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2 text-center w-1/2"></button>
      </div>
    </div>
  </div>
</div>`);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pickerTemplate);


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/picker/views/DaysView.js":
/*!**********************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/picker/views/DaysView.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DaysView)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");
/* harmony import */ var _lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/date-format.js */ "./node_modules/flowbite-datepicker/js/lib/date-format.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../lib/dom.js */ "./node_modules/flowbite-datepicker/js/lib/dom.js");
/* harmony import */ var _templates_daysTemplate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../templates/daysTemplate.js */ "./node_modules/flowbite-datepicker/js/picker/templates/daysTemplate.js");
/* harmony import */ var _templates_calendarWeeksTemplate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../templates/calendarWeeksTemplate.js */ "./node_modules/flowbite-datepicker/js/picker/templates/calendarWeeksTemplate.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./View.js */ "./node_modules/flowbite-datepicker/js/picker/views/View.js");








class DaysView extends _View_js__WEBPACK_IMPORTED_MODULE_6__["default"] {
  constructor(picker) {
    super(picker, {
      id: 0,
      name: 'days',
      cellClass: 'day',
    });
  }

  init(options, onConstruction = true) {
    if (onConstruction) {
      const inner = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.parseHTML)(_templates_daysTemplate_js__WEBPACK_IMPORTED_MODULE_4__["default"]).firstChild;
      this.dow = inner.firstChild;
      this.grid = inner.lastChild;
      this.element.appendChild(inner);
    }
    super.init(options);
  }

  setOptions(options) {
    let updateDOW;

    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'minDate')) {
      this.minDate = options.minDate;
    }
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'maxDate')) {
      this.maxDate = options.maxDate;
    }
    if (options.datesDisabled) {
      this.datesDisabled = options.datesDisabled;
    }
    if (options.daysOfWeekDisabled) {
      this.daysOfWeekDisabled = options.daysOfWeekDisabled;
      updateDOW = true;
    }
    if (options.daysOfWeekHighlighted) {
      this.daysOfWeekHighlighted = options.daysOfWeekHighlighted;
    }
    if (options.todayHighlight !== undefined) {
      this.todayHighlight = options.todayHighlight;
    }
    if (options.weekStart !== undefined) {
      this.weekStart = options.weekStart;
      this.weekEnd = options.weekEnd;
      updateDOW = true;
    }
    if (options.locale) {
      const locale = this.locale = options.locale;
      this.dayNames = locale.daysMin;
      this.switchLabelFormat = locale.titleFormat;
      updateDOW = true;
    }
    if (options.beforeShowDay !== undefined) {
      this.beforeShow = typeof options.beforeShowDay === 'function'
        ? options.beforeShowDay
        : undefined;
    }

    if (options.calendarWeeks !== undefined) {
      if (options.calendarWeeks && !this.calendarWeeks) {
        const weeksElem = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.parseHTML)(_templates_calendarWeeksTemplate_js__WEBPACK_IMPORTED_MODULE_5__["default"]).firstChild;
        this.calendarWeeks = {
          element: weeksElem,
          dow: weeksElem.firstChild,
          weeks: weeksElem.lastChild,
        };
        this.element.insertBefore(weeksElem, this.element.firstChild);
      } else if (this.calendarWeeks && !options.calendarWeeks) {
        this.element.removeChild(this.calendarWeeks.element);
        this.calendarWeeks = null;
      }
    }
    if (options.showDaysOfWeek !== undefined) {
      if (options.showDaysOfWeek) {
        (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.showElement)(this.dow);
        if (this.calendarWeeks) {
          (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.showElement)(this.calendarWeeks.dow);
        }
      } else {
        (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.hideElement)(this.dow);
        if (this.calendarWeeks) {
          (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.hideElement)(this.calendarWeeks.dow);
        }
      }
    }

    // update days-of-week when locale, daysOfweekDisabled or weekStart is changed
    if (updateDOW) {
      Array.from(this.dow.children).forEach((el, index) => {
        const dow = (this.weekStart + index) % 7;
        el.textContent = this.dayNames[dow];
        el.className = this.daysOfWeekDisabled.includes(dow) ? 'dow disabled text-center h-6 leading-6 text-sm font-medium text-gray-500 dark:text-gray-400 cursor-not-allowed' : 'dow text-center h-6 leading-6 text-sm font-medium text-gray-500 dark:text-gray-400';
      });
    }
  }

  // Apply update on the focused date to view's settings
  updateFocus() {
    const viewDate = new Date(this.picker.viewDate);
    const viewYear = viewDate.getFullYear();
    const viewMonth = viewDate.getMonth();
    const firstOfMonth = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(viewYear, viewMonth, 1);
    const start = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dayOfTheWeekOf)(firstOfMonth, this.weekStart, this.weekStart);

    this.first = firstOfMonth;
    this.last = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(viewYear, viewMonth + 1, 0);
    this.start = start;
    this.focused = this.picker.viewDate;
  }

  // Apply update on the selected dates to view's settings
  updateSelection() {
    const {dates, rangepicker} = this.picker.datepicker;
    this.selected = dates;
    if (rangepicker) {
      this.range = rangepicker.dates;
    }
  }

   // Update the entire view UI
  render() {
    // update today marker on ever render
    this.today = this.todayHighlight ? (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.today)() : undefined;
    // refresh disabled dates on every render in order to clear the ones added
    // by beforeShow hook at previous render
    this.disabled = [...this.datesDisabled];

    const switchLabel = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.formatDate)(this.focused, this.switchLabelFormat, this.locale);
    this.picker.setViewSwitchLabel(switchLabel);
    this.picker.setPrevBtnDisabled(this.first <= this.minDate);
    this.picker.setNextBtnDisabled(this.last >= this.maxDate);

    if (this.calendarWeeks) {
      // start of the UTC week (Monday) of the 1st of the month
      const startOfWeek = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dayOfTheWeekOf)(this.first, 1, 1);
      Array.from(this.calendarWeeks.weeks.children).forEach((el, index) => {
        el.textContent = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.getWeek)((0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addWeeks)(startOfWeek, index));
      });
    }
    Array.from(this.grid.children).forEach((el, index) => {
      const classList = el.classList;
      const current = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addDays)(this.start, index);
      const date = new Date(current);
      const day = date.getDay();

      el.className = `datepicker-cell hover:bg-gray-100 dark:hover:bg-gray-600 block flex-1 leading-9 border-0 rounded-lg cursor-pointer text-center text-gray-900 dark:text-white font-semibold text-sm ${this.cellClass}`;
      el.dataset.date = current;
      el.textContent = date.getDate();

      if (current < this.first) {
        classList.add('prev', 'text-gray-500', 'dark:text-white');
      } else if (current > this.last) {
        classList.add('next', 'text-gray-500', 'dark:text-white');
      }
      if (this.today === current) {
        classList.add('today', 'bg-gray-100', 'dark:bg-gray-600');
      }
      if (current < this.minDate || current > this.maxDate || this.disabled.includes(current)) {
        classList.add('disabled', 'cursor-not-allowed');
      }
      if (this.daysOfWeekDisabled.includes(day)) {
        classList.add('disabled', 'cursor-not-allowed');
        (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(this.disabled, current);
      }
      if (this.daysOfWeekHighlighted.includes(day)) {
        classList.add('highlighted');
      }
      if (this.range) {
        const [rangeStart, rangeEnd] = this.range;
        if (current > rangeStart && current < rangeEnd) {
          classList.add('range', 'bg-gray-200', 'dark:bg-gray-600');
          classList.remove('rounded-lg', 'rounded-l-lg', 'rounded-r-lg')
        }
        if (current === rangeStart) {
          classList.add('range-start', 'bg-gray-100', 'dark:bg-gray-600', 'rounded-l-lg');
          classList.remove('rounded-lg', 'rounded-r-lg');
        }
        if (current === rangeEnd) {
          classList.add('range-end', 'bg-gray-100', 'dark:bg-gray-600', 'rounded-r-lg');
          classList.remove('rounded-lg', 'rounded-l-lg');
        }
      }
      if (this.selected.includes(current)) {
        classList.add('selected', 'bg-blue-700', 'text-white', 'dark:bg-blue-600', 'dark:text-white');
        classList.remove('text-gray-900', 'text-gray-500', 'hover:bg-gray-100', 'dark:text-white', 'dark:hover:bg-gray-600', 'dark:bg-gray-600', 'bg-gray-100', 'bg-gray-200');
      }
      if (current === this.focused) {
        classList.add('focused');
      }

      if (this.beforeShow) {
        this.performBeforeHook(el, current, current);
      }
    });
  }

  // Update the view UI by applying the changes of selected and focused items
  refresh() {
    const [rangeStart, rangeEnd] = this.range || [];
    this.grid
      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')
      .forEach((el) => {
        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'bg-blue-700', 'text-white', 'dark:bg-blue-600', 'dark:text-white', 'focused');
        el.classList.add('text-gray-900', 'rounded-lg', 'dark:text-white');
      });
    Array.from(this.grid.children).forEach((el) => {
      const current = Number(el.dataset.date);
      const classList = el.classList;
      classList.remove('bg-gray-200', 'dark:bg-gray-600', 'rounded-l-lg', 'rounded-r-lg')
      if (current > rangeStart && current < rangeEnd) {
        classList.add('range', 'bg-gray-200', 'dark:bg-gray-600');
        classList.remove('rounded-lg');
      }
      if (current === rangeStart) {
        classList.add('range-start', 'bg-gray-200', 'dark:bg-gray-600', 'rounded-l-lg');
        classList.remove('rounded-lg', 'rounded-r-lg');
      }
      if (current === rangeEnd) {
        classList.add('range-end', 'bg-gray-200', 'dark:bg-gray-600', 'rounded-r-lg');
        classList.remove('rounded-lg', 'rounded-l-lg');
      }
      if (this.selected.includes(current)) {
        classList.add('selected', 'bg-blue-700', 'text-white', 'dark:bg-blue-600', 'dark:text-white');
        classList.remove('text-gray-900', 'hover:bg-gray-100', 'dark:text-white', 'dark:hover:bg-gray-600', 'bg-gray-100', 'bg-gray-200', 'dark:bg-gray-600');
      }
      if (current === this.focused) {
        classList.add('focused');
      }
    });
  }

  // Update the view UI by applying the change of focused item
  refreshFocus() {
    const index = Math.round((this.focused - this.start) / 86400000);
    this.grid.querySelectorAll('.focused').forEach((el) => {
      el.classList.remove('focused');
    });
    this.grid.children[index].classList.add('focused');
  }
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/picker/views/MonthsView.js":
/*!************************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/picker/views/MonthsView.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MonthsView)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/dom.js */ "./node_modules/flowbite-datepicker/js/lib/dom.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./View.js */ "./node_modules/flowbite-datepicker/js/picker/views/View.js");





function computeMonthRange(range, thisYear) {
  if (!range || !range[0] || !range[1]) {
    return;
  }

  const [[startY, startM], [endY, endM]] = range;
  if (startY > thisYear || endY < thisYear) {
    return;
  }
  return [
    startY === thisYear ? startM : -1,
    endY === thisYear ? endM : 12,
  ];
}

class MonthsView extends _View_js__WEBPACK_IMPORTED_MODULE_3__["default"] {
  constructor(picker) {
    super(picker, {
      id: 1,
      name: 'months',
      cellClass: 'month',
    });
  }

  init(options, onConstruction = true) {
    if (onConstruction) {
      this.grid = this.element;
      this.element.classList.add('months', 'datepicker-grid', 'w-64', 'grid', 'grid-cols-4');
      this.grid.appendChild((0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.parseHTML)((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 12, {'data-month': ix => ix})));
    }
    super.init(options);
  }

  setOptions(options) {
    if (options.locale) {
      this.monthNames = options.locale.monthsShort;
    }
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'minDate')) {
      if (options.minDate === undefined) {
        this.minYear = this.minMonth = this.minDate = undefined;
      } else {
        const minDateObj = new Date(options.minDate);
        this.minYear = minDateObj.getFullYear();
        this.minMonth = minDateObj.getMonth();
        this.minDate = minDateObj.setDate(1);
      }
    }
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'maxDate')) {
      if (options.maxDate === undefined) {
        this.maxYear = this.maxMonth = this.maxDate = undefined;
      } else {
        const maxDateObj = new Date(options.maxDate);
        this.maxYear = maxDateObj.getFullYear();
        this.maxMonth = maxDateObj.getMonth();
        this.maxDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(this.maxYear, this.maxMonth + 1, 0);
      }
    }
    if (options.beforeShowMonth !== undefined) {
      this.beforeShow = typeof options.beforeShowMonth === 'function'
        ? options.beforeShowMonth
        : undefined;
    }
  }

  // Update view's settings to reflect the viewDate set on the picker
  updateFocus() {
    const viewDate = new Date(this.picker.viewDate);
    this.year = viewDate.getFullYear();
    this.focused = viewDate.getMonth();
  }

  // Update view's settings to reflect the selected dates
  updateSelection() {
    const {dates, rangepicker} = this.picker.datepicker;
    this.selected = dates.reduce((selected, timeValue) => {
      const date = new Date(timeValue);
      const year = date.getFullYear();
      const month = date.getMonth();
      if (selected[year] === undefined) {
        selected[year] = [month];
      } else {
        (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(selected[year], month);
      }
      return selected;
    }, {});
    if (rangepicker && rangepicker.dates) {
      this.range = rangepicker.dates.map(timeValue => {
        const date = new Date(timeValue);
        return isNaN(date) ? undefined : [date.getFullYear(), date.getMonth()];
      });
    }
  }

  // Update the entire view UI
  render() {
    // refresh disabled months on every render in order to clear the ones added
    // by beforeShow hook at previous render
    this.disabled = [];

    this.picker.setViewSwitchLabel(this.year);
    this.picker.setPrevBtnDisabled(this.year <= this.minYear);
    this.picker.setNextBtnDisabled(this.year >= this.maxYear);

    const selected = this.selected[this.year] || [];
    const yrOutOfRange = this.year < this.minYear || this.year > this.maxYear;
    const isMinYear = this.year === this.minYear;
    const isMaxYear = this.year === this.maxYear;
    const range = computeMonthRange(this.range, this.year);

    Array.from(this.grid.children).forEach((el, index) => {
      const classList = el.classList;
      const date = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(this.year, index, 1);

      el.className = `datepicker-cell hover:bg-gray-100 dark:hover:bg-gray-600 block flex-1 leading-9 border-0 rounded-lg cursor-pointer text-center text-gray-900 dark:text-white font-semibold text-sm ${this.cellClass}`;
      if (this.isMinView) {
        el.dataset.date = date;
      }
      // reset text on every render to clear the custom content set
      // by beforeShow hook at previous render
      el.textContent = this.monthNames[index];

      if (
        yrOutOfRange
        || isMinYear && index < this.minMonth
        || isMaxYear && index > this.maxMonth
      ) {
        classList.add('disabled');
      }
      if (range) {
        const [rangeStart, rangeEnd] = range;
        if (index > rangeStart && index < rangeEnd) {
          classList.add('range');
        }
        if (index === rangeStart) {
          classList.add('range-start');
        }
        if (index === rangeEnd) {
          classList.add('range-end');
        }
      }
      if (selected.includes(index)) {
        classList.add('selected', 'bg-blue-700', 'text-white', 'dark:bg-blue-600', 'dark:text-white');
        classList.remove('text-gray-900', 'hover:bg-gray-100', 'dark:text-white', 'dark:hover:bg-gray-600');
      }
      if (index === this.focused) {
        classList.add('focused');
      }

      if (this.beforeShow) {
        this.performBeforeHook(el, index, date);
      }
    });
  }

  // Update the view UI by applying the changes of selected and focused items
  refresh() {
    const selected = this.selected[this.year] || [];
    const [rangeStart, rangeEnd] = computeMonthRange(this.range, this.year) || [];
    this.grid
      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')
      .forEach((el) => {
        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'bg-blue-700', 'dark:bg-blue-600', 'dark:text-white', 'text-white', 'focused');
        el.classList.add('text-gray-900', 'hover:bg-gray-100', 'dark:text-white', 'dark:hover:bg-gray-600');
      });
    Array.from(this.grid.children).forEach((el, index) => {
      const classList = el.classList;
      if (index > rangeStart && index < rangeEnd) {
        classList.add('range');
      }
      if (index === rangeStart) {
        classList.add('range-start');
      }
      if (index === rangeEnd) {
        classList.add('range-end');
      }
      if (selected.includes(index)) {
        classList.add('selected', 'bg-blue-700', 'text-white', 'dark:bg-blue-600', 'dark:text-white');
        classList.remove('text-gray-900', 'hover:bg-gray-100', 'dark:text-white', 'dark:hover:bg-gray-600');
      }
      if (index === this.focused) {
        classList.add('focused');
      }
    });
  }

  // Update the view UI by applying the change of focused item
  refreshFocus() {
    this.grid.querySelectorAll('.focused').forEach((el) => {
      el.classList.remove('focused');
    });
    this.grid.children[this.focused].classList.add('focused');
  }
}

/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/picker/views/View.js":
/*!******************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/picker/views/View.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ View)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/dom.js */ "./node_modules/flowbite-datepicker/js/lib/dom.js");



// Base class of the view classes
class View {
  constructor(picker, config) {
    Object.assign(this, config, {
      picker,
      element: (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_1__.parseHTML)(`<div class="datepicker-view flex"></div>`).firstChild,
      selected: [],
    });
    this.init(this.picker.datepicker.config);
  }

  init(options) {
    if (options.pickLevel !== undefined) {
      this.isMinView = this.id === options.pickLevel;
    }
    this.setOptions(options);
    this.updateFocus();
    this.updateSelection();
  }

  // Execute beforeShow() callback and apply the result to the element
  // args:
  // - current - current value on the iteration on view rendering
  // - timeValue - time value of the date to pass to beforeShow()
  performBeforeHook(el, current, timeValue) {
    let result = this.beforeShow(new Date(timeValue));
    switch (typeof result) {
      case 'boolean':
        result = {enabled: result};
        break;
      case 'string':
        result = {classes: result};
    }

    if (result) {
      if (result.enabled === false) {
        el.classList.add('disabled');
        (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(this.disabled, current);
      }
      if (result.classes) {
        const extraClasses = result.classes.split(/\s+/);
        el.classList.add(...extraClasses);
        if (extraClasses.includes('disabled')) {
          (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(this.disabled, current);
        }
      }
      if (result.content) {
        (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_1__.replaceChildNodes)(el, result.content);
      }
    }
  }
}


/***/ }),

/***/ "./node_modules/flowbite-datepicker/js/picker/views/YearsView.js":
/*!***********************************************************************!*\
  !*** ./node_modules/flowbite-datepicker/js/picker/views/YearsView.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ YearsView)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./node_modules/flowbite-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/date.js */ "./node_modules/flowbite-datepicker/js/lib/date.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/dom.js */ "./node_modules/flowbite-datepicker/js/lib/dom.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./View.js */ "./node_modules/flowbite-datepicker/js/picker/views/View.js");





function toTitleCase(word) {
  return [...word].reduce((str, ch, ix) => str += ix ? ch : ch.toUpperCase(), '');
}

// Class representing the years and decades view elements
class YearsView extends _View_js__WEBPACK_IMPORTED_MODULE_3__["default"] {
  constructor(picker, config) {
    super(picker, config);
  }

  init(options, onConstruction = true) {
    if (onConstruction) {
      this.navStep = this.step * 10;
      this.beforeShowOption = `beforeShow${toTitleCase(this.cellClass)}`;
      this.grid = this.element;
      this.element.classList.add(this.name, 'datepicker-grid', 'w-64', 'grid', 'grid-cols-4');
      this.grid.appendChild((0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.parseHTML)((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 12)));
    }
    super.init(options);
  }

  setOptions(options) {
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'minDate')) {
      if (options.minDate === undefined) {
        this.minYear = this.minDate = undefined;
      } else {
        this.minYear = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(options.minDate, this.step);
        this.minDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(this.minYear, 0, 1);
      }
    }
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'maxDate')) {
      if (options.maxDate === undefined) {
        this.maxYear = this.maxDate = undefined;
      } else {
        this.maxYear = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(options.maxDate, this.step);
        this.maxDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(this.maxYear, 11, 31);
      }
    }
    if (options[this.beforeShowOption] !== undefined) {
      const beforeShow = options[this.beforeShowOption];
      this.beforeShow = typeof beforeShow === 'function' ? beforeShow : undefined;
    }
  }

  // Update view's settings to reflect the viewDate set on the picker
  updateFocus() {
    const viewDate = new Date(this.picker.viewDate);
    const first = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(viewDate, this.navStep);
    const last = first + 9 * this.step;

    this.first = first;
    this.last = last;
    this.start = first - this.step;
    this.focused = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(viewDate, this.step);
  }

  // Update view's settings to reflect the selected dates
  updateSelection() {
    const {dates, rangepicker} = this.picker.datepicker;
    this.selected = dates.reduce((years, timeValue) => {
      return (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(years, (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(timeValue, this.step));
    }, []);
    if (rangepicker && rangepicker.dates) {
      this.range = rangepicker.dates.map(timeValue => {
        if (timeValue !== undefined) {
          return (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(timeValue, this.step);
        }
      });
    }
  }

  // Update the entire view UI
  render() {
    // refresh disabled years on every render in order to clear the ones added
    // by beforeShow hook at previous render
    this.disabled = [];

    this.picker.setViewSwitchLabel(`${this.first}-${this.last}`);
    this.picker.setPrevBtnDisabled(this.first <= this.minYear);
    this.picker.setNextBtnDisabled(this.last >= this.maxYear);

    Array.from(this.grid.children).forEach((el, index) => {
      const classList = el.classList;
      const current = this.start + (index * this.step);
      const date = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(current, 0, 1);

      el.className = `datepicker-cell hover:bg-gray-100 dark:hover:bg-gray-600 block flex-1 leading-9 border-0 rounded-lg cursor-pointer text-center text-gray-900 dark:text-white font-semibold text-sm ${this.cellClass}`;
      if (this.isMinView) {
        el.dataset.date = date;
      }
      el.textContent = el.dataset.year = current;

      if (index === 0) {
        classList.add('prev');
      } else if (index === 11) {
        classList.add('next');
      }
      if (current < this.minYear || current > this.maxYear) {
        classList.add('disabled');
      }
      if (this.range) {
        const [rangeStart, rangeEnd] = this.range;
        if (current > rangeStart && current < rangeEnd) {
          classList.add('range');
        }
        if (current === rangeStart) {
          classList.add('range-start');
        }
        if (current === rangeEnd) {
          classList.add('range-end');
        }
      }
      if (this.selected.includes(current)) {
        classList.add('selected', 'bg-blue-700', 'text-white', 'dark:bg-blue-600', 'dark:text-white');
        classList.remove('text-gray-900', 'hover:bg-gray-100', 'dark:text-white', 'dark:hover:bg-gray-600');
      }
      if (current === this.focused) {
        classList.add('focused');
      }

      if (this.beforeShow) {
        this.performBeforeHook(el, current, date);
      }
    });
  }

  // Update the view UI by applying the changes of selected and focused items
  refresh() {
    const [rangeStart, rangeEnd] = this.range || [];
    this.grid
      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')
      .forEach((el) => {
        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'bg-blue-700', 'text-white', 'dark:bg-blue-600', 'dark:text-white', 'focused');
      });
    Array.from(this.grid.children).forEach((el) => {
      const current = Number(el.textContent);
      const classList = el.classList;
      if (current > rangeStart && current < rangeEnd) {
        classList.add('range');
      }
      if (current === rangeStart) {
        classList.add('range-start');
      }
      if (current === rangeEnd) {
        classList.add('range-end');
      }
      if (this.selected.includes(current)) {
        classList.add('selected', 'bg-blue-700', 'text-white', 'dark:bg-blue-600', 'dark:text-white');
        classList.remove('text-gray-900', 'hover:bg-gray-100', 'dark:text-white', 'dark:hover:bg-gray-600');
      }
      if (current === this.focused) {
        classList.add('focused');
      }
    });
  }

  // Update the view UI by applying the change of focused item
  refreshFocus() {
    const index = Math.round((this.focused - this.start) / this.step);
    this.grid.querySelectorAll('.focused').forEach((el) => {
      el.classList.remove('focused');
    });
    this.grid.children[index].classList.add('focused');
  }
}


/***/ }),

/***/ "./node_modules/jodit/build/jodit.min.js":
/*!***********************************************!*\
  !*** ./node_modules/jodit/build/jodit.min.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");
!function(e,t){if(true)module.exports=t();else { var n, o; }}(self,(function(){return function(){var e,t={90643:function(e){e.exports.default=["إبدأ في الكتابة...","حول جوديت","محرر جوديت","دليل مستخدم جوديت","يحتوي على مساعدة مفصلة للاستخدام","للحصول على معلومات حول الترخيص، يرجى الذهاب لموقعنا:","شراء النسخة الكاملة","حقوق الطبع والنشر © XDSoft.net - Chupurnov Valeriy. كل الحقوق محفوظة.","مِرْساة","فتح في نافذة جديدة","فتح المحرر في الحجم الكامل","مسح التنسيق","ملء اللون أو تعيين لون النص","إعادة","تراجع","عريض","مائل","إدراج قائمة غير مرتبة","إدراج قائمة مرتبة","محاذاة للوسط","محاذاة مثبتة","محاذاة لليسار","محاذاة لليمين","إدراج خط أفقي","إدراج صورة","ادخال الملف","إدراج فيديو يوتيوب/فيميو ","إدراج رابط","حجم الخط","نوع الخط","إدراج كتلة تنسيق","عادي","عنوان 1","عنوان 2","عنوان 3","عنوان 4","إقتباس","كود","إدراج","إدراج جدول","تقليل المسافة البادئة","زيادة المسافة البادئة","تحديد أحرف خاصة","إدراج حرف خاص","تنسيق الرسم","تغيير الوضع","هوامش","أعلى","يمين","أسفل","يسار","الأنماط","الطبقات","محاذاة","اليمين","الوسط","اليسار","--غير مضبوط--","Src","العنوان","العنوان البديل","الرابط","افتح الرابط في نافذة جديدة","الصورة","ملف","متقدم","خصائص الصورة","إلغاء","حسنا","متصفح الملفات","حدث خطأ في تحميل القائمة ","حدث خطأ في تحميل المجلدات","هل أنت واثق؟","أدخل اسم المجلد","إنشاء مجلد","أكتب إسم","إسقاط صورة","إسقاط الملف","أو أنقر","النص البديل","رفع","تصفح","الخلفية","نص","أعلى","الوسط","الأسفل","إدراج عمود قبل","إدراج عمود بعد","إدراج صف أعلى","إدراج صف أسفل","حذف الجدول","حذف الصف","حذف العمود","خلية فارغة","%d حرف","%d كلام","اضرب من خلال","أكد","حرف فوقي","مخطوطة","قطع الاختيار","اختر الكل","استراحة","البحث عن","استبدل ب","محل","معجون","اختر محتوى للصق","مصدر","بالخط العريض","مائل","شغل","صلة","إلغاء","كرر","طاولة","صورة","نظيف","فقرة","حجم الخط","فيديو","الخط","حول المحرر","طباعة","أكد","شطب","المسافة البادئة","نتوء","ملء الشاشة","الحجم التقليدي","الخط","قائمة","قائمة مرقمة","قطع","اختر الكل","قانون","فتح الرابط","تعديل الرابط","سمة Nofollow","إزالة الرابط","تحديث","لتحرير","مراجعة","URL","تحرير","محاذاة أفقية","فلتر","عن طريق التغيير","بالاسم","حسب الحجم","إضافة مجلد","إعادة","احتفظ","حفظ باسم","تغيير الحجم","حجم القطع","عرض","ارتفاع","حافظ على النسب","أن","لا","حذف","تميز","تميز %s","محاذاة عمودية","انشق، مزق","اذهب","أضف العمود","اضف سطر","رخصة %s","حذف","انقسام عمودي","تقسيم أفقي","الحدود","يشبه الكود الخاص بك HTML. تبقي كما HTML؟","الصق ك HTML","احتفظ","إدراج كنص","إدراج النص فقط","يمكنك فقط تحرير صورك الخاصة. تحميل هذه الصورة على المضيف؟","تم تحميل الصورة بنجاح على الخادم!","لوحة","لا توجد ملفات في هذا الدليل.","إعادة تسمية","أدخل اسم جديد","معاينة","تحميل","لصق من الحافظة","متصفحك لا يدعم إمكانية الوصول المباشر إلى الحافظة.","نسخ التحديد","نسخ","دائرة نصف قطرها الحدود","عرض كل","تطبيق","يرجى ملء هذا المجال","يرجى إدخال عنوان ويب","الافتراضي","دائرة","نقطة","المربعة","البحث","تجد السابقة","تجد التالي","للصق المحتوى قادم من Microsoft Word/Excel الوثيقة. هل تريد أن تبقي شكل أو تنظيفه ؟ ","كلمة لصق الكشف عن","نظيفة","أدخل اسم الفصل","اضغط البديل لتغيير حجم مخصص"]},52532:function(e){e.exports.default=["Napiš něco","O Jodit","Editor Jodit","Jodit Uživatelská příručka","obsahuje detailní nápovědu","Pro informace o licenci, prosím, přejděte na naši stránku:","Koupit plnou verzi","Copyright © XDSoft.net - Chupurnov Valeriy. Všechna práva vyhrazena.","Anchor","Otevřít v nové záložce","Otevřít v celoobrazovkovém režimu","Vyčistit formátování","Barva výplně a písma","Vpřed","Zpět","Tučné","Kurzíva","Odrážky","Číslovaný seznam","Zarovnat na střed","Zarovnat do bloku","Zarovnat vlevo","Zarovnat vpravo","Vložit horizontální linku","Vložit obrázek","Vložit soubor","Vložit video (YT/Vimeo)","Vložit odkaz","Velikost písma","Typ písma","Formátovat blok","Normální text","Nadpis 1","Nadpis 2","Nadpis 3","Nadpis 4","Citát","Kód","Vložit","Vložit tabulku","Zmenšit odsazení","Zvětšit odsazení","Vybrat speciální symbol","Vložit speciální symbol","Použít formát","Změnit mód","Okraje","horní","pravý","spodní","levý","Styly","Třídy","Zarovnání","Vpravo","Na střed","Vlevo","--nenastaveno--","src","Titulek","Alternativní text (alt)","Link","Otevřít link v nové záložce","Obrázek","soubor","Rozšířené","Vlastnosti obrázku","Zpět","Ok","Prohlížeč souborů","Chyba při načítání seznamu souborů","Chyba při načítání složek","Jste si jistý(á)?","Název složky","Vytvořit složku","název","Přetáhněte sem obrázek","Přetáhněte sem soubor","nebo klikněte","Alternativní text","Nahrát","Server","Pozadí","Text","Nahoru","Na střed","Dolu","Vložit sloupec před","Vložit sloupec za","Vložit řádek nad","Vložit řádek pod","Vymazat tabulku","Vymazat řádku","Vymazat sloupec","Vyčistit buňku","Znaky: %d","Slova: %d","Přeškrtnuto","Podtrženo","Horní index","Dolní index","Vyjmout označené","Označit vše","Zalomení","Najdi","Nahradit za","Vyměňte","Vložit","Vyber obsah pro vložení","HTML","tučně","kurzíva","štětec","odkaz","zpět","vpřed","tabulka","obrázek","guma","odstavec","velikost písma","video","písmo","о editoru","tisk","podtrženo","přeškrtnuto","zvětšit odsazení","zmenšit odsazení","celoobrazovkový režim","smrsknout","Linka","Odrážka","Číslovaný seznam","Vyjmout","Označit vše","Kód","Otevřít odkaz","Upravit odkaz","Atribut no-follow","Odstranit odkaz","Aktualizovat","Chcete-li upravit","Zobrazit","URL","Editovat","Horizontální zarovnání","Filtr","Dle poslední změny","Dle názvu","Dle velikosti","Přidat složku","Reset","Uložit","Uložit jako...","Změnit rozměr","Ořezat","Šířka","Výška","Ponechat poměr","Ano","Ne","Vyjmout","Označit","Označit %s","Vertikální zarovnání","Rozdělit","Spojit","Přidat sloupec","Přidat řádek","Licence: %s","Vymazat","Rozdělit vertikálně","Rozdělit horizontálně","Okraj","Váš text se podobá HTML. Vložit ho jako HTML?","Vložit jako HTML","Ponechat originál","Vložit jako TEXT","Vložit pouze TEXT","Můžete upravovat pouze své obrázky. Načíst obrázek?","Obrázek byl úspěšně nahrán!","paleta","V tomto adresáři nejsou žádné soubory.","přejmenovat","Zadejte nový název","náhled","Stažení","Vložit ze schránky","Váš prohlížeč nepodporuje přímý přístup do schránky.","Kopírovat výběr","kopírování","Border radius","Zobrazit všechny","Platí","Prosím, vyplňte toto pole","Prosím, zadejte webovou adresu","Výchozí","Kruh","Dot","Quadrate","Najít","Najít Předchozí","Najít Další","Obsah, který vkládáte, je pravděpodobně z Microsoft Word / Excel. Chcete ponechat formát nebo vložit pouze text?","Detekován fragment z Wordu nebo Excelu","Vyčistit","Vložte název třídy","Stiskněte Alt pro vlastní změnu velikosti"]},75178:function(e){e.exports.default=["Bitte geben Sie einen Text ein","Über Jodit","Jodit Editor","Das Jodit Benutzerhandbuch","beinhaltet ausführliche Informationen wie Sie den Editor verwenden können.","Für Informationen zur Lizenz, besuchen Sie bitte unsere Web-Präsenz:","Vollversion kaufen","Copyright © XDSoft.net - Chupurnov Valeriy. Alle Rechte vorbehalten.","Anker","In neuer Registerkarte öffnen","Editor in voller Größe öffnen","Formatierung löschen","Füllfarbe oder Textfarbe ändern","Wiederholen","Rückgängig machen","Fett","Kursiv","Unsortierte Liste einfügen","Nummerierte Liste einfügen","Mittig ausrichten","Blocksatz","Links ausrichten","Rechts ausrichten","Horizontale Linie einfügen","Bild einfügen","Datei einfügen","Youtube/vimeo Video einfügen","Link einfügen","Schriftgröße","Schriftfamilie","Formatblock einfügen","Normal","Überschrift 1","Überschrift 2","Überschrift 3","Überschrift 4","Zitat","Code","Einfügen","Tabelle einfügen","Einzug verkleinern","Einzug vergrößern","Sonderzeichen auswählen","Sonderzeichen einfügen","Format kopieren","Änderungsmodus","Ränder","Oben","Rechts","Unten","Links","CSS Stil","CSS Klassen","Ausrichtung","Rechts","Zentriert","Links","Keine","Pfad","Titel","Alternativer Text","Link","Link in neuem Tab öffnen","Bild","Datei","Fortgeschritten","Bildeigenschaften","Abbrechen","OK","Dateibrowser","Fehler beim Laden der Liste","Fehler beim Laden der Ordner","Sind Sie sicher?","Geben Sie den Verzeichnisnamen ein","Verzeichnis erstellen","Typname","Bild hier hinziehen","Datei löschen","oder hier klicken","Alternativtext","Hochladen","Auswählen","Hintergrund","Text","Oben","Mittig","Unten","Spalte davor einfügen","Spalte danach einfügen","Zeile oberhalb einfügen","Zeile unterhalb einfügen","Tabelle löschen","Zeile löschen","Spalte löschen","Zelle leeren","Zeichen: %d","Wörter: %d","Durchstreichen","Unterstreichen","Hochgestellen","Tiefstellen","Auswahl ausschneiden","Alles markieren","Pause","Suche nach","Ersetzen durch","Ersetzen","Einfügen","Wählen Sie den Inhalt zum Einfügen aus","HTML","Fett gedruckt","Kursiv","Bürste","Verknüpfung","Rückgängig machen","Wiederholen","Tabelle","Bild","Radiergummi","Absatz","Schriftgröße","Video","Schriftart","Über","Drucken","Unterstreichen","Durchstreichen","Einzug","Herausstellen","Vollgröße","Schrumpfen","die Linie","Liste von","Nummerierte Liste","Schneiden","Wählen Sie Alle aus","Code einbetten","Link öffnen","Link bearbeiten","Nofollow-Attribut","Link entfernen","Aktualisieren","Bearbeiten","Ansehen","URL","Bearbeiten","Horizontale Ausrichtung","Filter","Sortieren nach geändert","Nach Name sortieren","Nach Größe sortiert","Ordner hinzufügen","Wiederherstellen","Speichern","Speichern als","Größe ändern","Größe anpassen","Breite","Höhe","Seitenverhältnis beibehalten","Ja","Nein","Entfernen","Markieren","Markieren: %s","Vertikale Ausrichtung","Unterteilen","Vereinen","Spalte hinzufügen","Zeile hinzufügen",null,"Löschen","Vertikal unterteilen","Horizontal unterteilen","Rand","Ihr Text ähnelt HTML-Code. Als HTML beibehalten?","Als HTML einfügen?","Original speichern","Als Text einfügen","Nur Text einfügen","Sie können nur Ihre eigenen Bilder bearbeiten. Dieses Bild auf den Host herunterladen?","Das Bild wurde erfolgreich auf den Server hochgeladen!","Palette","In diesem Verzeichnis befinden sich keine Dateien.","Umbenennen","Geben Sie einen neuen Namen ein","Vorschau","Herunterladen","Aus Zwischenablage einfügen","Ihr Browser unterstützt keinen direkten Zugriff auf die Zwischenablage.","Auswahl kopieren","Kopieren","Radius für abgerundete Ecken","Alle anzeigen","Anwenden","Bitte füllen Sie dieses Feld aus","Bitte geben Sie eine Web-Adresse ein","Standard","Kreis","Punkte","Quadrate","Suchen","Suche vorherige","Weitersuchen","Der Inhalt, den Sie einfügen, stammt aus einem Microsoft Word / Excel-Dokument. Möchten Sie das Format erhalten oder bereinigen?","In Word formatierter Text erkannt","Säubern","className (CSS) einfügen","Drücken Sie Alt für benutzerdefinierte Größenanpassung"]},51048:function(e){e.exports.default={"Type something":"Start writing...",pencil:"Edit",Quadrate:"Square"}},22999:function(e){e.exports.default=["Escriba algo...","Acerca de Jodit","Jodit Editor","Guía de usuario Jodit","contiene ayuda detallada para el uso.","Para información sobre la licencia, por favor visite nuestro sitio:","Compre la versión completa","Copyright © XDSoft.net - Chupurnov Valeriy. Todos los derechos reservados.","Anclar","Abrir en nueva pestaña","Abrir editor en pantalla completa","Limpiar formato","Color de relleno o de letra","Rehacer","Deshacer","Negrita","Cursiva","Insertar lista no ordenada","Insertar lista ordenada","Alinear Centrado","Alinear Justificado","Alinear Izquierda","Alinear Derecha","Insertar línea horizontal","Insertar imagen","Insertar archivo","Insertar video de Youtube/vimeo","Insertar vínculo","Tamaño de letra","Familia de letra","Insertar bloque","Normal","Encabezado 1","Encabezado 2","Encabezado 3","Encabezado 4","Cita","Código","Insertar","Insertar tabla","Disminuir sangría","Aumentar sangría","Seleccionar caracter especial","Insertar caracter especial","Copiar formato","Cambiar modo","Márgenes","arriba","derecha","abajo","izquierda","Estilos CSS","Clases CSS","Alinear","Derecha","Centrado","Izquierda","--No Establecido--","Fuente","Título","Texto Alternativo","Vínculo","Abrir vínculo en nueva pestaña","Imagen","Archivo","Avanzado","Propiedades de imagen","Cancelar","Aceptar","Buscar archivo","Error al cargar la lista","Error al cargar las carpetas","¿Está seguro?","Entre nombre de carpeta","Crear carpeta","Entre el nombre","Soltar imagen","Soltar archivo","o click","Texto alternativo","Subir","Buscar","Fondo","Texto","Arriba","Centro","Abajo","Insertar columna antes","Interar columna después","Insertar fila arriba","Insertar fila debajo","Borrar tabla","Borrar fila","Borrar columna","Vaciar celda","Caracteres: %d","Palabras: %d","Tachado","Subrayado","superíndice","subíndice","Cortar selección","Seleccionar todo","Pausa","Buscar","Reemplazar con","Reemplazar","Pegar","Seleccionar contenido para pegar","HTML","negrita","cursiva","Brocha","Vínculo","deshacer","rehacer","Tabla","Imagen","Borrar","Párrafo","Tamaño de letra","Video","Letra","Acerca de","Imprimir","subrayar","tachar","sangría","quitar sangría","Tamaño completo","encoger","línea horizontal","lista sin ordenar","lista ordenada","Cortar","Seleccionar todo","Incluir código","Abrir vínculo","Editar vínculo","No seguir","Desvincular","Actualizar","Para editar","Ver","URL","Editar","Alineación horizontal","filtrar","Ordenar por fecha modificación","Ordenar por nombre","Ordenar por tamaño","Agregar carpeta","Resetear","Guardar","Guardar como...","Redimensionar","Recortar","Ancho","Alto","Mantener relación de aspecto","Si","No","Quitar","Seleccionar","Seleccionar: %s","Alineación vertical","Dividir","Mezclar","Agregar columna","Agregar fila",null,"Borrar","Dividir vertical","Dividir horizontal","Borde","El código es similar a HTML. ¿Mantener como HTML?","Pegar como HTML?","Mantener","Insertar como texto","Insertar solo texto","Solo puedes editar tus propias imágenes. ¿Descargar esta imagen en el servidor?","¡La imagen se ha subido correctamente al servidor!","paleta","No hay archivos en este directorio.","renombrar","Ingresa un nuevo nombre","avance","Descargar","Pegar desde el portapapeles","Su navegador no soporta el acceso directo en el portapapeles.","Selección de copia","copia","Radio frontera","Mostrar todos los","Aplicar","Por favor, rellene este campo","Por favor, introduzca una dirección web","Predeterminado","Círculo","Punto","Cuadro","Encontrar","Buscar Anterior","Buscar Siguiente","El contenido pegado proviene de un documento de Microsoft Word/Excel. ¿Desea mantener el formato o limpiarlo?","Pegado desde Word detectado","Limpiar","Insertar nombre de clase","Presione Alt para cambiar el tamaño personalizado"]},34145:function(e){e.exports.default=["Ecrivez ici","A propos de Jodit","Editeur Jodit","Guide de l'utilisateur","Aide détaillée à l'utilisation","Consulter la licence sur notre site web:","Acheter la version complète","Copyright © XDSoft.net - Chupurnov Valeriy. Tous droits réservés.","Ancre","Ouvrir dans un nouvel onglet","Ouvrir l'éditeur en pleine page","Supprimer le formattage","Modifier la couleur du fond ou du texte","Refaire","Défaire","Gras","Italique","Liste non ordonnée","Liste ordonnée","Centrer","Justifier","Aligner à gauche ","Aligner à droite","Insérer une ligne horizontale","Insérer une image","Insérer un fichier","Insérer une vidéo","Insérer un lien","Taille des caractères","Famille des caractères","Bloc formatté","Normal","Titre 1","Titre 2","Titre 3","Titre 4","Citation","Code","Insérer","Insérer un tableau","Diminuer le retrait","Retrait plus","Sélectionnez un caractère spécial","Insérer un caractère spécial","Cloner le format","Mode wysiwyg <-> code html","Marges","haut","droite","Bas","gauche","Styles","Classes","Alignement","Droite","Centre","Gauche","--Non disponible--","Source","Titre","Alternative","Lien","Ouvrir le lien dans un nouvel onglet","Image","fichier","Avancé","Propriétés de l'image","Annuler","OK","Explorateur de fichiers","Erreur de liste de chargement","Erreur de dossier de chargement","Etes-vous sûrs ?","Entrer le non de dossier","Créer un dossier","type de fichier","Coller une image","Déposer un fichier","ou cliquer","Texte de remplacemement","Charger","Chercher","Arrière-plan","Texte","Haut","Milieu","Bas","Insérer une colonne avant","Insérer une colonne après","Insérer une ligne en dessus","Insérer une ligne en dessous","Supprimer le tableau","Supprimer la ligne","Supprimer la colonne","Vider la cellule","Symboles: %d","Mots: %d","Frapper à travers","Souligner","exposant","indice","Couper la sélection","Tout sélectionner","Pause","Rechercher","Remplacer par","Remplacer","Coller","Choisissez le contenu à coller","la source","graisseux","italique","verser","lien","abolir","prêt","graphique","Image","la gommen","clause","taille de police","Video","police","à propos de l'éditeur","impression","souligné","barré","indentation","indifférent","taille réelle","taille conventionnelle","la ligne","Liste des","Liste numérotée","Couper","Sélectionner tout",null,"Ouvrir le lien","Modifier le lien","Attribut Nofollow","Supprimer le lien","Mettre à jour","Pour éditer","Voir","URL",null,"Alignement horizontal","Filtre","Trier par modifié","Trier par nom","Classer par taille","Ajouter le dossier","Restaurer","Sauvegarder","Enregistrer sous","Changer la taille","Taille de garniture","Largeur","Hauteur","Garder les proportions","Oui","Non","Supprimer","Mettre en évidence","Mettre en évidence: %s","Alignement vertical","Split","aller","Ajouter une colonne","Ajouter une rangée",null,"Effacer","Split vertical","Split horizontal",null,"Votre texte que vous essayez de coller est similaire au HTML. Collez-le en HTML?","Coller en HTML?","Sauvegarder l'original","Coller en tant que texte","Coller le texte seulement","Vous ne pouvez éditer que vos propres images. Téléchargez cette image sur l'hôte?","L'image a été téléchargée avec succès sur le serveur!null","Palette","Il n'y a aucun fichier dans ce répertoire.","renommer","Entrez un nouveau nom","Aperçu","Télécharger","Coller à partir du presse-papiers","Votre navigateur ne prend pas en charge l'accès direct à la presse-papiers.","Copier la sélection","copie","Rayon des frontières","Afficher tous les","Appliquer","Veuillez remplir ce champ","Veuillez entrer une adresse web","Par défaut","Cercle","Dot","Quadrate","Trouver","Trouvez Précédente","Suivant","Le contenu que vous insérez provient d'un document Microsoft Word / Excel. Voulez-vous enregistrer le format ou l'effacer?","C'est peut-être un fragment de Word ou Excel","Nettoyer","Insérer un nom de classe","Appuyez sur Alt pour un redimensionnement personnalisé"]},40272:function(e){e.exports.default=["הקלד משהו...","About Jodit","Jodit Editor","Jodit User's Guide","contains detailed help for using.","For information about the license, please go to our website:","Buy full version","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","מקום עיגון","פתח בכרטיסיה חדשה","פתח את העורך בחלון חדש","נקה עיצוב","שנה צבע טקסט או רקע","בצע שוב","בטל","מודגש","נטוי","הכנס רשימת תבליטים","הכנס רשימה ממוספרת","מרכז","ישר ","ישר לשמאל","ישר לימין","הכנס קו אופקי","הכנס תמונה","הכנס קובץ","הכנס סרטון וידאו מYouTube/Vimeo","הכנס קישור","גודל גופן","גופן","מעוצב מראש","רגיל","כותרת 1","כותרת 2","כותרת 3","כותרת 4","ציטוט","קוד","הכנס","הכנס טבלה","הקטן כניסה","הגדל כניסה","בחר תו מיוחד","הכנס תו מיוחד","העתק עיצוב","החלף מצב","ריווח","עליון","ימין","תחתון","שמאל","עיצוב CSS","מחלקת CSS","יישור","ימין","מרכז","שמאל","--לא נקבע--","מקור","כותרת","כיתוב חלופי","קישור","פתח בכרטיסיה חדשה","תמונה","קובץ","מתקדם","מאפייני תמונה","ביטול","אישור","סייר הקבצים","שגיאה  בזמן טעינת רשימה","שגיאה בזמן טעינת תקיות","האם אתה בטוח?","הכנס שם תקיה","צור תקיה","סוג הקובץ","הסר תמונה","הסר קובץ","או לחץ","כיתוב חלופי","העלה","סייר","רקע","טקסט","עליון","מרכז","תחתון","הכנס עמודה לפני","הכנס עמודה אחרי","הכנס שורה מעל","הכנס שורה מתחת","מחק טבלה","מחק שורה","מחק עמודה","רוקן תא","תווים: %d","מילים: %d","קו חוצה","קו תחתון","superscript","subscript","גזור בחירה","בחר הכל","שבירת שורה","חפש","החלף ב","להחליף","הדבק","בחר תוכן להדבקה","HTML","מודגש","נטוי","מברשת","קישור","בטל","בצע שוב","טבלה","תמונה","מחק","פסקה","גודל גופן","וידאו","גופן","עלינו","הדפס","קו תחתון","קו חוצה","הגדל כניסה","הקטן כניסה","גודל מלא","כווץ","קו אופקי","רשימת תבליטים","רשימה ממוספרת","חתוך","בחר הכל","הוסף קוד","פתח קישור","ערוך קישור","ללא מעקב","בטל קישור","עדכן","כדי לערוך","הצג","כתובת","ערוך","יישור אופקי","סנן","מין לפי שינוי","מיין לפי שם","מיין לפי גודל","הוסף תקייה","אפס","שמור","שמור בשם...","שנה גודל","חתוך","רוחב","גובה","שמור יחס","כן","לא","הסר","בחר","נבחר: %s","יישור אנכי","פיצול","מזג","הוסף עמודה","הוסף שורה",null,"מחק","פיצול אנכי","פיצול אופקי","מסגרת","הקוד דומה לHTML, האם להשאיר כHTML","הדבק כHTML","השאר","הכנס כטקסט","הכנס טקסט בלבד","רק קבצים המשוייכים שלך ניתנים לעריכה. האם להוריד את הקובץ?","התמונה עלתה בהצלחה!","לוח","אין קבצים בספריה זו.","הונגרית","הזן שם חדש","תצוגה מקדימה","הורד","להדביק מהלוח","הדפדפן שלך לא תומך גישה ישירה ללוח.","העתק בחירה","העתק","רדיוס הגבול","הצג את כל","החל","נא למלא שדה זה","אנא הזן כתובת אינטרנט","ברירת המחדל","מעגל","נקודה","הריבוע הזה","למצוא","מצא את הקודם","חפש את הבא","התוכן המודבק מגיע ממסמך וורד/אקסל. האם ברצונך להשאיר את העיצוב או לנקותו",'זוהתה הדבקה מ"וורד"',"נקה","הכנס את שם הכיתה","לחץ על אלט לשינוי גודל מותאם אישית"]},2978:function(e){e.exports.default=["Írjon be valamit","Joditról","Jodit Editor","Jodit útmutató","további segítséget tartalmaz","További licence információkért látogassa meg a weboldalunkat:","Teljes verzió megvásárlása","Copyright © XDSoft.net - Chupurnov Valeriy. Minden jog fenntartva.","Horgony","Megnyitás új lapon","Megnyitás teljes méretben","Formázás törlése","Háttér/szöveg szín","Újra","Visszavon","Félkövér","Dőlt","Pontozott lista","Számozott lista","Középre zárt","Sorkizárt","Balra zárt","Jobbra zárt","Vízszintes vonal beszúrása","Kép beszúrás","Fájl beszúrás","Youtube videó beszúrása","Link beszúrás","Betűméret","Betűtípus","Formázott blokk beszúrása","Normál","Fejléc 1","Fejléc 2","Fejléc 3","Fejléc 4","Idézet","Kód","Beszúr","Táblázat beszúrása","Behúzás csökkentése","Behúzás növelése","Speciális karakter kiválasztása","Speciális karakter beszúrása","Kép formázása","Nézet váltása","Szegélyek","felső","jobb","alsó","bal","CSS stílusok","CSS osztályok","Igazítás","Jobbra","Középre","Balra","Nincs","Forrás","Cím","Helyettesítő szöveg","Link","Link megnyitása új lapon","Kép","Fájl","Haladó","Kép tulajdonságai","Mégsem","OK","Fájl tallózó","Hiba a lista betöltése közben","Hiba a mappák betöltése közben","Biztosan ezt szeretné?","Írjon be egy mappanevet","Mappa létrehozása","írjon be bevet","Húzza ide a képet","Húzza ide a fájlt","vagy kattintson","Helyettesítő szöveg","Feltölt","Tallóz","Háttér","Szöveg","Fent","Középen","Lent","Oszlop beszúrás elé","Oszlop beszúrás utána","Sor beszúrás fölé","Sor beszúrás alá","Táblázat törlése","Sor törlése","Oszlop törlése","Cella tartalmának törlése","Karakterek száma: %d","Szavak száma: %d","Áthúzott","Aláhúzott","Felső index","Alsó index","Kivágás","Összes kijelölése","Szünet","Keresés","Csere erre","Cserélje ki","Beillesztés","Válasszon tartalmat a beillesztéshez","HTML","Félkövér","Dőlt","Ecset","Link","Visszavon","Újra","Táblázat","Kép","Törlés","Paragráfus","Betűméret","Videó","Betű","Rólunk","Nyomtat","Aláhúzott","Áthúzott","Behúzás","Aussenseiter","Teljes méret","Összenyom","Egyenes vonal","Lista","Számozott lista","Kivág","Összes kijelölése","Beágyazott kód","Link megnyitása","Link szerkesztése","Nincs követés","Link leválasztása","Frissít","Szerkesztés","felülvizsgálat","URL","Szerkeszt","Vízszintes igazítás","Szűrő","Rendezés módosítás szerint","Rendezés név szerint","Rendezés méret szerint","Mappa hozzáadás","Visszaállít","Mentés","Mentés másként...","Átméretezés","Kivág","Szélesség","Magasság","Képarány megtartása","Igen","Nem","Eltávolít","Kijelöl","Kijelöl: %s","Függőleges igazítás","Felosztás","Összevonás","Oszlop hozzáadás","Sor hozzáadás",null,"Törlés","Függőleges felosztás","Vízszintes felosztás","Szegély","A beillesztett szöveg HTML-nek tűnik. Megtartsuk HTML-ként?","Beszúrás HTML-ként","Megtartás","Beszúrás szövegként","Csak szöveg beillesztése","Csak a saját képeit tudja szerkeszteni. Letölti ezt a képet?","Kép sikeresen feltöltve!","Palette","Er zijn geen bestanden in deze map.","átnevezés","Adja meg az új nevet","előnézet","Letöltés","Illessze be a vágólap","A böngésző nem támogatja a közvetlen hozzáférést biztosít a vágólapra.","Másolás kiválasztása","másolás","Határ sugár","Összes","Alkalmazni","Kérjük, töltse ki ezt a mezőt,","Kérjük, írja be a webcímet","Alapértelmezett","Kör","Pont","Quadrate","Találni","Megtalálja Előző","Következő Keresése","A beillesztett tartalom Microsoft Word/Excel dokumentumból származik. Meg szeretné tartani a formátumát?","Word-ből másolt szöveg","Elvetés","Helyezze be az osztály nevét","Nyomja meg az Alt egyéni átméretezés"]},99113:function(e){e.exports.default=["Ketik sesuatu","Tentang Jodit","Editor Jodit","Panduan Pengguna Jodit","mencakup detail bantuan penggunaan","Untuk informasi tentang lisensi, silakan kunjungi website:","Beli versi lengkap","Hak Cipta © XDSoft.net - Chupurnov Valeriy. Hak cipta dilindungi undang-undang.","Tautan","Buka di tab baru","Buka editor dalam ukuran penuh","Hapus Pemformatan","Isi warna atau atur warna teks","Ulangi","Batalkan","Tebal","Miring","Sisipkan Daftar Tidak Berurut","Sisipkan Daftar Berurut","Tengah","Penuh","Kiri","Kanan","Sisipkan Garis Horizontal","Sisipkan Gambar","Sisipkan Berkas","Sisipkan video youtube/vimeo","Sisipkan tautan","Ukuran font","Keluarga font","Sisipkan blok format","Normal","Heading 1","Heading 2","Heading 3","Heading 4","Kutip","Kode","Sisipkan","Sisipkan tabel","Kurangi Indentasi","Tambah Indentasi","Pilih Karakter Spesial","Sisipkan Karakter Spesial","Formar warna","Ubah mode","Batas","atas","kanan","bawah","kiri","Gaya","Class","Rata","Kanan","Tengah","Kiri","--Tidak diset--","Src","Judul","Teks alternatif","Tautan","Buka tautan di tab baru","Gambar","berkas","Lanjutan","Properti gambar","Batal","Ya","Penjelajah Berkas","Error ketika memuat list","Error ketika memuat folder","Apakah Anda yakin?","Masukkan nama Direktori","Buat direktori","ketik nama","Letakkan gambar","Letakkan berkas","atau klik","Teks alternatif","Unggah","Jelajahi","Latar Belakang","Teks","Atas","Tengah","Bawah","Sisipkan kolom sebelumnya","Sisipkan kolom setelahnya","Sisipkan baris di atasnya","Sisipkan baris di bawahnya","Hapus tabel","Hapus baris","Hapus kolom","Kosongkan cell","Karakter: %d","Kata: %d","Coret","Garis Bawah","Superskrip","Subskrip","Potong pilihan","Pilih semua","Berhenti","Mencari","Ganti dengan","Mengganti","Paste","Pilih konten untuk dipaste","sumber","tebal","miring","sikat","tautan","batalkan","ulangi","tabel","gambar","penghapus","paragraf","ukuran font","video","font","tentang","cetak","garis bawah","coret","menjorok ke dalam","menjorok ke luar","ukuran penuh","menyusut","hr","ul","ol","potong","Pilih semua","Kode embed","Buka tautan","Edit tautan","No follow","Hapus tautan","Perbarui","pensil","Mata","URL","Edit","Perataan horizontal","Filter","Urutkan berdasarkan perubahan","Urutkan berdasarkan nama","Urutkan berdasarkan ukuran","Tambah folder","Reset","Simpan","Simpan sebagai...","Ubah ukuran","Crop","Lebar","Tinggi","Jaga aspek rasio","Ya","Tidak","Copot","Pilih","Pilih %s","Rata vertikal","Bagi","Gabungkan","Tambah kolom","tambah baris","Lisensi: %s","Hapus","Bagi secara vertikal","Bagi secara horizontal","Bingkai","Kode Anda cenderung ke HTML. Biarkan sebagai HTML?","Paste sebagai HTML","Jaga","Sisipkan sebagai teks","Sisipkan hanya teks","Anda hanya dapat mengedit gambar Anda sendiri. Unduh gambar ini di host?","Gambar telah sukses diunggah ke host!","palet","Tidak ada berkas","ganti nama","Masukkan nama baru","pratinjau","Unduh","Paste dari clipboard","Browser anda tidak mendukung akses langsung ke clipboard.","Copy seleksi","copy","Border radius","Tampilkan semua","Menerapkan","Silahkan mengisi kolom ini","Silahkan masukkan alamat web","Default","Lingkaran","Dot","Kuadrat","Menemukan","Menemukan Sebelumnya","Menemukan Berikutnya","Konten dipaste dari dokumen Microsoft Word/Excel. Apakah Anda ingin tetap menjaga format atau membersihkannya?","Terdeteksi paste dari Word","Bersih","Masukkan nama kelas","Tekan Alt untuk mengubah ukuran kustom"]},51923:function(e){e.exports.default=["Scrivi qualcosa...","A proposito di Jodit","Jodit Editor","Guida utente di Jodit","contiene una guida dettagliata per l'uso.","Per informazioni sulla licenza, si prega di visitare il nostro sito:","Acquista la versione completa","Copyright © XDSoft.net - Chupurnov Valeriy. Alle Rechte vorbehalten.","Ancora","Apri in una nuova scheda","Apri l'editor a schermo intero","Formato chiaro","Riempi colore o lettera","Ripristina","Annulla","Grassetto","Corsivo","Inserisci lista non ordinata","Inserisci l'elenco ordinato","Allinea Centra","Allineare Giustificato","Allinea a Sinistra","Allinea a Destra","Inserisci la linea orizzontale","Inserisci immagine","Inserisci un file","Inserisci video Youtube/Vimeo","Inserisci il link","Dimensione del carattere","Tipo di font","Inserisci blocco","Normale","Heading 1","Heading 2","Heading 3","Heading 4","Citazione","Codice","Inserisci","Inserisci tabella","Riduci il rientro","Aumenta il rientro","Seleziona una funzione speciale","Inserisci un carattere speciale","Copia formato","Cambia modo","Margini","su","destra","giù","sinistra","Stili CSS","Classi CSS","Allinea","Destra","Centro","Sinistra","--Non Impostato--","Fonte","Titolo","Testo Alternativo","Link","Apri il link in una nuova scheda","Immagine","Archivio","Avanzato","Proprietà dell'immagine","Annulla","Accetta","Cerca il file","Errore durante il caricamento dell'elenco","Errore durante il caricamento delle cartelle","Sei sicuro?","Inserisci il nome della cartella","Crea cartella","Entre el nombre","Rilascia l'immagine","Rilascia file","o click","Testo alternativo","Carica","Sfoglia","Sfondo","Testo","Su","Centro","Sotto","Inserisci prima la colonna","Inserisci colonna dopo","Inserisci la riga sopra","Inserisci la riga sotto","Elimina tabella","Elimina riga","Elimina colonna","Cella vuota","Caratteri: %d","Parole: %d","Barrato","Sottolineato","indice","deponente","Taglia la selezione","Seleziona tutto","Pausa","Cerca","Sostituisci con","Sostituire","Incolla","Seleziona il contenuto da incollare","HTML","Grassetto","Corsivo","Pennello","Link","Annulla","Ripristina","Tabella","Immagine","Gomma","Paragrafo","Dimensione del carattere","Video","Font","Approposito di","Stampa","Sottolineato","Barrato","trattino","annulla rientro","A grandezza normale","comprimere","linea orizzontale","lista non ordinata","lista ordinata","Taglia","Seleziona tutto","Includi codice","Apri link","Modifica link","Non seguire","Togli link","Aggiornare","Per modificare","Recensione"," URL","Modifica","Allineamento orizzontale","Filtro","Ordina per data di modifica","Ordina per nome","Ordina per dimensione","Aggiungi cartella","Reset","Salva","Salva con nome...","Ridimensiona","Tagliare","Larghezza","Altezza","Mantenere le proporzioni","Si","No","Rimuovere","Seleziona","Seleziona: %s","Allineamento verticala","Dividere","Fondi","Aggiungi colonna","Aggiungi riga",null,"Cancella","Dividere verticalmente","Diviso orizzontale","Bordo","Il codice è simile all'HTML. Mantieni come HTML?","Incolla come HTML?","Mantieni","Inserisci come testo","Inserisci solo il testo","Puoi modificare solo le tue immagini. Scarica questa immagine sul server?","L'immagine è stata caricata con successo sul server!","tavolozza","Non ci sono file in questa directory.","ungherese","Inserisci un nuovo nome","anteprima","Scaricare","Incolla dagli appunti","Il tuo browser non supporta l'accesso diretto agli appunti.","Selezione di copia","copia","Border radius","Mostra tutti","Applicare","Si prega di compilare questo campo","Si prega di inserire un indirizzo web","Di Default","Cerchio","Dot","Quadrate","Trovare","Trova Precedente","Trova Successivo","Il contenuto incollato proviene da un documento Microsoft Word / Excel. Vuoi mantenere il formato o pulirlo?","Incollato da Word rilevato","Pulisci","Inserisci il nome della classe","Premere Alt per il ridimensionamento personalizzato"]},21268:function(e){e.exports.default=["なにかタイプしてください","Joditについて","Jodit Editor","Jodit ユーザーズ・ガイド","詳しい使い方","ライセンス詳細についてはJodit Webサイトを確認ください：","フルバージョンを購入","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","Anchor","新しいタブで開く","エディターのサイズ（フル/ノーマル）","書式をクリア","テキストの色","やり直し","元に戻す","太字","斜体","箇条書き","番号付きリスト","中央揃え","両端揃え","左揃え","右揃え","区切り線を挿入","画像を挿入","ファイルを挿入","Youtube/Vimeo 動画","リンクを挿入","フォントサイズ","フォント","テキストのスタイル","指定なし","タイトル1","タイトル2","タイトル3","タイトル4","引用","コード","挿入","表を挿入","インデント減","インデント増","特殊文字を選択","特殊文字を挿入","書式を貼付け","編集モード切替え","マージン","上","右","下","左","スタイル","クラス","配置","右寄せ","中央寄せ","左寄せ","指定なし","ソース","タイトル","代替テキスト","リンク","新しいタブで開く","画像","ファイル","高度な設定","画像のプロパティー","キャンセル","確定","File Browser","Error on load list","Error on load folders","Are you sure?","Enter Directory name","Create directory","type name","ここに画像をドロップ","ここにファイルをドロップ","or クリック","代替テキスト","アップロード","ブラウズ","背景","文字","上","中央","下","左に列を挿入","右に列を挿入","上に行を挿入","下に行を挿入","表を削除","行を削除","列を削除","セルを空にする","文字数: %d","単語数: %d","取り消し線","下線","上付き文字","下付き文字","切り取り","すべて選択","Pause","検索","置換","交換","貼付け","選択した内容を貼付け","source","bold","italic","brush","link","undo","redo","table","image","eraser","paragraph","fontsize","video","font","about","print","underline","strikethrough","indent","outdent","fullsize","shrink","分割線","箇条書き","番号付きリスト","切り取り","すべて選択","埋め込みコード","リンクを開く","リンクを編集","No follow","リンク解除","更新","鉛筆","サイトを確認","URL","編集","水平方向の配置","Filter","Sort by changed","Sort by name","Sort by size","Add folder","リセット","保存","Save as ...","リサイズ","Crop","幅","高さ","縦横比を保持","はい","いいえ","移除","選択","選択: %s","垂直方向の配置","分割","セルの結合","列を追加","行を追加",null,"削除","セルの分割（垂直方向）","セルの分割（水平方向）","境界線","HTMLコードを保持しますか？","HTMLで貼付け","HTMLを保持","HTMLをテキストにする","テキストだけ","You can only edit your own images. Download this image on the host?","The image has been successfully uploaded to the host!","パレット","There are no files","Rename","Enter new name","プレビュー","ダウンロード","貼り付け","お使いのブラウザはクリップボードを使用できません","コピー","copy","角の丸み","全て表示","適用","まだこの分野","を入力してくださいウェブアドレス","デフォルト","白丸","黒丸","四角","見","探前","由来","The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?","Word Paste Detected","Clean","クラス名を挿入","カスタムサイズ変更のためのAltキーを押します"]},11399:function(e){e.exports.default=["Type something","About Jodit","Jodit Editor","Jodit User's Guide","contains detailed help for using","For information about the license, please go to our website:","Buy full version","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","Anchor","Open in new tab","Open in fullsize","Clear Formatting","Fill color or set the text color","Redo","Undo","Bold","Italic","Insert Unordered List","Insert Ordered List","Align Center","Align Justify","Align Left","Align Right","Insert Horizontal Line","Insert Image","Insert file","Insert youtube/vimeo video","Insert link","Font size","Font family","Insert format block","Normal","Heading 1","Heading 2","Heading 3","Heading 4","Quote","Code","Insert","Insert table","Decrease Indent","Increase Indent","Select Special Character","Insert Special Character","Paint format","Change mode","Margins","top","right","bottom","left","Styles","Classes","Align","Right","Center","Left","--Not Set--","Src","Title","Alternative","Link","Open link in new tab","Image","file","Advanced","Image properties","Cancel","Ok","File Browser","Error on load list","Error on load folders","Are you sure?","Enter Directory name","Create directory","type name","Drop image","Drop file","or click","Alternative text","Upload","Browse","Background","Text","Top","Middle","Bottom","Insert column before","Insert column after","Insert row above","Insert row below","Delete table","Delete row","Delete column","Empty cell","Chars: %d","Words: %d","Strike through","Underline","superscript","subscript","Cut selection","Select all","Break","Search for","Replace with","Replace","Paste","Choose Content to Paste","source","bold","italic","brush","link","undo","redo","table","image","eraser","paragraph","fontsize","video","font","about","print","underline","strikethrough","indent","outdent","fullsize","shrink","hr","ul","ol","cut","selectall","Embed code","Open link","Edit link","No follow","Unlink","Update","pencil","Eye"," URL","Edit","Horizontal align","Filter","Sort by changed","Sort by name","Sort by size","Add folder","Reset","Save","Save as ...","Resize","Crop","Width","Height","Keep Aspect Ratio","Yes","No","Remove","Select","Select %s","Vertical align","Split","Merge","Add column","Add row","License: %s","Delete","Split vertical","Split horizontal","Border","Your code is similar to HTML. Keep as HTML?","Paste as HTML","Keep","Insert as Text","Insert only Text","You can only edit your own images. Download this image on the host?","The image has been successfully uploaded to the host!","palette","There are no files","Rename","Enter new name","preview","download","Paste from clipboard","Your browser doesn't support direct access to the clipboard.","Copy selection","copy","Border radius","Show all","Apply","Please fill out this field","Please enter a web address","Default","Circle","Dot","Quadrate","Find","Find Previous","Find Next","The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?","Word Paste Detected","Clean","Insert className","Press Alt for custom resizing"]},37289:function(e){e.exports.default=["무엇이든 입력하세요","Jodit에 대하여","Jodit Editor","Jodit 사용자 안내서","자세한 도움말이 들어있어요","라이센스에 관해서는 Jodit 웹 사이트를 방문해주세요：","풀 버전 구입하기","© XDSoft.net - Chupurnov Valeriy. 에게 저작권과 모든 권리가 있습니다.","Anchor","새 탭에서 열기","전체 크기로 보기","서식 지우기","글씨 색상","재실행","실행 취소","굵게","기울임","글머리 목록","번호 목록","가운데 정렬","양쪽 정렬","왼쪽 정렬","오른쪽 정렬","수평 구분선 넣기","이미지 넣기","파일 넣기","Youtube/Vimeo 동영상","링크 넣기","글꼴 크기","글꼴","블록 요소 넣기","일반 텍스트","제목 1","제목 2","제목 3","제목 4","인용","코드","붙여 넣기","테이블","들여쓰기 감소","들여쓰기 증가","특수문자 선택","특수문자 입력","페인트 형식","편집모드 변경","마진","위","오른쪽","아래","왼쪽","스타일","클래스","정렬","오른쪽으로","가운데로","왼쪽으로","--지정 안 함--","경로(src)","제목","대체 텍스트(alt)","링크","새 탭에서 열기",null,"파일","고급","이미지 속성","취소","확인","파일 탐색기","목록 불러오기 에러","폴더 불러오기","정말 진행할까요?","디렉토리 이름 입력","디렉토리 생성","이름 입력","이미지 드래그","파일 드래그","혹은 클릭","대체 텍스트","업로드","탐색","배경","텍스트","위","중앙","아래","이전 열에 삽입","다음 열에 삽입","위 행에 삽입","아래 행에 삽입","테이블 삭제","행 삭제","열 삭제","빈 셀","문자수: %d","단어수: %d","취소선","밑줄","윗첨자","아래첨자","선택 잘라내기","모두 선택","구분자","검색","대체하기","대체","붙여넣기","붙여넣을 내용 선택","HTML 소스","볼드","이탤릭","브러시","링크","실행 취소","재실행","테이블","이미지","지우개","문단","글꼴 크기","비디오","글꼴","편집기 정보","프린트","밑줄","취소선","들여쓰기","내어쓰기","전체 화면","일반 화면","구분선","글머리 목록","번호 목록","잘라내기","모두 선택","Embed 코드","링크 열기","링크 편집","No follow","링크 제거","갱신","연필","사이트 확인","URL","편집","수평 정렬","필터","변경일 정렬","이름 정렬","크기 정렬","새 폴더","초기화","저장","새로 저장하기 ...","리사이즈","크롭","가로 길이","세로 높이","비율 유지하기","네","아니오","제거","선택","선택: %s","수직 정렬","분할","셀 병합","열 추가","행 추가","라이센스: %s","삭제","세로 셀 분할","가로 셀 분할","외곽선","HTML 코드로 감지했어요. 코드인채로 붙여넣을까요?","HTML로 붙여넣기","원본 유지","텍스트로 넣기","텍스트만 넣기","외부 이미지는 편집할 수 없어요. 외부 이미지를 다운로드 할까요?","이미지를 무사히 업로드 했어요!","팔레트","파일이 없어요","이름 변경","새 이름 입력","미리보기","다운로드","클립보드 붙여넣기","사용중인 브라우저가 클립보드 접근을 지원하지 않아요.","선택 복사","복사","둥근 테두리","모두 보기","적용","이 항목을 입력해주세요!","웹 URL을 입력해주세요.","기본","원","점","정사각형","찾기","이전 찾기","다음 찾기","Microsoft Word/Excel 문서로 감지했어요. 서식을 유지한채로 붙여넣을까요?","Word 붙여넣기 감지","지우기","className 입력","사용자 지정 크기 조정에 대 한 고도 누르십시오"]},17084:function(e){e.exports.default=["Begin met typen..","Over Jodit","Jodit Editor","Jodit gebruikershandleiding","bevat gedetailleerde informatie voor gebruik.","Voor informatie over de licentie, ga naar onze website:","Volledige versie kopen","Copyright © XDSoft.net - Chupurnov Valeriy. Alle rechten voorbehouden.","Anker","Open in nieuwe tab","Editor in volledig scherm openen","Opmaak verwijderen","Vulkleur of tekstkleur aanpassen","Opnieuw","Ongedaan maken","Vet","Cursief","Geordende list invoegen","Ongeordende lijst invoegen","Centreren","Uitlijnen op volledige breedte","Links uitlijnen","Rechts uitlijnen","Horizontale lijn invoegen","Afbeelding invoegen","Bestand invoegen","Youtube/Vimeo video invoegen","Link toevoegen","Tekstgrootte","Lettertype","Format blok invoegen","Normaal","Koptekst 1","Koptekst 2","Koptekst 3","Koptekst 4","Citaat","Code","Invoegen","Tabel invoegen","Inspringing verkleinen","Inspringing vergroten","Symbool selecteren","Symbool invoegen","Opmaak kopieren","Modus veranderen","Marges","Boven","Rechts","Onder","Links","CSS styles","CSS classes","Uitlijning","Rechts","Gecentreerd","Links","--Leeg--","Src","Titel","Alternatieve tekst","Link","Link in nieuwe tab openen","Afbeelding","Bestand","Geavanceerd","Afbeeldingseigenschappen","Annuleren","OK","Bestandsbrowser","Fout bij het laden van de lijst","Fout bij het laden van de mappenlijst","Weet je het zeker?","Geef de map een naam","Map aanmaken","Type naam","Sleep hier een afbeelding naartoe","Sleep hier een bestand naartoe","of klik","Alternatieve tekst","Uploaden","Bladeren","Achtergrond","Tekst","Boven","Midden","Onder","Kolom invoegen (voor)","Kolom invoegen (na)","Rij invoegen (boven)","Rij invoegen (onder)","Tabel verwijderen","Rij verwijderen","Kolom verwijderen","Cel leegmaken","Tekens: %d","Woorden: %d","Doorstrepen","Onderstrepen","Superscript","Subscript","Selectie knippen","Selecteer alles","Enter","Zoek naar","Vervangen door","Vervangen","Plakken","Kies content om te plakken","Broncode","vet","cursief","kwast","link","ongedaan maken","opnieuw","tabel","afbeelding","gum","paragraaf","lettergrootte","video","lettertype","over","afdrukken","onderstreept","doorgestreept","inspringen","minder inspringen","volledige grootte","kleiner maken","horizontale lijn","lijst","genummerde lijst","knip","alles selecteren","Embed code","link openen","link aanpassen","niet volgen","link verwijderen","Updaten","Om te bewerken","Recensie"," URL","Bewerken","Horizontaal uitlijnen","Filteren","Sorteren op wijzigingsdatum","Sorteren op naam","Sorteren op grootte","Map toevoegen","Herstellen","Opslaan","Opslaan als ...","Grootte aanpassen","Bijknippen","Breedte","Hoogte","Verhouding behouden","Ja","Nee","Verwijderen","Selecteren","Selecteer: %s","Verticaal uitlijnen","Splitsen","Samenvoegen","Kolom toevoegen","Rij toevoegen",null,"Verwijderen","Verticaal splitsen","Horizontaal splitsen","Rand","Deze code lijkt op HTML. Als HTML behouden?","Invoegen als HTML","Origineel behouden","Als tekst invoegen","Als onopgemaakte tekst invoegen","Je kunt alleen je eigen afbeeldingen aanpassen. Deze afbeelding downloaden?","De afbeelding is succesvol geüploadet!","Palette","Er zijn geen bestanden in deze map.","Hongaars","Voer een nieuwe naam in","voorvertoning","Download","Plakken van klembord","Uw browser ondersteunt geen directe toegang tot het klembord.","Selectie kopiëren","kopiëren","Border radius","Toon alle","Toepassing","Vul dit veld","Voer een webadres","Standaard","Cirkel","Dot","Quadrate","Zoeken","Vorige Zoeken","Volgende Zoeken","De geplakte tekst is afkomstig van een Microsoft Word/Excel document. Wil je de opmaak behouden of opschonen?","Word-tekst gedetecteerd","Opschonen","Voeg de klassenaam in","Druk op Alt voor aangepaste grootte"]},96891:function(e){e.exports.default=["Napisz coś","O Jodit","Edytor Jodit","Instrukcja Jodit","zawiera szczegółowe informacje dotyczące użytkowania.","Odwiedź naszą stronę, aby uzyskać więcej informacji na temat licencji:","Zakup pełnej wersji","Copyright © XDSoft.net - Chupurnov Valeriy. Wszystkie prawa zastrzeżone.","Kotwica","Otwórz w nowej zakładce","Otwórz edytor w pełnym rozmiarze","Wyczyść formatowanie","Kolor wypełnienia lub ustaw kolor tekstu","Ponów","Cofnij","Pogrubienie","Kursywa","Wstaw listę wypunktowaną","Wstaw listę numeryczną","Wyśrodkuj","Wyjustuj","Wyrównaj do lewej","Wyrównaj do prawej","Wstaw linię poziomą","Wstaw grafikę","Wstaw plik","Wstaw film Youtube/vimeo","Wstaw link","Rozmiar tekstu","Krój czcionki","Wstaw formatowanie","Normalne","Nagłówek 1","Nagłówek 2","Nagłówek 3","Nagłówek 4","Cytat","Kod","Wstaw","Wstaw tabelę","Zmniejsz wcięcie","Zwiększ wcięcie","Wybierz znak specjalny","Wstaw znak specjalny","Malarz formatów","Zmień tryb","Marginesy","Górny","Prawy","Dolny","Levy","Style CSS","Klasy CSS","Wyrównanie","Prawa","środek","Lewa","brak","Źródło","Tytuł","Tekst alternatywny","Link","Otwórz w nowej zakładce","Grafika","Plik","Zaawansowane","Właściwości grafiki","Anuluj","OK","Przeglądarka plików","Błąd ładowania listy plików","Błąd ładowania folderów","Czy jesteś pewien?","Wprowadź nazwę folderu","Utwórz folder","wprowadź nazwę","Upuść plik graficzny","Upuść plik","lub kliknij tu","Tekst alternatywny","Wczytaj","Przeglądaj","Tło","Treść","Góra","Środek","Dół","Wstaw kolumnę przed","Wstaw kolumnę po","Wstaw wiersz przed","Wstaw wiersz po","Usuń tabelę","Usuń wiersz","Usuń kolumnę","Wyczyść komórkę","Znaki: %d","Słowa: %d","Przekreślenie","Podkreślenie","indeks górny","index dolny","Wytnij zaznaczenie","Wybierz wszystko","Przerwa","Szukaj","Zamień na","Wymienić","Wklej","Wybierz zawartość do wklejenia","HTML","pogrubienie","kursywa","pędzel","link","cofnij","ponów","tabela","grafika","wyczyść","akapit","rozmiar czcionki","wideo","czcionka","O programie","drukuj","podkreślenie","przekreślenie","wcięcie","wycięcie","pełen rozmiar","przytnij","linia pozioma","lista","lista numerowana","wytnij","zaznacz wszystko","Wstaw kod","otwórz link","edytuj link","Atrybut no-follow","Usuń link","Aktualizuj","edytuj","szukaj","URL","Edytuj","Wyrównywanie w poziomie","Filtruj","Sortuj wg zmiany","Sortuj wg nazwy","Sortuj wg rozmiaru","Dodaj folder","wyczyść","zapisz","zapisz jako","Zmień rozmiar","Przytnij","Szerokość","Wysokość","Zachowaj proporcje","Tak","Nie","Usuń","Wybierz","Wybierz: %s","Wyrównywanie w pionie","Podziel","Scal","Dodaj kolumnę","Dodaj wiersz",null,"Usuń","Podziel w pionie","Podziel w poziomie","Obramowanie","Twój kod wygląda jak HTML. Zachować HTML?","Wkleić jako HTML?","Oryginalny tekst","Wstaw jako tekst","Wstaw tylko treść","Możesz edytować tylko swoje grafiki. Czy chcesz pobrać tą grafikę?","Grafika została pomyślnienie dodana na serwer","Paleta","Brak plików.","zmień nazwę","Wprowadź nową nazwę","podgląd","pobierz","Wklej ze schowka","Twoja przeglądarka nie obsługuje schowka","Kopiuj zaznaczenie","kopiuj","Zaokrąglenie krawędzi","Pokaż wszystkie","Zastosuj","Proszę wypełnić to pole","Proszę, wpisz adres sieci web","Domyślnie","Koło","Punkt","Kwadrat","Znaleźć","Znaleźć Poprzednie","Znajdź Dalej","Wklejany tekst pochodzi z dokumentu Microsoft Word/Excel. Chcesz zachować ten format czy wyczyścić go? ","Wykryto tekst w formacie Word","Wyczyść","Wstaw nazwę zajęć","Naciśnij Alt, aby zmienić rozmiar"]},31211:function(e){e.exports.default=["Escreva algo...","Sobre o Jodit","Editor Jodit","Guia de usuário Jodit","contém ajuda detalhada para o uso.","Para informação sobre a licença, por favor visite nosso site:","Compre a versão completa","Copyright © XDSoft.net - Chupurnov Valeriy. Todos os direitos reservados.","Link","Abrir em nova aba","Abrir editor em tela cheia","Limpar formatação","Cor de preenchimento ou cor do texto","Refazer","Desfazer","Negrito","Itálico","Inserir lista não ordenada","Inserir lista ordenada","Centralizar","Justificar","Alinhar à Esquerda","Alinhar à Direita","Inserir linha horizontal","Inserir imagem","Inserir arquivo","Inserir vídeo do Youtube/vimeo","Inserir link","Tamanho da letra","Fonte","Inserir bloco","Normal","Cabeçalho 1","Cabeçalho 2","Cabeçalho 3","Cabeçalho 4","Citação","Código","Inserir","Inserir tabela","Diminuir recuo","Aumentar recuo","Selecionar caractere especial","Inserir caractere especial","Copiar formato","Mudar modo","Margens","cima","direta","baixo","esquerda","Estilos CSS","Classes CSS","Alinhamento","Direita","Centro","Esquerda","--Não Estabelecido--","Fonte","Título","Texto Alternativo","Link","Abrir link em nova aba","Imagem","Arquivo","Avançado","Propriedades da imagem","Cancelar","Ok","Procurar arquivo","Erro ao carregar a lista","Erro ao carregar as pastas","Você tem certeza?","Escreva o nome da pasta","Criar pasta","Escreva seu nome","Soltar imagem","Soltar arquivo","ou clique","Texto alternativo","Upload","Explorar","Fundo","Texto","Cima","Meio","Baixo","Inserir coluna antes","Inserir coluna depois","Inserir linha acima","Inserir linha abaixo","Excluir tabela","Excluir linha","Excluir coluna","Limpar célula","Caracteres: %d","Palavras: %d","Tachado","Sublinhar","sobrescrito","subscrito","Cortar seleção","Selecionar tudo","Pausa","Procurar por","Substituir com","Substituir","Colar","Escolher conteúdo para colar","HTML","negrito","itálico","pincel","link","desfazer","refazer","tabela","imagem","apagar","parágrafo","tamanho da letra","vídeo","fonte","Sobre de","Imprimir","sublinhar","tachado","recuar","diminuir recuo","Tamanho completo","diminuir","linha horizontal","lista não ordenada","lista ordenada","Cortar","Selecionar tudo","Incluir código","Abrir link","Editar link","Não siga","Remover link","Atualizar","Editar","Visualizar","URL","Editar","Alinhamento horizontal","filtrar","Ordenar por modificação","Ordenar por nome","Ordenar por tamanho","Adicionar pasta","Resetar","Salvar","Salvar como...","Redimensionar","Recortar","Largura","Altura","Manter a proporção","Sim","Não","Remover","Selecionar","Selecionar: %s","Alinhamento vertical","Dividir","Mesclar","Adicionar coluna","Adicionar linha",null,"Excluir","Dividir vertical","Dividir horizontal","Borda","Seu código é similar ao HTML. Manter como HTML?","Colar como HTML?","Manter","Inserir como Texto","Inserir somente o Texto","Você só pode editar suas próprias imagens. Baixar essa imagem pro servidor?","A imagem foi enviada com sucesso para o servidor!","Palette","Não há arquivos nesse diretório.","Húngara","Digite um novo nome","preview","Baixar","Colar da área de transferência","O seu navegador não oferece suporte a acesso direto para a área de transferência.","Selecção de cópia","cópia","Border radius","Mostrar todos os","Aplicar","Por favor, preencha este campo","Por favor introduza um endereço web","Padrão","Círculo","Ponto","Quadro","Encontrar","Encontrar Anteriores","Localizar Próxima","O conteúdo colado veio de um documento Microsoft Word/Excel. Você deseja manter o formato ou limpa-lo?","Colado do Word Detectado","Limpar","Insira o nome da classe","Pressione Alt para redimensionamento personalizado"]},31109:function(e){e.exports.default=["Напишите что-либо","О Jodit","Редактор Jodit","Jodit Руководство пользователя","содержит детальную информацию по использованию","Для получения сведений о лицензии , пожалуйста, перейдите на наш сайт:","Купить полную версию","Авторские права © XDSoft.net - Чупурнов Валерий. Все права защищены.","Анкор","Открывать ссылку в новой вкладке","Открыть редактор в полном размере","Очистить форматирование","Цвет заливки или цвет текста","Повтор","Отмена","Жирный","Наклонный","Вставка маркированного списка","Вставить нумерованный список","Выровнять по центру","Выровнять по ширине","Выровнять по левому краю","Выровнять по правому краю","Вставить горизонтальную линию","Вставить изображение","Вставить файл","Вставьте видео","Вставить ссылку","Размер шрифта","Шрифт","Вставить блочный элемент","Нормальный текст","Заголовок 1","Заголовок 2","Заголовок 3","Заголовок 4","Цитата","Код","Вставить","Вставить таблицу","Уменьшить отступ","Увеличить отступ","Выберите специальный символ","Вставить специальный символ","Формат краски","Источник","Отступы","сверху","справа","снизу","слева","Стили","Классы","Выравнивание","По правому краю","По центру","По левому краю","--не устанавливать--","src","Заголовок","Альтернативный текст (alt)","Ссылка","Открывать ссылку в новом окне",null,"Файл","Расширенные","Свойства изображения","Отмена","Ок","Браузер файлов","Ошибка при загрузке списка изображений","Ошибка при загрузке списка директорий","Вы уверены?","Введите название директории","Создать директорию","введите название","Перетащите сюда изображение","Перетащите сюда файл","или нажмите","Альтернативный текст","Загрузка","Сервер","Фон","Текст"," К верху","По середине","К низу","Вставить столбец до","Вставить столбец после","Вставить ряд выше","Вставить ряд ниже","Удалить таблицу","Удалять ряд","Удалить столбец","Очистить ячейку","Символов: %d","Слов: %d","Перечеркнуть","Подчеркивание","верхний индекс","индекс","Вырезать","Выделить все","Разделитель","Найти","Заменить на","Заменить","Вставить","Выбрать контент для вставки","HTML","жирный","курсив","заливка","ссылка","отменить","повторить","таблица","Изображение","очистить","параграф","размер шрифта","видео","шрифт","о редакторе","печать","подчеркнутый","перечеркнутый","отступ","выступ","во весь экран","обычный размер","линия","Список","Нумерованный список","Вырезать","Выделить все","Код","Открыть ссылку","Редактировать ссылку","Атрибут nofollow","Убрать ссылку","Обновить","Редактировать","Просмотр","URL","Редактировать","Горизонтальное выравнивание","Фильтр","По изменению","По имени","По размеру","Добавить папку","Восстановить","Сохранить","Сохранить как","Изменить размер","Обрезать размер","Ширина","Высота","Сохранять пропорции","Да","Нет","Удалить","Выделить","Выделить: %s","Вертикальное выравнивание","Разделить","Объединить в одну","Добавить столбец","Добавить строку","Лицензия: %s","Удалить","Разделить по вертикали","Разделить по горизонтали","Рамка","Ваш текст, который вы пытаетесь вставить похож на HTML. Вставить его как HTML?","Вставить как HTML?","Сохранить оригинал","Вставить как текст","Вставить только текст","Вы можете редактировать только свои собственные изображения. Загрузить это изображение на ваш сервер?","Изображение успешно загружено на сервер!","палитра","В данном каталоге нет файлов","Переименовать","Введите новое имя","Предпросмотр","Скачать","Вставить из буфера обмена","Ваш браузер не поддерживает прямой доступ к буферу обмена.","Скопировать выделенное","копия","Радиус границы","Показать все","Применить","Пожалуйста, заполните это поле","Пожалуйста, введите веб-адрес","По умолчанию","Круг","Точка","Квадрат","Найти","Найти Предыдущие","Найти Далее","Контент который вы вставляете поступает из документа Microsoft Word / Excel. Вы хотите сохранить формат или очистить его?","Возможно это фрагмент Word или Excel","Почистить","Вставить название класса","Нажмите Alt для изменения пользовательского размера"]},79375:function(e){e.exports.default=["Bir şeyler yaz","Jodit Hakkında","Jodit Editor","Jodit Kullanım Kılavuzu","kullanım için detaylı bilgiler içerir","Lisans hakkında bilgi için lütfen web sitemize gidin:","Tam versiyonunu satın al","Copyright © XDSoft.net - Chupurnov Valeriy. Tüm hakları saklıdır.","Bağlantı","Yeni sekmede aç","Editörü tam ekranda aç","Stili temizle","Renk doldur veya yazı rengi seç","Yinele","Geri Al","Kalın","İtalik","Sırasız Liste Ekle","Sıralı Liste Ekle","Ortala","Kenarlara Yasla","Sola Yasla","Sağa Yasla","Yatay Çizgi Ekle","Resim Ekle","Dosya Ekle","Youtube/Vimeo Videosu Ekle","Bağlantı Ekle","Font Boyutu","Font Ailesi","Blok Ekle","Normal","Başlık 1","Başlık 2","Başlık 3","Başlık 4","Alıntı","Kod","Ekle","Tablo Ekle","Girintiyi Azalt","Girintiyi Arttır","Özel Karakter Seç","Özel Karakter Ekle","Resim Biçimi","Mod Değiştir","Boşluklar","Üst","Sağ","Alt","Sol","CSS Stilleri","CSS Sınıfları","Hizalama","Sağ","Ortalı","Sol","Belirsiz","Kaynak","Başlık","Alternatif Yazı","Link","Bağlantıyı yeni sekmede aç","Resim","Dosya","Gelişmiş","Resim özellikleri","İptal","Tamam","Dosya Listeleyici","Liste yüklenirken hata oluştu","Klasörler yüklenirken hata oluştur","Emin misiniz?","Dizin yolu giriniz","Dizin oluştur","İsim yaz","Resim bırak","Dosya bırak","veya tıkla","Alternatif yazı","Yükle","Gözat","Arka plan","Yazı","Üst","Orta","Aşağı","Öncesine kolon ekle","Sonrasına kolon ekle","Üstüne satır ekle","Altına satır ekle","Tabloyu sil","Satırı sil","Kolonu sil","Hücreyi temizle","Harfler: %d","Kelimeler: %d","Üstü çizili","Alt çizgi","Üst yazı","Alt yazı","Seçilimi kes","Tümünü seç","Satır sonu","Ara","Şununla değiştir","Değiştir","Yapıştır","Yapıştırılacak içerik seç","Kaynak","Kalın","italik","Fırça","Bağlantı","Geri al","Yinele","Tablo","Resim","Silgi","Paragraf","Font boyutu","Video","Font","Hakkında","Yazdır","Alt çizgi","Üstü çizili","Girinti","Çıkıntı","Tam ekran","Küçült","Ayraç","Sırasız liste","Sıralı liste","Kes","Tümünü seç","Kod ekle","Bağlantıyı aç","Bağlantıyı düzenle","Nofollow özelliği","Bağlantıyı kaldır","Güncelle","Düzenlemek için","Yorumu","URL","Düzenle","Yatay hizala","Filtre","Değişime göre sırala","İsme göre sırala","Boyuta göre sırala","Klasör ekle","Sıfırla","Kaydet","Farklı kaydet","Boyutlandır","Kırp","Genişlik","Yükseklik","En boy oranını koru","Evet","Hayır","Sil","Seç","Seç: %s","Dikey hizala","Ayır","Birleştir","Kolon ekle","Satır ekle",null,"Sil","Dikey ayır","Yatay ayır","Kenarlık","Kodunuz HTML koduna benziyor. HTML olarak devam etmek ister misiniz?","HTML olarak yapıştır","Sakla","Yazı olarak ekle","Sadece yazıyı ekle","Sadece kendi resimlerinizi düzenleyebilirsiniz. Bu görseli kendi hostunuza indirmek ister misiniz?","Görsel başarıyla hostunuza yüklendi","Palet","Bu dizinde dosya yok","Yeniden isimlendir","Yeni isim girin","Ön izleme","İndir","Panodan yapıştır ","Tarayıcınız panoya doğrudan erişimi desteklemiyor.","Seçimi kopyala","Kopyala","Sınır yarıçapı","Tümünü Göster","Uygula","Lütfen bu alanı doldurun","Lütfen bir web adresi girin","Varsayılan","Daire","Nokta","Kare","Bul","Öncekini Bul","Sonrakini Bul","Der Inhalt, den Sie einfügen, stammt aus einem Microsoft Word / Excel-Dokument. Möchten Sie das Format erhalten oder löschen?","Word biçiminde yapıştırma algılandı","Temizle","Sınıf adı girin","Özel yeniden boyutlandırma için Alt tuşuna basın"]},21042:function(e){e.exports.default=["输入一些内容","关于Jodit","Jodit Editor","开发者指南","使用帮助","有关许可证的信息，请访问我们的网站：","购买完整版本","Copyright © XDSoft.net - Chupurnov Valeriy. 版权所有","Anchor","在新窗口打开","全屏编辑","清除样式","颜色","重做","撤销","粗体","斜体","符号列表","编号","居中","对齐文本","左对齐","右对齐","分割线","图片","文件","视频","链接","字号","字体","格式块","默认","标题1","标题2","标题3","标题4","引用","代码","插入","表格","减少缩进","增加缩进","选择特殊符号","特殊符号","格式复制","改变模式","外边距（Margins）","top","right","bottom","left","样式","Classes","对齐方式","居右","居中","居左","无","Src","Title","Alternative","Link","在新窗口打开链接","图片","file","高级","图片属性","取消","确定","文件管理","加载list错误","加载folders错误","你确定吗？","输入路径","创建路径","type name","拖动图片到此","拖动文件到此","或点击","Alternative text","上传","浏览","背景色","文字","顶部","中间","底部","在之前插入列","在之后插入列","在之前插入行","在之后插入行","删除表格","删除行","删除列","清除内容","字符数: %d","单词数: %d","删除线","下划线","上标","下标","剪切","全选","Break","查找","替换为","替换","粘贴","选择内容并粘贴","源码","粗体","斜体","颜色","链接","撤销","重做","表格","图片","橡皮擦","段落","字号","视频","字体","关于","打印","下划线","上出现","增加缩进","减少缩进","全屏","收缩","分割线","无序列表","顺序列表","剪切","全选","嵌入代码","打开链接","编辑链接","No follow","取消链接","更新","铅笔","预览","URL","编辑","水平对齐","筛选","修改时间排序","名称排序","大小排序","新建文件夹","重置","保存","保存为","调整大小","剪切","宽","高","保持长宽比","是","不","移除","选择","选择: %s","垂直对齐","拆分","合并","添加列","添加行",null,"删除","垂直拆分","水平拆分","边框","你粘贴的文本是一段html代码，是否保留源格式","html粘贴","保留源格式","把html代码视为普通文本","只保留文本","你只能编辑你自己的图片。Download this image on the host?","图片上传成功","调色板","此目录中沒有文件。","重命名","输入新名称","预览","下载","粘贴从剪贴板","你浏览器不支持直接访问的剪贴板。","复制选中内容","复制","边界半径","显示所有","应用","请填写这个字段","请输入一个网址","默认","圆圈","点","方形","搜索","查找上一个","查找下一个","正在粘贴 Word/Excel 的文本，是否保留源格式？","文本粘贴","匹配目标格式","插入班级名称","按Alt自定义调整大小"]},73895:function(e){e.exports.default=["輸入一些內容","關於Jodit","Jodit Editor","開發者指南","使用幫助","有關許可證的信息，請訪問我們的網站：","購買完整版本","Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.","Anchor","在新窗口打開","全屏編輯","清除樣式","顏色","重做","撤銷","粗體","斜體","符號列表","編號","居中","對齊文本","左對齊","右對齊","分割線","圖片","文件","youtube/vimeo 影片","鏈接","字號","字體","格式塊","文本","標題1","標題2","標題3","標題4","引用","代碼","插入","表格","減少縮進","增加縮進","選擇特殊符號","特殊符號","格式複製","改變模式","外邊距（Margins）","top","right","bottom","left","樣式","Classes","對齊方式","居右","居中","居左","無","Src","Title","替代","Link","在新窗口打開鏈接","圖片","file","高級","圖片屬性","取消","確定","文件管理","加載list錯誤","加載folders錯誤","你確定嗎？","輸入路徑","創建路徑","type name","拖動圖片到此","拖動文件到此","或點擊","替代文字","上傳","瀏覽","背景色","文字","頂部","中間","底部","在之前插入列","在之後插入列","在之前插入行","在之後插入行","刪除表格","刪除行","刪除列","清除內容","字符數: %d","單詞數: %d","刪除線","下劃線","上標","下標","剪切","全選","Pause","查找","替換為","แทนที่","黏貼","選擇內容並黏貼","源碼","粗體","斜體","顏色","鏈接","撤銷","重做","表格","圖片","橡皮擦","段落","字號","影片","字體","關於","打印","下劃線","上出現","增加縮進","減少縮進","全屏","收縮","分割線","無序列表","順序列表","剪切","全選","嵌入代碼","打開鏈接","編輯鏈接","No follow","取消連結","更新","鉛筆","回顧","URL",null,"水平對齊","篩選","修改時間排序","名稱排序","大小排序","新建文件夾","重置","保存","保存為","調整大小","Crop","寬","高","保存長寬比","是","不","移除","選擇","選擇: %s","垂直對齊","拆分","合併","添加列","添加行",null,"刪除","垂直拆分","水平拆分","邊框","你黏貼的文本是一段html代碼，是否保留源格式","html黏貼","保留源格式","把html代碼視為普通文本","只保留文本","你只能編輯你自己的圖片。是否下載此圖片到本地?","圖片上傳成功","調色板","此目錄中沒有文件。","重命名","輸入新名稱","預覽","下載","從剪貼板貼上","瀏覽器無法存取剪贴板。","複製已選取項目","複製","邊框圓角","顯示所有","應用","ได้โปรดกรอกช่องข้อมูลนี้","โปรดเติมที่อยู่บนเว็บ","ค่าปริยาย","วงกลม","จุด","Quadrate","ค้นหา","ค้นหาก่อนหน้านี้","ค้นหาถัดไป","正在黏貼 Word/Excel 的文本，是否保留源格式？","文本黏貼","匹配目標格式","ใส่ชื่อคลาส","กดอัลท์สำหรับการปรับขนาดที่กำหนดเอง"]},3610:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M621 1280h595v-595zm-45-45l595-595h-595v595zm1152 77v192q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-224h-864q-14 0-23-9t-9-23v-864h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h192q14 0 23 9t9 23v224h851l246-247q10-9 23-9t23 9q9 10 9 23t-9 23l-247 246v851h224q14 0 23 9t9 23z"/> </svg>'},56170:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 24 24"> <g transform="translate(-251.000000, -443.000000)"> <g transform="translate(215.000000, 119.000000)"/> <path d="M252,448 L256,448 L256,444 L252,444 L252,448 Z M257,448 L269,448 L269,446 L257,446 L257,448 Z M257,464 L269,464 L269,462 L257,462 L257,464 Z M270,444 L270,448 L274,448 L274,444 L270,444 Z M252,462 L252,466 L256,466 L256,462 L252,462 Z M270,462 L270,466 L274,466 L274,462 L270,462 Z M254,461 L256,461 L256,449 L254,449 L254,461 Z M270,461 L272,461 L272,449 L270,449 L270,461 Z"/> </g> </svg>'},95331:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' x="0px" y="0px" viewBox="0 0 459 459"> <g> <path d="M229.5,0C102,0,0,102,0,229.5S102,459,229.5,459c20.4,0,38.25-17.85,38.25-38.25c0-10.2-2.55-17.85-10.2-25.5 c-5.1-7.65-10.2-15.3-10.2-25.5c0-20.4,17.851-38.25,38.25-38.25h45.9c71.4,0,127.5-56.1,127.5-127.5C459,91.8,357,0,229.5,0z M89.25,229.5c-20.4,0-38.25-17.85-38.25-38.25S68.85,153,89.25,153s38.25,17.85,38.25,38.25S109.65,229.5,89.25,229.5z M165.75,127.5c-20.4,0-38.25-17.85-38.25-38.25S145.35,51,165.75,51S204,68.85,204,89.25S186.15,127.5,165.75,127.5z M293.25,127.5c-20.4,0-38.25-17.85-38.25-38.25S272.85,51,293.25,51s38.25,17.85,38.25,38.25S313.65,127.5,293.25,127.5z M369.75,229.5c-20.4,0-38.25-17.85-38.25-38.25S349.35,153,369.75,153S408,170.85,408,191.25S390.15,229.5,369.75,229.5z" /> </g> </svg>'},84279:function(e){e.exports='<svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"> <path d="M1088 1256v240q0 16-12 28t-28 12h-240q-16 0-28-12t-12-28v-240q0-16 12-28t28-12h240q16 0 28 12t12 28zm316-600q0 54-15.5 101t-35 76.5-55 59.5-57.5 43.5-61 35.5q-41 23-68.5 65t-27.5 67q0 17-12 32.5t-28 15.5h-240q-15 0-25.5-18.5t-10.5-37.5v-45q0-83 65-156.5t143-108.5q59-27 84-56t25-76q0-42-46.5-74t-107.5-32q-65 0-108 29-35 25-107 115-13 16-31 16-12 0-25-8l-164-125q-13-10-15.5-25t5.5-28q160-266 464-266 80 0 161 31t146 83 106 127.5 41 158.5z"/> </svg>'},11257:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 128 128" xml:space="preserve"> <polygon points="112.4560547,23.3203125 112.4560547,75.8154297 31.4853516,75.8154297 31.4853516,61.953125 16.0131836,72.6357422 0.5410156,83.3164063 16.0131836,93.9990234 31.4853516,104.6796875 31.4853516,90.8183594 112.4560547,90.8183594 112.4560547,90.8339844 127.4589844,90.8339844 127.4589844,23.3203125"/> </svg>'},25141:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M747 1521q74 32 140 32 376 0 376-335 0-114-41-180-27-44-61.5-74t-67.5-46.5-80.5-25-84-10.5-94.5-2q-73 0-101 10 0 53-.5 159t-.5 158q0 8-1 67.5t-.5 96.5 4.5 83.5 12 66.5zm-14-746q42 7 109 7 82 0 143-13t110-44.5 74.5-89.5 25.5-142q0-70-29-122.5t-79-82-108-43.5-124-14q-50 0-130 13 0 50 4 151t4 152q0 27-.5 80t-.5 79q0 46 1 69zm-541 889l2-94q15-4 85-16t106-27q7-12 12.5-27t8.5-33.5 5.5-32.5 3-37.5.5-34v-65.5q0-982-22-1025-4-8-22-14.5t-44.5-11-49.5-7-48.5-4.5-30.5-3l-4-83q98-2 340-11.5t373-9.5q23 0 68.5.5t67.5.5q70 0 136.5 13t128.5 42 108 71 74 104.5 28 137.5q0 52-16.5 95.5t-39 72-64.5 57.5-73 45-84 40q154 35 256.5 134t102.5 248q0 100-35 179.5t-93.5 130.5-138 85.5-163.5 48.5-176 14q-44 0-132-3t-132-3q-106 0-307 11t-231 12z"/> </svg>'},24557:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M384 1662l17-85q6-2 81.5-21.5t111.5-37.5q28-35 41-101 1-7 62-289t114-543.5 52-296.5v-25q-24-13-54.5-18.5t-69.5-8-58-5.5l19-103q33 2 120 6.5t149.5 7 120.5 2.5q48 0 98.5-2.5t121-7 98.5-6.5q-5 39-19 89-30 10-101.5 28.5t-108.5 33.5q-8 19-14 42.5t-9 40-7.5 45.5-6.5 42q-27 148-87.5 419.5t-77.5 355.5q-2 9-13 58t-20 90-16 83.5-6 57.5l1 18q17 4 185 31-3 44-16 99-11 0-32.5 1.5t-32.5 1.5q-29 0-87-10t-86-10q-138-2-206-2-51 0-143 9t-121 11z"/> </svg>'},10859:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1760 896q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1728zm-1277-64q-28-35-51-80-48-97-48-188 0-181 134-309 133-127 393-127 50 0 167 19 66 12 177 48 10 38 21 118 14 123 14 183 0 18-5 45l-12 3-84-6-14-2q-50-149-103-205-88-91-210-91-114 0-182 59-67 58-67 146 0 73 66 140t279 129q69 20 173 66 58 28 95 52h-743zm507 256h411q7 39 7 92 0 111-41 212-23 55-71 104-37 35-109 81-80 48-153 66-80 21-203 21-114 0-195-23l-140-40q-57-16-72-28-8-8-8-22v-13q0-108-2-156-1-30 0-68l2-37v-44l102-2q15 34 30 71t22.5 56 12.5 27q35 57 80 94 43 36 105 57 59 22 132 22 64 0 139-27 77-26 122-86 47-61 47-129 0-84-81-157-34-29-137-71z"/> </svg>'},9813:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1025 1369v167h-248l-159-252-24-42q-8-9-11-21h-3l-9 21q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zm639 217v206h-514l-4-27q-3-45-3-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 80-65 188-65 110 0 178 59.5t68 158.5q0 66-34.5 118.5t-84 86-99.5 62.5-87 63-41 73h232v-80h126z"/> </svg>'},93395:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1025 1369v167h-248l-159-252-24-42q-8-9-11-21h-3l-9 21q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zm637-679v206h-514l-3-27q-4-28-4-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 83-65 188-65 110 0 178 59.5t68 158.5q0 56-24.5 103t-62 76.5-81.5 58.5-82 50.5-65.5 51.5-30.5 63h232v-80h126z"/> </svg>'},98213:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M176 223q-37-2-45-4l-3-88q13-1 40-1 60 0 112 4 132 7 166 7 86 0 168-3 116-4 146-5 56 0 86-2l-1 14 2 64v9q-60 9-124 9-60 0-79 25-13 14-13 132 0 13 .5 32.5t.5 25.5l1 229 14 280q6 124 51 202 35 59 96 92 88 47 177 47 104 0 191-28 56-18 99-51 48-36 65-64 36-56 53-114 21-73 21-229 0-79-3.5-128t-11-122.5-13.5-159.5l-4-59q-5-67-24-88-34-35-77-34l-100 2-14-3 2-86h84l205 10q76 3 196-10l18 2q6 38 6 51 0 7-4 31-45 12-84 13-73 11-79 17-15 15-15 41 0 7 1.5 27t1.5 31q8 19 22 396 6 195-15 304-15 76-41 122-38 65-112 123-75 57-182 89-109 33-255 33-167 0-284-46-119-47-179-122-61-76-83-195-16-80-16-237v-333q0-188-17-213-25-36-147-39zm1488 1409v-64q0-14-9-23t-23-9h-1472q-14 0-23 9t-9 23v64q0 14 9 23t23 9h1472q14 0 23-9t9-23z"/> </svg>'},20026:function(e){e.exports='<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"> <path d="M36 4h-24c-2.21 0-4 1.79-4 4v32c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4v-32c0-2.21-1.79-4-4-4zm-24 4h10v16l-5-3-5 3v-16z"/> </svg>'},66911:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M832 1408l336-384h-768l-336 384h768zm1013-1077q15 34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38 0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38 0 69.5 20.5t47.5 54.5z"/> </svg>'},50018:function(e){e.exports='<svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"> <path d="M24.89,6.61H22.31V4.47A2.47,2.47,0,0,0,19.84,2H6.78A2.47,2.47,0,0,0,4.31,4.47V22.92a2.47,2.47,0,0,0,2.47,2.47H9.69V27.2a2.8,2.8,0,0,0,2.8,2.8h12.4a2.8,2.8,0,0,0,2.8-2.8V9.41A2.8,2.8,0,0,0,24.89,6.61ZM6.78,23.52a.61.61,0,0,1-.61-.6V4.47a.61.61,0,0,1,.61-.6H19.84a.61.61,0,0,1,.61.6V6.61h-8a2.8,2.8,0,0,0-2.8,2.8V23.52Zm19,3.68a.94.94,0,0,1-.94.93H12.49a.94.94,0,0,1-.94-.93V9.41a.94.94,0,0,1,.94-.93h12.4a.94.94,0,0,1,.94.93Z"/> <path d="M23.49,13.53h-9.6a.94.94,0,1,0,0,1.87h9.6a.94.94,0,1,0,0-1.87Z"/> <path d="M23.49,17.37h-9.6a.94.94,0,1,0,0,1.87h9.6a.94.94,0,1,0,0-1.87Z"/> <path d="M23.49,21.22h-9.6a.93.93,0,1,0,0,1.86h9.6a.93.93,0,1,0,0-1.86Z"/> </svg>'},99738:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M960 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm300 64l507 398q28 20 25 56-5 35-35 51l-128 64q-13 7-29 7-17 0-31-8l-690-387-110 66q-8 4-12 5 14 49 10 97-7 77-56 147.5t-132 123.5q-132 84-277 84-136 0-222-78-90-84-79-207 7-76 56-147t131-124q132-84 278-84 83 0 151 31 9-13 22-22l122-73-122-73q-13-9-22-22-68 31-151 31-146 0-278-84-82-53-131-124t-56-147q-5-59 15.5-113t63.5-93q85-79 222-79 145 0 277 84 83 52 132 123t56 148q4 48-10 97 4 1 12 5l110 66 690-387q14-8 31-8 16 0 29 7l128 64q30 16 35 51 3 36-25 56zm-681-260q46-42 21-108t-106-117q-92-59-192-59-74 0-113 36-46 42-21 108t106 117q92 59 192 59 74 0 113-36zm-85 745q81-51 106-117t-21-108q-39-36-113-36-100 0-192 59-81 51-106 117t21 108q39 36 113 36 100 0 192-59zm178-613l96 58v-11q0-36 33-56l14-8-79-47-26 26q-3 3-10 11t-12 12q-2 2-4 3.5t-3 2.5zm224 224l96 32 736-576-128-64-768 431v113l-160 96 9 8q2 2 7 6 4 4 11 12t11 12l26 26zm704 416l128-64-520-408-177 138q-2 3-13 7z"/> </svg>'},9185:function(e){e.exports='<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"> <path stroke-width="0" d="M10.5 20H2a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h1V3l2.03-.4a3 3 0 0 1 5.94 0L13 3v1h1a2 2 0 0 1 2 2v1h-2V6h-1v1H3V6H2v12h5v2h3.5zM8 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm2 4h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2v-8c0-1.1.9-2 2-2zm0 2v8h8v-8h-8z"/> </svg>'},8619:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 18 18"> <g fill-rule="evenodd" stroke="none" stroke-width="1"> <g transform="translate(-381.000000, -381.000000)"> <g transform="translate(381.000000, 381.000000)"> <path d="M0,2 L2,2 L2,0 C0.9,0 0,0.9 0,2 L0,2 Z M0,10 L2,10 L2,8 L0,8 L0,10 L0,10 Z M4,18 L6,18 L6,16 L4,16 L4,18 L4,18 Z M0,6 L2,6 L2,4 L0,4 L0,6 L0,6 Z M10,0 L8,0 L8,2 L10,2 L10,0 L10,0 Z M16,0 L16,2 L18,2 C18,0.9 17.1,0 16,0 L16,0 Z M2,18 L2,16 L0,16 C0,17.1 0.9,18 2,18 L2,18 Z M0,14 L2,14 L2,12 L0,12 L0,14 L0,14 Z M6,0 L4,0 L4,2 L6,2 L6,0 L6,0 Z M8,18 L10,18 L10,16 L8,16 L8,18 L8,18 Z M16,10 L18,10 L18,8 L16,8 L16,10 L16,10 Z M16,18 C17.1,18 18,17.1 18,16 L16,16 L16,18 L16,18 Z M16,6 L18,6 L18,4 L16,4 L16,6 L16,6 Z M16,14 L18,14 L18,12 L16,12 L16,14 L16,14 Z M12,18 L14,18 L14,16 L12,16 L12,18 L12,18 Z M12,2 L14,2 L14,0 L12,0 L12,2 L12,2 Z M4,14 L14,14 L14,4 L4,4 L4,14 L4,14 Z M6,6 L12,6 L12,12 L6,12 L6,6 L6,6 Z"/> </g> </g> </g> </svg>'},73894:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M896 1152q0-36-20-69-1-1-15.5-22.5t-25.5-38-25-44-21-50.5q-4-16-21-16t-21 16q-7 23-21 50.5t-25 44-25.5 38-15.5 22.5q-20 33-20 69 0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zm512-128q0 212-150 362t-362 150-362-150-150-362q0-145 81-275 6-9 62.5-90.5t101-151 99.5-178 83-201.5q9-30 34-47t51-17 51.5 17 33.5 47q28 93 83 201.5t99.5 178 101 151 62.5 90.5q81 127 81 275z"/> </svg>'},83301:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 16 16"> <path stroke-width="0" d="M16 9v-6h-3v-1c0-0.55-0.45-1-1-1h-11c-0.55 0-1 0.45-1 1v3c0 0.55 0.45 1 1 1h11c0.55 0 1-0.45 1-1v-1h2v4h-9v2h-0.5c-0.276 0-0.5 0.224-0.5 0.5v5c0 0.276 0.224 0.5 0.5 0.5h2c0.276 0 0.5-0.224 0.5-0.5v-5c0-0.276-0.224-0.5-0.5-0.5h-0.5v-1h9zM12 3h-11v-1h11v1z"/> </svg>'},84142:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M789 559l-170 450q33 0 136.5 2t160.5 2q19 0 57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29 31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15 34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 4-.5 13t-.5 13q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0 12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11 2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0 22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58 0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z"/> </svg>'},57292:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1744 1408q33 0 42 18.5t-11 44.5l-126 162q-20 26-49 26t-49-26l-126-162q-20-26-11-44.5t42-18.5h80v-1024h-80q-33 0-42-18.5t11-44.5l126-162q20-26 49-26t49 26l126 162q20 26 11 44.5t-42 18.5h-80v1024h80zm-1663-1279l54 27q12 5 211 5 44 0 132-2t132-2q36 0 107.5.5t107.5.5h293q6 0 21 .5t20.5 0 16-3 17.5-9 15-17.5l42-1q4 0 14 .5t14 .5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-48t-14.5-73.5-7.5-35.5q-6-8-12-12.5t-15.5-6-13-2.5-18-.5-16.5.5q-17 0-66.5-.5t-74.5-.5-64 2-71 6q-9 81-8 136 0 94 2 388t2 455q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q19-42 19-383 0-101-3-303t-3-303v-117q0-2 .5-15.5t.5-25-1-25.5-3-24-5-14q-11-12-162-12-33 0-93 12t-80 26q-19 13-34 72.5t-31.5 111-42.5 53.5q-42-26-56-44v-383z"/> </svg>'},18019:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"><path d="M1534 189v73q0 29-18.5 61t-42.5 32q-50 0-54 1-26 6-32 31-3 11-3 64v1152q0 25-18 43t-43 18h-108q-25 0-43-18t-18-43v-1218h-143v1218q0 25-17.5 43t-43.5 18h-108q-26 0-43.5-18t-17.5-43v-496q-147-12-245-59-126-58-192-179-64-117-64-259 0-166 88-286 88-118 209-159 111-37 417-37h479q25 0 43 18t18 43z"/></svg>'},45146:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 24 24"> <path stroke-width="0" d="M22,20.6L3.4,2H8V0H0v8h2V3.4L20.6,22H16v2h8v-8h-2V20.6z M16,0v2h4.7l-6.3,6.3l1.4,1.4L22,3.5V8h2V0H16z M8.3,14.3L2,20.6V16H0v8h8v-2H3.5l6.3-6.3L8.3,14.3z"/> </svg>'},53576:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M896 960v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45zm755-672q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23z"/> </svg>'},14655:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1600 736v192q0 40-28 68t-68 28h-1216q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h1216q40 0 68 28t28 68z"/> </svg>'},53477:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M576 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1024 384v448h-1408v-192l320-320 160 160 512-512zm96-704h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zm160 32v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z"/> </svg>'},90053:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M352 832q0 14-9 23l-288 288q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-576q0-13 9.5-22.5t22.5-9.5q14 0 23 9l288 288q9 9 9 23zm1440 480v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z"/> </svg>'},72230:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zm1408 768v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z"/> </svg>'},78321:function(e){e.exports='<svg viewBox="0 0 18.151 18.151" xmlns="http://www.w3.org/2000/svg"> <g> <path stroke-width="0" d="M6.237,16.546H3.649V1.604h5.916v5.728c0.474-0.122,0.968-0.194,1.479-0.194 c0.042,0,0.083,0.006,0.125,0.006V0H2.044v18.15h5.934C7.295,17.736,6.704,17.19,6.237,16.546z"/> <path stroke-width="0" d="M11.169,8.275c-2.723,0-4.938,2.215-4.938,4.938s2.215,4.938,4.938,4.938s4.938-2.215,4.938-4.938 S13.892,8.275,11.169,8.275z M11.169,16.81c-1.983,0-3.598-1.612-3.598-3.598c0-1.983,1.614-3.597,3.598-3.597 s3.597,1.613,3.597,3.597C14.766,15.198,13.153,16.81,11.169,16.81z"/> <polygon stroke-width="0" points="11.792,11.073 10.502,11.073 10.502,12.578 9.03,12.578 9.03,13.868 10.502,13.868 10.502,15.352 11.792,15.352 11.792,13.868 13.309,13.868 13.309,12.578 11.792,12.578 "/> </g> </svg>'},77654:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 432 432"> <g> <polygon points="203.688,96 0,96 0,144 155.688,144 "/> <polygon points="155.719,288 0,288 0,336 203.719,336 "/> <path d="M97.844,230.125c-3.701-3.703-5.856-8.906-5.856-14.141s2.154-10.438,5.856-14.141l9.844-9.844H0v48h107.719 L97.844,230.125z"/> <polygon points="232,176 232,96 112,216 232,336 232,256 432,256 432,176"/> </g> </svg>'},43371:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 312 312"> <g transform="translate(0.000000,312.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M50 3109 c0 -7 -11 -22 -25 -35 l-25 -23 0 -961 0 -961 32 -29 32 -30 501 -2 500 -3 3 -502 2 -502 31 -30 31 -31 958 0 958 0 23 25 c13 13 30 25 37 25 9 0 12 199 12 960 0 686 -3 960 -11 960 -6 0 -24 12 -40 28 l-29 27 -503 5 -502 5 -5 502 -5 503 -28 29 c-15 16 -27 34 -27 40 0 8 -274 11 -960 11 -710 0 -960 -3 -960 -11z m1738 -698 l2 -453 -40 -40 c-22 -22 -40 -43 -40 -47 0 -4 36 -42 79 -85 88 -87 82 -87 141 -23 l26 27 455 -2 454 -3 0 -775 0 -775 -775 0 -775 0 -3 450 -2 449 47 48 47 48 -82 80 c-44 44 -84 80 -87 80 -3 0 -25 -18 -48 -40 l-41 -40 -456 2 -455 3 -3 765 c-1 421 0 771 3 778 3 10 164 12 777 10 l773 -3 3 -454z"/> <path d="M607 2492 c-42 -42 -77 -82 -77 -87 0 -6 86 -96 190 -200 105 -104 190 -197 190 -205 0 -8 -41 -56 -92 -107 -65 -65 -87 -94 -77 -98 8 -3 138 -4 289 -3 l275 3 3 275 c1 151 0 281 -3 289 -4 10 -35 -14 -103 -82 -54 -53 -103 -97 -109 -97 -7 0 -99 88 -206 195 -107 107 -196 195 -198 195 -3 0 -39 -35 -82 -78z"/> <path d="M1470 1639 c-47 -49 -87 -91 -89 -94 -5 -6 149 -165 160 -165 9 0 189 179 189 188 0 12 -154 162 -165 161 -6 0 -48 -41 -95 -90z"/> <path d="M1797 1303 c-9 -8 -9 -568 0 -576 4 -4 50 36 103 88 54 52 101 95 106 95 5 0 95 -85 199 -190 104 -104 194 -190 200 -190 6 0 46 36 90 80 l79 79 -197 196 c-108 108 -197 199 -197 203 0 4 45 52 99 106 55 55 98 103 95 108 -6 10 -568 11 -577 1z"/> </g> </svg>'},44563:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 48 48"> <path d="M6 42h4v-4h-4v4zm4-28h-4v4h4v-4zm-4 20h4v-4h-4v4zm8 8h4v-4h-4v4zm-4-36h-4v4h4v-4zm8 0h-4v4h4v-4zm16 0h-4v4h4v-4zm-8 8h-4v4h4v-4zm0-8h-4v4h4v-4zm12 28h4v-4h-4v4zm-16 8h4v-4h-4v4zm-16-16h36v-4h-36v4zm32-20v4h4v-4h-4zm0 12h4v-4h-4v4zm-16 16h4v-4h-4v4zm8 8h4v-4h-4v4zm8 0h4v-4h-4v4z"/> <path d="M0 0h48v48h-48z" fill="none"/> </svg>'},53183:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 48 48"> <path d="M6 18h4v-4h-4v4zm0-8h4v-4h-4v4zm8 32h4v-4h-4v4zm0-16h4v-4h-4v4zm-8 0h4v-4h-4v4zm0 16h4v-4h-4v4zm0-8h4v-4h-4v4zm8-24h4v-4h-4v4zm24 24h4v-4h-4v4zm-16 8h4v-36h-4v36zm16 0h4v-4h-4v4zm0-16h4v-4h-4v4zm0-20v4h4v-4h-4zm0 12h4v-4h-4v4zm-8-8h4v-4h-4v4zm0 32h4v-4h-4v4zm0-16h4v-4h-4v4z"/> <path d="M0 0h48v48h-48z" fill="none"/> </svg>'},18548:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm1280 512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zm-1280-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm1280 512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68z"/> </svg>'},52242:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm-640-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm-640-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68z"/> </svg>'},87498:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45z"/> </svg>'},7986:function(e){e.exports='<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path d="M5.09668 6.99707H7.17358L4.17358 3.99707L1.17358 6.99707H3.09668V17.0031H1.15881L4.15881 20.0031L7.15881 17.0031H5.09668V6.99707Z"/> <path d="M22.8412 7H8.84119V5H22.8412V7Z"/> <path d="M22.8412 11H8.84119V9H22.8412V11Z"/> <path d="M8.84119 15H22.8412V13H8.84119V15Z"/> <path d="M22.8412 19H8.84119V17H22.8412V19Z"/> </svg>'},23075:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1520 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zm-703-705q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zm895 705q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z"/> </svg>'},10655:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M503 1271l-256 256q-10 9-23 9-12 0-23-9-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zm169 41v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm-224-224q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm1264 128q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zm-617-724l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zm633 84q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm-544-544v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm407 151l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z"/> </svg>'},15476:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path stroke-width="0" d="M381 1620q0 80-54.5 126t-135.5 46q-106 0-172-66l57-88q49 45 106 45 29 0 50.5-14.5t21.5-42.5q0-64-105-56l-26-56q8-10 32.5-43.5t42.5-54 37-38.5v-1q-16 0-48.5 1t-48.5 1v53h-106v-152h333v88l-95 115q51 12 81 49t30 88zm2-627v159h-362q-6-36-6-54 0-51 23.5-93t56.5-68 66-47.5 56.5-43.5 23.5-45q0-25-14.5-38.5t-39.5-13.5q-46 0-81 58l-85-59q24-51 71.5-79.5t105.5-28.5q73 0 123 41.5t50 112.5q0 50-34 91.5t-75 64.5-75.5 50.5-35.5 52.5h127v-60h105zm1409 319v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm-1408-899v99h-335v-99h107q0-41 .5-122t.5-121v-12h-2q-8 17-50 54l-71-76 136-127h106v404h108zm1408 387v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z"/> </svg>'},59403:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path stroke-width="0" d="M384 1408q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm0-512q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm-1408-928q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z"/> </svg>'},22860:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M448 1536h896v-256h-896v256zm0-640h896v-384h-160q-40 0-68-28t-28-68v-160h-640v640zm1152 64q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm128 0v416q0 13-9.5 22.5t-22.5 9.5h-224v160q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-224q-13 0-22.5-9.5t-9.5-22.5v-416q0-79 56.5-135.5t135.5-56.5h64v-544q0-40 28-68t68-28h672q40 0 88 20t76 48l152 152q28 28 48 76t20 88v256h64q79 0 135.5 56.5t56.5 135.5z"/> </svg>'},95600:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 14 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z"/> </svg>'},76214:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1664 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z"/> </svg>'},41197:function(e){e.exports='<svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"> <path clip-rule="evenodd" d="M306.39,154.09c19.628,4.543,35.244,21.259,39.787,39.523 c1.551,8.54,8.998,14.989,17.904,14.989c9.991,0,18.168-8.175,18.168-18.17c0-13.083-10.991-32.98-25.985-47.881 c-14.719-14.537-32.252-24.802-46.695-24.802c-9.991,0-18.172,8.45-18.172,18.446C291.396,145.094,297.847,152.546,306.39,154.09z M56.629,392.312c-14.09,14.08-14.09,36.979,0,51.059c14.08,14.092,36.981,14.092,50.965,0l104.392-104.303 c24.347,15.181,53.062,23.991,83.953,23.991c87.857,0,158.995-71.142,158.995-158.999c0-87.854-71.138-158.995-158.995-158.995 c-87.856,0-158.995,71.141-158.995,158.995c0,30.802,8.819,59.606,23.992,83.953L56.629,392.312z M182.371,204.06 c0-62.687,50.875-113.568,113.568-113.568s113.569,50.881,113.569,113.568c0,62.694-50.876,113.569-113.569,113.569 S182.371,266.754,182.371,204.06z" fill-rule="evenodd"/> </svg>'},9342:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M553 1399l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23t-10 23zm591-1067l-373 1291q-4 13-15.5 19.5t-23.5 2.5l-62-17q-13-4-19.5-15.5t-2.5-24.5l373-1291q4-13 15.5-19.5t23.5-2.5l62 17q13 4 19.5 15.5t2.5 24.5zm657 651l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23z"/> </svg>'},69546:function(e){e.exports='<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"> <path d="M24.89 32h4.18L18.86 6h-3.71L4.93 32h4.18l2.25-6h11.29l2.24 6zM12.86 22L17 10.95 21.14 22h-8.28zm30.31 1.17L27 39.34 19.66 32l-2.83 2.83L27 45l19-19-2.83-2.83z"/> </svg>'},43158:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 270 270"> <path d="m240.443652,220.45085l-47.410809,0l0,-10.342138c13.89973,-8.43655 25.752896,-19.844464 34.686646,-33.469923c11.445525,-17.455846 17.496072,-37.709239 17.496072,-58.570077c0,-59.589197 -49.208516,-108.068714 -109.693558,-108.068714s-109.69263,48.479517 -109.69263,108.069628c0,20.860839 6.050547,41.113316 17.497001,58.570077c8.93375,13.625459 20.787845,25.032458 34.686646,33.469008l0,10.342138l-47.412666,0c-10.256959,0 -18.571354,8.191376 -18.571354,18.296574c0,10.105198 8.314395,18.296574 18.571354,18.296574l65.98402,0c10.256959,0 18.571354,-8.191376 18.571354,-18.296574l0,-39.496814c0,-7.073455 -4.137698,-13.51202 -10.626529,-16.537358c-25.24497,-11.772016 -41.557118,-37.145704 -41.557118,-64.643625c0,-39.411735 32.545369,-71.476481 72.549922,-71.476481c40.004553,0 72.550851,32.064746 72.550851,71.476481c0,27.497006 -16.312149,52.87161 -41.557118,64.643625c-6.487902,3.026253 -10.6256,9.464818 -10.6256,16.537358l0,39.496814c0,10.105198 8.314395,18.296574 18.571354,18.296574l65.982163,0c10.256959,0 18.571354,-8.191376 18.571354,-18.296574c0,-10.105198 -8.314395,-18.296574 -18.571354,-18.296574z"/> </svg>'},51716:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M576 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm128-320v1088q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1344q66 0 113 47t47 113z"/> </svg>'},49222:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 352v1088q0 42-39 59-13 5-25 5-27 0-45-19l-403-403v166q0 119-84.5 203.5t-203.5 84.5h-704q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h704q119 0 203.5 84.5t84.5 203.5v165l403-402q18-19 45-19 12 0 25 5 39 17 39 59z"/> </svg>'},1755:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1395 736q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z"/> </svg>'},74911:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23z"/> </svg>'},8805:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1171 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z"/> </svg>'},16547:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1395 1184q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z"/> </svg>'},10856:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M704 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm-544-992h448l-48-117q-7-9-17-11h-317q-10 2-17 11zm928 32v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z"/> </svg>'},98441:function(e){e.exports='<svg viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg"> <g stroke="none" stroke-width="1"> <path d="M14,1.4 L12.6,0 L7,5.6 L1.4,0 L0,1.4 L5.6,7 L0,12.6 L1.4,14 L7,8.4 L12.6,14 L14,12.6 L8.4,7 L14,1.4 Z"/> </g> </svg>'},52488:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h896q26 0 45 19t19 45zm256-384v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h640q26 0 45 19t19 45z"/> </svg>'},9370:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1472 930v318q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-10 10-23 10-3 0-9-2-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-254q0-13 9-22l64-64q10-10 23-10 6 0 12 3 20 8 20 29zm231-489l-814 814q-24 24-57 24t-57-24l-430-430q-24-24-24-57t24-57l110-110q24-24 57-24t57 24l263 263 647-647q24-24 57-24t57 24l110 110q24 24 24 57t-24 57z"/> </svg>'},66543:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 10 10"> <path d="M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z"/> </svg>'},608:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 24 24" > <circle cx="12" cy="12" r="2.2"/> <circle cx="12" cy="5" r="2.2"/> <circle cx="12" cy="19" r="2.2"/> </svg>'},42840:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1664 960q-152-236-381-353 61 104 61 225 0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-121 61-225-229 117-381 353 133 205 333.5 326.5t434.5 121.5 434.5-121.5 333.5-326.5zm-720-384q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zm848 384q0 34-20 69-140 230-376.5 368.5t-499.5 138.5-499.5-139-376.5-368q-20-35-20-69t20-69q140-229 376.5-368t499.5-139 499.5 139 376.5 368q20 35 20 69z"/> </svg>'},79096:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1152 512v-472q22 14 36 28l408 408q14 14 28 36h-472zm-128 32q0 40 28 68t68 28h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544z"/> </svg>'},33014:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1728 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z"/> </svg>'},91677:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1152 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"/> </svg>'},8259:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zm256-384v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z"/> </svg>'},64467:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"><path d="M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z"/></svg>'},86934:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 32 32"> <path d="M27 4l-15 15-7-7-5 5 12 12 20-20z"/> </svg>'},76133:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"><path d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"/></svg>'},45519:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"><path d="M1600 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z"/></svg>'},90265:function(e){e.exports='<svg viewBox="0 0 13 13" xmlns="http://www.w3.org/2000/svg"> <path d="M5.9814 11.8049C5.59087 11.4144 5.59087 10.7812 5.9814 10.3907L10.224 6.14806C10.6146 5.75754 11.2477 5.75754 11.6383 6.14806C12.0288 6.53859 12.0288 7.17175 11.6383 7.56228L7.39561 11.8049C7.00509 12.1954 6.37192 12.1954 5.9814 11.8049Z"/> <path d="M0.707107 12.0208C0.316582 11.6303 0.316582 10.9971 0.707107 10.6066L10.6066 0.707121C10.9971 0.316597 11.6303 0.316596 12.0208 0.707121C12.4113 1.09764 12.4113 1.73081 12.0208 2.12133L2.12132 12.0208C1.7308 12.4114 1.09763 12.4114 0.707107 12.0208Z"/> </svg>'},81279:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z"/> </svg>'},68899:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M512 1536h768v-384h-768v384zm896 0h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zm-384-928v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zm640 32v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z"/> </svg>'},70744:function(e){e.exports='<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"> <path stroke="null" d="m42.276011,26.302547c0.098397,-0.76605 0.172194,-1.54407 0.172194,-2.33406s-0.073797,-1.56801 -0.172194,-2.33406l5.202718,-3.961917c0.467384,-0.359086 0.602679,-1.005441 0.29519,-1.532101l-4.919828,-8.29489c-0.307489,-0.51469 -0.947067,-0.730142 -1.500548,-0.51469l-6.125186,2.405877c-1.266856,-0.945594 -2.656707,-1.747553 -4.157255,-2.357999l-0.922468,-6.343855c-0.110696,-0.562568 -0.614979,-1.005441 -1.229957,-1.005441l-9.839656,0c-0.614979,0 -1.119261,0.442873 -1.217657,1.005441l-0.922468,6.343855c-1.500548,0.610446 -2.890399,1.400436 -4.157255,2.357999l-6.125186,-2.405877c-0.553481,-0.203482 -1.193058,0 -1.500548,0.51469l-4.919828,8.29489c-0.307489,0.51469 -0.172194,1.161045 0.29519,1.532101l5.190419,3.961917c-0.098397,0.76605 -0.172194,1.54407 -0.172194,2.33406s0.073797,1.56801 0.172194,2.33406l-5.190419,3.961917c-0.467384,0.359086 -0.602679,1.005441 -0.29519,1.532101l4.919828,8.29489c0.307489,0.51469 0.947067,0.730142 1.500548,0.51469l6.125186,-2.405877c1.266856,0.945594 2.656707,1.747553 4.157255,2.357999l0.922468,6.343855c0.098397,0.562568 0.602679,1.005441 1.217657,1.005441l9.839656,0c0.614979,0 1.119261,-0.442873 1.217657,-1.005441l0.922468,-6.343855c1.500548,-0.610446 2.890399,-1.400436 4.157255,-2.357999l6.125186,2.405877c0.553481,0.203482 1.193058,0 1.500548,-0.51469l4.919828,-8.29489c0.307489,-0.51469 0.172194,-1.161045 -0.29519,-1.532101l-5.190419,-3.961917zm-18.277162,6.044617c-4.759934,0 -8.609699,-3.746465 -8.609699,-8.378677s3.849766,-8.378677 8.609699,-8.378677s8.609699,3.746465 8.609699,8.378677s-3.849766,8.378677 -8.609699,8.378677z"/> </svg>'},19201:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z"/> </svg>'},84930:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1639 1056q0 5-1 7-64 268-268 434.5t-478 166.5q-146 0-282.5-55t-243.5-157l-129 129q-19 19-45 19t-45-19-19-45v-448q0-26 19-45t45-19h448q26 0 45 19t19 45-19 45l-137 137q71 66 161 102t187 36q134 0 250-65t186-179q11-17 53-117 8-23 30-23h192q13 0 22.5 9.5t9.5 22.5zm25-800v448q0 26-19 45t-45 19h-448q-26 0-45-19t-19-45 19-45l138-138q-148-137-349-137-134 0-250 65t-186 179q-11 17-53 117-8 23-30 23h-199q-13 0-22.5-9.5t-9.5-22.5v-7q65-268 270-434.5t480-166.5q146 0 284 55.5t245 156.5l130-129q19-19 45-19t45 19 19 45z"/> </svg>'},99704:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1344 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm256 0q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm128-224v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h427q21 56 70.5 92t110.5 36h256q61 0 110.5-36t70.5-92h427q40 0 68 28t28 68zm-325-648q-17 40-59 40h-256v448q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-448h-256q-42 0-59-40-17-39 14-69l448-448q18-19 45-19t45 19l448 448q31 30 14 69z"/> </svg>'},2304:function(e){e.exports='<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1216 320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z"/> </svg>'},93330:function(e,t,o){"use strict";o.r(t)},45066:function(e,t,o){"use strict";o.r(t)},99895:function(e,t,o){"use strict";o.r(t)},87682:function(e,t,o){"use strict";o.r(t)},50905:function(e,t,o){"use strict";o.r(t)},70446:function(e,t,o){"use strict";o.r(t)},18984:function(e,t,o){"use strict";o.r(t)},4591:function(e,t,o){"use strict";o.r(t)},64194:function(e,t,o){"use strict";o.r(t)},70375:function(e,t,o){"use strict";o.r(t)},90235:function(e,t,o){"use strict";o.r(t)},88477:function(e,t,o){"use strict";o.r(t)},50197:function(e,t,o){"use strict";o.r(t)},39008:function(e,t,o){"use strict";o.r(t)},47086:function(e,t,o){"use strict";o.r(t)},16462:function(e,t,o){"use strict";o.r(t)},40692:function(e,t,o){"use strict";o.r(t)},27452:function(e,t,o){"use strict";o.r(t)},51422:function(e,t,o){"use strict";o.r(t)},62820:function(e,t,o){"use strict";o.r(t)},63421:function(e,t,o){"use strict";o.r(t)},32115:function(e,t,o){"use strict";o.r(t)},53362:function(e,t,o){"use strict";o.r(t)},48904:function(e,t,o){"use strict";o.r(t)},85796:function(e,t,o){"use strict";o.r(t)},28654:function(e,t,o){"use strict";o.r(t)},60819:function(e,t,o){"use strict";o.r(t)},96410:function(e,t,o){"use strict";o.r(t)},33126:function(e,t,o){"use strict";o.r(t)},30724:function(e,t,o){"use strict";o.r(t)},14320:function(e,t,o){"use strict";o.r(t)},9947:function(e,t,o){"use strict";o.r(t)},45109:function(e,t,o){"use strict";o.r(t)},71708:function(e,t,o){"use strict";o.r(t)},51629:function(e,t,o){"use strict";o.r(t)},54860:function(e,t,o){"use strict";o.r(t)},47818:function(e,t,o){"use strict";o.r(t)},6316:function(e,t,o){"use strict";o.r(t)},88582:function(e,t,o){"use strict";o.r(t)},30962:function(e,t,o){"use strict";o.r(t)},68197:function(e,t,o){"use strict";o.r(t)},60057:function(e,t,o){"use strict";o.r(t)},33393:function(e,t,o){"use strict";o.r(t)},51057:function(e,t,o){"use strict";o.r(t)},64618:function(e,t,o){"use strict";o.r(t)},90176:function(e,t,o){"use strict";o.r(t)},91147:function(e,t,o){"use strict";o.r(t)},70631:function(e,t){"use strict";function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function n(e,t,n){var r=n.value;if("function"!=typeof r)throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(o(r)));var i=!1;return{configurable:!0,get:function(){if(i||this===e.prototype||this.hasOwnProperty(t)||"function"!=typeof r)return r;var o=r.bind(this);return i=!0,Object.defineProperty(this,t,{configurable:!0,get:function(){return o},set:function(e){r=e,delete this[t]}}),i=!1,o},set:function(e){r=e}}}function r(e){var t;return"undefined"!=typeof Reflect&&"function"==typeof Reflect.ownKeys?t=Reflect.ownKeys(e.prototype):(t=Object.getOwnPropertyNames(e.prototype),"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(e.prototype)))),t.forEach((function(t){if("constructor"!==t){var o=Object.getOwnPropertyDescriptor(e.prototype,t);"function"==typeof o.value&&Object.defineProperty(e.prototype,t,n(e,t,o))}})),e}Object.defineProperty(t,"__esModule",{value:!0}),t.boundClass=t.boundMethod=void 0,t.boundMethod=n,t.boundClass=r,t.default=function(){return 1===arguments.length?r.apply(void 0,arguments):n.apply(void 0,arguments)}},61227:function(){"use strict";"document"in window.self&&((!("classList"in document.createElement("_"))||document.createElementNS&&!("classList"in document.createElementNS("http://www.w3.org/2000/svg","g")))&&function(e){if("Element"in e){var t="classList",o=e.Element.prototype,n=Object,r=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},i=Array.prototype.indexOf||function(e){for(var t=0,o=this.length;o>t;t++)if(t in this&&this[t]===e)return t;return-1},a=function(e,t){this.name=e,this.code=DOMException[e],this.message=t},s=function(e,t){if(""===t)throw new a("SYNTAX_ERR","An invalid or illegal string was specified");if(/\s/.test(t))throw new a("INVALID_CHARACTER_ERR","String contains an invalid character");return i.call(e,t)},l=function(e){for(var t=r.call(e.getAttribute("class")||""),o=t?t.split(/\s+/):[],n=0,i=o.length;i>n;n++)this.push(o[n]);this._updateClassName=function(){e.setAttribute("class",this.toString())}},c=l.prototype=[],u=function(){return new l(this)};if(a.prototype=Error.prototype,c.item=function(e){return this[e]||null},c.contains=function(e){return-1!==s(this,e+="")},c.add=function(){var e,t=arguments,o=0,n=t.length,r=!1;do{-1===s(this,e=t[o]+"")&&(this.push(e),r=!0)}while(++o<n);r&&this._updateClassName()},c.remove=function(){var e,t,o=arguments,n=0,r=o.length,i=!1;do{for(t=s(this,e=o[n]+"");-1!==t;)this.splice(t,1),i=!0,t=s(this,e)}while(++n<r);i&&this._updateClassName()},c.toggle=function(e,t){var o=this.contains(e+=""),n=o?!0!==t&&"remove":!1!==t&&"add";return n&&this[n](e),!0===t||!1===t?t:!o},c.toString=function(){return this.join(" ")},n.defineProperty){var d={get:u,enumerable:!0,configurable:!0};try{n.defineProperty(o,t,d)}catch(e){void 0!==e.number&&-2146823252!==e.number||(d.enumerable=!1,n.defineProperty(o,t,d))}}else n.prototype.__defineGetter__&&o.__defineGetter__(t,u)}}(window.self),function(){var e=document.createElement("_");if(e.classList.add("c1","c2"),!e.classList.contains("c2")){var t=function(e){var t=DOMTokenList.prototype[e];DOMTokenList.prototype[e]=function(e){var o,n=arguments.length;for(o=0;n>o;o++)t.call(this,e=arguments[o])}};t("add"),t("remove")}if(e.classList.toggle("c3",!1),e.classList.contains("c3")){var o=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(e,t){return 1 in arguments&&!this.contains(e)==!t?t:o.call(this,e)}}e=null}())},69220:function(e,t,o){"use strict";o(22513);var n=o(56599);e.exports=n("Array","findIndex")},10444:function(e,t,o){"use strict";o(52867),o(70057);var n=o(31116);e.exports=n.Array.from},66622:function(e,t,o){"use strict";o(54166),o(32044),o(95661),o(28424),o(64514),o(30733),o(40327),o(53639),o(6147),o(7290),o(95122),o(61322),o(39605),o(49341),o(28809),o(82658),o(43967),o(90217),o(73477),o(93697);var n=o(31116);e.exports=n.Symbol},98061:function(e,t,o){"use strict";var n=o(794),r=o(98418),i=TypeError;e.exports=function(e){if(n(e))return e;throw i(r(e)+" is not a function")}},75839:function(e,t,o){"use strict";var n=o(794),r=String,i=TypeError;e.exports=function(e){if("object"==typeof e||n(e))return e;throw i("Can't set "+r(e)+" as a prototype")}},15179:function(e,t,o){"use strict";var n=o(19517),r=o(93503),i=o(73252).f,a=n("unscopables"),s=Array.prototype;null==s[a]&&i(s,a,{configurable:!0,value:r(null)}),e.exports=function(e){s[a][e]=!0}},52313:function(e,t,o){"use strict";var n=o(8148),r=String,i=TypeError;e.exports=function(e){if(n(e))return e;throw i(r(e)+" is not an object")}},92707:function(e,t,o){"use strict";var n=o(40207),r=o(9093),i=o(68488),a=o(79665),s=o(84997),l=o(15333),c=o(15050),u=o(89476),d=o(27395),p=o(81058),f=Array;e.exports=function(e){var t=i(e),o=l(this),h=arguments.length,m=h>1?arguments[1]:void 0,v=void 0!==m;v&&(m=n(m,h>2?arguments[2]:void 0));var g,y,_,b,S,w,C=p(t),j=0;if(!C||this===f&&s(C))for(g=c(t),y=o?new this(g):f(g);g>j;j++)w=v?m(t[j],j):t[j],u(y,j,w);else for(S=(b=d(t,C)).next,y=o?new this:[];!(_=r(S,b)).done;j++)w=v?a(b,m,[_.value,j],!0):_.value,u(y,j,w);return y.length=j,y}},79327:function(e,t,o){"use strict";var n=o(98651),r=o(10586),i=o(15050),a=function(e){return function(t,o,a){var s,l=n(t),c=i(l),u=r(a,c);if(e&&o!=o){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((e||u in l)&&l[u]===o)return e||u||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},56881:function(e,t,o){"use strict";var n=o(40207),r=o(90838),i=o(25049),a=o(68488),s=o(15050),l=o(6429),c=r([].push),u=function(e){var t=1==e,o=2==e,r=3==e,u=4==e,d=6==e,p=7==e,f=5==e||d;return function(h,m,v,g){for(var y,_,b=a(h),S=i(b),w=n(m,v),C=s(S),j=0,E=g||l,k=t?E(h,C):o||p?E(h,0):void 0;C>j;j++)if((f||j in S)&&(_=w(y=S[j],j,b),e))if(t)k[j]=_;else if(_)switch(e){case 3:return!0;case 5:return y;case 6:return j;case 2:c(k,y)}else switch(e){case 4:return!1;case 7:c(k,y)}return d?-1:r||u?u:k}};e.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6),filterReject:u(7)}},63833:function(e,t,o){"use strict";var n=o(75834),r=o(19517),i=o(65190),a=r("species");e.exports=function(e){return i>=51||!n((function(){var t=[];return(t.constructor={})[a]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},57652:function(e,t,o){"use strict";var n=o(10586),r=o(15050),i=o(89476),a=Array,s=Math.max;e.exports=function(e,t,o){for(var l=r(e),c=n(t,l),u=n(void 0===o?l:o,l),d=a(s(u-c,0)),p=0;u>c;c++,p++)i(d,p,e[c]);return d.length=p,d}},54832:function(e,t,o){"use strict";var n=o(90838);e.exports=n([].slice)},22506:function(e,t,o){"use strict";var n=o(36222),r=o(15333),i=o(8148),a=o(19517)("species"),s=Array;e.exports=function(e){var t;return n(e)&&(r(t=e.constructor)&&(t===s||n(t.prototype))||i(t)&&null===(t=t[a]))&&(t=void 0),void 0===t?s:t}},6429:function(e,t,o){"use strict";var n=o(22506);e.exports=function(e,t){return new(n(e))(0===t?0:t)}},79665:function(e,t,o){"use strict";var n=o(52313),r=o(11274);e.exports=function(e,t,o,i){try{return i?t(n(o)[0],o[1]):t(o)}catch(t){r(e,"throw",t)}}},7581:function(e,t,o){"use strict";var n=o(19517)("iterator"),r=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){r=!0}};a[n]=function(){return this},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!r)return!1;var o=!1;try{var i={};i[n]=function(){return{next:function(){return{done:o=!0}}}},e(i)}catch(e){}return o}},6285:function(e,t,o){"use strict";var n=o(90838),r=n({}.toString),i=n("".slice);e.exports=function(e){return i(r(e),8,-1)}},8652:function(e,t,o){"use strict";var n=o(6424),r=o(794),i=o(6285),a=o(19517)("toStringTag"),s=Object,l="Arguments"==i(function(){return arguments}());e.exports=n?i:function(e){var t,o,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(o=function(e,t){try{return e[t]}catch(e){}}(t=s(e),a))?o:l?i(t):"Object"==(n=i(t))&&r(t.callee)?"Arguments":n}},58392:function(e,t,o){"use strict";var n=o(14434),r=o(86671),i=o(36999),a=o(73252);e.exports=function(e,t,o){for(var s=r(t),l=a.f,c=i.f,u=0;s.length>u;u++){var d=s[u];n(e,d)||o&&n(o,d)||l(e,d,c(t,d))}}},27259:function(e,t,o){"use strict";var n=o(75834);e.exports=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},17427:function(e){"use strict";e.exports=function(e,t){return{value:e,done:t}}},45840:function(e,t,o){"use strict";var n=o(13873),r=o(73252),i=o(32500);e.exports=n?function(e,t,o){return r.f(e,t,i(1,o))}:function(e,t,o){return e[t]=o,e}},32500:function(e){"use strict";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},89476:function(e,t,o){"use strict";var n=o(43836),r=o(73252),i=o(32500);e.exports=function(e,t,o){var a=n(t);a in e?r.f(e,a,i(0,o)):e[a]=o}},35065:function(e,t,o){"use strict";var n=o(794),r=o(73252),i=o(40846),a=o(25379);e.exports=function(e,t,o,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:t;if(n(o)&&i(o,c,s),s.global)l?e[t]=o:a(t,o);else{try{s.unsafe?e[t]&&(l=!0):delete e[t]}catch(e){}l?e[t]=o:r.f(e,t,{value:o,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}},25379:function(e,t,o){"use strict";var n=o(37042),r=Object.defineProperty;e.exports=function(e,t){try{r(n,e,{value:t,configurable:!0,writable:!0})}catch(o){n[e]=t}return t}},13873:function(e,t,o){"use strict";var n=o(75834);e.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},12062:function(e){"use strict";var t="object"==typeof document&&document.all;e.exports={all:t,IS_HTMLDDA:void 0===t&&void 0!==t}},15192:function(e,t,o){"use strict";var n=o(37042),r=o(8148),i=n.document,a=r(i)&&r(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},39505:function(e){"use strict";var t=TypeError;e.exports=function(e){if(e>9007199254740991)throw t("Maximum allowed index exceeded");return e}},21473:function(e,t,o){"use strict";var n=o(98945);e.exports=n("navigator","userAgent")||""},65190:function(e,t,o){"use strict";var n,r,i=o(37042),a=o(21473),s=i.process,l=i.Deno,c=s&&s.versions||l&&l.version,u=c&&c.v8;u&&(r=(n=u.split("."))[0]>0&&4>n[0]?1:+(n[0]+n[1])),!r&&a&&((n=a.match(/Edge\/(\d+)/))&&74>n[1]||(n=a.match(/Chrome\/(\d+)/))&&(r=+n[1])),e.exports=r},56599:function(e,t,o){"use strict";var n=o(37042),r=o(90838);e.exports=function(e,t){return r(n[e].prototype[t])}},64456:function(e){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},50791:function(e,t,o){"use strict";var n=o(37042),r=o(36999).f,i=o(45840),a=o(35065),s=o(25379),l=o(58392),c=o(56930);e.exports=function(e,t){var o,u,d,p,f,h=e.target,m=e.global,v=e.stat;if(o=m?n:v?n[h]||s(h,{}):(n[h]||{}).prototype)for(u in t){if(p=t[u],d=e.dontCallGetSet?(f=r(o,u))&&f.value:o[u],!c(m?u:h+(v?".":"#")+u,e.forced)&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(e.sham||d&&d.sham)&&i(p,"sham",!0),a(o,u,p,e)}}},75834:function(e){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},55101:function(e,t,o){"use strict";var n=o(32610),r=Function.prototype,i=r.apply,a=r.call;e.exports="object"==typeof Reflect&&Reflect.apply||(n?a.bind(i):function(){return a.apply(i,arguments)})},40207:function(e,t,o){"use strict";var n=o(75114),r=o(98061),i=o(32610),a=n(n.bind);e.exports=function(e,t){return r(e),void 0===t?e:i?a(e,t):function(){return e.apply(t,arguments)}}},32610:function(e,t,o){"use strict";var n=o(75834);e.exports=!n((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},9093:function(e,t,o){"use strict";var n=o(32610),r=Function.prototype.call;e.exports=n?r.bind(r):function(){return r.apply(r,arguments)}},84521:function(e,t,o){"use strict";var n=o(13873),r=o(14434),i=Function.prototype,a=n&&Object.getOwnPropertyDescriptor,s=r(i,"name"),l=s&&"something"===function(){}.name,c=s&&(!n||n&&a(i,"name").configurable);e.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},75114:function(e,t,o){"use strict";var n=o(6285),r=o(90838);e.exports=function(e){if("Function"===n(e))return r(e)}},90838:function(e,t,o){"use strict";var n=o(32610),r=Function.prototype,i=r.call,a=n&&r.bind.bind(i,i);e.exports=n?a:function(e){return function(){return i.apply(e,arguments)}}},98945:function(e,t,o){"use strict";var n=o(37042),r=o(794),i=function(e){return r(e)?e:void 0};e.exports=function(e,t){return 2>arguments.length?i(n[e]):n[e]&&n[e][t]}},81058:function(e,t,o){"use strict";var n=o(8652),r=o(20156),i=o(8140),a=o(84922),s=o(19517)("iterator");e.exports=function(e){if(!i(e))return r(e,s)||r(e,"@@iterator")||a[n(e)]}},27395:function(e,t,o){"use strict";var n=o(9093),r=o(98061),i=o(52313),a=o(98418),s=o(81058),l=TypeError;e.exports=function(e,t){var o=2>arguments.length?s(e):t;if(r(o))return i(n(o,e));throw l(a(e)+" is not iterable")}},20156:function(e,t,o){"use strict";var n=o(98061),r=o(8140);e.exports=function(e,t){var o=e[t];return r(o)?void 0:n(o)}},37042:function(e,t,o){"use strict";var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof o.g&&o.g)||function(){return this}()||Function("return this")()},14434:function(e,t,o){"use strict";var n=o(90838),r=o(68488),i=n({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return i(r(e),t)}},48889:function(e){"use strict";e.exports={}},36249:function(e,t,o){"use strict";var n=o(98945);e.exports=n("document","documentElement")},12816:function(e,t,o){"use strict";var n=o(13873),r=o(75834),i=o(15192);e.exports=!n&&!r((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},25049:function(e,t,o){"use strict";var n=o(90838),r=o(75834),i=o(6285),a=Object,s=n("".split);e.exports=r((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"==i(e)?s(e,""):a(e)}:a},92355:function(e,t,o){"use strict";var n=o(90838),r=o(794),i=o(45752),a=n(Function.toString);r(i.inspectSource)||(i.inspectSource=function(e){return a(e)}),e.exports=i.inspectSource},56113:function(e,t,o){"use strict";var n,r,i,a=o(95473),s=o(37042),l=o(8148),c=o(45840),u=o(14434),d=o(45752),p=o(85475),f=o(48889),h="Object already initialized",m=s.TypeError;if(a||d.state){var v=d.state||(d.state=new(0,s.WeakMap));v.get=v.get,v.has=v.has,v.set=v.set,n=function(e,t){if(v.has(e))throw m(h);return t.facade=e,v.set(e,t),t},r=function(e){return v.get(e)||{}},i=function(e){return v.has(e)}}else{var g=p("state");f[g]=!0,n=function(e,t){if(u(e,g))throw m(h);return t.facade=e,c(e,g,t),t},r=function(e){return u(e,g)?e[g]:{}},i=function(e){return u(e,g)}}e.exports={set:n,get:r,has:i,enforce:function(e){return i(e)?r(e):n(e,{})},getterFor:function(e){return function(t){var o;if(!l(t)||(o=r(t)).type!==e)throw m("Incompatible receiver, "+e+" required");return o}}}},84997:function(e,t,o){"use strict";var n=o(19517),r=o(84922),i=n("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||a[i]===e)}},36222:function(e,t,o){"use strict";var n=o(6285);e.exports=Array.isArray||function(e){return"Array"==n(e)}},794:function(e,t,o){"use strict";var n=o(12062),r=n.all;e.exports=n.IS_HTMLDDA?function(e){return"function"==typeof e||e===r}:function(e){return"function"==typeof e}},15333:function(e,t,o){"use strict";var n=o(90838),r=o(75834),i=o(794),a=o(8652),s=o(98945),l=o(92355),c=function(){},u=[],d=s("Reflect","construct"),p=/^\s*(?:class|function)\b/,f=n(p.exec),h=!p.exec(c),m=function(e){if(!i(e))return!1;try{return d(c,u,e),!0}catch(e){return!1}},v=function(e){if(!i(e))return!1;switch(a(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return h||!!f(p,l(e))}catch(e){return!0}};v.sham=!0,e.exports=!d||r((function(){var e;return m(m.call)||!m(Object)||!m((function(){e=!0}))||e}))?v:m},56930:function(e,t,o){"use strict";var n=o(75834),r=o(794),i=/#|\.prototype\./,a=function(e,t){var o=l[s(e)];return o==u||o!=c&&(r(t)?n(t):!!t)},s=a.normalize=function(e){return String(e).replace(i,".").toLowerCase()},l=a.data={},c=a.NATIVE="N",u=a.POLYFILL="P";e.exports=a},8140:function(e){"use strict";e.exports=function(e){return null==e}},8148:function(e,t,o){"use strict";var n=o(794),r=o(12062),i=r.all;e.exports=r.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:n(e)||e===i}:function(e){return"object"==typeof e?null!==e:n(e)}},70852:function(e){"use strict";e.exports=!1},88253:function(e,t,o){"use strict";var n=o(98945),r=o(794),i=o(54671),a=o(57982),s=Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var t=n("Symbol");return r(t)&&i(t.prototype,s(e))}},11274:function(e,t,o){"use strict";var n=o(9093),r=o(52313),i=o(20156);e.exports=function(e,t,o){var a,s;r(e);try{if(!(a=i(e,"return"))){if("throw"===t)throw o;return o}a=n(a,e)}catch(e){s=!0,a=e}if("throw"===t)throw o;if(s)throw a;return r(a),o}},60928:function(e,t,o){"use strict";var n=o(77831).IteratorPrototype,r=o(93503),i=o(32500),a=o(44532),s=o(84922),l=function(){return this};e.exports=function(e,t,o,c){var u=t+" Iterator";return e.prototype=r(n,{next:i(+!c,o)}),a(e,u,!1,!0),s[u]=l,e}},13759:function(e,t,o){"use strict";var n=o(50791),r=o(9093),i=o(70852),a=o(84521),s=o(794),l=o(60928),c=o(1074),u=o(482),d=o(44532),p=o(45840),f=o(35065),h=o(19517),m=o(84922),v=o(77831),g=a.PROPER,y=a.CONFIGURABLE,_=v.IteratorPrototype,b=v.BUGGY_SAFARI_ITERATORS,S=h("iterator"),w="keys",C="values",j="entries",E=function(){return this};e.exports=function(e,t,o,a,h,v,k){l(o,t,a);var x,I,T,P=function(e){if(e===h&&A)return A;if(!b&&e in O)return O[e];switch(e){case w:case C:case j:return function(){return new o(this,e)}}return function(){return new o(this)}},M=t+" Iterator",D=!1,O=e.prototype,z=O[S]||O["@@iterator"]||h&&O[h],A=!b&&z||P(h),L="Array"==t&&O.entries||z;if(L&&(x=c(L.call(new e)))!==Object.prototype&&x.next&&(i||c(x)===_||(u?u(x,_):s(x[S])||f(x,S,E)),d(x,M,!0,!0),i&&(m[M]=E)),g&&h==C&&z&&z.name!==C&&(!i&&y?p(O,"name",C):(D=!0,A=function(){return r(z,this)})),h)if(I={values:P(C),keys:v?A:P(w),entries:P(j)},k)for(T in I)(b||D||!(T in O))&&f(O,T,I[T]);else n({target:t,proto:!0,forced:b||D},I);return i&&!k||O[S]===A||f(O,S,A,{name:h}),m[t]=A,I}},77831:function(e,t,o){"use strict";var n,r,i,a=o(75834),s=o(794),l=o(8148),c=o(93503),u=o(1074),d=o(35065),p=o(19517),f=o(70852),h=p("iterator"),m=!1;[].keys&&("next"in(i=[].keys())?(r=u(u(i)))!==Object.prototype&&(n=r):m=!0),!l(n)||a((function(){var e={};return n[h].call(e)!==e}))?n={}:f&&(n=c(n)),s(n[h])||d(n,h,(function(){return this})),e.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:m}},84922:function(e){"use strict";e.exports={}},15050:function(e,t,o){"use strict";var n=o(24431);e.exports=function(e){return n(e.length)}},40846:function(e,t,o){"use strict";var n=o(75834),r=o(794),i=o(14434),a=o(13873),s=o(84521).CONFIGURABLE,l=o(92355),c=o(56113),u=c.enforce,d=c.get,p=Object.defineProperty,f=a&&!n((function(){return 8!==p((function(){}),"length",{value:8}).length})),h=String(String).split("String"),m=e.exports=function(e,t,o){"Symbol("===String(t).slice(0,7)&&(t="["+String(t).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),o&&o.getter&&(t="get "+t),o&&o.setter&&(t="set "+t),(!i(e,"name")||s&&e.name!==t)&&(a?p(e,"name",{value:t,configurable:!0}):e.name=t),f&&o&&i(o,"arity")&&e.length!==o.arity&&p(e,"length",{value:o.arity});try{o&&i(o,"constructor")&&o.constructor?a&&p(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var n=u(e);return i(n,"source")||(n.source=h.join("string"==typeof t?t:"")),e};Function.prototype.toString=m((function(){return r(this)&&d(this).source||l(this)}),"toString")},43932:function(e){"use strict";var t=Math.ceil,o=Math.floor;e.exports=Math.trunc||function(e){var n=+e;return(n>0?o:t)(n)}},93503:function(e,t,o){"use strict";var n,r=o(52313),i=o(5770),a=o(64456),s=o(48889),l=o(36249),c=o(15192),u=o(85475)("IE_PROTO"),d=function(){},p=function(e){return"<script>"+e+"<\/script>"},f=function(e){e.write(p("")),e.close();var t=e.parentWindow.Object;return e=null,t},h=function(){try{n=new ActiveXObject("htmlfile")}catch(e){}var e,t;h="undefined"!=typeof document?document.domain&&n?f(n):((t=c("iframe")).style.display="none",l.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(p("document.F=Object")),e.close(),e.F):f(n);for(var o=a.length;o--;)delete h.prototype[a[o]];return h()};s[u]=!0,e.exports=Object.create||function(e,t){var o;return null!==e?(d.prototype=r(e),o=new d,d.prototype=null,o[u]=e):o=h(),void 0===t?o:i.f(o,t)}},5770:function(e,t,o){"use strict";var n=o(13873),r=o(63142),i=o(73252),a=o(52313),s=o(98651),l=o(3385);t.f=n&&!r?Object.defineProperties:function(e,t){a(e);for(var o,n=s(t),r=l(t),c=r.length,u=0;c>u;)i.f(e,o=r[u++],n[o]);return e}},73252:function(e,t,o){"use strict";var n=o(13873),r=o(12816),i=o(63142),a=o(52313),s=o(43836),l=TypeError,c=Object.defineProperty,u=Object.getOwnPropertyDescriptor;t.f=n?i?function(e,t,o){if(a(e),t=s(t),a(o),"function"==typeof e&&"prototype"===t&&"value"in o&&"writable"in o&&!o.writable){var n=u(e,t);n&&n.writable&&(e[t]=o.value,o={configurable:"configurable"in o?o.configurable:n.configurable,enumerable:"enumerable"in o?o.enumerable:n.enumerable,writable:!1})}return c(e,t,o)}:c:function(e,t,o){if(a(e),t=s(t),a(o),r)try{return c(e,t,o)}catch(e){}if("get"in o||"set"in o)throw l("Accessors not supported");return"value"in o&&(e[t]=o.value),e}},36999:function(e,t,o){"use strict";var n=o(13873),r=o(9093),i=o(33244),a=o(32500),s=o(98651),l=o(43836),c=o(14434),u=o(12816),d=Object.getOwnPropertyDescriptor;t.f=n?d:function(e,t){if(e=s(e),t=l(t),u)try{return d(e,t)}catch(e){}if(c(e,t))return a(!r(i.f,e,t),e[t])}},53305:function(e,t,o){"use strict";var n=o(6285),r=o(98651),i=o(7792).f,a=o(57652),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&"Window"==n(e)?function(e){try{return i(e)}catch(e){return a(s)}}(e):i(r(e))}},7792:function(e,t,o){"use strict";var n=o(84729),r=o(64456).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,r)}},23953:function(e,t){"use strict";t.f=Object.getOwnPropertySymbols},1074:function(e,t,o){"use strict";var n=o(14434),r=o(794),i=o(68488),a=o(85475),s=o(27259),l=a("IE_PROTO"),c=Object,u=c.prototype;e.exports=s?c.getPrototypeOf:function(e){var t=i(e);if(n(t,l))return t[l];var o=t.constructor;return r(o)&&t instanceof o?o.prototype:t instanceof c?u:null}},54671:function(e,t,o){"use strict";var n=o(90838);e.exports=n({}.isPrototypeOf)},84729:function(e,t,o){"use strict";var n=o(90838),r=o(14434),i=o(98651),a=o(79327).indexOf,s=o(48889),l=n([].push);e.exports=function(e,t){var o,n=i(e),c=0,u=[];for(o in n)!r(s,o)&&r(n,o)&&l(u,o);for(;t.length>c;)r(n,o=t[c++])&&(~a(u,o)||l(u,o));return u}},3385:function(e,t,o){"use strict";var n=o(84729),r=o(64456);e.exports=Object.keys||function(e){return n(e,r)}},33244:function(e,t){"use strict";var o={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,r=n&&!o.call({1:2},1);t.f=r?function(e){var t=n(this,e);return!!t&&t.enumerable}:o},482:function(e,t,o){"use strict";var n=o(90838),r=o(52313),i=o(75839);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,o={};try{(e=n(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(o,[]),t=o instanceof Array}catch(e){}return function(o,n){return r(o),i(n),t?e(o,n):o.__proto__=n,o}}():void 0)},57555:function(e,t,o){"use strict";var n=o(6424),r=o(8652);e.exports=n?{}.toString:function(){return"[object "+r(this)+"]"}},82472:function(e,t,o){"use strict";var n=o(9093),r=o(794),i=o(8148),a=TypeError;e.exports=function(e,t){var o,s;if("string"===t&&r(o=e.toString)&&!i(s=n(o,e)))return s;if(r(o=e.valueOf)&&!i(s=n(o,e)))return s;if("string"!==t&&r(o=e.toString)&&!i(s=n(o,e)))return s;throw a("Can't convert object to primitive value")}},86671:function(e,t,o){"use strict";var n=o(98945),r=o(90838),i=o(7792),a=o(23953),s=o(52313),l=r([].concat);e.exports=n("Reflect","ownKeys")||function(e){var t=i.f(s(e)),o=a.f;return o?l(t,o(e)):t}},31116:function(e,t,o){"use strict";var n=o(37042);e.exports=n},60265:function(e,t,o){"use strict";var n=o(8140),r=TypeError;e.exports=function(e){if(n(e))throw r("Can't call method on "+e);return e}},44532:function(e,t,o){"use strict";var n=o(73252).f,r=o(14434),i=o(19517)("toStringTag");e.exports=function(e,t,o){e&&!o&&(e=e.prototype),e&&!r(e,i)&&n(e,i,{configurable:!0,value:t})}},85475:function(e,t,o){"use strict";var n=o(95138),r=o(15257),i=n("keys");e.exports=function(e){return i[e]||(i[e]=r(e))}},45752:function(e,t,o){"use strict";var n=o(37042),r=o(25379),i="__core-js_shared__",a=n[i]||r(i,{});e.exports=a},95138:function(e,t,o){"use strict";var n=o(70852),r=o(45752);(e.exports=function(e,t){return r[e]||(r[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.26.1",mode:n?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",source:"https://github.com/zloirock/core-js"})},41397:function(e,t,o){"use strict";var n=o(90838),r=o(27876),i=o(63046),a=o(60265),s=n("".charAt),l=n("".charCodeAt),c=n("".slice),u=function(e){return function(t,o){var n,u,d=i(a(t)),p=r(o),f=d.length;return 0>p||p>=f?e?"":void 0:55296>(n=l(d,p))||n>56319||p+1===f||56320>(u=l(d,p+1))||u>57343?e?s(d,p):n:e?c(d,p,p+2):u-56320+(n-55296<<10)+65536}};e.exports={codeAt:u(!1),charAt:u(!0)}},73800:function(e,t,o){"use strict";var n=o(65190),r=o(75834);e.exports=!!Object.getOwnPropertySymbols&&!r((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&n&&41>n}))},13829:function(e,t,o){"use strict";var n=o(9093),r=o(98945),i=o(19517),a=o(35065);e.exports=function(){var e=r("Symbol"),t=e&&e.prototype,o=t&&t.valueOf,s=i("toPrimitive");t&&!t[s]&&a(t,s,(function(e){return n(o,this)}),{arity:1})}},31948:function(e,t,o){"use strict";var n=o(73800);e.exports=n&&!!Symbol.for&&!!Symbol.keyFor},10586:function(e,t,o){"use strict";var n=o(27876),r=Math.max,i=Math.min;e.exports=function(e,t){var o=n(e);return 0>o?r(o+t,0):i(o,t)}},98651:function(e,t,o){"use strict";var n=o(25049),r=o(60265);e.exports=function(e){return n(r(e))}},27876:function(e,t,o){"use strict";var n=o(43932);e.exports=function(e){var t=+e;return t!=t||0===t?0:n(t)}},24431:function(e,t,o){"use strict";var n=o(27876),r=Math.min;e.exports=function(e){return e>0?r(n(e),9007199254740991):0}},68488:function(e,t,o){"use strict";var n=o(60265),r=Object;e.exports=function(e){return r(n(e))}},11261:function(e,t,o){"use strict";var n=o(9093),r=o(8148),i=o(88253),a=o(20156),s=o(82472),l=o(19517),c=TypeError,u=l("toPrimitive");e.exports=function(e,t){if(!r(e)||i(e))return e;var o,l=a(e,u);if(l){if(void 0===t&&(t="default"),o=n(l,e,t),!r(o)||i(o))return o;throw c("Can't convert object to primitive value")}return void 0===t&&(t="number"),s(e,t)}},43836:function(e,t,o){"use strict";var n=o(11261),r=o(88253);e.exports=function(e){var t=n(e,"string");return r(t)?t:t+""}},6424:function(e,t,o){"use strict";var n={};n[o(19517)("toStringTag")]="z",e.exports="[object z]"===String(n)},63046:function(e,t,o){"use strict";var n=o(8652),r=String;e.exports=function(e){if("Symbol"===n(e))throw TypeError("Cannot convert a Symbol value to a string");return r(e)}},98418:function(e){"use strict";var t=String;e.exports=function(e){try{return t(e)}catch(e){return"Object"}}},15257:function(e,t,o){"use strict";var n=o(90838),r=0,i=Math.random(),a=n(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+a(++r+i,36)}},57982:function(e,t,o){"use strict";var n=o(73800);e.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},63142:function(e,t,o){"use strict";var n=o(13873),r=o(75834);e.exports=n&&r((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},95473:function(e,t,o){"use strict";var n=o(37042),r=o(794),i=n.WeakMap;e.exports=r(i)&&/native code/.test(String(i))},89633:function(e,t,o){"use strict";var n=o(31116),r=o(14434),i=o(96767),a=o(73252).f;e.exports=function(e){var t=n.Symbol||(n.Symbol={});r(t,e)||a(t,e,{value:i.f(e)})}},96767:function(e,t,o){"use strict";var n=o(19517);t.f=n},19517:function(e,t,o){"use strict";var n=o(37042),r=o(95138),i=o(14434),a=o(15257),s=o(73800),l=o(57982),c=r("wks"),u=n.Symbol,d=u&&u.for,p=l?u:u&&u.withoutSetter||a;e.exports=function(e){if(!i(c,e)||!s&&"string"!=typeof c[e]){var t="Symbol."+e;c[e]=s&&i(u,e)?u[e]:l&&d?d(t):p(t)}return c[e]}},54166:function(e,t,o){"use strict";var n=o(50791),r=o(75834),i=o(36222),a=o(8148),s=o(68488),l=o(15050),c=o(39505),u=o(89476),d=o(6429),p=o(63833),f=o(19517),h=o(65190),m=f("isConcatSpreadable"),v=h>=51||!r((function(){var e=[];return e[m]=!1,e.concat()[0]!==e})),g=p("concat"),y=function(e){if(!a(e))return!1;var t=e[m];return void 0!==t?!!t:i(e)};n({target:"Array",proto:!0,arity:1,forced:!v||!g},{concat:function(e){var t,o,n,r,i,a=s(this),p=d(a,0),f=0;for(t=-1,n=arguments.length;n>t;t++)if(y(i=-1===t?a:arguments[t]))for(r=l(i),c(f+r),o=0;r>o;o++,f++)o in i&&u(p,f,i[o]);else c(f+1),u(p,f++,i);return p.length=f,p}})},22513:function(e,t,o){"use strict";var n=o(50791),r=o(56881).findIndex,i=o(15179),a="findIndex",s=!0;a in[]&&Array(1).findIndex((function(){s=!1})),n({target:"Array",proto:!0,forced:s},{findIndex:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),i(a)},70057:function(e,t,o){"use strict";var n=o(50791),r=o(92707);n({target:"Array",stat:!0,forced:!o(7581)((function(e){Array.from(e)}))},{from:r})},67507:function(e,t,o){"use strict";var n=o(50791),r=o(98945),i=o(55101),a=o(9093),s=o(90838),l=o(75834),c=o(36222),u=o(794),d=o(8148),p=o(88253),f=o(54832),h=o(73800),m=r("JSON","stringify"),v=s(/./.exec),g=s("".charAt),y=s("".charCodeAt),_=s("".replace),b=s(1..toString),S=/[\uD800-\uDFFF]/g,w=/^[\uD800-\uDBFF]$/,C=/^[\uDC00-\uDFFF]$/,j=!h||l((function(){var e=r("Symbol")();return"[null]"!=m([e])||"{}"!=m({a:e})||"{}"!=m(Object(e))})),E=l((function(){return'"\\udf06\\ud834"'!==m("\udf06\ud834")||'"\\udead"'!==m("\udead")})),k=function(e,t){var o=f(arguments),n=t;if((d(t)||void 0!==e)&&!p(e))return c(t)||(t=function(e,t){if(u(n)&&(t=a(n,this,e,t)),!p(t))return t}),o[1]=t,i(m,null,o)},x=function(e,t,o){var n=g(o,t-1),r=g(o,t+1);return v(w,e)&&!v(C,r)||v(C,e)&&!v(w,n)?"\\u"+b(y(e,0),16):e};m&&n({target:"JSON",stat:!0,arity:3,forced:j||E},{stringify:function(e,t,o){var n=f(arguments),r=i(j?k:m,null,n);return E&&"string"==typeof r?_(r,S,x):r}})},90217:function(e,t,o){"use strict";var n=o(37042);o(44532)(n.JSON,"JSON",!0)},73477:function(e,t,o){"use strict";o(44532)(Math,"Math",!0)},30165:function(e,t,o){"use strict";var n=o(50791),r=o(73800),i=o(75834),a=o(23953),s=o(68488);n({target:"Object",stat:!0,forced:!r||i((function(){a.f(1)}))},{getOwnPropertySymbols:function(e){var t=a.f;return t?t(s(e)):[]}})},32044:function(e,t,o){"use strict";var n=o(6424),r=o(35065),i=o(57555);n||r(Object.prototype,"toString",i,{unsafe:!0})},93697:function(e,t,o){"use strict";var n=o(50791),r=o(37042),i=o(44532);n({global:!0},{Reflect:{}}),i(r.Reflect,"Reflect",!0)},52867:function(e,t,o){"use strict";var n=o(41397).charAt,r=o(63046),i=o(56113),a=o(13759),s=o(17427),l="String Iterator",c=i.set,u=i.getterFor(l);a(String,"String",(function(e){c(this,{type:l,string:r(e),index:0})}),(function(){var e,t=u(this),o=t.string,r=t.index;return o.length>r?(e=n(o,r),t.index+=e.length,s(e,!1)):s(void 0,!0)}))},28424:function(e,t,o){"use strict";o(89633)("asyncIterator")},9656:function(e,t,o){"use strict";var n=o(50791),r=o(37042),i=o(9093),a=o(90838),s=o(70852),l=o(13873),c=o(73800),u=o(75834),d=o(14434),p=o(54671),f=o(52313),h=o(98651),m=o(43836),v=o(63046),g=o(32500),y=o(93503),_=o(3385),b=o(7792),S=o(53305),w=o(23953),C=o(36999),j=o(73252),E=o(5770),k=o(33244),x=o(35065),I=o(95138),T=o(85475),P=o(48889),M=o(15257),D=o(19517),O=o(96767),z=o(89633),A=o(13829),L=o(44532),N=o(56113),R=o(56881).forEach,B=T("hidden"),q="Symbol",F=N.set,H=N.getterFor(q),V=Object.prototype,U=r.Symbol,W=U&&U.prototype,Y=r.TypeError,G=r.QObject,K=C.f,X=j.f,J=S.f,$=k.f,Z=a([].push),Q=I("symbols"),ee=I("op-symbols"),te=I("wks"),oe=!G||!G.prototype||!G.prototype.findChild,ne=l&&u((function(){return 7!=y(X({},"a",{get:function(){return X(this,"a",{value:7}).a}})).a}))?function(e,t,o){var n=K(V,t);n&&delete V[t],X(e,t,o),n&&e!==V&&X(V,t,n)}:X,re=function(e,t){var o=Q[e]=y(W);return F(o,{type:q,tag:e,description:t}),l||(o.description=t),o},ie=function(e,t,o){e===V&&ie(ee,t,o),f(e);var n=m(t);return f(o),d(Q,n)?(o.enumerable?(d(e,B)&&e[B][n]&&(e[B][n]=!1),o=y(o,{enumerable:g(0,!1)})):(d(e,B)||X(e,B,g(1,{})),e[B][n]=!0),ne(e,n,o)):X(e,n,o)},ae=function(e,t){f(e);var o=h(t),n=_(o).concat(ue(o));return R(n,(function(t){l&&!i(se,o,t)||ie(e,t,o[t])})),e},se=function(e){var t=m(e),o=i($,this,t);return!(this===V&&d(Q,t)&&!d(ee,t))&&(!(o||!d(this,t)||!d(Q,t)||d(this,B)&&this[B][t])||o)},le=function(e,t){var o=h(e),n=m(t);if(o!==V||!d(Q,n)||d(ee,n)){var r=K(o,n);return!r||!d(Q,n)||d(o,B)&&o[B][n]||(r.enumerable=!0),r}},ce=function(e){var t=J(h(e)),o=[];return R(t,(function(e){d(Q,e)||d(P,e)||Z(o,e)})),o},ue=function(e){var t=e===V,o=J(t?ee:h(e)),n=[];return R(o,(function(e){!d(Q,e)||t&&!d(V,e)||Z(n,Q[e])})),n};c||(U=function(){if(p(W,this))throw Y("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?v(arguments[0]):void 0,t=M(e),o=function(e){this===V&&i(o,ee,e),d(this,B)&&d(this[B],t)&&(this[B][t]=!1),ne(this,t,g(1,e))};return l&&oe&&ne(V,t,{configurable:!0,set:o}),re(t,e)},x(W=U.prototype,"toString",(function(){return H(this).tag})),x(U,"withoutSetter",(function(e){return re(M(e),e)})),k.f=se,j.f=ie,E.f=ae,C.f=le,b.f=S.f=ce,w.f=ue,O.f=function(e){return re(D(e),e)},l&&(X(W,"description",{configurable:!0,get:function(){return H(this).description}}),s||x(V,"propertyIsEnumerable",se,{unsafe:!0}))),n({global:!0,constructor:!0,wrap:!0,forced:!c,sham:!c},{Symbol:U}),R(_(te),(function(e){z(e)})),n({target:q,stat:!0,forced:!c},{useSetter:function(){oe=!0},useSimple:function(){oe=!1}}),n({target:"Object",stat:!0,forced:!c,sham:!l},{create:function(e,t){return void 0===t?y(e):ae(y(e),t)},defineProperty:ie,defineProperties:ae,getOwnPropertyDescriptor:le}),n({target:"Object",stat:!0,forced:!c},{getOwnPropertyNames:ce}),A(),L(U,q),P[B]=!0},64514:function(e,t,o){"use strict";var n=o(50791),r=o(13873),i=o(37042),a=o(90838),s=o(14434),l=o(794),c=o(54671),u=o(63046),d=o(73252).f,p=o(58392),f=i.Symbol,h=f&&f.prototype;if(r&&l(f)&&(!("description"in h)||void 0!==f().description)){var m={},v=function(){var e=1>arguments.length||void 0===arguments[0]?void 0:u(arguments[0]),t=c(h,this)?new f(e):void 0===e?f():f(e);return""===e&&(m[t]=!0),t};p(v,f),v.prototype=h,h.constructor=v;var g="Symbol(test)"==String(f("test")),y=a(h.valueOf),_=a(h.toString),b=/^Symbol\((.*)\)[^)]+$/,S=a("".replace),w=a("".slice);d(h,"description",{configurable:!0,get:function(){var e=y(this);if(s(m,e))return"";var t=_(e),o=g?w(t,7,-1):S(t,b,"$1");return""===o?void 0:o}}),n({global:!0,constructor:!0,forced:!0},{Symbol:v})}},56202:function(e,t,o){"use strict";var n=o(50791),r=o(98945),i=o(14434),a=o(63046),s=o(95138),l=o(31948),c=s("string-to-symbol-registry"),u=s("symbol-to-string-registry");n({target:"Symbol",stat:!0,forced:!l},{for:function(e){var t=a(e);if(i(c,t))return c[t];var o=r("Symbol")(t);return c[t]=o,u[o]=t,o}})},30733:function(e,t,o){"use strict";o(89633)("hasInstance")},40327:function(e,t,o){"use strict";o(89633)("isConcatSpreadable")},53639:function(e,t,o){"use strict";o(89633)("iterator")},95661:function(e,t,o){"use strict";o(9656),o(56202),o(71940),o(67507),o(30165)},71940:function(e,t,o){"use strict";var n=o(50791),r=o(14434),i=o(88253),a=o(98418),s=o(95138),l=o(31948),c=s("symbol-to-string-registry");n({target:"Symbol",stat:!0,forced:!l},{keyFor:function(e){if(!i(e))throw TypeError(a(e)+" is not a symbol");if(r(c,e))return c[e]}})},7290:function(e,t,o){"use strict";o(89633)("matchAll")},6147:function(e,t,o){"use strict";o(89633)("match")},95122:function(e,t,o){"use strict";o(89633)("replace")},61322:function(e,t,o){"use strict";o(89633)("search")},39605:function(e,t,o){"use strict";o(89633)("species")},49341:function(e,t,o){"use strict";o(89633)("split")},28809:function(e,t,o){"use strict";var n=o(89633),r=o(13829);n("toPrimitive"),r()},82658:function(e,t,o){"use strict";var n=o(98945),r=o(89633),i=o(44532);r("toStringTag"),i(n("Symbol"),"Symbol")},43967:function(e,t,o){"use strict";o(89633)("unscopables")},690:function(e,t,o){"use strict";e.exports=o(26002).polyfill()},26002:function(e,t,o){"use strict";e.exports=function(){function e(e){return"function"==typeof e}var t=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},n=0,r=void 0,i=void 0,a=function(e,t){f[n]=e,f[n+1]=t,2===(n+=2)&&(i?i(h):_())},s="undefined"!=typeof window?window:void 0,l=s||{},c=l.MutationObserver||l.WebKitMutationObserver,u="undefined"==typeof self&&"undefined"!=typeof process&&"[object process]"==={}.toString.call(process),d="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function p(){var e=setTimeout;return function(){return e(h,1)}}var f=new Array(1e3);function h(){for(var e=0;n>e;e+=2)(0,f[e])(f[e+1]),f[e]=void 0,f[e+1]=void 0;n=0}var m,v,g,y,_=void 0;function b(e,t){var o=this,n=new this.constructor(C);void 0===n[w]&&z(n);var r=o._state;if(r){var i=arguments[r-1];a((function(){return D(r,n,i,o._result)}))}else P(o,n,e,t);return n}function S(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var t=new this(C);return k(t,e),t}_=u?function(){return process.nextTick(h)}:c?(v=0,g=new c(h),y=document.createTextNode(""),g.observe(y,{characterData:!0}),function(){y.data=v=++v%2}):d?((m=new MessageChannel).port1.onmessage=h,function(){return m.port2.postMessage(0)}):void 0===s?function(){try{var e=Function("return this")().require("vertx");return void 0!==(r=e.runOnLoop||e.runOnContext)?function(){r(h)}:p()}catch(e){return p()}}():p();var w=Math.random().toString(36).substring(2);function C(){}var j=void 0;function E(t,o,n){o.constructor===t.constructor&&n===b&&o.constructor.resolve===S?function(e,t){1===t._state?I(e,t._result):2===t._state?T(e,t._result):P(t,void 0,(function(t){return k(e,t)}),(function(t){return T(e,t)}))}(t,o):void 0===n?I(t,o):e(n)?function(e,t,o){a((function(e){var n=!1,r=function(o,r,i,a){try{o.call(r,(function(o){n||(n=!0,t!==o?k(e,o):I(e,o))}),(function(t){n||(n=!0,T(e,t))}))}catch(e){return e}}(o,t);!n&&r&&(n=!0,T(e,r))}),e)}(t,o,n):I(t,o)}function k(e,t){if(e===t)T(e,new TypeError("You cannot resolve a promise with itself"));else if(r=typeof(n=t),null===n||"object"!==r&&"function"!==r)I(e,t);else{var o=void 0;try{o=t.then}catch(t){return void T(e,t)}E(e,t,o)}var n,r}function x(e){e._onerror&&e._onerror(e._result),M(e)}function I(e,t){e._state===j&&(e._result=t,e._state=1,0!==e._subscribers.length&&a(M,e))}function T(e,t){e._state===j&&(e._state=2,e._result=t,a(x,e))}function P(e,t,o,n){var r=e._subscribers,i=r.length;e._onerror=null,r[i]=t,r[i+1]=o,r[i+2]=n,0===i&&e._state&&a(M,e)}function M(e){var t=e._subscribers,o=e._state;if(0!==t.length){for(var n=void 0,r=void 0,i=e._result,a=0;t.length>a;a+=3)r=t[a+o],(n=t[a])?D(o,n,r,i):r(i);e._subscribers.length=0}}function D(t,o,n,r){var i=e(n),a=void 0,s=void 0,l=!0;if(i){try{a=n(r)}catch(e){l=!1,s=e}if(o===a)return void T(o,new TypeError("A promises callback cannot return that same promise."))}else a=r;o._state!==j||(i&&l?k(o,a):!1===l?T(o,s):1===t?I(o,a):2===t&&T(o,a))}var O=0;function z(e){e[w]=O++,e._state=void 0,e._result=void 0,e._subscribers=[]}var A=function(){function e(e,o){this._instanceConstructor=e,this.promise=new e(C),this.promise[w]||z(this.promise),t(o)?(this.length=o.length,this._remaining=o.length,this._result=new Array(this.length),0===this.length?I(this.promise,this._result):(this.length=this.length||0,this._enumerate(o),0===this._remaining&&I(this.promise,this._result))):T(this.promise,new Error("Array Methods must be provided an Array"))}return e.prototype._enumerate=function(e){for(var t=0;this._state===j&&e.length>t;t++)this._eachEntry(e[t],t)},e.prototype._eachEntry=function(e,t){var o=this._instanceConstructor,n=o.resolve;if(n===S){var r=void 0,i=void 0,a=!1;try{r=e.then}catch(e){a=!0,i=e}if(r===b&&e._state!==j)this._settledAt(e._state,t,e._result);else if("function"!=typeof r)this._remaining--,this._result[t]=e;else if(o===L){var s=new o(C);a?T(s,i):E(s,e,r),this._willSettleAt(s,t)}else this._willSettleAt(new o((function(t){return t(e)})),t)}else this._willSettleAt(n(e),t)},e.prototype._settledAt=function(e,t,o){var n=this.promise;n._state===j&&(this._remaining--,2===e?T(n,o):this._result[t]=o),0===this._remaining&&I(n,this._result)},e.prototype._willSettleAt=function(e,t){var o=this;P(e,void 0,(function(e){return o._settledAt(1,t,e)}),(function(e){return o._settledAt(2,t,e)}))},e}(),L=function(){function t(e){this[w]=O++,this._result=this._state=void 0,this._subscribers=[],C!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof t?function(e,t){try{t((function(t){k(e,t)}),(function(t){T(e,t)}))}catch(t){T(e,t)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return t.prototype.catch=function(e){return this.then(null,e)},t.prototype.finally=function(t){var o=this,n=o.constructor;return e(t)?o.then((function(e){return n.resolve(t()).then((function(){return e}))}),(function(e){return n.resolve(t()).then((function(){throw e}))})):o.then(t,t)},t}();return L.prototype.then=b,L.all=function(e){return new A(this,e).promise},L.race=function(e){var o=this;return t(e)?new o((function(t,n){for(var r=e.length,i=0;r>i;i++)o.resolve(e[i]).then(t,n)})):new o((function(e,t){return t(new TypeError("You must pass an array to race."))}))},L.resolve=S,L.reject=function(e){var t=new this(C);return T(t,e),t},L._setScheduler=function(e){i=e},L._setAsap=function(e){a=e},L._asap=a,L.polyfill=function(){var e=void 0;if(void 0!==o.g)e=o.g;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var t=e.Promise;if(t){var n=null;try{n=Object.prototype.toString.call(t.resolve())}catch(e){}if("[object Promise]"===n&&!t.cast)return}e.Promise=L},L.Promise=L,L}()},20255:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.__classPrivateFieldIn=t.__classPrivateFieldSet=t.__classPrivateFieldGet=t.__importDefault=t.__importStar=t.__makeTemplateObject=t.__asyncValues=t.__asyncDelegator=t.__asyncGenerator=t.__await=t.__spreadArray=t.__spreadArrays=t.__spread=t.__read=t.__values=t.__exportStar=t.__createBinding=t.__generator=t.__awaiter=t.__metadata=t.__param=t.__decorate=t.__rest=t.__assign=t.__extends=void 0;var o=function(e,t){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])},o(e,t)};function n(e){var t="function"==typeof Symbol&&Symbol.iterator,o=t&&e[t],n=0;if(o)return o.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function r(e,t){var o="function"==typeof Symbol&&e[Symbol.iterator];if(!o)return e;var n,r,i=o.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)a.push(n.value)}catch(e){r={error:e}}finally{try{n&&!n.done&&(o=i.return)&&o.call(i)}finally{if(r)throw r.error}}return a}function i(e){return this instanceof i?(this.v=e,this):new i(e)}t.__extends=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)},t.__assign=function(){return t.__assign=Object.assign||function(e){for(var t,o=1,n=arguments.length;n>o;o++)for(var r in t=arguments[o])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},t.__assign.apply(this,arguments)},t.__rest=function(e,t){var o={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&0>t.indexOf(n)&&(o[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(n=Object.getOwnPropertySymbols(e);n.length>r;r++)0>t.indexOf(n[r])&&Object.prototype.propertyIsEnumerable.call(e,n[r])&&(o[n[r]]=e[n[r]])}return o},t.__decorate=function(e,t,o,n){var r,i=arguments.length,a=3>i?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,o,n);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(3>i?r(a):i>3?r(t,o,a):r(t,o))||a);return i>3&&a&&Object.defineProperty(t,o,a),a},t.__param=function(e,t){return function(o,n){t(o,n,e)}},t.__metadata=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},t.__awaiter=function(e,t,o,n){return new(o||(o=Promise))((function(r,i){function a(e){try{l(n.next(e))}catch(e){i(e)}}function s(e){try{l(n.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(a,s)}l((n=n.apply(e,t||[])).next())}))},t.__generator=function(e,t){var o,n,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(s){return function(l){return function(s){if(o)throw new TypeError("Generator is already executing.");for(;i&&(i=0,s[0]&&(a=0)),a;)try{if(o=1,n&&(r=2&s[0]?n.return:s[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,s[1])).done)return r;switch(n=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,n=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((r=(r=a.trys).length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&r[3]>s[1])){a.label=s[1];break}if(6===s[0]&&r[1]>a.label){a.label=r[1],r=s;break}if(r&&r[2]>a.label){a.label=r[2],a.ops.push(s);break}r[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],n=0}finally{o=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}},t.__createBinding=Object.create?function(e,t,o,n){void 0===n&&(n=o);var r=Object.getOwnPropertyDescriptor(t,o);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,n,r)}:function(e,t,o,n){void 0===n&&(n=o),e[n]=t[o]},t.__exportStar=function(e,o){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(o,n)||(0,t.__createBinding)(o,e,n)},t.__values=n,t.__read=r,t.__spread=function(){for(var e=[],t=0;arguments.length>t;t++)e=e.concat(r(arguments[t]));return e},t.__spreadArrays=function(){for(var e=0,t=0,o=arguments.length;o>t;t++)e+=arguments[t].length;var n=Array(e),r=0;for(t=0;o>t;t++)for(var i=arguments[t],a=0,s=i.length;s>a;a++,r++)n[r]=i[a];return n},t.__spreadArray=function(e,t,o){if(o||2===arguments.length)for(var n,r=0,i=t.length;i>r;r++)!n&&r in t||(n||(n=Array.prototype.slice.call(t,0,r)),n[r]=t[r]);return e.concat(n||Array.prototype.slice.call(t))},t.__await=i,t.__asyncGenerator=function(e,t,o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,r=o.apply(e,t||[]),a=[];return n={},s("next"),s("throw"),s("return"),n[Symbol.asyncIterator]=function(){return this},n;function s(e){r[e]&&(n[e]=function(t){return new Promise((function(o,n){a.push([e,t,o,n])>1||l(e,t)}))})}function l(e,t){try{(o=r[e](t)).value instanceof i?Promise.resolve(o.value.v).then(c,u):d(a[0][2],o)}catch(e){d(a[0][3],e)}var o}function c(e){l("next",e)}function u(e){l("throw",e)}function d(e,t){e(t),a.shift(),a.length&&l(a[0][0],a[0][1])}},t.__asyncDelegator=function(e){var t,o;return t={},n("next"),n("throw",(function(e){throw e})),n("return"),t[Symbol.iterator]=function(){return this},t;function n(n,r){t[n]=e[n]?function(t){return(o=!o)?{value:i(e[n](t)),done:"return"===n}:r?r(t):t}:r}},t.__asyncValues=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,o=e[Symbol.asyncIterator];return o?o.call(e):(e=n(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(o){t[o]=e[o]&&function(t){return new Promise((function(n,r){!function(e,t,o,n){Promise.resolve(n).then((function(t){e({value:t,done:o})}),t)}(n,r,(t=e[o](t)).done,t.value)}))}}},t.__makeTemplateObject=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e};var a=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t};t.__importStar=function(e){if(e&&e.__esModule)return e;var o={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&(0,t.__createBinding)(o,e,n);return a(o,e),o},t.__importDefault=function(e){return e&&e.__esModule?e:{default:e}},t.__classPrivateFieldGet=function(e,t,o,n){if("a"===o&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===o?n:"a"===o?n.call(e):n?n.value:t.get(e)},t.__classPrivateFieldSet=function(e,t,o,n,r){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?r.call(e,o):r?r.value=o:t.set(e,o),o},t.__classPrivateFieldIn=function(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof e?t===e:e.has(t)}},93166:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Config=void 0;var n=o(86893),r=o(86893),i=function(){function e(){this.defaultTimeout=100,this.namespace="",this.safeMode=!1,this.width="auto",this.height="auto",this.safePluginsList=["about","enter","backspace"],this.license="",this.preset="custom",this.presets={inline:{inline:!0,toolbar:!1,toolbarInline:!0,toolbarInlineForSelection:!0,showXPathInStatusbar:!1,showCharsCounter:!1,showWordsCounter:!1,showPlaceholder:!1}},this.ownerDocument="undefined"!=typeof document?document:null,this.ownerWindow="undefined"!=typeof window?window:null,this.shadowRoot=null,this.zIndex=0,this.readonly=!1,this.disabled=!1,this.activeButtonsInReadOnly=["source","fullsize","print","about","dots","selectall"],this.allowCommandsInReadOnly=["selectall","preview","print"],this.toolbarButtonSize="middle",this.allowTabNavigation=!1,this.inline=!1,this.theme="default",this.saveModeInStorage=!1,this.editorClassName=!1,this.editorCssClass=!1,this.className=!1,this.style=!1,this.containerStyle=!1,this.styleValues={},this.triggerChangeEvent=!0,this.direction="",this.language="auto",this.debugLanguage=!1,this.i18n=!1,this.tabIndex=-1,this.toolbar=!0,this.statusbar=!0,this.showTooltip=!0,this.showTooltipDelay=1e3,this.useNativeTooltip=!1,this.defaultActionOnPaste=r.INSERT_AS_HTML,this.enter=n.PARAGRAPH,this.iframe=!1,this.editHTMLDocumentMode=!1,this.enterBlock="br"!==this.enter?this.enter:n.PARAGRAPH,this.defaultMode=n.MODE_WYSIWYG,this.useSplitMode=!1,this.colors={greyscale:["#000000","#434343","#666666","#999999","#B7B7B7","#CCCCCC","#D9D9D9","#EFEFEF","#F3F3F3","#FFFFFF"],palette:["#980000","#FF0000","#FF9900","#FFFF00","#00F0F0","#00FFFF","#4A86E8","#0000FF","#9900FF","#FF00FF"],full:["#E6B8AF","#F4CCCC","#FCE5CD","#FFF2CC","#D9EAD3","#D0E0E3","#C9DAF8","#CFE2F3","#D9D2E9","#EAD1DC","#DD7E6B","#EA9999","#F9CB9C","#FFE599","#B6D7A8","#A2C4C9","#A4C2F4","#9FC5E8","#B4A7D6","#D5A6BD","#CC4125","#E06666","#F6B26B","#FFD966","#93C47D","#76A5AF","#6D9EEB","#6FA8DC","#8E7CC3","#C27BA0","#A61C00","#CC0000","#E69138","#F1C232","#6AA84F","#45818E","#3C78D8","#3D85C6","#674EA7","#A64D79","#85200C","#990000","#B45F06","#BF9000","#38761D","#134F5C","#1155CC","#0B5394","#351C75","#733554","#5B0F00","#660000","#783F04","#7F6000","#274E13","#0C343D","#1C4587","#073763","#20124D","#4C1130"]},this.colorPickerDefaultTab="background",this.imageDefaultWidth=300,this.removeButtons=[],this.disablePlugins=[],this.extraPlugins=[],this.extraButtons=[],this.extraIcons={},this.createAttributes={table:{style:"border-collapse:collapse;width: 100%;"}},this.sizeLG=900,this.sizeMD=700,this.sizeSM=400,this.buttons=[{group:"font-style",buttons:[]},{group:"list",buttons:[]},{group:"font",buttons:[]},"---",{group:"script",buttons:[]},{group:"media",buttons:[]},"\n",{group:"state",buttons:[]},{group:"clipboard",buttons:[]},{group:"insert",buttons:[]},{group:"indent",buttons:[]},{group:"color",buttons:[]},{group:"form",buttons:[]},"---",{group:"history",buttons:[]},{group:"search",buttons:[]},{group:"source",buttons:[]},{group:"other",buttons:[]},{group:"info",buttons:[]}],this.buttonsMD=["bold","italic","|","ul","ol","eraser","|","font","fontsize","---","image","table","|","link","\n","brush","paragraph","align","|","hr","copyformat","fullsize","---","undo","redo","|","dots"],this.buttonsSM=["bold","italic","|","ul","ol","eraser","|","fontsize","brush","paragraph","---","image","table","\n","link","|","align","|","undo","redo","|","copyformat","fullsize","---","dots"],this.buttonsXS=["bold","brush","paragraph","eraser","|","fontsize","---","image","\n","align","undo","redo","|","link","table","---","dots"],this.events={},this.textIcons=!1,this.showBrowserColorPicker=!0}return Object.defineProperty(e,"defaultOptions",{get:function(){return e.__defaultOptions||(e.__defaultOptions=new e),e.__defaultOptions},enumerable:!1,configurable:!0}),e}();t.Config=i,i.prototype.controls={}},77536:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Async=void 0;var n=o(20255),r=o(4696),i=o(42096),a=o(79736),s=o(26335),l=o(24421),c=o(61817),u=(o(52378),function(){function e(){var e,t,o,n,r=this;this.timers=new Map,this.__callbacks=new Map,this.promisesRejections=new Set,this.requestsIdle=new Set,this.requestsRaf=new Set,this.requestIdleCallbackNative=null!==(t=null===(e=window.requestIdleCallback)||void 0===e?void 0:e.bind(window))&&void 0!==t?t:function(e,t){var o,n=Date.now();return r.setTimeout((function(){e({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-n))}})}),null!==(o=null==t?void 0:t.timeout)&&void 0!==o?o:1)},this.cancelIdleCallbackNative=null!==(n=null===(o=window.cancelIdleCallback)||void 0===o?void 0:o.bind(window))&&void 0!==n?n:function(e){r.clearTimeout(e)},this.isDestructed=!1}return e.prototype.delay=function(e){var t=this;return this.promise((function(o){return t.setTimeout(o,e)}))},e.prototype.setTimeout=function(e,t){for(var o=[],i=2;arguments.length>i;i++)o[i-2]=arguments[i];if(this.isDestructed)return 0;var a={};(0,c.isNumber)(t)||(t=(a=t).timeout||0),a.label&&this.clearLabel(a.label);var s=r.setTimeout.apply(void 0,n.__spreadArray([e,t],n.__read(o),!1)),l=a.label||s;return this.timers.set(l,s),this.__callbacks.set(l,e),s},e.prototype.updateTimeout=function(e,t){if(!e||!this.timers.has(e))return null;var o=this.__callbacks.get(e);return this.setTimeout(o,{label:e,timeout:t})},e.prototype.clearLabel=function(e){e&&this.timers.has(e)&&((0,r.clearTimeout)(this.timers.get(e)),this.timers.delete(e),this.__callbacks.delete(e))},e.prototype.clearTimeout=function(e){if((0,l.isString)(e))return this.clearLabel(e);(0,r.clearTimeout)(e),this.timers.delete(e),this.__callbacks.delete(e)},e.prototype.debounce=function(e,t,o){var l=this;void 0===o&&(o=!1);var c=0,u=!1,d=[],p=function(){for(var t=[],o=0;arguments.length>o;o++)t[o]=arguments[o];if(!u){c=0;var r=e.apply(void 0,n.__spreadArray([],n.__read(t),!1));if(u=!0,d.length){var i=function(){d.forEach((function(e){return e()})),d.length=0};(0,s.isPromise)(r)?r.finally(i):i()}}},f=function(){for(var a=[],s=0;arguments.length>s;s++)a[s]=arguments[s];u=!1,t?(!c&&o&&p.apply(void 0,n.__spreadArray([],n.__read(a),!1)),(0,r.clearTimeout)(c),c=l.setTimeout((function(){return p.apply(void 0,n.__spreadArray([],n.__read(a),!1))}),(0,i.isFunction)(t)?t():t),l.timers.set(e,c)):p.apply(void 0,n.__spreadArray([],n.__read(a),!1))};return(0,a.isPlainObject)(t)&&t.promisify?function(){for(var e=[],t=0;arguments.length>t;t++)e[t]=arguments[t];var o=l.promise((function(e){d.push(e)}));return f.apply(void 0,n.__spreadArray([],n.__read(e),!1)),o}:f},e.prototype.throttle=function(e,t,o){var r=this;void 0===o&&(o=!1);var a,s,l,c=null;return function(){for(var o=[],u=0;arguments.length>u;u++)o[u]=arguments[u];a=!0,l=o,t?c||(s=function(){a?(e.apply(void 0,n.__spreadArray([],n.__read(l),!1)),a=!1,c=r.setTimeout(s,(0,i.isFunction)(t)?t():t),r.timers.set(s,c)):c=null})():e.apply(void 0,n.__spreadArray([],n.__read(l),!1))}},e.prototype.promise=function(e){var t=this,o=function(){},n=new Promise((function(n,r){return t.promisesRejections.add(r),o=r,e(n,r)}));return n.finally||(n.finally=function(e){return n.then(e).catch(e),n}),n.finally((function(){t.promisesRejections.delete(o)})).catch((function(){return null})),n.rejectCallback=o,n},e.prototype.promiseState=function(e){var t=this;if(e.status)return e.status;if(!Promise.race)return new Promise((function(o){e.then((function(e){return o("fulfilled"),e}),(function(e){throw o("rejected"),e})),t.setTimeout((function(){o("pending")}),100)}));var o={};return Promise.race([e,o]).then((function(e){return e===o?"pending":"fulfilled"}),(function(){return"rejected"}))},e.prototype.requestIdleCallback=function(e,t){var o=this.requestIdleCallbackNative(e,t);return this.requestsIdle.add(o),o},e.prototype.requestIdlePromise=function(e){var t=this;return this.promise((function(o){var n=t.requestIdleCallback((function(){return o(n)}),e)}))},e.prototype.cancelIdleCallback=function(e){return this.requestsIdle.delete(e),this.cancelIdleCallbackNative(e)},e.prototype.requestAnimationFrame=function(e){var t=requestAnimationFrame(e);return this.requestsRaf.add(t),t},e.prototype.cancelAnimationFrame=function(e){this.requestsRaf.delete(e),cancelAnimationFrame(e)},e.prototype.clear=function(){var e=this;this.requestsIdle.forEach((function(t){return e.cancelIdleCallback(t)})),this.requestsRaf.forEach((function(t){return e.cancelAnimationFrame(t)})),this.timers.forEach((function(t){return(0,r.clearTimeout)(e.timers.get(t))})),this.timers.clear(),this.promisesRejections.forEach((function(e){return e()})),this.promisesRejections.clear()},e.prototype.destruct=function(){this.clear(),this.isDestructed=!0},e}());t.Async=u},22630:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(20255).__exportStar(o(77536),t)},45113:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Component=void 0;var n=o(40332),r=o(17332),i=o(29411),a=o(22630),s=new Map,l=function(){function e(){this.async=new a.Async,this.ownerWindow=window,this.__componentStatus=i.STATUSES.beforeInit,this.uid="jodit-uid-"+(0,r.uniqueUid)()}return Object.defineProperty(e.prototype,"componentName",{get:function(){return this.__componentName||(this.__componentName="jodit-"+(0,n.kebabCase)(((0,n.isFunction)(this.className)?this.className():"")||(0,n.getClassName)(this))),this.__componentName},enumerable:!1,configurable:!0}),e.prototype.getFullElName=function(e,t,o){var r=[this.componentName];return e&&(e=e.replace(/[^a-z0-9-]/gi,"-"),r.push("__".concat(e))),t&&(r.push("_",t),r.push("_",(0,n.isVoid)(o)?"true":o.toString())),r.join("")},Object.defineProperty(e.prototype,"ownerDocument",{get:function(){return this.ow.document},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"od",{get:function(){return this.ownerDocument},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"ow",{get:function(){return this.ownerWindow},enumerable:!1,configurable:!0}),e.prototype.get=function(e,t){return(0,n.get)(e,t||this)},Object.defineProperty(e.prototype,"isReady",{get:function(){return this.componentStatus===i.STATUSES.ready},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isDestructed",{get:function(){return this.componentStatus===i.STATUSES.destructed},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isInDestruct",{get:function(){return i.STATUSES.beforeDestruct===this.componentStatus||i.STATUSES.destructed===this.componentStatus},enumerable:!1,configurable:!0}),e.prototype.bindDestruct=function(e){var t=this;return e.hookStatus(i.STATUSES.beforeDestruct,(function(){return!t.isInDestruct&&t.destruct()})),this},e.prototype.destruct=function(){this.setStatus(i.STATUSES.destructed),this.async.destruct(),s.get(this)&&s.delete(this)},Object.defineProperty(e.prototype,"componentStatus",{get:function(){return this.__componentStatus},set:function(e){this.setStatus(e)},enumerable:!1,configurable:!0}),e.prototype.setStatus=function(e){return this.setStatusComponent(e,this)},e.prototype.setStatusComponent=function(e,t){if(e!==this.__componentStatus){t===this&&(this.__componentStatus=e);var o=Object.getPrototypeOf(this);o&&(0,n.isFunction)(o.setStatusComponent)&&o.setStatusComponent(e,t);var r=s.get(this),i=null==r?void 0:r[e];i&&i.length&&i.forEach((function(e){return e(t)}))}},e.prototype.hookStatus=function(e,t){var o=s.get(this);o||s.set(this,o={}),o[e]||(o[e]=[]),o[e].push(t)},e.isInstanceOf=function(e,t){return e instanceof t},e.STATUSES=i.STATUSES,e}();t.Component=l},56562:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(29411),t),n.__exportStar(o(45113),t),n.__exportStar(o(39840),t)},29411:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.STATUSES=void 0,t.STATUSES={beforeInit:"beforeInit",ready:"ready",beforeDestruct:"beforeDestruct",destructed:"destructed"}},39840:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ViewComponent=void 0;var n=o(20255),r=function(e){function t(t){var o=e.call(this)||this;return o.setParentView(t),o}return n.__extends(t,e),Object.defineProperty(t.prototype,"j",{get:function(){return this.jodit},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"defaultTimeout",{get:function(){return this.j.defaultTimeout},enumerable:!1,configurable:!0}),t.prototype.i18n=function(e){for(var t,o=[],r=1;arguments.length>r;r++)o[r-1]=arguments[r];return(t=this.j).i18n.apply(t,n.__spreadArray([e],n.__read(o),!1))},t.prototype.setParentView=function(e){return this.jodit=e,e.components.add(this),this},t.prototype.destruct=function(){return this.j.components.delete(this),e.prototype.destruct.call(this)},t}(o(45113).Component);t.ViewComponent=r},86893:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CLIPBOARD_ID=t.lang=t.TEMP_ATTR=t.BASE_PATH=t.KEY_ALIASES=t.IS_MAC=t.SAFE_COUNT_CHANGE_CALL=t.INSERT_ONLY_TEXT=t.INSERT_AS_TEXT=t.INSERT_CLEAR_HTML=t.INSERT_AS_HTML=t.EMULATE_DBLCLICK_TIMEOUT=t.MARKER_CLASS=t.TEXT_RTF=t.TEXT_HTML=t.TEXT_PLAIN=t.IS_IE=t.MODE_SPLIT=t.MODE_SOURCE=t.MODE_WYSIWYG=t.PARAGRAPH=t.BR=t.COMMAND_KEYS=t.ACCURACY=t.NEARBY=t.KEY_F3=t.KEY_DELETE=t.KEY_SPACE=t.KEY_DOWN=t.KEY_RIGHT=t.KEY_UP=t.KEY_LEFT=t.KEY_ALT=t.KEY_ESC=t.KEY_ENTER=t.KEY_TAB=t.KEY_BACKSPACE=t.KEY_META=t.NO_EMPTY_TAGS=t.INSEPARABLE_TAGS=t.IS_INLINE=t.IS_BLOCK=t.SPACE_REG_EXP_END=t.SPACE_REG_EXP_START=t.SPACE_REG_EXP=t.INVISIBLE_SPACE_REG_EXP_START=t.INVISIBLE_SPACE_REG_EXP_END=t.INVISIBLE_SPACE_REG_EXP=t.NBSP_SPACE=t.INVISIBLE_SPACE=void 0,t.SOURCE_CONSUMER=void 0;var n=o(20255);t.INVISIBLE_SPACE="\ufeff",t.NBSP_SPACE=" ",t.INVISIBLE_SPACE_REG_EXP=function(){return/[\uFEFF]/g},t.INVISIBLE_SPACE_REG_EXP_END=function(){return/[\uFEFF]+$/g},t.INVISIBLE_SPACE_REG_EXP_START=function(){return/^[\uFEFF]+/g},t.SPACE_REG_EXP=function(){return/[\s\n\t\r\uFEFF\u200b]+/g},t.SPACE_REG_EXP_START=function(){return/^[\s\n\t\r\uFEFF\u200b]+/g},t.SPACE_REG_EXP_END=function(){return/[\s\n\t\r\uFEFF\u200b]+$/g},t.IS_BLOCK=/^(ADDRESS|ARTICLE|ASIDE|BLOCKQUOTE|CANVAS|DD|DFN|DIV|DL|DT|FIELDSET|FIGCAPTION|FIGURE|FOOTER|FORM|H[1-6]|HEADER|HGROUP|HR|LI|MAIN|NAV|NOSCRIPT|OUTPUT|P|PRE|RUBY|SCRIPT|STYLE|OBJECT|OL|SECTION|IFRAME|JODIT|JODIT-MEDIA|UL|TR|TD|TH|TBODY|THEAD|TFOOT|TABLE|BODY|HTML|VIDEO)$/i,t.IS_INLINE=/^(STRONG|SPAN|I|EM|B|SUP|SUB|A|U)$/i;var r=["img","video","svg","iframe","script","input","textarea","link","jodit","jodit-media"];t.INSEPARABLE_TAGS=new Set(n.__spreadArray(n.__spreadArray([],n.__read(r),!1),["br","hr"],!1)),t.NO_EMPTY_TAGS=new Set(r),t.KEY_META="Meta",t.KEY_BACKSPACE="Backspace",t.KEY_TAB="Tab",t.KEY_ENTER="Enter",t.KEY_ESC="Escape",t.KEY_ALT="Alt",t.KEY_LEFT="ArrowLeft",t.KEY_UP="ArrowUp",t.KEY_RIGHT="ArrowRight",t.KEY_DOWN="ArrowDown",t.KEY_SPACE="Space",t.KEY_DELETE="Delete",t.KEY_F3="F3",t.NEARBY=5,t.ACCURACY=10,t.COMMAND_KEYS=[t.KEY_META,t.KEY_BACKSPACE,t.KEY_DELETE,t.KEY_UP,t.KEY_DOWN,t.KEY_RIGHT,t.KEY_LEFT,t.KEY_ENTER,t.KEY_ESC,t.KEY_F3,t.KEY_TAB],t.BR="br",t.PARAGRAPH="p",t.MODE_WYSIWYG=1,t.MODE_SOURCE=2,t.MODE_SPLIT=3,t.IS_IE="undefined"!=typeof navigator&&(-1!==navigator.userAgent.indexOf("MSIE")||/rv:11.0/i.test(navigator.userAgent)),t.TEXT_PLAIN=t.IS_IE?"text":"text/plain",t.TEXT_HTML=t.IS_IE?"html":"text/html",t.TEXT_RTF=t.IS_IE?"rtf":"text/rtf",t.MARKER_CLASS="jodit-selection_marker",t.EMULATE_DBLCLICK_TIMEOUT=300,t.INSERT_AS_HTML="insert_as_html",t.INSERT_CLEAR_HTML="insert_clear_html",t.INSERT_AS_TEXT="insert_as_text",t.INSERT_ONLY_TEXT="insert_only_text",t.SAFE_COUNT_CHANGE_CALL=10,t.IS_MAC="undefined"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),t.KEY_ALIASES={add:"+",break:"pause",cmd:"meta",command:"meta",ctl:"control",ctrl:"control",del:"delete",down:"arrowdown",esc:"escape",ins:"insert",left:"arrowleft",mod:t.IS_MAC?"meta":"control",opt:"alt",option:"alt",return:"enter",right:"arrowright",space:" ",spacebar:" ",up:"arrowup",win:"meta",windows:"meta"},t.BASE_PATH=function(){if("undefined"==typeof document)return"";var e=document.currentScript,t=function(e){var t=e.split("/");return/\.js/.test(t[t.length-1])?t.slice(0,t.length-1).join("/")+"/":e};if(e)return t(e.src);var o=document.querySelectorAll("script[src]");return o&&o.length?t(o[o.length-1].src):window.location.href}(),t.TEMP_ATTR="data-jodit-temp",t.lang={},t.CLIPBOARD_ID="clipboard",t.SOURCE_CONSUMER="source-consumer"},31897:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Create=void 0;var n=o(40332),r=(o(52378),o(64968)),i=o(86893),a=function(){function e(e,t){this.document=e,this.createAttributes=t}return Object.defineProperty(e.prototype,"doc",{get:function(){return(0,n.isFunction)(this.document)?this.document():this.document},enumerable:!1,configurable:!0}),e.prototype.element=function(e,t,o){var r=this,i=this.doc.createElement(e.toLowerCase());return this.applyCreateAttributes(i),t&&((0,n.isPlainObject)(t)?(0,n.attr)(i,t):o=t),o&&(0,n.asArray)(o).forEach((function(e){return i.appendChild((0,n.isString)(e)?r.fromHTML(e):e)})),i},e.prototype.div=function(e,t,o){var n=this.element("div",t,o);return e&&(n.className=e),n},e.prototype.sandbox=function(){var e,t=this.element("iframe",{sandbox:"allow-same-origin"});this.doc.body.appendChild(t);var o=null===(e=t.contentWindow)||void 0===e?void 0:e.document;if(!o)throw Error("Iframe error");return o.open(),o.write("<!DOCTYPE html><html><head></head><body></body></html>"),o.close(),o.body},e.prototype.span=function(e,t,o){var n=this.element("span",t,o);return e&&(n.className=e),n},e.prototype.a=function(e,t,o){var n=this.element("a",t,o);return e&&(n.className=e),n},e.prototype.text=function(e){return this.doc.createTextNode(e)},e.prototype.fake=function(){return this.text(i.INVISIBLE_SPACE)},e.prototype.fragment=function(){return this.doc.createDocumentFragment()},e.prototype.fromHTML=function(e,t){var o=this.div();o.innerHTML=e.toString();var i=o.firstChild===o.lastChild&&o.firstChild?o.firstChild:o;if(r.Dom.safeRemove(i),t){var a=(0,n.refs)(i);Object.keys(t).forEach((function(e){var o=a[e];o&&!1===t[e]&&r.Dom.hide(o)}))}return i},e.prototype.applyCreateAttributes=function(e){if(this.createAttributes){var t=this.createAttributes;if(t&&t[e.tagName.toLowerCase()]){var o=t[e.tagName.toLowerCase()];(0,n.isFunction)(o)?o(e):(0,n.isPlainObject)(o)&&(0,n.attr)(e,o)}}},e}();t.Create=a},42841:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(20255).__exportStar(o(31897),t)},32358:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cache=void 0;var n=o(40332);t.cache=function(e,t,o){var r=o.get;if(!r)throw(0,n.error)("Getter property descriptor expected");o.get=function(){var e=r.call(this);return e&&!0===e.noCache||Object.defineProperty(this,t,{configurable:o.configurable,enumerable:o.enumerable,writable:!1,value:e}),e}}},11441:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.component=void 0;var n=o(20255);t.component=function(e){var t=function(e){function t(){for(var o=[],r=0;arguments.length>r;r++)o[r]=arguments[r];var i=e.apply(this,n.__spreadArray([],n.__read(o),!1))||this,a=i.constructor===t;return a&&(i instanceof t||Object.setPrototypeOf(i,t.prototype),i.setStatus("ready")),i}return n.__extends(t,e),t}(e);return t}},55773:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.throttle=t.debounce=void 0;var n=o(10172),r=o(56562),i=o(56964);function a(e,t,o){return void 0===t&&(t=!1),void 0===o&&(o="debounce"),function(a,s){var l=a[s];if(!(0,n.isFunction)(l))throw(0,i.error)("Handler must be a Function");return a.hookStatus(r.STATUSES.ready,(function(r){var i=r.async,a=(0,n.isFunction)(e)?e(r):e;Object.defineProperty(r,s,{configurable:!0,value:i[o](r[s].bind(r),(0,n.isNumber)(a)||(0,n.isPlainObject)(a)?a:r.defaultTimeout,t)})})),{configurable:!0,get:function(){return l.bind(this)}}}}o(52378),t.debounce=a,t.throttle=function(e,t){return void 0===t&&(t=!1),a(e,t,"throttle")}},70669:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.derive=void 0;var n=o(20255),r=o(10172);t.derive=function(){for(var e=[],t=0;arguments.length>t;t++)e[t]=arguments[t];return function(t){for(var o=t.prototype,i=0;e.length>i;i++)for(var a=e[i],s=Object.getOwnPropertyNames(a.prototype),l=function(e){var t=s[e],i=Object.getOwnPropertyDescriptor(a.prototype,t);null!=i&&(0,r.isFunction)(i.value)&&!(0,r.isFunction)(o[t])&&Object.defineProperty(o,t,{enumerable:!0,configurable:!0,writable:!0,value:function(){for(var e,t=[],o=0;arguments.length>o;o++)t[o]=arguments[o];return(e=i.value).call.apply(e,n.__spreadArray([this],n.__read(t),!1))}})},c=0;s.length>c;c++)l(c)}}},64522:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hook=void 0;var n=o(10172),r=o(56964);t.hook=function(e){return function(t,o){if(!(0,n.isFunction)(t[o]))throw(0,r.error)("Handler must be a Function");t.hookStatus(e,(function(e){e[o].call(e)}))}}},58682:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.idle=void 0;var n=o(20255),r=o(56562),i=o(40332);t.idle=function(){return function(e,t){if(!(0,i.isFunction)(e[t]))throw(0,i.error)("Handler must be a Function");e.hookStatus(r.STATUSES.ready,(function(e){var o=e.async,r=e[t];e[t]=function(){for(var t=[],i=0;arguments.length>i;i++)t[i]=arguments[i];return o.requestIdleCallback(r.bind.apply(r,n.__spreadArray([e],n.__read(t),!1)))}}))}}},43441:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.autobind=void 0;var n=o(20255);n.__exportStar(o(32358),t),n.__exportStar(o(11441),t),n.__exportStar(o(55773),t),n.__exportStar(o(58682),t),n.__exportStar(o(64522),t),n.__exportStar(o(91627),t),n.__exportStar(o(31418),t),n.__exportStar(o(67587),t),n.__exportStar(o(46163),t),n.__exportStar(o(70669),t);var r=o(70631);Object.defineProperty(t,"autobind",{enumerable:!0,get:function(){return r.default}})},91627:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nonenumerable=void 0,t.nonenumerable=function(e,t){!1!==(Object.getOwnPropertyDescriptor(e,t)||{}).enumerable&&Object.defineProperty(e,t,{enumerable:!1,set:function(e){Object.defineProperty(this,t,{enumerable:!1,writable:!0,value:e})}})}},31418:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.persistent=void 0;var n=o(56562),r=o(96574);t.persistent=function(e,t){e.hookStatus(n.STATUSES.ready,(function(e){var o=(0,r.isViewObject)(e)?e:e.jodit,n="".concat(o.options.namespace).concat(e.componentName,"_prop_").concat(t),i=e[t];Object.defineProperty(e,t,{get:function(){var e;return null!==(e=o.storage.get(n))&&void 0!==e?e:i},set:function(e){o.storage.set(n,e)}})}))}},67587:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wait=void 0;var n=o(20255),r=o(40332),i=o(56562);t.wait=function(e){return function(t,o){if(!(0,r.isFunction)(t[o]))throw(0,r.error)("Handler must be a Function");t.hookStatus(i.STATUSES.ready,(function(t){var r=t.async,i=t[o],a=0;Object.defineProperty(t,o,{configurable:!0,value:function o(){for(var s=[],l=0;arguments.length>l;l++)s[l]=arguments[l];r.clearTimeout(a),e(t)?i.apply(t,s):a=r.setTimeout((function(){return o.apply(void 0,n.__spreadArray([],n.__read(s),!1))}),10)}})}))}}},46163:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.watch=t.getPropertyDescriptor=void 0;var n=o(20255),r=o(42096),i=o(79736),a=o(96574),s=o(88418),l=o(29411),c=o(14556),u=o(56964);function d(e,t){var o;do{o=Object.getOwnPropertyDescriptor(e,t),e=Object.getPrototypeOf(e)}while(!o&&e);return o}function p(e,t){return function(o,p){if(!(0,r.isFunction)(o[p]))throw(0,u.error)("Handler must be a Function");var f=function(l){var u=function(e){for(var t,o=[],r=1;arguments.length>r;r++)o[r-1]=arguments[r];if(!l.isInDestruct)return(t=l)[p].apply(t,n.__spreadArray([e],n.__read(o),!1))};(0,c.splitArray)(e).forEach((function(e){if(/:/.test(e)){var c=n.__read(e.split(":"),2),p=c[0],f=c[1],h=t,m=(0,a.isViewObject)(l)?l:l.jodit;return p.length&&(h=l.get(p)),(0,r.isFunction)(h)&&(h=h(l)),m.events.on(h||l,f,u),h||m.events.on(f,u),void l.hookStatus("beforeDestruct",(function(){m.events.off(h||l,f,u).off(f,u)}))}var v=e.split("."),g=n.__read(v,1)[0],y=v.slice(1),_=l[g];(0,i.isPlainObject)(_)&&(0,s.observable)(_).on("change.".concat(y.join(".")),u);var b=d(o,g);Object.defineProperty(l,g,{configurable:!0,set:function(e){var t=_;t!==e&&(_=e,b&&b.set&&b.set.call(l,e),(0,i.isPlainObject)(_)&&(_=(0,s.observable)(_)).on("change.".concat(y.join(".")),u),u(g,t,_))},get:function(){return b&&b.get?b.get.call(l):_}})}))};(0,r.isFunction)(o.hookStatus)?o.hookStatus(l.STATUSES.ready,f):f(o)}}t.getPropertyDescriptor=d,t.watch=p,t.default=p},24263:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Dom=void 0;var n=o(20255),r=o(86893),i=o(10172),a=o(12557),s=o(19035),l=o(76502),c=o(37204),u=o(86893),d=function(){function e(){}return e.detach=function(e){for(;e.firstChild;)e.removeChild(e.firstChild)},e.wrapInline=function(t,o,n){var r,a=t,s=t;n.s.save();var l=!1;do{l=!1,(r=a.previousSibling)&&!e.isBlock(r)&&(l=!0,a=r)}while(l);do{l=!1,(r=s.nextSibling)&&!e.isBlock(r)&&(l=!0,s=r)}while(l);var c=(0,i.isString)(o)?n.createInside.element(o):o;a.parentNode&&a.parentNode.insertBefore(c,a);for(var u=a;u&&(u=a.nextSibling,c.appendChild(a),a!==s&&u);)a=u;return n.s.restore(),c},e.wrap=function(t,o,n){var r=(0,i.isString)(o)?n.element(o):o;if(e.isNode(t)){if(!t.parentNode)throw(0,l.error)("Element should be in DOM");t.parentNode.insertBefore(r,t),r.appendChild(t)}else{var a=t.extractContents();t.insertNode(r),r.appendChild(a)}return r},e.unwrap=function(t){var o=t.parentNode;if(o){for(;t.firstChild;)o.insertBefore(t.firstChild,t);e.safeRemove(t)}},e.between=function(e,t,o){for(var n=e;n&&n!==t&&(e===n||!o(n));){var r=n.firstChild||n.nextSibling;if(!r){for(;n&&!n.nextSibling;)n=n.parentNode;r=null==n?void 0:n.nextSibling}n=r}},e.replace=function(t,o,n,r,s){void 0===r&&(r=!1),void 0===s&&(s=!1),(0,i.isHTML)(o)&&(o=n.fromHTML(o));var l=(0,i.isString)(o)?n.element(o):o;if(!s)for(;t.firstChild;)l.appendChild(t.firstChild);return r&&e.isElement(t)&&e.isElement(l)&&(0,a.toArray)(t.attributes).forEach((function(e){l.setAttribute(e.name,e.value)})),t.parentNode&&t.parentNode.replaceChild(l,t),l},e.isEmptyTextNode=function(t){return e.isText(t)&&(!t.nodeValue||0===t.nodeValue.replace(r.INVISIBLE_SPACE_REG_EXP(),"").trim().length)},e.isEmptyContent=function(t){return e.each(t,(function(t){return e.isEmptyTextNode(t)}))},e.isContentEditable=function(t,o){return e.isNode(t)&&!e.closest(t,(function(t){return e.isElement(t)&&"false"===t.getAttribute("contenteditable")}),o)},e.isEmpty=function(t,o){if(void 0===o&&(o=u.NO_EMPTY_TAGS),!t)return!0;var n;n=(0,i.isFunction)(o)?o:function(e){return o.has(e.nodeName.toLowerCase())};var r=function(e){return null==e.nodeValue||0===(0,s.trim)(e.nodeValue).length};return e.isText(t)?r(t):!(e.isElement(t)&&n(t))&&e.each(t,(function(t){if(e.isText(t)&&!r(t)||e.isElement(t)&&n(t))return!1}))},e.isNode=function(e){return Boolean(e&&(0,i.isString)(e.nodeName)&&"number"==typeof e.nodeType&&e.childNodes&&(0,i.isFunction)(e.appendChild))},e.isCell=function(t){return e.isNode(t)&&/^(td|th)$/i.test(t.nodeName)},e.isImage=function(t){return e.isNode(t)&&/^(img|svg|picture|canvas)$/i.test(t.nodeName)},e.isBlock=function(t){return!(0,i.isVoid)(t)&&"object"==typeof t&&e.isNode(t)&&r.IS_BLOCK.test(t.nodeName)},e.isText=function(e){return Boolean(e&&e.nodeType===Node.TEXT_NODE)},e.isElement=function(t){var o;if(!e.isNode(t))return!1;var n=null===(o=t.ownerDocument)||void 0===o?void 0:o.defaultView;return Boolean(n&&t.nodeType===Node.ELEMENT_NODE)},e.isFragment=function(t){var o;if(!e.isNode(t))return!1;var n=null===(o=t.ownerDocument)||void 0===o?void 0:o.defaultView;return Boolean(n&&t.nodeType===Node.DOCUMENT_FRAGMENT_NODE)},e.isHTMLElement=function(t){var o;if(!e.isNode(t))return!1;var n=null===(o=t.ownerDocument)||void 0===o?void 0:o.defaultView;return Boolean(n&&t instanceof n.HTMLElement)},e.isInlineBlock=function(t){return e.isElement(t)&&!/^(BR|HR)$/i.test(t.tagName)&&-1!==["inline","inline-block"].indexOf((0,l.css)(t,"display").toString())},e.canSplitBlock=function(t){return!(0,i.isVoid)(t)&&e.isHTMLElement(t)&&e.isBlock(t)&&!/^(TD|TH|CAPTION|FORM)$/.test(t.nodeName)&&void 0!==t.style&&!/^(fixed|absolute)/i.test(t.style.position)},e.last=function(e,t){var o=null==e?void 0:e.lastChild;if(!o)return null;do{if(t(o))return o;var n=o.lastChild;if(n||(n=o.previousSibling),!n&&o.parentNode!==e){do{o=o.parentNode}while(o&&!(null==o?void 0:o.previousSibling)&&o.parentNode!==e);n=null==o?void 0:o.previousSibling}o=n}while(o);return null},e.prev=function(t,o,n,r){return void 0===r&&(r=!0),e.find(t,o,n,!1,r)},e.next=function(t,o,n,r){return void 0===r&&(r=!0),e.find(t,o,n,!0,r)},e.prevWithClass=function(t,o){return e.prev(t,(function(t){return e.isElement(t)&&t.classList.contains(o)}),t.parentNode)},e.nextWithClass=function(t,o){return e.next(t,(function(t){return e.isElement(t)&&t.classList.contains(o)}),t.parentNode)},e.find=function(e,t,o,n,r){void 0===n&&(n=!0),void 0===r&&(r=!0);for(var i=this.nextGen(e,o,n,r),a=i.next();!a.done;){if(t(a.value))return a.value;a=i.next()}return null},e.nextGen=function(e,t,o,r){var i,a,s;return void 0===o&&(o=!0),void 0===r&&(r=!0),n.__generator(this,(function(l){switch(l.label){case 0:i=[],a=e,l.label=1;case 1:for(s=o?a.nextSibling:a.previousSibling;s;)i.unshift(s),s=o?s.nextSibling:s.previousSibling;return[5,n.__values(this.runInStack(e,i,o,r))];case 2:l.sent(),a=a.parentNode,l.label=3;case 3:if(a&&a!==t)return[3,1];l.label=4;case 4:return[2,null]}}))},e.each=function(e,t,o){void 0===o&&(o=!0);for(var n=this.eachGen(e,o),r=n.next();!r.done;){if(!1===t(r.value))return!1;r=n.next()}return!0},e.eachGen=function(e,t){return void 0===t&&(t=!0),this.runInStack(e,[e],t)},e.runInStack=function(e,t,o,r){var i,a;return void 0===r&&(r=!0),n.__generator(this,(function(n){switch(n.label){case 0:if(!t.length)return[3,3];if(i=t.pop(),r)for(a=o?i.lastChild:i.firstChild;a;)t.push(a),a=o?a.previousSibling:a.nextSibling;return e===i?[3,2]:[4,i];case 1:n.sent(),n.label=2;case 2:return[3,0];case 3:return[2]}}))},e.findWithCurrent=function(t,o,n,r,i){void 0===r&&(r="nextSibling"),void 0===i&&(i="firstChild");var a=t;do{if(o(a))return a||null;if(i&&a&&a[i]){var s=e.findWithCurrent(a[i],o,a,r,i);if(s)return s}for(;a&&!a[r]&&a!==n;)a=a.parentNode;a&&a[r]&&a!==n&&(a=a[r])}while(a&&a!==n);return null},e.findSibling=function(t,o,n){void 0===o&&(o=!0),void 0===n&&(n=function(t){return!e.isEmptyTextNode(t)});for(var r=e.sibling(t,o);r&&!n(r);)r=e.sibling(r,o);return r&&n(r)?r:null},e.findNotEmptySibling=function(t,o){return e.findSibling(t,o,(function(t){var o;return!e.isEmptyTextNode(t)&&Boolean(!e.isText(t)||(null===(o=t.nodeValue)||void 0===o?void 0:o.length)&&(0,s.trim)(t.nodeValue))}))},e.findNotEmptyNeighbor=function(t,o,n){return(0,l.call)(o?e.prev:e.next,t,(function(t){return Boolean(t&&(!e.isText(t)||(0,s.trim)((null==t?void 0:t.nodeValue)||"").length))}),n)},e.sibling=function(e,t){return t?e.previousSibling:e.nextSibling},e.up=function(e,t,o,n){void 0===n&&(n=!1);var r=e;if(!r)return null;do{if(t(r))return r;if(r===o||!r.parentNode)break;r=r.parentNode}while(r&&r!==o);return r===o&&n&&t(r)?r:null},e.closest=function(t,o,n){var r,a=function(e){return e.toLowerCase()};if((0,i.isFunction)(o))r=o;else if((0,i.isArray)(o)){var s=new Set(o.map(a));r=function(e){return Boolean(e&&s.has(a(e.nodeName)))}}else r=function(e){return Boolean(e&&a(o)===a(e.nodeName))};return e.up(t,r,n)},e.furthest=function(e,t,o){for(var n=null,r=null==e?void 0:e.parentElement;r&&r!==o;)t(r)&&(n=r),r=null==r?void 0:r.parentElement;return n},e.appendChildFirst=function(e,t){var o=e.firstChild;o?o!==t&&e.insertBefore(t,o):e.appendChild(t)},e.after=function(e,t){var o=e.parentNode;o&&(o.lastChild===e?o.appendChild(t):o.insertBefore(t,e.nextSibling))},e.before=function(e,t){var o=e.parentNode;o&&o.insertBefore(t,e)},e.prepend=function(e,t){e.insertBefore(t,e.firstChild)},e.append=function(e,t){var o=this;(0,i.isArray)(t)?t.forEach((function(t){o.append(e,t)})):e.appendChild(t)},e.moveContent=function(t,o,n,r){void 0===n&&(n=!1),void 0===r&&(r=function(){return!0});var i=(t.ownerDocument||document).createDocumentFragment();(0,a.toArray)(t.childNodes).filter((function(t){return!!r(t)||(e.safeRemove(t),!1)})).forEach((function(e){i.appendChild(e)})),n&&o.firstChild?o.insertBefore(i,o.firstChild):o.appendChild(i)},e.isOrContains=function(e,t,o){return void 0===o&&(o=!1),e===t?!o:Boolean(t&&e&&this.up(t,(function(t){return t===e}),e,!0))},e.safeRemove=function(){for(var t=[],o=0;arguments.length>o;o++)t[o]=arguments[o];t.forEach((function(t){return e.isNode(t)&&t.parentNode&&t.parentNode.removeChild(t)}))},e.safeInsertNode=function(t,o){t.collapsed||t.deleteContents(),t.insertNode(o),[o.nextSibling,o.previousSibling].forEach((function(t){return e.isText(t)&&!t.nodeValue&&e.safeRemove(t)}))},e.hide=function(e){e&&((0,l.dataBind)(e,"__old_display",e.style.display),e.style.display="none")},e.show=function(e){if(e){var t=(0,l.dataBind)(e,"__old_display");"none"===e.style.display&&(e.style.display=t||"")}},e.isTag=function(e,t){if(!this.isElement(e))return!1;var o=e.tagName.toLowerCase(),n=e.tagName.toUpperCase();if(t instanceof Set)return t.has(o)||t.has(n);for(var r=(0,a.asArray)(t).map((function(e){return String(e).toLowerCase()})),i=0;r.length>i;i+=1)if(o===r[i]||n===r[i])return!0;return!1},e.markTemporary=function(e,t){return t&&(0,l.attr)(e,t),(0,l.attr)(e,u.TEMP_ATTR,!0),e},e.isTemporary=function(t){return!!e.isElement(t)&&((0,c.isMarker)(t)||"true"===(0,l.attr)(t,u.TEMP_ATTR))},e.replaceTemporaryFromString=function(e){return e.replace(/<([a-z]+)[^>]+data-jodit-temp[^>]+>(.+?)<\/\1>/gi,"$2")},e.temporaryList=function(e){return(0,l.$$)("[".concat(u.TEMP_ATTR,"]"),e)},e}();t.Dom=d},64968:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(24263),t),n.__exportStar(o(33841),t)},33841:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LazyWalker=void 0;var n=o(20255),r=o(73852),i=o(43441),a=o(24263),s=function(e){function t(t,o){void 0===o&&(o={});var n=e.call(this)||this;return n.async=t,n.options=o,n.workNodes=null,n.hadAffect=!1,n.isWorked=!1,n.isFinished=!1,n.idleId=0,n}return n.__extends(t,e),t.prototype.setWork=function(e){return this.isWorked&&this.break(),this.workNodes=a.Dom.eachGen(e,!this.options.reverse),this.isFinished=!1,this.startIdleRequest(),this},t.prototype.startIdleRequest=function(){var e;this.idleId=this.async.requestIdleCallback(this.workPerform,{timeout:null!==(e=this.options.timeout)&&void 0!==e?e:10})},t.prototype.break=function(e){this.isWorked&&(this.stop(),this.emit("break",e))},t.prototype.end=function(){this.isWorked&&(this.stop(),this.emit("end",this.hadAffect),this.hadAffect=!1)},t.prototype.stop=function(){this.isWorked=!1,this.isFinished=!0,this.workNodes=null,this.async.cancelIdleCallback(this.idleId)},t.prototype.destruct=function(){e.prototype.destruct.call(this),this.stop()},t.prototype.workPerform=function(e){var t;if(this.workNodes){this.isWorked=!0;for(var o=0,n=null!==(t=this.options.timeoutChunkSize)&&void 0!==t?t:50;!this.isFinished&&(e.timeRemaining()>0||e.didTimeout&&n>=o);){var r=this.workNodes.next();if(o+=1,this.visitNode(r.value)&&(this.hadAffect=!0),r.done)return void this.end()}}else this.end();this.isFinished||this.startIdleRequest()},t.prototype.visitNode=function(e){var t;return!(!e||void 0!==this.options.whatToShow&&e.nodeType!==this.options.whatToShow)&&null!==(t=this.emit("visit",e))&&void 0!==t&&t},n.__decorate([i.autobind],t.prototype,"workPerform",null),t}(r.Eventify);t.LazyWalker=s},3808:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0;var n=o(20255),r=o(83611),i=o(24421),a=o(42096),s=o(49781),l=o(56964),c=o(14556),u=function(){function e(e){var t=this;this.__mutedEvents=new Set,this.__key="__JoditEventEmitterNamespaces",this.__doc=document,this.__prepareEvent=function(e){e.cancelBubble||(e.composed&&(0,a.isFunction)(e.composedPath)&&e.composedPath()[0]&&Object.defineProperty(e,"target",{value:e.composedPath()[0],configurable:!0,enumerable:!0}),e.type.match(/^touch/)&&e.changedTouches&&e.changedTouches.length&&["clientX","clientY","pageX","pageY"].forEach((function(t){Object.defineProperty(e,t,{value:e.changedTouches[0][t],configurable:!0,enumerable:!0})})),e.originalEvent||(e.originalEvent=e),"paste"===e.type&&void 0===e.clipboardData&&t.__doc.defaultView.clipboardData&&Object.defineProperty(e,"clipboardData",{get:function(){return t.__doc.defaultView.clipboardData},configurable:!0,enumerable:!0}))},this.currents=[],this.__stopped=[],this.__isDestructed=!1,e&&(this.__doc=e),this.__key+=(new Date).getTime()}return e.prototype.mute=function(e){return this.__mutedEvents.add(null!=e?e:"*"),this},e.prototype.isMuted=function(e){return!(!e||!this.__mutedEvents.has(e))||this.__mutedEvents.has("*")},e.prototype.unmute=function(e){return this.__mutedEvents.delete(null!=e?e:"*"),this},e.prototype.__eachEvent=function(e,t){var o=this;(0,c.splitArray)(e).map((function(e){return e.trim()})).forEach((function(e){var n=e.split(".");t.call(o,n[0],n[1]||r.defaultNameSpace)}))},e.prototype.__getStore=function(e){if(!e)throw(0,l.error)("Need subject");if(void 0===e[this.__key]){var t=new r.EventHandlersStore;Object.defineProperty(e,this.__key,{enumerable:!1,configurable:!0,writable:!0,value:t})}return e[this.__key]},e.prototype.__removeStoreFromSubject=function(e){void 0!==e[this.__key]&&Object.defineProperty(e,this.__key,{enumerable:!1,configurable:!0,writable:!0,value:void 0})},e.prototype.__triggerNativeEvent=function(e,t){var o=this.__doc.createEvent("HTMLEvents");(0,i.isString)(t)?o.initEvent(t,!0,!0):(o.initEvent(t.type,t.bubbles,t.cancelable),["screenX","screenY","clientX","clientY","target","srcElement","currentTarget","timeStamp","which","keyCode"].forEach((function(e){Object.defineProperty(o,e,{value:t[e],enumerable:!0})})),Object.defineProperty(o,"originalEvent",{value:t,enumerable:!0})),e.dispatchEvent(o)},Object.defineProperty(e.prototype,"current",{get:function(){return this.currents[this.currents.length-1]},enumerable:!1,configurable:!0}),e.prototype.on=function(e,t,o,r){var c,u,d,p,f=this;if((0,i.isString)(e)||(0,i.isStringArray)(e)?(c=this,u=e,d=t,p=o):(c=e,u=t,d=o,p=r),!(0,i.isString)(u)&&!(0,i.isStringArray)(u)||0===u.length)throw(0,l.error)("Need events names");if(!(0,a.isFunction)(d))throw(0,l.error)("Need event handler");if((0,s.isArray)(c))return c.forEach((function(e){f.on(e,u,d,p)})),this;var h=c,m=this.__getStore(h),v=(0,a.isFunction)(h.addEventListener),g=this,y=function(e){for(var t=[],o=1;arguments.length>o;o++)t[o-1]=arguments[o];if(!g.isMuted(e))return d&&d.call.apply(d,n.__spreadArray([this],n.__read(t),!1))};return v&&(y=function(e){if(!g.isMuted(e.type))return g.__prepareEvent(e),d&&!1===d.call(this,e)?(e.preventDefault(),e.stopImmediatePropagation(),!1):void 0}),this.__eachEvent(u,(function(e,t){if(0===e.length)throw(0,l.error)("Need event name");if(!1===m.indexOf(e,t,d)&&(m.set(e,t,{event:e,originalCallback:d,syntheticCallback:y},null==p?void 0:p.top),v)){var o=!!["touchstart","touchend","scroll","mousewheel","mousemove","touchmove"].includes(e)&&{passive:!0};h.addEventListener(e,y,o)}})),this},e.prototype.one=function(e,t,o,r){var a,s,l,c,u=this;(0,i.isString)(e)||(0,i.isStringArray)(e)?(a=this,s=e,l=t,c=o):(a=e,s=t,l=o,c=r);var d=function(){for(var e=[],t=0;arguments.length>t;t++)e[t]=arguments[t];return u.off(a,s,d),l.apply(void 0,n.__spreadArray([],n.__read(e),!1))};return this.on(a,s,d,c),this},e.prototype.off=function(e,t,o){var n,l,c,u=this;if((0,i.isString)(e)||(0,i.isStringArray)(e)?(n=this,l=e,c=t):(n=e,l=t,c=o),(0,s.isArray)(n))return n.forEach((function(e){u.off(e,l,c)})),this;var d=n,p=this.__getStore(d);if(!(0,i.isString)(l)&&!(0,i.isStringArray)(l)||0===l.length)return p.namespaces().forEach((function(e){u.off(d,"."+e)})),this.__removeStoreFromSubject(d),this;var f=(0,a.isFunction)(d.removeEventListener),h=function(e){f&&d.removeEventListener(e.event,e.syntheticCallback,!1)},m=function(e,t){if(""!==e){var o=p.get(e,t);if(o&&o.length)if((0,a.isFunction)(c)){var n=p.indexOf(e,t,c);!1!==n&&(h(o[n]),o.splice(n,1),o.length||p.clearEvents(t,e))}else o.forEach(h),o.length=0,p.clearEvents(t,e)}else p.events(t).forEach((function(e){""!==e&&m(e,t)}))};return this.__eachEvent(l,(function(e,t){t===r.defaultNameSpace?p.namespaces().forEach((function(t){m(e,t)})):m(e,t)})),p.isEmpty()&&this.__removeStoreFromSubject(d),this},e.prototype.stopPropagation=function(e,t){var o=this,n=(0,i.isString)(e)?this:e,a=(0,i.isString)(e)?e:t;if("string"!=typeof a)throw(0,l.error)("Need event names");var s=this.__getStore(n);this.__eachEvent(a,(function(e,t){var i=s.get(e,t);i&&o.__stopped.push(i),t===r.defaultNameSpace&&s.namespaces(!0).forEach((function(t){return o.stopPropagation(n,e+"."+t)}))}))},e.prototype.__removeStop=function(e){if(e){var t=this.__stopped.indexOf(e);-1!==t&&this.__stopped.splice(0,t+1)}},e.prototype.__isStopped=function(e){return void 0!==e&&-1!==this.__stopped.indexOf(e)},e.prototype.fire=function(e,t){for(var o,s,c=this,u=[],d=2;arguments.length>d;d++)u[d-2]=arguments[d];var p=(0,i.isString)(e)?this:e,f=(0,i.isString)(e)?e:t,h=(0,i.isString)(e)?n.__spreadArray([t],n.__read(u),!1):u,m=(0,a.isFunction)(p.dispatchEvent);if(!m&&!(0,i.isString)(f))throw(0,l.error)("Need events names");var v=this.__getStore(p);return!(0,i.isString)(f)&&m?this.__triggerNativeEvent(p,t):this.__eachEvent(f,(function(e,t){if(m)c.__triggerNativeEvent(p,e);else{var i=v.get(e,t);if(i)try{n.__spreadArray([],n.__read(i),!1).every((function(t){var r;return!c.__isStopped(i)&&(c.currents.push(e),s=(r=t.syntheticCallback).call.apply(r,n.__spreadArray([p,e],n.__read(h),!1)),c.currents.pop(),void 0!==s&&(o=s),!0)}))}finally{c.__removeStop(i)}t!==r.defaultNameSpace||m||v.namespaces().filter((function(e){return e!==t})).forEach((function(t){var r=c.fire.apply(c,n.__spreadArray([p,e+"."+t],n.__read(h),!1));void 0!==r&&(o=r)}))}})),o},e.prototype.destruct=function(){this.__isDestructed&&(this.__isDestructed=!0,this.off(this),this.__getStore(this).clear(),this.__removeStoreFromSubject(this))},e}();t.EventEmitter=u},73852:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Eventify=void 0;var n=o(20255),r=function(){function e(){this.__map=new Map}return e.prototype.on=function(e,t){var o;return this.__map.has(e)||this.__map.set(e,new Set),null===(o=this.__map.get(e))||void 0===o||o.add(t),this},e.prototype.off=function(e,t){var o;return this.__map.has(e)&&(null===(o=this.__map.get(e))||void 0===o||o.delete(t)),this},e.prototype.destruct=function(){this.__map.clear()},e.prototype.emit=function(e){for(var t,o,r=[],i=1;arguments.length>i;i++)r[i-1]=arguments[i];return this.__map.has(e)&&(null===(t=this.__map.get(e))||void 0===t||t.forEach((function(e){o=e.apply(void 0,n.__spreadArray([],n.__read(r),!1))}))),o},e}();t.Eventify=r},55395:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(3808),t),n.__exportStar(o(73852),t),n.__exportStar(o(88418),t),n.__exportStar(o(83611),t)},88418:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.observable=void 0;var n=o(20255),r=o(49781),i=o(32756),a=o(79736),s=o(46163),l=Symbol("observable-object");function c(e){return void 0!==e[l]}t.observable=function(e){if(c(e))return e;var t={},o={},u=function(t,n){return(0,r.isArray)(t)?(t.map((function(e){return u(e,n)})),e):(o[t]||(o[t]=[]),o[t].push(n),e)},d=function(i){for(var a=[],s=1;arguments.length>s;s++)a[s-1]=arguments[s];if((0,r.isArray)(i))i.map((function(e){return d.apply(void 0,n.__spreadArray([e],n.__read(a),!1))}));else try{!t[i]&&o[i]&&(t[i]=!0,o[i].forEach((function(t){return t.call.apply(t,n.__spreadArray([e],n.__read(a),!1))})))}finally{t[i]=!1}},p=function(t,o){void 0===o&&(o=[]);var r={};c(t)||(Object.defineProperty(t,l,{enumerable:!1,value:!0}),Object.keys(t).forEach((function(l){var c=l,u=o.concat(c).filter((function(e){return e.length}));r[c]=t[c];var f=(0,s.getPropertyDescriptor)(t,c);Object.defineProperty(t,c,{set:function(t){var o=r[c];if(!(0,i.isFastEqual)(r[c],t)){d(["beforeChange","beforeChange.".concat(u.join("."))],c,t),(0,a.isPlainObject)(t)&&p(t,u),f&&f.set?f.set.call(e,t):r[c]=t;var s=[];d(n.__spreadArray(["change"],n.__read(u.reduce((function(e,t){return s.push(t),e.push("change.".concat(s.join("."))),e}),[])),!1),u.join("."),o,(null==t?void 0:t.valueOf)?t.valueOf():t)}},get:function(){return f&&f.get?f.get.call(e):r[c]},enumerable:!0,configurable:!0}),(0,a.isPlainObject)(r[c])&&p(r[c],u)})),Object.defineProperty(e,"on",{value:u}))};return p(e),e}},83611:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EventHandlersStore=t.defaultNameSpace=void 0,o(52378);var n=o(1853);t.defaultNameSpace="JoditEventDefaultNamespace";var r=function(){function e(){this.__store=new Map}return e.prototype.get=function(e,t){if(this.__store.has(t))return this.__store.get(t)[e]},e.prototype.indexOf=function(e,t,o){var n=this.get(e,t);if(n)for(var r=0;n.length>r;r+=1)if(n[r].originalCallback===o)return r;return!1},e.prototype.namespaces=function(e){void 0===e&&(e=!1);var o=(0,n.toArray)(this.__store.keys());return e?o.filter((function(e){return e!==t.defaultNameSpace})):o},e.prototype.events=function(e){var t=this.__store.get(e);return t?Object.keys(t):[]},e.prototype.set=function(e,t,o,n){void 0===n&&(n=!1);var r=this.__store.get(t);r||this.__store.set(t,r={}),void 0===r[e]&&(r[e]=[]),n?r[e].unshift(o):r[e].push(o)},e.prototype.clear=function(){this.__store.clear()},e.prototype.clearEvents=function(e,t){var o=this.__store.get(e);o&&o[t]&&(delete o[t],Object.keys(o).length||this.__store.delete(e))},e.prototype.isEmpty=function(){return 0===this.__store.size},e}();t.EventHandlersStore=r},17332:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.eventEmitter=t.getContainer=t.extendLang=t.modules=t.pluginSystem=t.uniqueUid=t.instances=void 0;var n=o(44540),r=o(64968),i=o(55395),a=o(77892),s=o(96574),l=o(87247),c=o(11278),u=o(86893);t.instances={};var d=1,p=new Set;t.uniqueUid=function(){function e(){return d+=10*(Math.random()+1),Math.round(d).toString(16)}for(var t=e();p.has(t);)t=e();return p.add(t),t},t.pluginSystem=new n.PluginSystem,t.modules={},t.extendLang=function(e){Object.keys(e).forEach((function(t){u.lang[t]?Object.assign(u.lang[t],e[t]):u.lang[t]=e[t]}))};var f=new WeakMap;t.getContainer=function(e,t,o,n){void 0===o&&(o="div"),void 0===n&&(n=!1);var i=t?(0,l.getClassName)(t.prototype):"jodit-utils",u=f.get(e)||{},d=i+o,p=(0,s.isViewObject)(e)?e:e.j;if(!u[d]){var h=p.c,m=(0,a.isJoditObject)(e)&&e.o.shadowRoot?e.o.shadowRoot:e.od.body;if(n&&(0,a.isJoditObject)(e)&&e.od!==e.ed){h=e.createInside;var v="style"===o?e.ed.head:e.ed.body;m=(0,a.isJoditObject)(e)&&e.o.shadowRoot?e.o.shadowRoot:v}var g=h.element(o,{className:"jodit jodit-".concat((0,c.kebabCase)(i),"-container jodit-box")});g.classList.add("jodit_theme_".concat(p.o.theme||"default")),m.appendChild(g),u[d]=g,e.hookStatus("beforeDestruct",(function(){r.Dom.safeRemove(g),delete u[d],Object.keys(u).length&&f.delete(e)})),f.set(e,u)}return u[d].classList.remove("jodit_theme_default","jodit_theme_dark"),u[d].classList.add("jodit_theme_".concat(p.o.theme||"default")),u[d]},t.eventEmitter=new i.EventEmitter},34578:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.asArray=void 0;var n=o(49781);t.asArray=function(e){return(0,n.isArray)(e)?e:[e]}},12557:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.toArray=t.splitArray=t.asArray=void 0;var n=o(34578);Object.defineProperty(t,"asArray",{enumerable:!0,get:function(){return n.asArray}});var r=o(14556);Object.defineProperty(t,"splitArray",{enumerable:!0,get:function(){return r.splitArray}});var i=o(1853);Object.defineProperty(t,"toArray",{enumerable:!0,get:function(){return i.toArray}})},14556:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.splitArray=void 0,t.splitArray=function(e){return Array.isArray(e)?e:e.split(/[,\s]+/)}},1853:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.toArray=void 0;var n=o(80861),r=o(28069);t.toArray=function(){for(var e,t=[],o=0;arguments.length>o;o++)t[o]=arguments[o];var i=(0,r.isNativeFunction)(Array.from)?Array.from:null!==(e=(0,n.reset)("Array.from"))&&void 0!==e?e:Array.from;return i.apply(Array,t)}},4696:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(20255).__exportStar(o(27512),t)},27512:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.clearTimeout=t.setTimeout=void 0;var n=o(20255);t.setTimeout=function(e,t){for(var o=[],r=2;arguments.length>r;r++)o[r-2]=arguments[r];return t?window.setTimeout.apply(window,n.__spreadArray([e,t],n.__read(o),!1)):(e.call.apply(e,n.__spreadArray([null],n.__read(o),!1)),0)},t.clearTimeout=function(e){window.clearTimeout(e)}},31553:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasBrowserColorPicker=void 0,t.hasBrowserColorPicker=function(){var e=!0;try{var t=document.createElement("input");t.type="color",t.value="!",e="color"===t.type&&"!"!==t.value}catch(t){e=!1}return e}},10172:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(31553),t),n.__exportStar(o(49781),t),n.__exportStar(o(67749),t),n.__exportStar(o(32756),t),n.__exportStar(o(42096),t),n.__exportStar(o(66869),t),n.__exportStar(o(72543),t),n.__exportStar(o(33156),t),n.__exportStar(o(93578),t),n.__exportStar(o(77892),t),n.__exportStar(o(96574),t),n.__exportStar(o(60280),t),n.__exportStar(o(28069),t),n.__exportStar(o(61817),t),n.__exportStar(o(57649),t),n.__exportStar(o(79736),t),n.__exportStar(o(26335),t),n.__exportStar(o(24421),t),n.__exportStar(o(64350),t),n.__exportStar(o(19179),t),n.__exportStar(o(24021),t),n.__exportStar(o(85994),t),n.__exportStar(o(37204),t)},49781:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isArray=void 0,t.isArray=function(e){return Array.isArray(e)}},67749:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBoolean=void 0,t.isBoolean=function(e){return"boolean"==typeof e}},32756:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isFastEqual=t.isEqual=void 0;var n=o(42554);t.isEqual=function(e,t){return e===t||(0,n.stringify)(e)===(0,n.stringify)(t)},t.isFastEqual=function(e,t){return e===t}},42096:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isFunction=void 0,t.isFunction=function(e){return"function"==typeof e}},72543:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isHtmlFromWord=void 0,t.isHtmlFromWord=function(e){return-1!==e.search(/<meta.*?Microsoft Excel\s[\d].*?>/)||-1!==e.search(/<meta.*?Microsoft Word\s[\d].*?>/)||-1!==e.search(/style="[^"]*mso-/)&&-1!==e.search(/<font/)}},66869:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isHTML=void 0;var n=o(24421);t.isHTML=function(e){return(0,n.isString)(e)&&/<([A-Za-z][A-Za-z0-9]*)\b[^>]*>(.*?)<\/\1>/m.test(e.replace(/[\r\n]/g,""))}},33156:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasContainer=t.isDestructable=t.isInitable=void 0;var n=o(42096),r=o(24263),i=o(24021);t.isInitable=function(e){return!(0,i.isVoid)(e)&&(0,n.isFunction)(e.init)},t.isDestructable=function(e){return!(0,i.isVoid)(e)&&(0,n.isFunction)(e.destruct)},t.hasContainer=function(e){return!(0,i.isVoid)(e)&&r.Dom.isElement(e.container)}},93578:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isInt=void 0;var n=o(57649),r=o(24421);t.isInt=function(e){return(0,r.isString)(e)&&(0,n.isNumeric)(e)&&(e=parseFloat(e)),"number"==typeof e&&Number.isFinite(e)&&!(e%1)}},77892:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isJoditObject=void 0;var n=o(42096);t.isJoditObject=function(e){return Boolean(e&&e instanceof Object&&(0,n.isFunction)(e.constructor)&&("undefined"!=typeof Jodit&&e instanceof Jodit||e.isJodit))}},60280:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isLicense=void 0;var n=o(24421);t.isLicense=function(e){return(0,n.isString)(e)&&23===e.length&&/^[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}$/i.test(e)}},37204:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isMarker=void 0;var n=o(24263),r=o(86893);t.isMarker=function(e){return n.Dom.isNode(e)&&n.Dom.isTag(e,"span")&&e.hasAttribute("data-"+r.MARKER_CLASS)}},28069:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNativeFunction=void 0,t.isNativeFunction=function(e){return Boolean(e)&&"function"===(typeof e).toLowerCase()&&(e===Function.prototype||/^\s*function\s*(\b[a-z$_][a-z0-9$_]*\b)*\s*\((|([a-z$_][a-z0-9$_]*)(\s*,[a-z$_][a-z0-9$_]*)*)\)\s*{\s*\[native code]\s*}\s*$/i.test(String(e)))}},61817:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNumber=void 0,t.isNumber=function(e){return"number"==typeof e&&!isNaN(e)&&isFinite(e)}},57649:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNumeric=void 0;var n=o(24421);t.isNumeric=function(e){if((0,n.isString)(e)){if(!e.match(/^([+-])?[0-9]+(\.?)([0-9]+)?(e[0-9]+)?$/))return!1;e=parseFloat(e)}return"number"==typeof e&&!isNaN(e)&&isFinite(e)}},79736:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isPlainObject=void 0;var n=o(85994);t.isPlainObject=function(e){return!(!e||"object"!=typeof e||e.nodeType||(0,n.isWindow)(e)||e.constructor&&!{}.hasOwnProperty.call(e.constructor.prototype,"isPrototypeOf"))}},26335:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isPromise=void 0,t.isPromise=function(e){return e&&"function"==typeof e.then}},24421:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isStringArray=t.isString=void 0;var n=o(49781);function r(e){return"string"==typeof e}t.isString=r,t.isStringArray=function(e){return(0,n.isArray)(e)&&r(e[0])}},64350:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isURL=void 0,t.isURL=function(e){if(e.includes(" "))return!1;if("undefined"!=typeof URL)try{var t=new URL(e);return["https:","http:","ftp:","file:","rtmp:"].includes(t.protocol)}catch(e){return!1}var o=document.createElement("a");return o.href=e,Boolean(o.hostname)}},19179:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isValidName=void 0,t.isValidName=function(e){return!!e.length&&!/[^0-9A-Za-zа-яА-ЯЁё\w\-_.]/.test(e)}},96574:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isViewObject=void 0;var n=o(42096);t.isViewObject=function(e){return Boolean(e&&e instanceof Object&&(0,n.isFunction)(e.constructor)&&e.isView)}},24021:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isVoid=void 0,t.isVoid=function(e){return null==e}},85994:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isWindow=void 0,t.isWindow=function(e){return null!=e&&e===e.window}},13203:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.colorToHex=void 0,t.colorToHex=function(e){if("rgba(0, 0, 0, 0)"===e||""===e)return!1;if(!e)return"#000000";if("#"===e.substr(0,1))return e;var t=/([\s\n\t\r]*?)rgb\((\d+), (\d+), (\d+)\)/.exec(e)||/([\s\n\t\r]*?)rgba\((\d+), (\d+), (\d+), ([\d.]+)\)/.exec(e);if(!t)return"#000000";for(var o=parseInt(t[2],10),n=parseInt(t[3],10),r=(parseInt(t[4],10)|n<<8|o<<16).toString(16).toUpperCase();6>r.length;)r="0"+r;return t[1]+"#"+r}},61354:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(20255).__exportStar(o(13203),t)},66546:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.applyStyles=void 0;var n=o(24263),r=o(76502),i=o(33941);function a(e){return e.replace(/mso-[a-z-]+:[\s]*[^;]+;/gi,"").replace(/mso-[a-z-]+:[\s]*[^";']+$/gi,"").replace(/border[a-z-]*:[\s]*[^;]+;/gi,"").replace(/([0-9.]+)(pt|cm)/gi,(function(e,t,o){switch(o.toLowerCase()){case"pt":return(1.328*parseFloat(t)).toFixed(0)+"px";case"cm":return(.02645833*parseFloat(t)).toFixed(0)+"px"}return e}))}t.applyStyles=function(e){if(-1===e.indexOf("<html "))return e;e=(e=e.substring(e.indexOf("<html "),e.length)).substring(0,e.lastIndexOf("</html>")+"</html>".length);var t=document.createElement("iframe");t.style.display="none",document.body.appendChild(t);var o="";try{var s=t.contentDocument||(t.contentWindow?t.contentWindow.document:null);if(s){s.open(),s.write(e),s.close();try{for(var l=function(e){for(var t=s.styleSheets[e].cssRules,o=function(e){if(""===t[e].selectorText)return"continue";(0,r.$$)(t[e].selectorText,s.body).forEach((function(o){o.style.cssText=a(t[e].style.cssText+";"+o.style.cssText)}))},n=0;t.length>n;n+=1)o(n)},c=0;s.styleSheets.length>c;c+=1)l(c)}catch(e){}n.Dom.each(s.body,(function(e){if(n.Dom.isElement(e)){var t=e,o=t.getAttribute("style");o&&(t.style.cssText=a(o)),t.hasAttribute("style")&&!t.getAttribute("style")&&t.removeAttribute("style")}})),o=s.firstChild?(0,i.trim)(s.body.innerHTML):""}}catch(e){}finally{n.Dom.safeRemove(t)}return o&&(e=o),(0,i.trim)(e.replace(/<(\/)?(html|colgroup|col|o:p)[^>]*>/g,"").replace(/<!--[^>]*>/g,""))}},33316:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cleanFromWord=void 0;var n=o(24263),r=o(33941),i=o(1853);t.cleanFromWord=function(e){-1!==e.indexOf("<html ")&&(e=(e=e.substring(e.indexOf("<html "),e.length)).substring(0,e.lastIndexOf("</html>")+"</html>".length));var t="";try{var o=document.createElement("div");o.innerHTML=e;var a=[];o.firstChild&&n.Dom.each(o,(function(e){if(e)switch(e.nodeType){case Node.ELEMENT_NODE:switch(e.nodeName){case"STYLE":case"LINK":case"META":a.push(e);break;case"W:SDT":case"W:SDTPR":case"FONT":n.Dom.unwrap(e);break;default:(0,i.toArray)(e.attributes).forEach((function(t){-1===["src","href","rel","content"].indexOf(t.name.toLowerCase())&&e.removeAttribute(t.name)}))}break;case Node.TEXT_NODE:break;default:a.push(e)}})),n.Dom.safeRemove.apply(null,a),t=o.innerHTML}catch(e){}return t&&(e=t),(e=e.split(/(\n)/).filter(r.trim).join("\n")).replace(/<(\/)?(html|colgroup|col|o:p)[^>]*>/g,"").replace(/<!--[^>]*>/g,"")}},46639:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.htmlspecialchars=void 0,t.htmlspecialchars=function(e){var t=document.createElement("div");return t.textContent=e,t.innerHTML}},13098:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(66546),t),n.__exportStar(o(33316),t),n.__exportStar(o(46639),t),n.__exportStar(o(11336),t),n.__exportStar(o(67128),t),n.__exportStar(o(86645),t)},86645:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nl2br=void 0,t.nl2br=function(e){return e.replace(/\r\n|\r|\n/g,"<br/>")}},67128:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sanitizeHTMLElement=t.safeHTML=void 0;var n=o(76502),r=o(24263);function i(e,t){var o=void 0===t?{safeJavaScriptLink:!0,removeOnError:!0}:t,i=o.safeJavaScriptLink,a=o.removeOnError;if(!r.Dom.isElement(e))return!1;var s=!1;a&&e.hasAttribute("onerror")&&((0,n.attr)(e,"onerror",null),s=!0);var l=e.getAttribute("href");return i&&l&&0===l.trim().indexOf("javascript")&&((0,n.attr)(e,"href",location.protocol+"//"+l),s=!0),s}t.safeHTML=function(e,t){(r.Dom.isElement(e)||r.Dom.isFragment(e))&&(t.removeOnError&&(i(e),(0,n.$$)("[onerror]",e).forEach((function(e){return i(e,t)}))),t.safeJavaScriptLink&&(i(e),(0,n.$$)('a[href^="javascript"]',e).forEach((function(e){return i(e,t)}))))},t.sanitizeHTMLElement=i},11336:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stripTags=void 0;var n=o(24421),r=o(76502),i=o(33941),a=o(24263);t.stripTags=function(e,t){void 0===t&&(t=document);var o=t.createElement("div");return(0,n.isString)(e)?o.innerHTML=e:o.appendChild(e),(0,r.$$)("DIV, P, BR, H1, H2, H3, H4, H5, H6, HR",o).forEach((function(e){var o=e.parentNode;if(o){var n=e.nextSibling;a.Dom.isText(n)&&/^\s/.test(n.nodeValue||"")||n&&o.insertBefore(t.createTextNode(" "),n)}})),(0,i.trim)(o.innerText)||""}},40332:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(76502),t),n.__exportStar(o(12557),t),n.__exportStar(o(4696),t),n.__exportStar(o(10172),t),n.__exportStar(o(61354),t),n.__exportStar(o(13098),t),n.__exportStar(o(89693),t),n.__exportStar(o(90954),t),n.__exportStar(o(19035),t)},89693:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(48926),t),n.__exportStar(o(78648),t),n.__exportStar(o(74504),t),n.__exportStar(o(50870),t),n.__exportStar(o(76787),t),n.__exportStar(o(93251),t),n.__exportStar(o(91518),t),n.__exportStar(o(49353),t),n.__exportStar(o(64274),t)},64274:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeColor=void 0;var n=o(61354),r=o(19035);t.normalizeColor=function(e){var t=["#"],o=(0,n.colorToHex)(e);if(!o)return!1;if(3===(o=(o=(0,r.trim)(o.toUpperCase())).substr(1)).length){for(var i=0;3>i;i+=1)t.push(o[i]),t.push(o[i]);return t.join("")}return o.length>6&&(o=o.substr(0,6)),"#"+o}},49353:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeCssValue=t.normalizeCssNumericValue=t.NUMBER_FIELDS_REG=void 0;var n=o(57649),r=o(11278),i=o(13203),a=o(24021);t.NUMBER_FIELDS_REG=/^(left|top|bottom|right|width|min|max|height|margin|padding|fontsize|font-size)/i,t.normalizeCssNumericValue=function(e,o){return!(0,a.isVoid)(o)&&t.NUMBER_FIELDS_REG.test(e)&&(0,n.isNumeric)(o.toString())?parseInt(o.toString(),10)+"px":o},t.normalizeCssValue=function(e,t){if("font-weight"===(0,r.kebabCase)(e)){switch(t.toString().toLowerCase()){case"700":case"bold":return 700;case"400":case"normal":return 400;case"900":case"heavy":return 900}return(0,n.isNumeric)(t)?Number(t):t}return/color/i.test(e)&&/^rgb/i.test(t.toString())&&(0,i.colorToHex)(t.toString())||t}},48926:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeKeyAliases=void 0;var n=o(33941),r=o(86893);t.normalizeKeyAliases=function(e){var t={},o={meta:1,ctrl:2,control:2,alt:3,shift:4};return e.replace(/\+\+/g,"+add").split(/[\s]*\+[\s]*/).map((function(e){return(0,n.trim)(e.toLowerCase())})).map((function(e){return r.KEY_ALIASES[e]||e})).sort((function(e,t){return o[e]&&!o[t]?-1:!o[e]&&o[t]?1:o[e]&&o[t]?o[e]-o[t]:e>t?1:-1})).filter((function(e){return!t[e]&&""!==e&&(t[e]=!0)})).join("+")}},78648:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeLicense=void 0,t.normalizeLicense=function(e,t){void 0===t&&(t=8);for(var o=[];e.length;)o.push(e.substr(0,t)),e=e.substr(t);return o[1]=o[1].replace(/./g,"*"),o[2]=o[2].replace(/./g,"*"),o.join("-")}},74504:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeNode=void 0;var n=o(86893),r=o(24263);t.normalizeNode=function e(t){if(t){if(r.Dom.isText(t)&&null!=t.nodeValue&&t.parentNode)for(;r.Dom.isText(t.nextSibling);)null!=t.nextSibling.nodeValue&&(t.nodeValue+=t.nextSibling.nodeValue),t.nodeValue=t.nodeValue.replace((0,n.INVISIBLE_SPACE_REG_EXP)(),""),r.Dom.safeRemove(t.nextSibling);else e(t.firstChild);e(t.nextSibling)}}},50870:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizePath=void 0;var n=o(19035);t.normalizePath=function(){for(var e=[],t=0;arguments.length>t;t++)e[t]=arguments[t];return e.filter((function(e){return(0,n.trim)(e).length})).map((function(t,o){return t=t.replace(/([^:])[\\/]+/g,"$1/"),o&&(t=t.replace(/^\//,"")),o!==e.length-1&&(t=t.replace(/\/$/,"")),t})).join("/")}},76787:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeRelativePath=void 0,t.normalizeRelativePath=function(e){return e.split("/").reduce((function(e,t){switch(t){case"":case".":break;case"..":e.pop();break;default:e.push(t)}return e}),[]).join("/")+(e.endsWith("/")?"/":"")}},93251:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeSize=void 0,t.normalizeSize=function(e){return/^[0-9]+$/.test(e.toString())?e+"px":e.toString()}},91518:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeUrl=void 0,t.normalizeUrl=function(){for(var e=[],t=0;arguments.length>t;t++)e[t]=arguments[t];return e.filter((function(e){return e.length})).map((function(e){return e.replace(/\/$/,"")})).join("/").replace(/([^:])[\\/]+/g,"$1/")}},1684:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getContentWidth=void 0,t.getContentWidth=function(e,t){var o=function(e){return parseInt(e,10)},n=t.getComputedStyle(e);return e.offsetWidth-o(n.getPropertyValue("padding-left")||"0")-o(n.getPropertyValue("padding-right")||"0")}},73874:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getScrollParent=void 0;var n=o(76502),r=o(24263);t.getScrollParent=function e(t){if(!t)return null;var o=r.Dom.isHTMLElement(t),i=o&&(0,n.css)(t,"overflowY");return o&&"visible"!==i&&"hidden"!==i&&t.scrollHeight>=t.clientHeight?t:e(t.parentNode)||document.scrollingElement||document.body}},90954:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(1684),t),n.__exportStar(o(73874),t),n.__exportStar(o(83810),t),n.__exportStar(o(98701),t),n.__exportStar(o(81710),t),n.__exportStar(o(16492),t)},83810:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.innerWidth=void 0,t.innerWidth=function(e,t){var o=t.getComputedStyle(e);return e.clientWidth-(parseFloat(o.paddingLeft||"0")+parseFloat(o.paddingRight||"0"))}},16492:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.size=void 0;var n=o(10172);t.size=function(e){return(0,n.isString)(e)||(0,n.isArray)(e)?e.length:(0,n.isPlainObject)(e)?Object.keys(e).length:0}},98701:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.offset=void 0,t.offset=function(e,o,n,r){var i;void 0===r&&(r=!1);try{i=e.getBoundingClientRect()}catch(e){i={top:0,bottom:0,left:0,right:0,width:0,height:0}}var a,s,l=n.body,c=n.documentElement||{clientTop:0,clientLeft:0,scrollTop:0,scrollLeft:0},u=n.defaultView||n.parentWindow,d=u.pageYOffset||c.scrollTop||l.scrollTop,p=u.pageXOffset||c.scrollLeft||l.scrollLeft,f=c.clientTop||l.clientTop||0,h=c.clientLeft||l.clientLeft||0,m=o.iframe;if(!r&&o&&o.options&&o.o.iframe&&m){var v=(0,t.offset)(m,o,o.od,!0);a=i.top+v.top,s=i.left+v.left}else a=i.top+d-f,s=i.left+p-h;return{top:Math.round(a),left:Math.round(s),width:i.width,height:i.height}}},81710:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.position=void 0;var n=o(77892);t.position=function e(t,o,r){void 0===r&&(r=!1);var i=t.getBoundingClientRect(),a=i.left,s=i.top;if((0,n.isJoditObject)(o)&&o.iframe&&o.ed.body.contains(t)&&!r){var l=e(o.iframe,o,!0);a+=l.left,s+=l.top}return{left:Math.round(a),top:Math.round(s),width:Math.round(t.offsetWidth),height:Math.round(t.offsetHeight)}}},26596:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.camelCase=void 0,t.camelCase=function(e){return e.replace(/([-_])(.)/g,(function(e,t,o){return o.toUpperCase()}))}},93163:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fuzzySearchIndex=void 0;var n=o(86893);t.fuzzySearchIndex=function(e,t,o,r){void 0===o&&(o=0),void 0===r&&(r=1);var i=0,a=0,s=-1,l=0,c=0;for(a=o;e.length>i&&t.length>a;)e[i].toLowerCase()===t[a].toLowerCase()?(i++,l++,c=0,-1===s&&(s=a)):i>0&&(r>c||t[a]===n.INVISIBLE_SPACE?(c++,l++):(i=0,s=-1,l=0,c=0,a--)),a++;return i===e.length?[s,l]:[-1,0]}},11625:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.i18n=t.sprintf=void 0;var n=o(93166),r=o(76502),i=o(24421),a=o(13449),s=o(86893);t.sprintf=function(e,t){if(!t||!t.length)return e;for(var o=/%([sd])/g,n=o.exec(e),r=e,i=0;n&&void 0!==t[i];)r=r.replace(n[0],t[i].toString()),i+=1,n=o.exec(e);return r},t.i18n=function(e,o,l){if(!(0,i.isString)(e))throw(0,r.error)("i18n: Need string in first argument");if(!e.length)return e;var c=Boolean(null==l?void 0:l.debugLanguage),u={},d=function(e){return o&&o.length?(0,t.sprintf)(e,o):e},p=(0,r.defaultLanguage)(n.Config.defaultOptions.language,n.Config.defaultOptions.language),f=(0,r.defaultLanguage)(null==l?void 0:l.language,p),h=function(t){if(t){if((0,i.isString)(t[e]))return d(t[e]);var o=e.toLowerCase();if((0,i.isString)(t[o]))return d(t[o]);var n=(0,a.ucfirst)(e);return(0,i.isString)(t[n])?d(t[n]):void 0}};void 0!==s.lang[f]?u=s.lang[f]:c||(u=void 0!==s.lang[p]?s.lang[p]:s.lang.en);var m=null==l?void 0:l.i18n;if(m&&m[f]){var v=h(m[f]);if(v)return v}return h(u)||(!c&&s.lang.en&&(0,i.isString)(s.lang.en[e])&&s.lang.en[e]?d(s.lang.en[e]):c?"{"+e+"}":d(e))}},19035:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(26596),t),n.__exportStar(o(93163),t),n.__exportStar(o(11625),t),n.__exportStar(o(11278),t),n.__exportStar(o(42554),t),n.__exportStar(o(33941),t),n.__exportStar(o(13449),t)},11278:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CamelCaseToKebabCase=t.kebabCase=void 0,t.kebabCase=function(e){return e.replace(/([A-Z])([A-Z])([a-z])/g,"$1-$2$3").replace(/([a-z])([A-Z])/g,"$1-$2").replace(/[\s_]+/g,"-").toLowerCase()},t.CamelCaseToKebabCase=function(e){return e.replace(/([A-Z])([A-Z])([a-z])/g,"$1-$2$3").replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}},42554:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringify=void 0,t.stringify=function(e,t){if(void 0===t&&(t={}),"object"!=typeof e)return String(e);var o=new Set(t.excludeKeys),n=new WeakMap;return JSON.stringify(e,(function(e,t){if(!o.has(e)){if("object"==typeof t&&null!=t){if(n.get(t))return"[refObject]";n.set(t,!0)}return t}}),t.prettify)}},33941:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.trimInv=t.trim=void 0;var n=o(86893);t.trim=function(e){return e.replace((0,n.SPACE_REG_EXP_END)(),"").replace((0,n.SPACE_REG_EXP_START)(),"")},t.trimInv=function(e){return e.replace((0,n.INVISIBLE_SPACE_REG_EXP_END)(),"").replace((0,n.INVISIBLE_SPACE_REG_EXP_START)(),"")}},13449:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ucfirst=void 0,t.ucfirst=function(e){return e.length?e[0].toUpperCase()+e.substr(1):""}},60303:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.alignElement=t.clearAlign=t.hAlignElement=void 0;var n=o(64968),r=o(26911);function i(e){n.Dom.each(e,(function(e){n.Dom.isHTMLElement(e)&&e.style.textAlign&&(e.style.textAlign="",e.style.cssText.trim().length||e.removeAttribute("style"))}))}t.hAlignElement=function(e,t){t&&"normal"!==t?"center"!==t?((0,r.css)(e,"float",t),(0,r.clearCenterAlign)(e)):(0,r.css)(e,{float:"",display:"block",marginLeft:"auto",marginRight:"auto"}):((0,r.css)(e,"float")&&-1!==["right","left"].indexOf((0,r.css)(e,"float").toString().toLowerCase())&&(0,r.css)(e,"float",""),(0,r.clearCenterAlign)(e))},t.clearAlign=i,t.alignElement=function(e,t){if(n.Dom.isNode(t)&&n.Dom.isElement(t))switch(i(t),e.toLowerCase()){case"justifyfull":t.style.textAlign="justify";break;case"justifyright":t.style.textAlign="right";break;case"justifyleft":t.style.textAlign="left";break;case"justifycenter":t.style.textAlign="center"}}},62462:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.loadNextStyle=t.loadNext=t.appendStyleAsync=t.appendScriptAsync=t.appendScript=void 0;var n=o(20255),r=o(48240),i=o(42096),a=o(24421),s=new Map,l=function(e){return function(t,o){return n.__awaiter(void 0,void 0,Promise,(function(){var r;return n.__generator(this,(function(n){return s.has(o)?[2,s.get(o)]:(r=e(t,o),s.set(o,r),[2,r])}))}))}};t.appendScript=function(e,t,o){var n=e.c.element("script");return n.type="text/javascript",n.async=!0,(0,i.isFunction)(o)&&!e.isInDestruct&&e.e.on(n,"load",o),n.src||(n.src=(0,r.completeUrl)(t)),e.od.body.appendChild(n),{callback:o,element:n}},t.appendScriptAsync=l((function(e,o){return new Promise((function(n,r){var i=(0,t.appendScript)(e,o,n).element;!e.isInDestruct&&e.e.on(i,"error",r)}))})),t.appendStyleAsync=l((function(e,t){return new Promise((function(o,n){var i=e.c.element("link");i.rel="stylesheet",i.media="all",i.crossOrigin="anonymous",!e.isInDestruct&&e.e.on(i,"load",(function(){return o(i)})).on(i,"error",n),i.href=(0,r.completeUrl)(t),e.o.shadowRoot?e.o.shadowRoot.appendChild(i):e.od.body.appendChild(i)}))})),t.loadNext=function(e,o,n){return void 0===n&&(n=0),(0,a.isString)(o[n])?(0,t.appendScriptAsync)(e,o[n]).then((function(){return(0,t.loadNext)(e,o,n+1)})):Promise.resolve()},t.loadNextStyle=function(e,o,n){return void 0===n&&(n=0),(0,a.isString)(o[n])?(0,t.appendStyleAsync)(e,o[n]).then((function(){return(0,t.loadNextStyle)(e,o,n+1)})):Promise.resolve()}},603:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assert=void 0;var n=o(20255),r=function(e){function t(t){var o=e.call(this,t)||this;return o.name="AssertionError",o}return n.__extends(t,e),t}(Error);t.assert=function(e,t){if(!e)throw new r("Assertion failed: ".concat(t))}},37682:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.browser=void 0,t.browser=function(e){var t=navigator.userAgent.toLowerCase(),o=/(firefox)[\s/]([\w.]+)/.exec(t)||/(chrome)[\s/]([\w.]+)/.exec(t)||/(webkit)[\s/]([\w.]+)/.exec(t)||/(opera)(?:.*version)[\s/]([\w.]+)/.exec(t)||/(msie)[\s]([\w.]+)/.exec(t)||/(trident)\/([\w.]+)/.exec(t)||0>t.indexOf("compatible")||[];return"version"===e?o[2]:"webkit"===e?"chrome"===o[1]||"webkit"===o[1]:"ff"===e?"firefox"===o[1]:"msie"===e?"trident"===o[1]||"msie"===o[1]:o[1]===e}},71567:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.buildQuery=void 0;var n=o(79736);t.buildQuery=function(e,o){var r=[],i=encodeURIComponent;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var s=o?o+"["+a+"]":a,l=e[a];r.push((0,n.isPlainObject)(l)?(0,t.buildQuery)(l,s):i(s)+"="+i(l))}return r.join("&")}},48240:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.completeUrl=void 0,t.completeUrl=function(e){return"file:"===window.location.protocol&&/^\/\//.test(e)&&(e="https:"+e),e}},64981:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigFlatten=t.ConfigProto=void 0;var n=o(20255),r=o(7935),i=o(49781),a=o(79736),s=o(24421),l=o(24021),c=o(93166),u=o(67309);t.ConfigProto=function e(t,o,u){if(void 0===u&&(u=0),Object.getPrototypeOf(t)!==Object.prototype)return t;var d=c.Config.defaultOptions;if((0,s.isString)(t.preset)){if(void 0!==d.presets[t.preset]){var p=d.presets[t.preset];Object.keys(p).forEach((function(e){(0,l.isVoid)(t[e])&&(t[e]=p[e])}))}delete t.preset}var f={};return Object.keys(t).forEach((function(s){var l=t[s],c=o?o[s]:null;f[s]=(0,a.isPlainObject)(l)&&(0,a.isPlainObject)(c)&&!(0,r.isAtom)(l)?e(l,c,u+1):0!==u&&(0,i.isArray)(l)&&!(0,r.isAtom)(l)&&(0,i.isArray)(c)?n.__spreadArray(n.__spreadArray([],n.__read(l),!1),n.__read(c.slice(l.length)),!1):l})),Object.setPrototypeOf(f,o),f},t.ConfigFlatten=function(e){return(0,u.keys)(e,!1).reduce((function(t,o){return t[o]=e[o],t}),{})}},42051:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertMediaUrlToVideoEmbed=void 0;var n=o(64350),r=o(67285);t.convertMediaUrlToVideoEmbed=function(e,t,o){if(void 0===t&&(t=400),void 0===o&&(o=345),!(0,n.isURL)(e))return e;var i=document.createElement("a"),a=/(?:http?s?:\/\/)?(?:www\.)?(?:vimeo\.com)\/?(.+)/g;i.href=e,t||(t=400),o||(o=345);var s=i.protocol||"";switch(i.hostname){case"www.vimeo.com":case"vimeo.com":return a.test(e)?e.replace(a,'<iframe width="'+t+'" height="'+o+'" src="'+s+'//player.vimeo.com/video/$1" frameborder="0" allowfullscreen></iframe>'):e;case"youtube.com":case"www.youtube.com":case"youtu.be":case"www.youtu.be":var l=i.search?(0,r.parseQuery)(i.search):{v:i.pathname.substr(1)};return l.v?'<iframe width="'+t+'" height="'+o+'" src="'+s+"//www.youtube.com/embed/"+l.v+'" frameborder="0" allowfullscreen></iframe>':e}return e}},26911:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.clearCenterAlign=t.css=void 0;var n=o(79736),r=o(67749),i=o(49353),a=o(26596),s=o(11278);function l(e,t,o,c){if(void 0===c&&(c=!1),(0,r.isBoolean)(o)&&(c=o,o=void 0),(0,n.isPlainObject)(t)||void 0!==o){var u=function(e,t,o){void 0===(o=(0,i.normalizeCssNumericValue)(t,o))||null!=o&&l(e,t,!0)===(0,i.normalizeCssValue)(t,o)||(e.style[t]=o)};if((0,n.isPlainObject)(t))for(var d=Object.keys(t),p=0;d.length>p;p+=1)u(e,(0,a.camelCase)(d[p]),t[d[p]]);else u(e,(0,a.camelCase)(t),o);return""}var f=(0,s.kebabCase)(t),h=e.ownerDocument||document,m=!!h&&(h.defaultView||h.parentWindow),v=e.style[t],g="";return void 0!==v&&""!==v?g=v:m&&!c&&(g=m.getComputedStyle(e).getPropertyValue(f)),i.NUMBER_FIELDS_REG.test(t)&&/^[-+]?[0-9.]+px$/.test(g.toString())&&(g=parseInt(g.toString(),10)),(0,i.normalizeCssValue)(t,g)}t.css=l,t.clearCenterAlign=function(e){"block"===l(e,"display")&&l(e,"display","");var t=e.style;"auto"===t.marginLeft&&"auto"===t.marginRight&&(t.marginLeft="",t.marginRight="")}},2522:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ctrlKey=void 0,t.ctrlKey=function(e){if("undefined"!=typeof navigator&&-1!==navigator.userAgent.indexOf("Mac OS X")){if(e.metaKey&&!e.altKey)return!0}else if(e.ctrlKey&&!e.altKey)return!0;return!1}},63122:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.dataBind=void 0;var n=o(96574),r=new WeakMap;t.dataBind=function(e,t,o){var i=r.get(e);if(!i){r.set(e,i={});var a=null;(0,n.isViewObject)(e.j)&&(a=e.j.e),(0,n.isViewObject)(e)&&(a=e.e),a&&a.on("beforeDestruct",(function(){r.delete(e)}))}return void 0===o?i[t]:(i[t]=o,o)}},93351:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaultLanguage=void 0;var n=o(24421);t.defaultLanguage=function(e,t){return void 0===t&&(t="en"),"auto"!==e&&(0,n.isString)(e)?e:document.documentElement&&document.documentElement.lang?document.documentElement.lang:navigator.language?navigator.language.substring(0,2):t}},41579:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isAbort=t.abort=t.options=t.connection=t.error=void 0;var n=o(45339);t.error=function(e){return new TypeError(e)},t.connection=function(e){return new n.ConnectionError(e)},t.options=function(e){return new n.OptionsError(e)},t.abort=function(e){return new n.AbortError(e)},t.isAbort=function(e){return e instanceof n.AbortError}},86768:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AbortError=void 0;var n=o(20255),r=function(e){function t(o){var n=e.call(this,o)||this;return Object.setPrototypeOf(n,t.prototype),n}return n.__extends(t,e),t}(Error);t.AbortError=r},43380:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ConnectionError=void 0;var n=o(20255),r=function(e){function t(o){var n=e.call(this,o)||this;return Object.setPrototypeOf(n,t.prototype),n}return n.__extends(t,e),t}(Error);t.ConnectionError=r},45339:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(86768),t),n.__exportStar(o(43380),t),n.__exportStar(o(47403),t)},47403:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.OptionsError=void 0;var n=o(20255),r=function(e){function t(o){var n=e.call(this,o)||this;return Object.setPrototypeOf(n,t.prototype),n}return n.__extends(t,e),t}(TypeError);t.OptionsError=r},56964:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(41579),t),n.__exportStar(o(45339),t)},7935:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fastClone=t.markAsAtomic=t.isAtom=void 0;var n=o(42554);t.isAtom=function(e){return e&&e.isAtom},t.markAsAtomic=function(e){return Object.defineProperty(e,"isAtom",{enumerable:!1,value:!0,configurable:!1}),e},t.fastClone=function(e){return JSON.parse((0,n.stringify)(e))}},87247:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getClassName=t.keepNames=void 0;var n=o(42096);t.keepNames=new Map,t.getClassName=function(e){var o;if((0,n.isFunction)(e.className))return e.className();var r=(null===(o=e.constructor)||void 0===o?void 0:o.originalConstructor)||e.constructor;if(t.keepNames.has(r))return t.keepNames.get(r);if(r.name)return r.name;var i=new RegExp(/^\s*function\s*(\S*)\s*\(/),a=r.toString().match(i);return a?a[1]:""}},69384:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.get=void 0;var n=o(20255),r=o(24421),i=o(24021);t.get=function(e,t){var o,a;if(!(0,r.isString)(e)||!e.length)return null;var s=e.split("."),l=t;try{try{for(var c=n.__values(s),u=c.next();!u.done;u=c.next()){var d=u.value;if((0,i.isVoid)(l[d]))return null;l=l[d]}}catch(e){o={error:e}}finally{try{u&&!u.done&&(a=c.return)&&a.call(c)}finally{if(o)throw o.error}}}catch(e){return null}return(0,i.isVoid)(l)?null:l}},6102:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.humanSizeToBytes=void 0,t.humanSizeToBytes=function(e){if(/^[0-9.]+$/.test(e.toString()))return parseFloat(e);var t=e.substr(-2,2).toUpperCase(),o=["KB","MB","GB","TB"],n=parseFloat(e.substr(0,e.length-2));return-1!==o.indexOf(t)?n*Math.pow(1024,o.indexOf(t)+1):parseInt(e,10)}},76502:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(60303),t),n.__exportStar(o(62462),t),n.__exportStar(o(52378),t),n.__exportStar(o(37682),t),n.__exportStar(o(71567),t),n.__exportStar(o(48240),t),n.__exportStar(o(64981),t),n.__exportStar(o(42051),t),n.__exportStar(o(26911),t),n.__exportStar(o(2522),t),n.__exportStar(o(63122),t),n.__exportStar(o(93351),t),n.__exportStar(o(56964),t),n.__exportStar(o(7935),t),n.__exportStar(o(69384),t),n.__exportStar(o(87247),t),n.__exportStar(o(6102),t),n.__exportStar(o(47580),t),n.__exportStar(o(67285),t),n.__exportStar(o(21498),t),n.__exportStar(o(80861),t),n.__exportStar(o(9005),t),n.__exportStar(o(54188),t),n.__exportStar(o(21518),t),n.__exportStar(o(37228),t),n.__exportStar(o(67309),t),n.__exportStar(o(22362),t)},47580:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.markDeprecated=t.cns=void 0;var n=o(20255);t.cns=console,t.markDeprecated=function(e,o,r){return void 0===o&&(o=[""]),void 0===r&&(r=null),function(){for(var i=[],a=0;arguments.length>a;a++)i[a]=arguments[a];return t.cns.warn('Method "'.concat(o[0],'" deprecated.')+(o[1]?' Use "'.concat(o[1],'" instead'):"")),e.call.apply(e,n.__spreadArray([r],n.__read(i),!1))}}},67285:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseQuery=void 0,t.parseQuery=function(e){for(var t={},o=e.substring(1).split("&"),n=0;o.length>n;n+=1){var r=o[n].split("=");t[decodeURIComponent(r[0])]=decodeURIComponent(r[1]||"")}return t}},21498:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.previewBox=void 0;var n=o(24421),r=o(24263),i=o(26911),a=o(67309),s=o(54188);t.previewBox=function(e,t,o,l){void 0===o&&(o="px"),void 0===l&&(l=null);var c=function(e,t){var o=[];try{(0,s.$$)("img",e.editor).forEach((function(n){var i=[(0,a.attr)(n,"width"),(0,a.attr)(n,"height"),n.src];(0,a.attr)(n,{width:n.offsetWidth+t,height:n.offsetHeight+t});var s=e.createInside.a();e.ed.body.appendChild(s),s.href=n.src,n.src=s.href,r.Dom.safeRemove(s),o.push((function(){var e;n.src=null!==(e=i[2])&&void 0!==e?e:"",(0,a.attr)(n,{width:i[0]||null,height:i[1]||null})}))}))}catch(e){throw o.forEach((function(e){return e()})),o.length=0,e}return o}(e,o);try{var u=e.e.fire("beforePreviewBox",t,o);if(null!=u)return u;var d=e.c.div("jodit__preview-box jodit-context");l&&l.appendChild(d),(0,i.css)(d,{position:"relative",padding:16});var p=e.value||"<div style='position: absolute;left:50%;top:50%;transform: translateX(-50%) translateY(-50%);color:#ccc;'>".concat(e.i18n("Empty"),"</div>");if(e.iframe){var f=e.create.element("iframe");(0,i.css)(f,{minWidth:800,minHeight:600,border:0}),d.appendChild(f);var h=f.contentWindow;if(h&&(e.e.fire("generateDocumentStructure.iframe",h.document,e),d=h.document.body,"function"==typeof ResizeObserver)){var m=new ResizeObserver((function(e){f.style.height=h.document.body.offsetHeight+20+"px"}));m.observe(h.document.body),e.e.on("beforeDestruct",(function(){m.unobserve(h.document.body)}))}}else(0,i.css)(d,{minWidth:1024,minHeight:600,border:0});var v=function(t,o){var i=(0,n.isString)(o)?e.c.div():o;(0,n.isString)(o)&&(i.innerHTML=o);for(var s=0;i.childNodes.length>s;s+=1){var l=i.childNodes[s];if(r.Dom.isElement(l)){for(var c=t.ownerDocument.createElement(l.nodeName),u=0;l.attributes.length>u;u+=1)(0,a.attr)(c,l.attributes[u].nodeName,l.attributes[u].nodeValue);0===l.childNodes.length||r.Dom.isTag(l,["table"])?"SCRIPT"===l.nodeName?l.textContent&&(c.textContent=l.textContent):l.innerHTML&&(c.innerHTML=l.innerHTML):v(c,l);try{t.appendChild(c)}catch(e){}}else try{t.appendChild(l.cloneNode(!0))}catch(e){}}};return v(d,p),e.e.fire("afterPreviewBox",d),d}finally{c.forEach((function(e){return e()}))}}},80861:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.reset=void 0;var n=o(69384),r=o(42096),i={};t.reset=function(e){var t,o;if(!(e in i)){var a=document.createElement("iframe");try{if(a.src="about:blank",document.body.appendChild(a),!a.contentWindow)return null;var s=(0,n.get)(e,a.contentWindow),l=(0,n.get)(e.split(".").slice(0,-1).join("."),a.contentWindow);(0,r.isFunction)(s)&&(i[e]=s.bind(l))}catch(e){}finally{null===(t=a.parentNode)||void 0===t||t.removeChild(a)}}return null!==(o=i[e])&&void 0!==o?o:null}},9005:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scrollIntoViewIfNeeded=t.inView=void 0;var n=o(24263);t.inView=function(e,t,o){var n=e.getBoundingClientRect(),r=e,i=n.top,a=n.height;do{if(r&&r.parentNode){if((n=(r=r.parentNode).getBoundingClientRect()).bottom<i)return!1;if(n.top>=i+a)return!1}}while(r&&r!==t&&r.parentNode);return(o.documentElement&&o.documentElement.clientHeight||0)>=i},t.scrollIntoViewIfNeeded=function(e,o,r){n.Dom.isHTMLElement(e)&&!(0,t.inView)(e,o,r)&&(o.clientHeight!==o.scrollHeight&&(o.scrollTop=e.offsetTop),(0,t.inView)(e,o,r)||e.scrollIntoView())}},54188:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resolveElement=t.cssPath=t.refs=t.getXPathByElement=t.$$=void 0;var n=o(86893),r=o(24421),i=o(76502),a=o(24263),s=o(26596),l=o(1853),c=o(53929),u=o(45113),d=1;function p(e,t){var o;if(!/:scope/.test(e)||!n.IS_IE||t&&t.nodeType===Node.DOCUMENT_NODE)o=t.querySelectorAll(e);else{var r=t.id,i=r||"_selector_id_"+String(Math.random()).slice(2)+ ++d;e=e.replace(/:scope/g,"#"+i),!r&&t.setAttribute("id",i),o=t.parentNode.querySelectorAll(e),r||t.removeAttribute("id")}return[].slice.call(o)}t.$$=p,t.getXPathByElement=function(e,o){if(!e||e.nodeType!==Node.ELEMENT_NODE)return"";if(!e.parentNode||o===e)return"";if(e.id)return"//*[@id='"+e.id+"']";var n=[].filter.call(e.parentNode.childNodes,(function(t){return t.nodeName===e.nodeName}));return(0,t.getXPathByElement)(e.parentNode,o)+"/"+e.nodeName.toLowerCase()+(n.length>1?"["+((0,l.toArray)(n).indexOf(e)+1)+"]":"")},t.refs=function(e){return u.Component.isInstanceOf(e,c.UIElement)&&(e=e.container),p("[ref],[data-ref]",e).reduce((function(e,t){var o=(0,i.attr)(t,"-ref");return o&&(0,r.isString)(o)&&(e[(0,s.camelCase)(o)]=t,e[o]=t),e}),{})},t.cssPath=function(e){if(!a.Dom.isElement(e))return null;for(var t=[],o=e;o&&o.nodeType===Node.ELEMENT_NODE;){var n=o.nodeName.toLowerCase();if(o.id){t.unshift(n+="#"+o.id);break}var r=o,i=1;do{(r=r.previousElementSibling)&&r.nodeName.toLowerCase()===n&&i++}while(r);t.unshift(n+=":nth-of-type("+i+")"),o=o.parentNode}return t.join(" > ")},t.resolveElement=function(e,t){var o=e;if((0,r.isString)(e))try{o=t.querySelector(e)}catch(t){throw(0,i.error)('String "'+e+'" should be valid HTML selector')}if(!o||"object"!=typeof o||!a.Dom.isElement(o)||!o.cloneNode)throw(0,i.error)('Element "'+e+'" should be string or HTMLElement instance');return o}},21518:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.set=void 0;var n=o(24421),r=o(57649),i=o(49781),a=o(79736);t.set=function(e,t,o){if((0,n.isString)(e)&&e.length){for(var s=e.split("."),l=o,c=s[0],u=0;s.length-1>u;u+=1)(0,i.isArray)(l[c=s[u]])||(0,a.isPlainObject)(l[c])||(l[c]=(0,r.isNumeric)(s[u+1])?[]:{}),l=l[c];l&&(l[s[s.length-1]]=t)}}},37228:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LimitedStack=void 0;var o=function(){function e(e){this.limit=e,this.stack=[]}return e.prototype.push=function(e){return this.stack.push(e),this.stack.length>this.limit&&this.stack.shift(),this},e.prototype.pop=function(){return this.stack.pop()},e.prototype.find=function(e){return this.stack.find(e)},e}();t.LimitedStack=o},67309:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getDataTransfer=t.memorizeExec=t.keys=t.loadImage=t.callPromise=t.markOwner=t.attr=t.call=void 0;var n=o(20255),r=o(42096),i=o(26335),a=o(24021),s=o(79736),l=o(24421),c=o(63122),u=o(26911),d=o(11278);function p(e,t,o){if(!e||!(0,r.isFunction)(e.getAttribute))return null;if(!(0,l.isString)(t))return Object.keys(t).forEach((function(o){var n=t[o];(0,s.isPlainObject)(n)&&"style"===o?(0,u.css)(e,n):("className"===o&&(o="class"),p(e,o,n))})),null;var n=(0,d.CamelCaseToKebabCase)(t);if(/^-/.test(n)){var i=p(e,"data".concat(n));if(i)return i;n=n.substr(1)}if(void 0!==o){if(null!=o)return e.setAttribute(n,o.toString()),o.toString();e.hasAttribute(n)&&e.removeAttribute(n)}return e.getAttribute(n)}t.call=function(e){for(var t=[],o=1;arguments.length>o;o++)t[o-1]=arguments[o];return e.apply(void 0,n.__spreadArray([],n.__read(t),!1))},t.attr=p,t.markOwner=function(e,t){p(t,"data-editor_id",e.id),!t.component&&Object.defineProperty(t,"jodit",{value:e})},t.callPromise=function(e,t){return(0,i.isPromise)(e)?e.finally(t):t()},t.loadImage=function(e,t){return t.async.promise((function(o,n){var r=new Image,i=function(){t.e.off(r),null==n||n()},a=function(){t.e.off(r),o(r)};t.e.one(r,"load",a).one(r,"error",i).one(r,"abort",i),r.src=e,r.complete&&a()}))},t.keys=function(e,t){if(void 0===t&&(t=!0),t)return Object.keys(e);var o=[];for(var n in e)o.push(n);return o},t.memorizeExec=function(e,t,o,n){var r,i=o.control,s="button".concat(i.command),l=null!==(r=i.args&&i.args[0])&&void 0!==r?r:(0,c.dataBind)(e,s);if((0,a.isVoid)(l))return!1;(0,c.dataBind)(e,s,l),n&&(l=n(l)),e.execCommand(i.command,!1,null!=l?l:void 0)},t.getDataTransfer=function(e){if(e.clipboardData)return e.clipboardData;try{return e.dataTransfer||new DataTransfer}catch(e){return null}}},22362:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.val=void 0,t.val=function(e,t,o){var n=e.querySelector(t);return n?(o&&(n.value=o),n.value):""}},57549:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(44540),t),n.__exportStar(o(85605),t)},44540:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PluginSystem=void 0;var n=o(20255),r=o(10172),i=o(62462),a=o(12557),s=o(19035),l=o(67309),c=o(17332),u=function(){function e(){this._items=new Map}return e.prototype.normalizeName=function(e){return(0,s.kebabCase)(e).toLowerCase()},e.prototype.items=function(e){var t=[];return this._items.forEach((function(e,o){t.push([o,e])})),t.filter((function(t){var o=n.__read(t,1);return!e||e.includes(o[0])}))},e.prototype.add=function(e,t){this._items.set(this.normalizeName(e),t),c.eventEmitter.fire("plugin:".concat(e,":ready"))},e.prototype.get=function(e){return this._items.get(this.normalizeName(e))},e.prototype.remove=function(e){this._items.delete(this.normalizeName(e))},e.prototype.init=function(t){var o=this,i=t.o.extraPlugins.map((function(e){return(0,r.isString)(e)?{name:e}:e})),s=(0,a.splitArray)(t.o.disablePlugins).map((function(e){return o.normalizeName(e)})),c=[],u={},d=[],p={},f=function(i){var a=n.__read(i,2),l=a[0],f=a[1];if(!(s.includes(l)||c.includes(l)||u[l])){var h=null==f?void 0:f.requires;if(!(h&&(0,r.isArray)(h)&&o.hasDisabledRequires(s,h))){var m=e.makePluginInstance(t,f);m&&(o.initOrWait(t,l,m,c,u),d.push(m),p[l]=m)}}},h=this.loadExtras(t,i);return(0,l.callPromise)(h,(function(){t.isInDestruct||(o.items(t.o.safeMode?t.o.safePluginsList.concat(i.map((function(e){return e.name}))):null).forEach(f),o.addListenerOnBeforeDestruct(t,d),t.__plugins=p)}))},e.prototype.wait=function(e){var t=this;return new Promise((function(o){if(t.get(e))return o();var n=function(){o(),c.eventEmitter.off("plugin:".concat(e,":ready"),n)};c.eventEmitter.on("plugin:".concat(e,":ready"),n)}))},e.prototype.hasDisabledRequires=function(e,t){return Boolean((null==t?void 0:t.length)&&e.some((function(e){return t.includes(e)})))},e.makePluginInstance=function(e,t){try{try{return(0,r.isFunction)(t)?new t(e):t}catch(o){if((0,r.isFunction)(t)&&!t.prototype)return t(e)}}catch(e){}return null},e.prototype.initOrWait=function(t,o,n,i,a){var s=function(o,n){if((0,r.isInitable)(n)){var s=n.requires;if((null==s?void 0:s.length)&&!s.every((function(e){return i.includes(e)})))return a[o]=n,!1;try{n.init(t)}catch(e){}i.push(o)}else i.push(o);return n.hasStyle&&e.loadStyle(t,o),!0};s(o,n),Object.keys(a).forEach((function(e){var t=a[e];t&&s(e,t)&&(a[e]=void 0,delete a[e])}))},e.prototype.addListenerOnBeforeDestruct=function(e,t){e.e.on("beforeDestruct",(function(){t.forEach((function(t){(0,r.isDestructable)(t)&&t.destruct(e)})),t.length=0,delete e.__plugins}))},e.prototype.load=function(t,o){return Promise.all(o.map((function(o){var n=o.url||e.getFullUrl(t,o.name,!0);return(0,i.appendScriptAsync)(t,n).then((function(e){return{v:e,status:"fulfilled"}}),(function(e){return{e:e,status:"rejected"}}))})))},e.loadStyle=function(t,o){return n.__awaiter(this,void 0,Promise,(function(){var r;return n.__generator(this,(function(n){return r=e.getFullUrl(t,o,!1),this.styles.has(r)?[2]:(this.styles.add(r),[2,(0,i.appendStyleAsync)(t,r)])}))}))},e.getFullUrl=function(e,t,o){return t=(0,s.kebabCase)(t),e.basePath+"plugins/"+t+"/"+t+"."+(o?"js":"css")},e.prototype.loadExtras=function(e,t){var o=this;if(t&&t.length)try{var n=t.filter((function(e){return!o._items.has(o.normalizeName(e.name))}));if(n.length)return this.load(e,n)}catch(e){}},e.styles=new Set,e}();t.PluginSystem=u},85605:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Plugin=void 0;var n=o(20255),r=o(56562),i=o(43441),a=o(40332),s=function(e){function t(t){var o=e.call(this,t)||this;return o.requires=[],o.buttons=[],o.hasStyle=!1,t.e.on("afterPluginSystemInit",(function(){var e;(0,a.isJoditObject)(t)&&(null===(e=o.buttons)||void 0===e||e.forEach((function(e){t.registerButton(e)})))})).on("afterInit",(function(){o.setStatus(r.STATUSES.ready),o.afterInit(t)})).on("beforeDestruct",o.destruct),o}return n.__extends(t,e),t.prototype.className=function(){return""},t.prototype.init=function(e){},t.prototype.destruct=function(){var t,o,n;if(this.isReady){this.setStatus(r.STATUSES.beforeDestruct);var i=this.j;(0,a.isJoditObject)(i)&&(null===(t=this.buttons)||void 0===t||t.forEach((function(e){null==i||i.unregisterButton(e)}))),null===(n=null===(o=this.j)||void 0===o?void 0:o.events)||void 0===n||n.off("beforeDestruct",this.destruct),this.beforeDestruct(this.j),e.prototype.destruct.call(this)}},n.__decorate([i.autobind],t.prototype,"destruct",null),t}(r.ViewComponent);t.Plugin=s},9917:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Ajax=void 0;var n=o(20255),r=o(93166),i=o(40332),a=o(56964),s=o(86101),l=o(22630),c=o(43441);o(12144);var u=function(){function e(e,t){void 0===t&&(t=r.Config.prototype.defaultAjaxOptions),this.__async=new l.Async,this.__isFulfilled=!1,this.__activated=!1,this.__isDestructed=!1,this.options=(0,i.ConfigProto)(e||{},t),this.xhr=this.o.xhr?this.o.xhr():new XMLHttpRequest}return e.prototype.__buildParams=function(e,t){return(0,i.isPlainObject)(e)&&this.options.contentType&&this.options.contentType.includes("application/json")?JSON.stringify(e):(0,i.isFunction)(this.o.queryBuild)?this.o.queryBuild.call(this,e,t):(0,i.isString)(e)||e instanceof window.FormData||"object"==typeof e&&null!=e&&(0,i.isFunction)(e.append)?e:(0,i.buildQuery)(e)},Object.defineProperty(e.prototype,"o",{get:function(){return this.options},enumerable:!1,configurable:!0}),e.prototype.abort=function(){if(this.__isFulfilled)return this;try{this.__isFulfilled=!0,this.xhr.abort()}catch(e){}return this},e.prototype.send=function(){var e=this;this.__activated=!0;var t=this.xhr,o=this.o,r=this.prepareRequest();return this.__async.promise((function(l,c){return n.__awaiter(e,void 0,void 0,(function(){var e,u,d,p,f,h=this;return n.__generator(this,(function(n){switch(n.label){case 0:return e=function(){h.__isFulfilled=!0,c(a.connection("Connection error"))},t.onload=u=function(){h.__isFulfilled=!0,l(new s.Response(r,t.status,t.statusText,t.responseType?t.response:t.responseText))},t.onabort=function(){h.__isFulfilled=!0,c(a.abort("Abort connection"))},t.onerror=e,t.ontimeout=e,o.responseType&&(t.responseType=o.responseType),t.onprogress=function(e){var t,o,n=0;e.lengthComputable&&(n=e.loaded/e.total*100),null===(o=(t=h.options).onProgress)||void 0===o||o.call(t,n)},t.onreadystatechange=function(){var e,n;null===(n=(e=h.options).onProgress)||void 0===n||n.call(e,10),t.readyState===XMLHttpRequest.DONE&&(o.successStatuses.includes(t.status)?u():t.statusText&&(h.__isFulfilled=!0,c(a.connection(t.statusText))))},t.withCredentials=null!==(f=o.withCredentials)&&void 0!==f&&f,d=r.data,t.open(r.method,r.url,!0),o.contentType&&t.setRequestHeader&&t.setRequestHeader("Content-type",o.contentType),(0,i.isFunction)(p=o.headers)?[4,p.call(this)]:[3,2];case 1:p=n.sent(),n.label=2;case 2:return p&&t.setRequestHeader&&Object.keys(p).forEach((function(e){t.setRequestHeader(e,p[e])})),this.__async.setTimeout((function(){t.send(d?h.__buildParams(d):void 0)}),0),[2]}}))}))}))},e.prototype.prepareRequest=function(){if(!this.o.url)throw a.error("Need URL for AJAX request");var t=this.o.url,o=this.o.data,r=(this.o.method||"get").toLowerCase();if("get"===r&&o&&(0,i.isPlainObject)(o)){var s=t.indexOf("?");if(-1!==s){var l=(0,i.parseQuery)(t);t=t.substring(0,s)+"?"+(0,i.buildQuery)(n.__assign(n.__assign({},l),o))}else t+="?"+(0,i.buildQuery)(this.o.data)}var c={url:t,method:r,data:o};return e.log.splice(100),e.log.push(c),c},e.prototype.destruct=function(){this.__isDestructed||(this.__isDestructed=!0,this.__activated&&!this.__isFulfilled&&(this.abort(),this.__isFulfilled=!0),this.__async.destruct())},e.log=[],n.__decorate([c.autobind],e.prototype,"destruct",null),e}();t.Ajax=u},12144:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.defaultAjaxOptions={successStatuses:[200,201,202],method:"GET",url:"",data:null,contentType:"application/x-www-form-urlencoded; charset=UTF-8",headers:{"X-REQUESTED-WITH":"XMLHttpRequest"},withCredentials:!1,xhr:function(){return new XMLHttpRequest}}},30056:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(9917),t),n.__exportStar(o(86101),t)},86101:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Response=void 0;var n=o(20255),r=function(){function e(e,t,o,n){this.request=e,this.status=t,this.statusText=o,this.body=n}return Object.defineProperty(e.prototype,"url",{get:function(){return this.request.url},enumerable:!1,configurable:!0}),e.prototype.json=function(){return n.__awaiter(this,void 0,Promise,(function(){return n.__generator(this,(function(e){return[2,JSON.parse(this.body)]}))}))},e.prototype.text=function(){return Promise.resolve(this.body)},e.prototype.blob=function(){return n.__awaiter(this,void 0,Promise,(function(){return n.__generator(this,(function(e){return[2,this.body]}))}))},e}();t.Response=r},10109:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(287),t),n.__exportStar(o(10264),t)},287:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.moveNodeInsideStart=void 0;var n=o(64968),r=o(86893);t.moveNodeInsideStart=function(e,t,o){for(var i=n.Dom.findSibling(t,o),a=n.Dom.findSibling(t,!o);n.Dom.isElement(i)&&!n.Dom.isTag(i,r.INSEPARABLE_TAGS)&&n.Dom.isContentEditable(i,e.editor)&&(!a||!n.Dom.closest(t,n.Dom.isElement,e.editor));)o||!i.firstChild?i.appendChild(t):n.Dom.before(i.firstChild,t),i=n.Dom.sibling(t,o),a=n.Dom.sibling(t,!o)}},10264:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.moveTheNodeAlongTheEdgeOutward=void 0;var n=o(64968);t.moveTheNodeAlongTheEdgeOutward=function(e,t,o){for(var r=e;r&&r!==o;){if(n.Dom.findSibling(r,t))return;(r=r.parentElement)&&r!==o&&(t?n.Dom.before(r,e):n.Dom.after(r,e))}}},2123:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(70851),t),n.__exportStar(o(77627),t)},2047:function(){},77627:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Select=void 0;var n=o(20255),r=o(86893),i=o(86893),a=o(64968),s=o(40332),l=o(70851),c=o(43441),u=o(10109),d=(o(52378),o(10172));o(2047);var p=function(){function e(e){var t=this;this.jodit=e,e.e.on("removeMarkers",(function(){t.removeMarkers()}))}return Object.defineProperty(e.prototype,"j",{get:function(){return this.jodit},enumerable:!1,configurable:!0}),e.prototype.errorNode=function(e){if(!a.Dom.isNode(e))throw(0,s.error)("Parameter node must be instance of Node")},Object.defineProperty(e.prototype,"area",{get:function(){return this.j.editor},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"win",{get:function(){return this.j.ew},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"doc",{get:function(){return this.j.ed},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"sel",{get:function(){return this.j.o.shadowRoot&&(0,d.isFunction)(this.j.o.shadowRoot.getSelection)?this.j.o.shadowRoot.getSelection():this.win.getSelection()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"range",{get:function(){var e=this.sel;return e&&e.rangeCount?e.getRangeAt(0):this.createRange()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isInsideArea",{get:function(){var e=this.sel,t=(null==e?void 0:e.rangeCount)?e.getRangeAt(0):null;return!(!t||!a.Dom.isOrContains(this.area,t.startContainer))},enumerable:!1,configurable:!0}),e.prototype.createRange=function(e){void 0===e&&(e=!1);var t=this.doc.createRange();return e&&this.selectRange(t),t},e.prototype.remove=function(){var e=this.sel,t=this.current();if(e&&t)for(var o=0;e.rangeCount>o;o+=1)e.getRangeAt(o).deleteContents(),e.getRangeAt(o).collapse(!0)},e.prototype.clear=function(){var e,t;(null===(e=this.sel)||void 0===e?void 0:e.rangeCount)&&(null===(t=this.sel)||void 0===t||t.removeAllRanges())},e.prototype.removeNode=function(e){if(!a.Dom.isOrContains(this.j.editor,e,!0))throw(0,s.error)("Selection.removeNode can remove only editor's children");a.Dom.safeRemove(e),this.j.e.fire("afterRemoveNode",e)},e.prototype.insertCursorAtPoint=function(e,t){var o=this;this.removeMarkers();try{var n=this.createRange();return function(){if(o.doc.caretPositionFromPoint&&(r=o.doc.caretPositionFromPoint(e,t)))n.setStart(r.offsetNode,r.offset);else if(o.doc.caretRangeFromPoint){var r=o.doc.caretRangeFromPoint(e,t);n.setStart(r.startContainer,r.startOffset)}}(),n.collapse(!0),this.selectRange(n),!0}catch(e){}return!1},Object.defineProperty(e.prototype,"hasMarkers",{get:function(){return Boolean(this.markers.length)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"markers",{get:function(){return(0,s.$$)("span[data-"+r.MARKER_CLASS+"]",this.area)},enumerable:!1,configurable:!0}),e.prototype.removeMarkers=function(){a.Dom.safeRemove.apply(null,this.markers)},e.prototype.marker=function(e,t){void 0===e&&(e=!1);var o=null;t&&(o=t.cloneRange()).collapse(e);var n=this.j.createInside.span();return n.id=r.MARKER_CLASS+"_"+Number(new Date)+"_"+String(Math.random()).slice(2),n.style.lineHeight="0",n.style.display="none",a.Dom.markTemporary(n),(0,s.attr)(n,"data-"+r.MARKER_CLASS,e?"start":"end"),n.appendChild(this.j.createInside.text(r.INVISIBLE_SPACE)),o&&a.Dom.isOrContains(this.area,e?o.startContainer:o.endContainer)&&o.insertNode(n),n},e.prototype.restore=function(){var e=!1,t=function(e){return"span[data-".concat(r.MARKER_CLASS,"=").concat(e?"start":"end","]")},o=this.area.querySelector(t(!0)),n=this.area.querySelector(t(!1));if(o){if(e=this.createRange(),n)e.setStartAfter(o),a.Dom.safeRemove(o),e.setEndBefore(n),a.Dom.safeRemove(n);else{var i=o.previousSibling;a.Dom.isText(i)?e.setStart(i,i.nodeValue?i.nodeValue.length:0):e.setStartBefore(o),a.Dom.safeRemove(o),e.collapse(!0)}e&&this.selectRange(e)}},e.prototype.save=function(e){if(void 0===e&&(e=!1),this.hasMarkers)return[];var t=this.sel;if(!t||!t.rangeCount)return[];for(var o=[],n=t.rangeCount,r=[],i=0;n>i;i+=1)if(r[i]=t.getRangeAt(i),r[i].collapsed){var a=this.marker(!0,r[i]);o[i]={startId:a.id,collapsed:!0,startMarker:a.outerHTML}}else{a=this.marker(!0,r[i]);var s=this.marker(!1,r[i]);o[i]={startId:a.id,endId:s.id,collapsed:!1,startMarker:a.outerHTML,endMarker:s.outerHTML}}if(!e)for(t.removeAllRanges(),i=n-1;i>=0;--i){var l=this.doc.getElementById(o[i].startId);if(l)if(o[i].collapsed)r[i].setStartAfter(l),r[i].collapse(!0);else if(r[i].setStartBefore(l),o[i].endId){var c=this.doc.getElementById(o[i].endId);c&&r[i].setEndAfter(c)}try{t.addRange(r[i].cloneRange())}catch(e){}}return o},e.prototype.focus=function(e){var t,o;if(void 0===e&&(e={preventScroll:!0}),!this.isFocused()){var n=(0,s.getScrollParent)(this.j.container),r=null==n?void 0:n.scrollTop;this.j.iframe&&"complete"===this.doc.readyState&&this.j.iframe.focus(e),this.win.focus(),this.area.focus(e),r&&(null==n?void 0:n.scrollTo)&&n.scrollTo(0,r);var i=this.sel,l=(null==i?void 0:i.rangeCount)?null==i?void 0:i.getRangeAt(0):null;if(!l||!a.Dom.isOrContains(this.area,l.startContainer)){var c=this.createRange();c.setStart(this.area,0),c.collapse(!0),this.selectRange(c,!1)}return this.j.editorIsActive||null===(o=null===(t=this.j)||void 0===t?void 0:t.events)||void 0===o||o.fire("focus"),!0}return!1},e.prototype.isCollapsed=function(){for(var e=this.sel,t=0;e&&e.rangeCount>t;t+=1)if(!e.getRangeAt(t).collapsed)return!1;return!0},e.prototype.isFocused=function(){return this.doc.hasFocus&&this.doc.hasFocus()&&this.area===this.doc.activeElement},e.prototype.current=function(e){if(void 0===e&&(e=!0),this.j.getRealMode()===r.MODE_WYSIWYG){var t=this.sel;if(!t||0===t.rangeCount)return null;var o=t.getRangeAt(0),n=o.startContainer,i=!1,s=function(e){return i?e.lastChild:e.firstChild};if(a.Dom.isTag(n,"br")&&t.isCollapsed)return n;if(!a.Dom.isText(n)){if((n=o.startContainer.childNodes[o.startOffset])||(n=o.startContainer.childNodes[o.startOffset-1],i=!0),n&&t.isCollapsed&&!a.Dom.isText(n))if(!i&&a.Dom.isText(n.previousSibling))n=n.previousSibling;else if(e)for(var l=s(n);l;){if(l&&a.Dom.isText(l)){n=l;break}l=s(l)}if(n&&!t.isCollapsed&&!a.Dom.isText(n)){var c=n,u=n;do{c=c.firstChild,u=u.lastChild}while(c&&u&&!a.Dom.isText(c));c===u&&c&&a.Dom.isText(c)&&(n=c)}}if(n&&a.Dom.isOrContains(this.area,n))return n}return null},e.prototype.insertNode=function(e,t,o){var n=this;void 0===t&&(t=!0),void 0===o&&(o=!0),this.errorNode(e),this.j.e.fire("safeHTML",e),!this.isFocused()&&this.j.isEditorMode()&&(this.focus(),this.restore());var r=this.sel;this.j.history.snapshot.transaction((function(){var o;if(n.isCollapsed()||n.j.execCommand("Delete"),n.j.e.fire("beforeInsertNode",e),r&&r.rangeCount){var s=r.getRangeAt(0);a.Dom.isOrContains(n.area,s.commonAncestorContainer)?a.Dom.isTag(s.startContainer,i.INSEPARABLE_TAGS)&&s.collapsed?null===(o=s.startContainer.parentNode)||void 0===o||o.insertBefore(e,s.startContainer):a.Dom.safeInsertNode(s,e):n.area.appendChild(e)}else n.area.appendChild(e);t&&(e.nodeType===Node.DOCUMENT_FRAGMENT_NODE?e.lastChild&&n.setCursorAfter(e.lastChild):n.setCursorAfter(e))})),o&&this.j.events&&this.j.__imdSynchronizeValues(),this.j.events&&this.j.e.fire("afterInsertNode",e)},e.prototype.insertHTML=function(e,t){if(void 0===t&&(t=!0),""!==e){var o,n=this.j.createInside.div(),r=this.j.createInside.fragment();if(!this.isFocused()&&this.j.isEditorMode()&&(this.focus(),this.restore()),a.Dom.isNode(e)?n.appendChild(e):n.innerHTML=e.toString(),(this.j.isEditorMode()||!1!==this.j.e.fire("insertHTML",n.innerHTML))&&(o=n.lastChild)){for(;n.firstChild;)o=n.firstChild,r.appendChild(n.firstChild);this.insertNode(r.firstChild&&r.firstChild===r.lastChild?r.lastChild:r,!1,!1),t&&(o?this.setCursorAfter(o):this.setCursorIn(r)),this.j.__imdSynchronizeValues()}}},e.prototype.insertImage=function(e,t,o){void 0===t&&(t=null),void 0===o&&(o=null);var n=(0,d.isString)(e)?this.j.createInside.element("img"):e;if((0,d.isString)(e)&&n.setAttribute("src",e),null!=o){var r=o.toString();r&&"auto"!==r&&0>String(r).indexOf("px")&&0>String(r).indexOf("%")&&(r+="px"),(0,s.call)(this.j.o.resizer.forImageChangeAttributes?s.attr:s.css,n,"width",r)}t&&"object"==typeof t&&(0,s.css)(n,t);var i=function(){(n.offsetHeight>n.naturalHeight||n.offsetWidth>n.naturalWidth)&&(n.style.width="",n.style.height=""),n.removeEventListener("load",i)};this.j.e.on(n,"load",i),n.complete&&i(),this.insertNode(n),this.j.e.fire("afterInsertImage",n)},e.prototype.eachSelection=function(e){var t,o=this,n=this.sel;if(n&&n.rangeCount){var r=n.getRangeAt(0),l=r.commonAncestorContainer;a.Dom.isHTMLElement(l)||(l=l.parentElement);var c=[],u=r.startOffset,p=l.childNodes.length,f=r.startContainer===this.area?l.childNodes[p>u?u:p-1]:r.startContainer,h=r.endContainer===this.area?l.childNodes[r.endOffset-1]:r.endContainer;a.Dom.isText(f)&&f===r.startContainer&&r.startOffset===(null===(t=f.nodeValue)||void 0===t?void 0:t.length)&&f.nextSibling&&(f=f.nextSibling),a.Dom.isText(h)&&h===r.endContainer&&0===r.endOffset&&h.previousSibling&&(h=h.previousSibling);var m=function(e){!e||e===l||a.Dom.isEmptyTextNode(e)||(0,d.isMarker)(e)||c.push(e)};m(f),f!==h&&a.Dom.isOrContains(l,f,!0)&&a.Dom.find(f,(function(e){return m(e),e===h||e&&e.contains&&e.contains(h)}),l,!0,!1);var v=function(t){if(a.Dom.isOrContains(o.j.editor,t,!0)){if(t.nodeName.match(/^(UL|OL)$/))return(0,s.toArray)(t.childNodes).forEach(v);if(a.Dom.isTag(t,"li"))if(t.firstChild)t=t.firstChild;else{var n=o.j.createInside.text(i.INVISIBLE_SPACE);t.appendChild(n),t=n}e(t)}};0===c.length&&a.Dom.isEmptyTextNode(f)&&c.push(f),0===c.length&&f.firstChild&&c.push(f.firstChild),c.forEach(v)}},e.prototype.cursorInTheEdge=function(e,t){var o,n,r=this,l=!e,c=null===(o=this.sel)||void 0===o?void 0:o.getRangeAt(0),u=this.current(!1);if(!c||!u||!a.Dom.isOrContains(t,u,!0))return null;var d=e?c.startContainer:c.endContainer,p=e?c.startOffset:c.endOffset,f=function(e){return Boolean(e&&!a.Dom.isTag(e,"br")&&!a.Dom.isEmptyTextNode(e)&&!a.Dom.isTemporary(e)&&!(a.Dom.isElement(e)&&!0===r.j.e.fire("isInvisibleForCursor",e)))};if(a.Dom.isText(d)){var h=(null===(n=d.nodeValue)||void 0===n?void 0:n.length)?d.nodeValue:"";if(l&&h.replace((0,i.INVISIBLE_SPACE_REG_EXP_END)(),"").length>p)return!1;var m=(0,i.INVISIBLE_SPACE_REG_EXP_START)().exec(h);if(e&&(m&&p>m[0].length||!m&&p>0))return!1}else{var v=(0,s.toArray)(d.childNodes);if(l){if(v.slice(p).some(f))return!1}else if(v.slice(0,p).some(f))return!1}for(var g=u;g&&g!==t;){var y=a.Dom.sibling(g,e);if(y){if((g=y)&&f(g))return!1}else g=g.parentNode}return!0},e.prototype.cursorOnTheLeft=function(e){return this.cursorInTheEdge(!0,e)},e.prototype.cursorOnTheRight=function(e){return this.cursorInTheEdge(!1,e)},e.prototype.setCursorAfter=function(e){return this.setCursorNearWith(e,!1)},e.prototype.setCursorBefore=function(e){return this.setCursorNearWith(e,!0)},e.prototype.setCursorNearWith=function(e,t){var o,n,i=this;if(this.errorNode(e),!a.Dom.up(e,(function(e){return e===i.area||e&&e.parentNode===i.area}),this.area))throw(0,s.error)("Node element must be in editor");var l=this.createRange(),c=null;return a.Dom.isText(e)?t?l.setStart(e,0):l.setEnd(e,null!==(n=null===(o=e.nodeValue)||void 0===o?void 0:o.length)&&void 0!==n?n:0):(c=this.j.createInside.text(r.INVISIBLE_SPACE),t?l.setStartBefore(e):l.setEndAfter(e),l.collapse(t),a.Dom.safeInsertNode(l,c),l.selectNode(c)),l.collapse(t),this.selectRange(l),c},e.prototype.setCursorIn=function(e,t){var o=this;if(void 0===t&&(t=!1),this.errorNode(e),!a.Dom.up(e,(function(e){return e===o.area||e&&e.parentNode===o.area}),this.area))throw(0,s.error)("Node element must be in editor");var n=this.createRange(),i=e,l=e;do{if(a.Dom.isText(i))break;l=i,i=t?i.firstChild:i.lastChild}while(i);if(!i){var c=this.j.createInside.text(r.INVISIBLE_SPACE);/^(img|br|input)$/i.test(l.nodeName)?i=l:(l.appendChild(c),l=c)}return n.selectNodeContents(i||l),n.collapse(t),this.selectRange(n),l},e.prototype.selectRange=function(e,t){void 0===t&&(t=!0);var o=this.sel;return t&&!this.isFocused()&&this.focus(),o&&(o.removeAllRanges(),o.addRange(e)),this.j.e.fire("changeSelection"),this},e.prototype.select=function(e,t){var o=this;if(void 0===t&&(t=!1),this.errorNode(e),!a.Dom.up(e,(function(e){return e===o.area||e&&e.parentNode===o.area}),this.area))throw(0,s.error)("Node element must be in editor");var n=this.createRange();return n[t?"selectNodeContents":"selectNode"](e),this.selectRange(n)},Object.defineProperty(e.prototype,"html",{get:function(){var e=this.sel;if(e&&e.rangeCount>0){var t=e.getRangeAt(0).cloneContents(),o=this.j.createInside.div();return o.appendChild(t),o.innerHTML}return""},enumerable:!1,configurable:!0}),e.prototype.wrapInTagGen=function(){var e,t,o,r,l,c,u,p,f,h,m;return n.__generator(this,(function(v){switch(v.label){case 0:return this.isCollapsed()?(c=this.jodit.createInside.element("font",i.INVISIBLE_SPACE),this.insertNode(c,!1,!1),e=n.__read(this.markers,1),(t=e[0])?c.appendChild(t):(this.setCursorIn(c),this.save()),[4,c]):[3,2];case 1:return v.sent(),a.Dom.unwrap(c),[2];case 2:(0,s.$$)("*[style*=font-size]",this.area).forEach((function(e){return(0,s.attr)(e,"data-font-size",e.style.fontSize.toString())})),this.isCollapsed()?(c=this.j.createInside.element("font"),(0,s.attr)(c,"size",7),this.insertNode(c,!1,!1)):this.j.nativeExecCommand("fontsize",!1,"7"),(0,s.$$)("*[data-font-size]",this.area).forEach((function(e){var t=(0,s.attr)(e,"data-font-size");t&&(e.style.fontSize=t,(0,s.attr)(e,"data-font-size",null))})),o=(0,s.$$)('font[size="7"]',this.area),v.label=3;case 3:v.trys.push([3,8,9,10]),r=n.__values(o),l=r.next(),v.label=4;case 4:return l.done?[3,7]:(p=(c=l.value).lastChild,(u=c.firstChild)&&u===p&&(0,d.isMarker)(u)?(a.Dom.unwrap(c),[3,6]):(u&&(0,d.isMarker)(u)&&a.Dom.before(c,u),p&&(0,d.isMarker)(p)&&a.Dom.after(c,p),[4,c]));case 5:v.sent(),a.Dom.unwrap(c),v.label=6;case 6:return l=r.next(),[3,4];case 7:return[3,10];case 8:return f=v.sent(),h={error:f},[3,10];case 9:try{l&&!l.done&&(m=r.return)&&m.call(r)}finally{if(h)throw h.error}return[7];case 10:return[2]}}))},e.prototype.wrapInTag=function(e){var t,o,r=[];try{for(var i=n.__values(this.wrapInTagGen()),s=i.next();!s.done;s=i.next()){var l=s.value;try{if(l.firstChild&&l.firstChild===l.lastChild&&(0,d.isMarker)(l.firstChild))continue;(0,d.isFunction)(e)?e(l):r.push(a.Dom.replace(l,e,this.j.createInside))}finally{var c=l.parentNode;c&&(a.Dom.unwrap(l),a.Dom.isEmpty(c)&&a.Dom.unwrap(c))}}}catch(e){t={error:e}}finally{try{s&&!s.done&&(o=i.return)&&o.call(i)}finally{if(t)throw t.error}}return r},e.prototype.commitStyle=function(e){new l.CommitStyle(e).apply(this.j)},e.prototype.applyStyle=function(e,t){void 0===t&&(t={}),this.commitStyle(n.__assign({style:e},t))},e.prototype.splitSelection=function(e){if(!this.isCollapsed())return null;var t=this.createRange(),o=this.range;t.setStartBefore(e);var n=this.cursorOnTheRight(e),r=this.cursorOnTheLeft(e),s=this.j.createInside.element("br"),l=this.j.createInside.text(i.INVISIBLE_SPACE),c=l.cloneNode();try{if(n||r){a.Dom.safeInsertNode(o,s);var u=function(e,t){for(var o=t(e);o;){var n=t(o);if(!o||!a.Dom.isTag(o,"br")&&!a.Dom.isEmptyTextNode(o))break;a.Dom.safeRemove(o),o=n}};u(s,(function(e){return e.nextSibling})),u(s,(function(e){return e.previousSibling})),a.Dom.after(s,c),a.Dom.before(s,l),n?(t.setEndBefore(s),o.setEndBefore(s)):(t.setEndAfter(s),o.setEndAfter(s))}else t.setEnd(o.startContainer,o.startOffset);var d=t.extractContents(),p=function(e){return a.Dom.each(e,(function(e){return a.Dom.isEmptyTextNode(e)&&a.Dom.safeRemove(e)}))};if(e.parentNode)try{if(p(d),p(e),e.parentNode.insertBefore(d,e),n&&(null==s?void 0:s.parentNode)){var f=this.createRange();f.setStartBefore(s),this.selectRange(f)}}catch(e){}var h=function(e){var t,o,n;(null===(t=null==e?void 0:e.parentNode)||void 0===t?void 0:t.firstChild)===(null===(o=null==e?void 0:e.parentNode)||void 0===o?void 0:o.lastChild)&&(null===(n=null==e?void 0:e.parentNode)||void 0===n||n.appendChild(s.cloneNode()))};h(l),h(c)}finally{a.Dom.safeRemove(l),a.Dom.safeRemove(c)}return e.previousElementSibling},e.prototype.expandSelection=function(){var e=this;if(this.isCollapsed())return this;var t=this.range,o=t.cloneRange();if(!a.Dom.isOrContains(this.j.editor,t.commonAncestorContainer,!0))return this;var n=function(o){var n=e.j.createInside.fake(),r=t.cloneRange();return r.collapse(o),a.Dom.safeInsertNode(r,n),(0,u.moveTheNodeAlongTheEdgeOutward)(n,o,e.j.editor),n},r=n(!0),i=n(!1);o.setStartAfter(r),o.setEndBefore(i);var s=a.Dom.findSibling(r,!1),l=a.Dom.findSibling(i,!0);if(s!==l){var c=a.Dom.isElement(s)&&a.Dom.isOrContains(s,i),d=!c&&a.Dom.isElement(l)&&a.Dom.isOrContains(l,r);if(c||d){for(var p=c?s:l,f=p;a.Dom.isElement(p);)(p=c?p.firstElementChild:p.lastElementChild)&&a.Dom.isOrContains(p,c?i:r)&&(f=p);c?o.setStart(f,0):o.setEnd(f,f.childNodes.length)}}return this.selectRange(o),a.Dom.safeRemove(r,i),this},n.__decorate([c.autobind],e.prototype,"createRange",null),n.__decorate([c.autobind],e.prototype,"focus",null),n.__decorate([c.autobind],e.prototype,"setCursorAfter",null),n.__decorate([c.autobind],e.prototype,"setCursorBefore",null),n.__decorate([c.autobind],e.prototype,"setCursorIn",null),e}();t.Select=p},77846:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractSelectedPart=void 0;var n=o(67309),r=o(33941),i=o(24263),a=o(37204);function s(e,t,o){var a=t.extractContents();a.textContent&&(0,r.trim)(a.textContent).length||!a.firstChild||i.Dom.unwrap(a.firstChild),e.parentNode&&(0,n.call)(o?i.Dom.before:i.Dom.after,e,a)}t.extractSelectedPart=function(e,t,o){var n=o.s.createRange(),r=(0,a.isMarker)(t.previousSibling)?t.previousSibling:t;n.setStartBefore(e),n.setEndBefore(r),s(e,n,!0);var i=(0,a.isMarker)(t.nextSibling)?t.nextSibling:t;n.setStartAfter(i),n.setEndAfter(e),s(e,n,!1)}},95901:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FiniteStateMachine=void 0,o(24421),o(603);var n=function(){function e(e,t){this.transitions=t,this.silent=!0,this.__previewsStates=new Set,this.setState(e)}return e.prototype.setState=function(e){this.__previewsStates.add(e),this.__state=e},e.prototype.getState=function(){return this.__state},e.prototype.disableSilent=function(){this.silent=!1},e.prototype.dispatch=function(e,t){var o=this.transitions[this.getState()][e];if(o){var n=o.call(this,t);return this.setState(n.next),n}throw new Error("invalid action: ".concat(this.getState(),".").concat(e.toString()))},e}();t.FiniteStateMachine=n},65774:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getSuitChild=void 0;var n=o(24263),r=o(63150),i=o(74477);t.getSuitChild=function(e,t){for(var o=t.firstChild;o&&!(0,r.isNormalNode)(o);)if(!(o=o.nextSibling))return null;return o&&!n.Dom.next(o,r.isNormalNode,t)&&(0,i.isSuitElement)(e,o,!1)?o:null}},66277:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getSuitParent=void 0;var n=o(24263),r=o(63150),i=o(74477);t.getSuitParent=function e(t,o,a){var s=o.parentNode;return s===a||!n.Dom.isHTMLElement(s)||n.Dom.next(o,r.isNormalNode,s)||n.Dom.prev(o,r.isNormalNode,s)?null:t.isElementCommit&&t.elementIsBlock&&!n.Dom.isBlock(s)?e(t,s,a):!(0,i.isSuitElement)(t,s,!1)||n.Dom.isBlock(s)&&!t.elementIsBlock?t.isElementCommit&&!n.Dom.isBlock(s)?e(t,s,a):null:s}},18387:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasSameStyleKeys=t.hasSameStyle=void 0;var n=o(26911),r=o(24021),i=o(49353),a=o(24263);o(52378),t.hasSameStyle=function(e,t){return Boolean(!a.Dom.isTag(e,"font")&&a.Dom.isHTMLElement(e)&&Object.keys(t).every((function(o){var a=(0,n.css)(e,o,!0);return""===a&&(""===t[o]||null==t[o])||!(0,r.isVoid)(a)&&""!==a&&!(0,r.isVoid)(t[o])&&(0,i.normalizeCssValue)(o,t[o]).toString().toLowerCase()===a.toString().toLowerCase()})))},document.createElement("div").style.color="red",t.hasSameStyleKeys=function(e,t){return Boolean(!a.Dom.isTag(e,"font")&&a.Dom.isHTMLElement(e)&&Object.keys(t).every((function(t){var o=(0,n.css)(e,t,!0);return!(0,r.isVoid)(o)})))}},66162:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(93217),t),n.__exportStar(o(11651),t),n.__exportStar(o(29271),t),n.__exportStar(o(18387),t),n.__exportStar(o(77846),t),n.__exportStar(o(95901),t),n.__exportStar(o(65774),t),n.__exportStar(o(66277),t),n.__exportStar(o(76991),t),n.__exportStar(o(47508),t),n.__exportStar(o(63150),t),n.__exportStar(o(74477),t),n.__exportStar(o(26707),t),n.__exportStar(o(8298),t),n.__exportStar(o(6278),t)},76991:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isInsideInvisibleElement=void 0;var n=o(24263);t.isInsideInvisibleElement=function(e,t){return Boolean(n.Dom.closest(e,["style","script"],t))}},63150:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNormalNode=void 0;var n=o(24263),r=o(37204);t.isNormalNode=function(e){return Boolean(e&&!n.Dom.isEmptyTextNode(e)&&!n.Dom.isTemporary(e)&&!(0,r.isMarker)(e))}},47508:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.elementsEqualAttributes=t.isSameAttributes=void 0;var n=o(76502),r=o(16492),i=(o(52378),o(18387));t.isSameAttributes=function(e,t){return!e.attributes.length&&!(0,r.size)(t)||!(0,r.size)(t)||Object.keys(t).every((function(o){return"class"===o?e.classList.contains(t[o]):"style"===o?(0,i.hasSameStyle)(e,t[o]):(0,n.attr)(e,o)===t[o]}))},t.elementsEqualAttributes=function(e,t){return e.attributes.length===t.attributes.length&&Array.from(e.attributes).every((function(e){return t.hasAttribute(e.name)&&t.getAttribute(e.name)===e.value}))}},74477:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isSameStyleChild=t.findSuitClosest=t.isSuitElement=void 0;var n=o(24263),r=o(63150),i=o(18387);function a(e,t,o){var a;if(!t)return!1;var s=e.element,l=e.elementIsDefault,c=e.options,u=Boolean((null===(a=c.attributes)||void 0===a?void 0:a.style)&&(0,i.hasSameStyle)(t,c.attributes.style)),d=t.nodeName.toLowerCase()===s||n.Dom.isTag(t,["ul","ol"])&&e.elementIsList;return!((l&&o||!d)&&(!u||!(0,r.isNormalNode)(t)||e.elementIsList))||Boolean(!d&&!o&&l&&n.Dom.isInlineBlock(t))}t.isSuitElement=a,t.findSuitClosest=function(e,t,o){return n.Dom.closest(t,(function(t){return a(e,t,!0)}),o)},t.isSameStyleChild=function(e,t){var o,n,a=e.element,s=e.options;if(!t||!(0,r.isNormalNode)(t))return!1;var l=t.nodeName.toLowerCase()===a,c=Boolean((null===(o=s.attributes)||void 0===o?void 0:o.style)&&(0,i.hasSameStyleKeys)(t,null===(n=s.attributes)||void 0===n?void 0:n.style));return l&&c}},11651:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.toggleOrderedList=void 0;var n=o(24263),r=(o(52378),o(77846)),i=o(70851),a=o(93217),s=o(66162);function l(e,t,o,a,s){return a.e.fire("".concat(i._PREFIX,"BeforeUnwrapList"),e,t,s)||((0,r.extractSelectedPart)(t,o,a),n.Dom.unwrap(o.parentElement),n.Dom.replace(o,a.o.enter,a.createInside))}t.toggleOrderedList=function(e,t,o,n){if(!t)return n;var r=t.parentElement;if(!r)return n;var c=o.e.fire("".concat(i._PREFIX,"BeforeToggleList"),n,e,r);if(void 0!==c)return c;var u=o.e.fire.bind(o.e,"".concat(i._PREFIX,"AfterToggleList"));if(n!==i.UNWRAP){var d=(0,a.toggleAttributes)(e,t.parentElement,o,i.INITIAL,!0)===i.CHANGE;if(n===i.REPLACE||d||r.tagName.toLowerCase()!==e.element){var p=l(i.REPLACE,r,t,o,e),f=(0,s.wrapList)(e,p,o);return u(i.REPLACE,f,e),i.REPLACE}}var h=l(i.UNWRAP,r,t,o,e);return u(i.UNWRAP,h,e),i.UNWRAP}},29271:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wrapList=void 0;var n=o(64968),r=o(70851),i=o(66162);t.wrapList=function(e,t,o){var a=o.e.fire("".concat(r._PREFIX,"BeforeWrapList"),r.REPLACE,t,e),s=null!=a?a:n.Dom.replace(t,"li",o.createInside),l=s.previousElementSibling,c=s.nextElementSibling,u=n.Dom.isTag(l,e.element)?l:null;return null!=u||(u=n.Dom.isTag(c,e.element)?c:null),n.Dom.isTag(u,["ul","ol"])&&(0,i.isSameAttributes)(u,e.options.attributes)||(u=o.createInside.element(e.element),(0,i.toggleAttributes)(e,u,o,r.INITIAL),n.Dom.before(s,u)),l===u?n.Dom.append(u,s):n.Dom.prepend(u,s),n.Dom.isTag(u.nextElementSibling,e.element)&&(0,i.elementsEqualAttributes)(u,u.nextElementSibling)&&(n.Dom.append(u,Array.from(u.nextElementSibling.childNodes)),n.Dom.safeRemove(u.nextElementSibling)),o.e.fire("".concat(r._PREFIX,"AfterWrapList"),r.WRAP,u,e),u}},93217:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.toggleAttributes=void 0;var n=o(76502),r=o(26911),i=o(63122),a=o(11278),s=o(49353),l=o(16492),c=o(24263),u=o(70851),d=o(17332),p=(o(10172),"toggleAttributes");function f(e,t,o){return(0,n.attr)(t,"style")||((0,n.attr)(t,"style",null),t.tagName.toLowerCase()===e.defaultTag&&(c.Dom.unwrap(t),o=u.UNWRAP)),o}t.toggleAttributes=function(e,t,o,h,m){if(void 0===m&&(m=!1),!m&&e.isApplied(t,p))return h;!m&&e.setApplied(t,p);var v=e.options.attributes;return v&&(0,l.size)(v)>0&&Object.keys(v).forEach((function(l){var p=v[l];switch(l){case"style":h=function(e,t,o,n,l,p){return Object.keys(o).forEach((function(h){var m=n.style.getPropertyValue((0,a.kebabCase)(h)),v=o[h];if(""!==m||null!=v){if(function(e,t,o){var n=e.create.element(t.tagName.toLowerCase());n.style.cssText=t.style.cssText,function(e){var t;if(void 0!==(0,i.dataBind)(e,"shadowRoot"))return(0,i.dataBind)(e,"shadowRoot");var o=(0,d.getContainer)(e),n=document.createElement("iframe");(0,r.css)(n,{width:0,height:0,position:"absolute",border:0}),n.src="about:blank",o.appendChild(n);var a=null===(t=n.contentWindow)||void 0===t?void 0:t.document,s=a?a.body:e.od.body;return(0,i.dataBind)(e,"shadowRoot",s),s}(e).appendChild(n);var a=(0,r.css)(n,o);return c.Dom.safeRemove(n),a}(t,n,h)===(0,s.normalizeCssValue)(h,v)){if(!m)return;return!l&&(0,r.css)(n,h,null),void(p=f(e,n,p=u.UNSET))}p=u.CHANGE,l||((0,r.css)(n,h,v),p=f(e,n,p))}})),p}(e,o,p,t,m,h);break;case"class":h=function(e,t,o,r,i){var a=e.e.fire.bind(e.e,"".concat(u._PREFIX,"AfterToggleAttribute"));return o.classList.contains(t.toString())?(r=u.UNSET,i||(o.classList.remove(t),0===o.classList.length&&((0,n.attr)(o,"class",null),a(r,o,"class",null)))):(r=u.CHANGE,i||(o.classList.add(t),a(r,o,"class",t))),r}(o,p,t,h,m);break;default:h=function(e,t,o,r,i,a){var s=e.e.fire.bind(e.e,"".concat(u._PREFIX,"AfterToggleAttribute"));return(0,n.attr)(o,r)===t?(!i&&(0,n.attr)(o,r,null),a=u.UNSET,!i&&s(a,o,r,t),a):(a=u.CHANGE,i||((0,n.attr)(o,r,t),s(a,o,r,t)),a)}(o,p,t,l,m,h)}})),h}},26707:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.unwrapChildren=void 0;var n=o(24263),r=o(40332),i=o(18387),a=o(74477);t.unwrapChildren=function(e,t){var o,s,l=[],c=[],u=null===(o=e.options.attributes)||void 0===o?void 0:o.style;if(t.firstChild)for(var d=n.Dom.eachGen(t),p=d.next(),f=function(){var t=p.value;!(0,a.isSuitElement)(e,t,!0)||u&&!(0,i.hasSameStyleKeys)(t,u)?u&&(0,a.isSameStyleChild)(e,t)?(void 0===s&&(s=!1),c.push((function(){(0,r.css)(t,Object.keys(u).reduce((function(e,t){return e[t]=null,e}),{})),(0,r.attr)(t,"style")||(0,r.attr)(t,"style",null),(0,r.attr)(t,"style")||t.nodeName.toLowerCase()!==e.element||l.push(t)}))):n.Dom.isEmptyTextNode(t)||void 0===s&&(s=!1):(void 0===s&&(s=!0),l.push(t)),p=d.next()};!p.done;)f();return c.forEach((function(e){return e()})),l.forEach(n.Dom.unwrap),Boolean(s)}},6278:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wrapUnwrappedText=void 0;var n=o(24263),r=o(37204);t.wrapUnwrappedText=function(e,t,o){var i=o.editor,a=o.createInside,s=function(e,t){void 0===t&&(t="previousSibling");for(var a=e,s=e;s&&!(0,r.isMarker)(s)&&!n.Dom.isTag(s,o.o.enter)&&(a=s,s=s[t]?s[t]:s.parentNode&&!n.Dom.isBlock(s.parentNode)&&s.parentNode!==i?s.parentNode:null,!n.Dom.isBlock(s)););return a},l=s(t),c=s(t,"nextSibling"),u=o.s.createRange();u.setStartBefore(l),u.setEndAfter(c);var d=u.extractContents(),p=a.element(e.element);return p.appendChild(d),n.Dom.safeInsertNode(u,p),e.elementIsBlock&&n.Dom.isEmpty(p)&&!n.Dom.isTag(p.firstElementChild,"br")&&p.appendChild(a.element("br")),p}},8298:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wrap=void 0;var n=o(64968),r=o(6278),i=o(67309),a=o(29271);t.wrap=function(e,t,o){var s=function(e,t,o){return e.elementIsBlock?n.Dom.up(t,(function(e){return n.Dom.isBlock(e)&&!n.Dom.isTag(e,["td","th","tr","tbody","table","li","ul","ol"])}),o.editor)||(0,r.wrapUnwrappedText)(e,t,o):((0,i.attr)(t,"size",null),t)}(e,t,o);return e.elementIsList?(0,a.wrapList)(e,s,o):n.Dom.replace(s,e.element,o.createInside,!0)}},3097:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ApplyStyle=void 0;var n=o(74504),r=o(66162),i=o(33090),a=o(70851);t.ApplyStyle=function(e,t){var o=e.s,s=e.editor;o.save(),(0,n.normalizeNode)(s.firstChild);for(var l=e.s.wrapInTagGen(),c=l.next(),u={mode:a.INITIAL,element:c.value,next:i.states.START,jodit:e,style:t};c&&!c.done;){var d=new r.FiniteStateMachine(i.states.START,i.transactions);for(u.element=c.value;d.getState()!==i.states.END;)u=d.dispatch("exec",u);c=l.next()}o.restore()}},70851:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CommitStyle=t._PREFIX=t.REPLACE=t.INITIAL=t.UNSET=t.CHANGE=t.UNWRAP=t.WRAP=void 0;var n=o(86893),r=o(26596),i=o(3097);t.WRAP="wrap",t.UNWRAP="unwrap",t.CHANGE="change",t.UNSET="unset",t.INITIAL="initial",t.REPLACE="replace",t._PREFIX="commitStyle";var a=function(){function e(e){var t,o,n,r;this.options=e,this.__applyMap=new WeakMap,e.attributes=(t=e.attributes,r=(o=this.options).className,(n=o.style)&&(t?t.style=n:t={style:n},delete this.options.style),r&&(t?t.class=r:t={class:r},delete this.options.className),t)}return e.prototype.isApplied=function(e,t){var o=this.__applyMap.get(e);return!!o&&o[t]},e.prototype.setApplied=function(e,t){var o,n=null!==(o=this.__applyMap.get(e))&&void 0!==o?o:{};n[t]=!0,this.__applyMap.set(e,n)},Object.defineProperty(e.prototype,"elementIsList",{get:function(){return Boolean(this.options.element&&["ul","ol"].includes(this.options.element))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"element",{get:function(){return this.options.element||this.defaultTag},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"elementIsBlock",{get:function(){return Boolean(this.options.element&&n.IS_BLOCK.test(this.options.element))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isElementCommit",{get:function(){return Boolean(this.options.element&&this.options.element!==this.options.defaultTag)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"defaultTag",{get:function(){return this.options.defaultTag?this.options.defaultTag:this.elementIsBlock?"p":"span"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"elementIsDefault",{get:function(){return this.element===this.defaultTag},enumerable:!1,configurable:!0}),e.prototype.apply=function(e){var o=this.options.hooks;try{o&&Object.keys(o).forEach((function(n){e.e.on((0,r.camelCase)(t._PREFIX+"_"+n),o[n])})),(0,i.ApplyStyle)(e,this)}finally{o&&Object.keys(o).forEach((function(n){e.e.off((0,r.camelCase)(t._PREFIX+"_"+n),o[n])})),this.__applyMap=new WeakMap}},e}();t.CommitStyle=a},33090:function(e,t,o){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.transactions=t.states=void 0;var r=o(20255),i=o(2123),a=o(66162),s=o(64968),l=o(2123);o(52378),t.states={START:"START",ELEMENT:"ELEMENT",UNWRAP:"UNWRAP",UNWRAP_CHILDREN:"UNWRAP_CHILDREN",CHANGE:"CHANGE",REPLACE_DEFAULT:"REPLACE_DEFAULT",LIST:"LIST",TOGGLE_LIST:"TOGGLE_LIST",WRAP:"WRAP",EXTRACT:"EXTRACT",END:"END"},t.transactions=((n={})[t.states.START]={exec:function(e){var o=e.element,n=e.jodit,i=e.style,c=e.mode;if((0,a.isInsideInvisibleElement)(o,n.editor)||s.Dom.isEmptyContent(o))return r.__assign(r.__assign({},e),{next:t.states.END});var u=(0,a.getSuitParent)(i,o,n.editor)||(0,a.getSuitChild)(i,o);if(u)return r.__assign(r.__assign({},e),{next:t.states.ELEMENT,element:u});var d=(0,a.findSuitClosest)(i,o,n.editor);return i.elementIsList&&s.Dom.isTag(d,["ul","ol"])?r.__assign(r.__assign({},e),{next:t.states.LIST}):r.__assign(r.__assign({},e),d?{next:t.states.EXTRACT}:{next:c!==l.UNWRAP?t.states.UNWRAP_CHILDREN:t.states.END})}},n[t.states.LIST]={exec:function(e){var o=e.element,n=e.jodit,a=e.mode;if(a!==l.INITIAL&&a!==l.UNWRAP&&a!==i.REPLACE)return r.__assign(r.__assign({},e),{next:t.states.END});var c=s.Dom.closest(o,"li",n.editor);if(!c)return r.__assign(r.__assign({},e),{next:t.states.END});var u=s.Dom.closest(o,["ul","ol"],n.editor);return r.__assign(r.__assign({},e),u?{element:c,next:t.states.TOGGLE_LIST}:{next:t.states.END})}},n[t.states.TOGGLE_LIST]={exec:function(e){return r.__assign(r.__assign({},e),{mode:(0,a.toggleOrderedList)(e.style,e.element,e.jodit,e.mode),next:t.states.END})}},n[t.states.EXTRACT]={exec:function(e){var o=e.element,n=e.jodit,i=e.style,s=(0,a.findSuitClosest)(i,o,n.editor);return i.elementIsBlock||(0,a.extractSelectedPart)(s,o,n),r.__assign(r.__assign({},e),{element:s,next:t.states.ELEMENT})}},n[t.states.UNWRAP_CHILDREN]={exec:function(e){return(0,a.unwrapChildren)(e.style,e.element)?r.__assign(r.__assign({},e),{mode:l.UNWRAP,next:t.states.END}):r.__assign(r.__assign({},e),{next:t.states.WRAP})}},n[t.states.WRAP]={exec:function(e){var o=e.style,n=(0,a.wrap)(o,e.element,e.jodit);return r.__assign(r.__assign({},e),{next:o.elementIsList?t.states.END:t.states.CHANGE,mode:l.WRAP,element:n})}},n[t.states.ELEMENT]={exec:function(e){return(0,a.toggleAttributes)(e.style,e.element,e.jodit,l.INITIAL,!0)!==l.INITIAL?r.__assign(r.__assign({},e),{next:t.states.CHANGE}):r.__assign(r.__assign({},e),{next:t.states.UNWRAP})}},n[t.states.CHANGE]={exec:function(e){var o=e.style,n=e.element,i=e.mode,c=(0,a.toggleAttributes)(o,n,e.jodit,e.mode);return i!==l.WRAP&&c===l.UNSET&&!n.attributes.length&&s.Dom.isTag(n,o.element)?r.__assign(r.__assign({},e),{next:t.states.UNWRAP}):r.__assign(r.__assign({},e),{mode:c,next:t.states.END})}},n[t.states.UNWRAP]={exec:function(e){return e.element.attributes.length&&s.Dom.isTag(e.element,e.style.element)?r.__assign(r.__assign({},e),{next:t.states.REPLACE_DEFAULT}):(s.Dom.unwrap(e.element),r.__assign(r.__assign({},e),{mode:l.UNWRAP,next:t.states.END}))}},n[t.states.REPLACE_DEFAULT]={exec:function(e){return s.Dom.replace(e.element,e.style.defaultTag,e.jodit.createInside,!0),r.__assign(r.__assign({},e),{mode:i.REPLACE,next:t.states.END})}},n[t.states.END]={exec:function(e){return e}},n)},75764:function(e,t){"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.LocalStorageProvider=t.canUsePersistentStorage=void 0,t.canUsePersistentStorage=function(){return void 0===o&&(o=function(){var e="___Jodit___"+Math.random().toString();try{localStorage.setItem(e,"1");var t="1"===localStorage.getItem(e);return localStorage.removeItem(e),t}catch(e){}return!1}()),o};var n=function(){function e(e){this.rootKey=e}return e.prototype.set=function(e,t){try{var o=localStorage.getItem(this.rootKey),n=o?JSON.parse(o):{};n[e]=t,localStorage.setItem(this.rootKey,JSON.stringify(n))}catch(e){}return this},e.prototype.delete=function(e){try{localStorage.removeItem(this.rootKey)}catch(e){}return this},e.prototype.get=function(e){try{var t=localStorage.getItem(this.rootKey),o=t?JSON.parse(t):{};return void 0!==o[e]?o[e]:null}catch(e){}},e.prototype.exists=function(e){return null!=this.get(e)},e.prototype.clear=function(){try{localStorage.removeItem(this.rootKey)}catch(e){}return this},e}();t.LocalStorageProvider=n},79905:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MemoryStorageProvider=void 0;var o=function(){function e(){this.data=new Map}return e.prototype.set=function(e,t){return this.data.set(e,t),this},e.prototype.delete=function(e){return this.data.delete(e),this},e.prototype.get=function(e){return this.data.get(e)},e.prototype.exists=function(e){return this.data.has(e)},e.prototype.clear=function(){return this.data.clear(),this},e}();t.MemoryStorageProvider=o},77462:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(79905),t),n.__exportStar(o(75764),t),n.__exportStar(o(52015),t)},52015:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Storage=t.StorageKey=void 0;var n=o(40332),r=o(75764),i=o(79905);t.StorageKey="Jodit_";var a=function(){function e(e,o){this.provider=e,this.prefix=t.StorageKey,o&&(this.prefix+=o)}return e.prototype.set=function(e,t){return this.provider.set((0,n.camelCase)(this.prefix+e),t),this},e.prototype.delete=function(e){return this.provider.delete((0,n.camelCase)(this.prefix+e)),this},e.prototype.get=function(e){return this.provider.get((0,n.camelCase)(this.prefix+e))},e.prototype.exists=function(e){return this.provider.exists((0,n.camelCase)(this.prefix+e))},e.prototype.clear=function(){return this.provider.clear(),this},e.makeStorage=function(o,n){var a;return void 0===o&&(o=!1),o&&(0,r.canUsePersistentStorage)()&&(a=new r.LocalStorageProvider(t.StorageKey+n)),a||(a=new i.MemoryStorageProvider),new e(a,n)},e}();t.Storage=a},59363:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Dlgs=void 0;var n=o(20255),r=o(87837),i=o(40332),a=function(){function e(){}return e.prototype.dlg=function(e){var t=new r.Dialog(n.__assign({language:this.o.language,shadowRoot:this.o.shadowRoot,ownerWindow:this.o.ownerWindow,defaultTimeout:this.o.defaultTimeout,theme:this.o.theme,globalFullSize:this.o.globalFullSize},e));return(0,i.markOwner)(this,t.container),t.parent=this,t.bindDestruct(this)},e.prototype.confirm=function(e,t,o){return(0,i.isString)(t)&&(t=this.i18n(t)),r.Confirm.call(this.dlg(),this.i18n(e),t,o)},e.prototype.prompt=function(e,t,o,n,a){return(0,i.isString)(t)&&(t=this.i18n(t)),(0,i.isString)(n)&&(n=this.i18n(n)),r.Prompt.call(this.dlg(),this.i18n(e),t,o,n,a)},e.prototype.alert=function(e,t,o,n){return(0,i.isString)(e)&&(e=this.i18n(e)),(0,i.isString)(t)&&(t=this.i18n(t)),r.Alert.call(this.dlg(),e,t,o,n)},e}();t.Dlgs=a},14089:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Elms=void 0;var n=o(1853),r=function(){function e(){}return e.prototype.getElm=function(e){return this.container.querySelector(".".concat(this.getFullElName(e)))},e.prototype.getElms=function(e){return(0,n.toArray)(this.container.querySelectorAll(".".concat(this.getFullElName(e))))},e}();t.Elms=r},59829:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(14089),t),n.__exportStar(o(41681),t),n.__exportStar(o(59363),t)},41681:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Mods=void 0;var n=o(1853),r=o(24021),i=function(){function e(){}return e.prototype.afterSetMod=function(e,t){},e.prototype.setMod=function(e,t,o){if(e=e.toLowerCase(),this.mods[e]===t)return this;var i="".concat(this.componentName,"_").concat(e),a=(o||this.container).classList;return(0,n.toArray)(a).forEach((function(e){0===e.indexOf(i)&&a.remove(e)})),!(0,r.isVoid)(t)&&""!==t&&a.add("".concat(i,"_").concat(t.toString().toLowerCase())),this.mods[e]=t,this.afterSetMod(e,t),this},e.prototype.getMod=function(e){var t;return null!==(t=this.mods[e])&&void 0!==t?t:null},e}();t.Mods=i},96031:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Button=t.UIButton=t.UIButtonState=void 0;var n=o(20255);o(93330);var r=o(53929),i=o(24263),a=o(76502),s=o(24421),l=o(42096),c=o(77904),u=o(47970),d=o(43441),p=o(29411);t.UIButtonState=function(){return{size:"middle",type:"button",name:"",value:"",variant:"initial",disabled:!1,activated:!1,icon:{name:"empty",fill:"",iconURL:""},tooltip:"",text:"",tabIndex:void 0}};var f=function(e){function o(o,n){var r=e.call(this,o)||this;return r.isButton=!0,r.state=(0,t.UIButtonState)(),r.actionHandlers=[],r.updateSize(),r.onChangeSize(),r.onChangeStatus(),n&&r.hookStatus(p.STATUSES.ready,(function(){r.setState(n)})),r}return n.__extends(o,e),o.prototype.className=function(){return"UIButton"},o.prototype.setState=function(e){return Object.assign(this.state,e),this},o.prototype.onChangeSize=function(){this.setMod("size",this.state.size)},o.prototype.onChangeType=function(){(0,a.attr)(this.container,"type",this.state.type)},o.prototype.updateSize=function(){var e=this.closest(u.UIList);e&&(this.state.size=e.buttonSize)},o.prototype.onChangeStatus=function(){this.setMod("variant",this.state.variant)},o.prototype.onChangeText=function(){this.text.textContent=this.jodit.i18n(this.state.text)},o.prototype.onChangeTextSetMode=function(){this.setMod("text-icons",Boolean(this.state.text.trim().length))},o.prototype.onChangeDisabled=function(){(0,a.attr)(this.container,"disabled",this.state.disabled||null)},o.prototype.onChangeActivated=function(){(0,a.attr)(this.container,"aria-pressed",this.state.activated)},o.prototype.onChangeName=function(){this.container.classList.add("".concat(this.componentName,"_").concat(this.clearName(this.state.name))),this.name=this.state.name,(0,a.attr)(this.container,"data-ref",this.state.name),(0,a.attr)(this.container,"ref",this.state.name)},o.prototype.onChangeTooltip=function(){this.get("j.o.useNativeTooltip")&&(0,a.attr)(this.container,"title",this.state.tooltip),(0,a.attr)(this.container,"aria-label",this.state.tooltip)},o.prototype.onChangeTabIndex=function(){(0,a.attr)(this.container,"tabindex",this.state.tabIndex)},o.prototype.onChangeIcon=function(){var e=this.get("j.o.textIcons");if(!(!0===e||(0,l.isFunction)(e)&&e(this.state.name))){i.Dom.detach(this.icon);var t=c.Icon.makeIcon(this.j,this.state.icon);t&&this.icon.appendChild(t)}},o.prototype.focus=function(){this.container.focus()},o.prototype.isFocused=function(){var e=this.od.activeElement;return Boolean(e&&i.Dom.isOrContains(this.container,e))},o.prototype.createContainer=function(){var e=this.componentName,t=this.j.c.element("button",{class:e,type:"button",role:"button",ariaPressed:!1});return this.icon=this.j.c.span(e+"__icon"),this.text=this.j.c.span(e+"__text"),t.appendChild(this.icon),t.appendChild(this.text),this.j.e.on(t,"click",this.onActionFire),t},o.prototype.destruct=function(){return this.j.e.off(this.container),e.prototype.destruct.call(this)},o.prototype.onAction=function(e){return this.actionHandlers.push(e),this},o.prototype.onActionFire=function(e){var t=this;e.buffer={actionTrigger:this},this.actionHandlers.forEach((function(o){return o.call(t,e)}))},n.__decorate([(0,d.watch)("state.size")],o.prototype,"onChangeSize",null),n.__decorate([(0,d.watch)("state.type")],o.prototype,"onChangeType",null),n.__decorate([(0,d.watch)("parentElement")],o.prototype,"updateSize",null),n.__decorate([(0,d.watch)("state.variant")],o.prototype,"onChangeStatus",null),n.__decorate([(0,d.watch)("state.text")],o.prototype,"onChangeText",null),n.__decorate([(0,d.watch)("state.text")],o.prototype,"onChangeTextSetMode",null),n.__decorate([(0,d.watch)("state.disabled")],o.prototype,"onChangeDisabled",null),n.__decorate([(0,d.watch)("state.activated")],o.prototype,"onChangeActivated",null),n.__decorate([(0,d.watch)("state.name")],o.prototype,"onChangeName",null),n.__decorate([(0,d.watch)("state.tooltip")],o.prototype,"onChangeTooltip",null),n.__decorate([(0,d.watch)("state.tabIndex")],o.prototype,"onChangeTabIndex",null),n.__decorate([(0,d.watch)("state.icon")],o.prototype,"onChangeIcon",null),n.__decorate([d.autobind],o.prototype,"onActionFire",null),n.__decorate([d.component],o)}(r.UIElement);t.UIButton=f,t.Button=function(e,t,o,n){var r=new f(e);return r.state.tabIndex=e.o.allowTabNavigation?0:-1,(0,s.isString)(t)?(r.state.icon.name=t,r.state.name=t,n&&(r.state.variant=n),o&&(r.state.text=o)):r.setState(t),r}},67252:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIButtonGroup=void 0;var n=o(20255);o(45066);var r=o(61479),i=o(11441),a=o(96031),s=(o(52378),function(e){function t(t,o){void 0===o&&(o={radio:!0});var n,r,i=this;return(i=e.call(this,t,null===(n=o.options)||void 0===n?void 0:n.map((function(e){var o=new a.UIButton(t,{text:e.text,value:e.value,variant:"primary"});return o.onAction((function(){i.select(e.value)})),o})),o)||this).options=o,i.select(null!==(r=o.value)&&void 0!==r?r:0),i}return n.__extends(t,e),t.prototype.className=function(){return"UIButtonGroup"},t.prototype.render=function(e){return'<div>\n\t\t\t<div class="&__label">~'.concat(e.label,'~</div>\n\t\t\t<div class="&__options"></div>\n\t\t</div>')},t.prototype.appendChildToContainer=function(e){this.getElm("options").appendChild(e)},t.prototype.select=function(e){var t,o,n=this;this.elements.forEach((function(t,o){o===e||t.state.value===e?t.state.activated=!0:n.options.radio&&(t.state.activated=!1)}));var r=this.elements.filter((function(e){return e.state.activated})).map((function(e){return{text:e.state.text,value:e.state.value}}));this.jodit.e.fire(this,"select",r),null===(o=(t=this.options).onChange)||void 0===o||o.call(t,r)},n.__decorate([i.component],t)}(r.UIGroup));t.UIButtonGroup=s},96516:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(96031),t),n.__exportStar(o(67252),t),n.__exportStar(o(33627),t)},33627:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UITooltip=void 0;var n=o(20255);o(99895);var r=o(40332),i=o(17332),a=o(43441),s=function(e){function t(o){var n=e.call(this,o)||this;n.__isOpened=!1,n.__useCount=1,n.__delayShowTimeout=0,(0,i.getContainer)(o,t).appendChild(n.container);var r=0;return o.e.off(".tooltip").on("showTooltip.tooltip",(function(e,t){o.async.clearTimeout(r),n.__open(e,t)})).on("delayShowTooltip.tooltip",n.__delayOpen).on("escape.tooltip",n.__close).on("hideTooltip.tooltip change.tooltip scroll.tooltip changePlace.tooltip hidePopup.tooltip closeAllPopups.tooltip",(function(){n.j.async.clearTimeout(n.__delayShowTimeout),r=o.async.setTimeout(n.__close,n.j.defaultTimeout)})),n}return n.__extends(t,e),t.prototype.className=function(){return"UITooltip"},t.make=function(e){var o=(0,r.dataBind)(e,"ui-tooltip");return o?(o.__useCount+=1,o):(o=new t(e),(0,r.dataBind)(e,"ui-tooltip",o),o)},t.prototype.__delayOpen=function(e,t){var o=this,n=this.j.o.showTooltipDelay||this.j.defaultTimeout;this.j.async.clearTimeout(this.__delayShowTimeout),this.__delayShowTimeout=this.j.async.setTimeout((function(){return o.__open(e,t)}),{timeout:n,label:"tooltip"})},t.prototype.__open=function(e,t){this.setMod("visible",!0),this.container.innerHTML=t,this.__isOpened=!0,this.__setPosition(e)},t.prototype.__setPosition=function(e){var t=e();(0,r.css)(this.container,{left:t.x,top:t.y})},t.prototype.__close=function(){this.j.async.clearTimeout(this.__delayShowTimeout),this.__isOpened&&(this.__isOpened=!1,this.setMod("visible",!1),(0,r.css)(this.container,{left:-5e3}))},t.prototype.destruct=function(){var t;this.__useCount--,this.__useCount||(null===(t=this.j)||void 0===t||t.e.off(".tooltip"),this.__close(),e.prototype.destruct.call(this))},n.__decorate([a.autobind],t.prototype,"__delayOpen",null),n.__decorate([a.autobind],t.prototype,"__close",null),t}(o(53929).UIElement);t.UITooltip=s},53929:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIElement=void 0;var n=o(20255),r=o(56562),i=o(24263),a=o(59829),s=o(24421),l=o(77904),c=o(43441),u=function(e){function t(t,o){var n=e.call(this,t)||this;return n.name="",n.__parentElement=null,n.mods={},n.container=n.createContainer(o),Object.defineProperty(n.container,"component",{value:n,configurable:!0}),n}var o;return n.__extends(t,e),o=t,Object.defineProperty(t.prototype,"parentElement",{get:function(){return this.__parentElement},set:function(e){var t=this;this.__parentElement=e,e&&e.hookStatus("beforeDestruct",(function(){return t.destruct()})),this.updateParentElement(this)},enumerable:!1,configurable:!0}),t.prototype.bubble=function(e){for(var t=this.parentElement;t;)e(t),t=t.parentElement;return this},t.prototype.updateParentElement=function(e){var t;return null===(t=this.__parentElement)||void 0===t||t.updateParentElement(e),this},t.prototype.get=function(t,o){return e.prototype.get.call(this,t,o)||this.getElm(t)},t.prototype.closest=function(e){for(var t="object"==typeof e?function(t){return t===e}:function(t){return r.Component.isInstanceOf(t,e)},n=this.__parentElement;n;){if(t(n))return n;n=!n.parentElement&&n.container.parentElement?o.closestElement(n.container.parentElement,o):n.parentElement}return null},t.closestElement=function(e,t){var o=i.Dom.up(e,(function(e){if(e){var o=e.component;return o&&r.Component.isInstanceOf(o,t)}return!1}));return o?null==o?void 0:o.component:null},t.prototype.update=function(){},t.prototype.appendTo=function(e){return e.appendChild(this.container),this},t.prototype.clearName=function(e){return e.replace(/[^a-zA-Z0-9]/g,"_")},t.prototype.render=function(e){return this.j.c.div(this.componentName)},t.prototype.createContainer=function(e){var t=this.render(e);if((0,s.isString)(t)){var o=this.parseTemplate(t);return o.classList.add(this.componentName),o}return t},t.prototype.parseTemplate=function(e){var t=this;return this.j.c.fromHTML(e.replace(/\*([^*]+?)\*/g,(function(e,t){return l.Icon.get(t)||""})).replace(/&__/g,this.componentName+"__").replace(/~([^~]+?)~/g,(function(e,o){return t.i18n(o)})))},t.prototype.destruct=function(){return i.Dom.safeRemove(this.container),this.parentElement=null,e.prototype.destruct.call(this)},o=n.__decorate([(0,c.derive)(a.Mods,a.Elms)],t)}(r.ViewComponent);t.UIElement=u},38318:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIBlock=void 0;var n=o(20255);o(87682);var r=o(61479),i=o(76502),a=o(11441),s=function(e){function t(t,o,n){void 0===n&&(n={align:"left"});var r=e.call(this,t,o)||this;return r.options=n,r.setMod("align",r.options.align||"left"),r.setMod("width",r.options.width||""),r.options.mod&&r.setMod(r.options.mod,!0),r.options.className&&r.container.classList.add(r.options.className),(0,i.attr)(r.container,"data-ref",n.ref),(0,i.attr)(r.container,"ref",n.ref),r}return n.__extends(t,e),t.prototype.className=function(){return"UIBlock"},n.__decorate([a.component],t)}(r.UIGroup);t.UIBlock=s},26207:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIForm=void 0;var n=o(20255),r=o(61479),i=o(30194),a=o(75840),s=o(76502),l=o(11441),c=o(45113),u=function(e){function t(){for(var t=[],o=0;arguments.length>o;o++)t[o]=arguments[o];var r,i,a=this;return(null===(r=(a=e.apply(this,n.__spreadArray([],n.__read(t),!1))||this).options)||void 0===r?void 0:r.className)&&a.container.classList.add(null===(i=a.options)||void 0===i?void 0:i.className),a}return n.__extends(t,e),t.prototype.className=function(){return"UIForm"},t.prototype.submit=function(){this.j.e.fire(this.container,"submit")},t.prototype.validate=function(){var e,t,o,r,s=this.allChildren.filter((function(e){return c.Component.isInstanceOf(e,i.UIInput)}));try{for(var l=n.__values(s),u=l.next();!u.done;u=l.next())if(!u.value.validate())return!1}catch(t){e={error:t}}finally{try{u&&!u.done&&(t=l.return)&&t.call(l)}finally{if(e)throw e.error}}var d=this.allChildren.filter((function(e){return c.Component.isInstanceOf(e,a.UISelect)}));try{for(var p=n.__values(d),f=p.next();!f.done;f=p.next())if(!f.value.validate())return!1}catch(e){o={error:e}}finally{try{f&&!f.done&&(r=p.return)&&r.call(p)}finally{if(o)throw o.error}}return!0},t.prototype.onSubmit=function(e){var t=this;this.j.e.on(this.container,"submit",(function(){var o=t.allChildren.filter((function(e){return c.Component.isInstanceOf(e,i.UIInput)}));return!!t.validate()&&(e(o.reduce((function(e,t){return e[t.state.name]=t.value,e}),{})),!1)}))},t.prototype.createContainer=function(){var e=this.j.c.element("form");return e.classList.add(this.componentName),(0,s.attr)(e,"dir",this.j.o.direction||"auto"),e},n.__decorate([l.component],t)}(r.UIGroup);t.UIForm=u},95963:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(26207),t),n.__exportStar(o(63034),t),n.__exportStar(o(38318),t)},21639:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UITextArea=void 0;var n=o(20255);o(50905);var r=o(30194),i=o(11441),a=function(e){function t(t,r){var i=e.call(this,t,r)||this;return i.state=n.__assign({},o.defaultState),Object.assign(i.state,r),!1===i.state.resizable&&(i.nativeInput.style.resize="none"),i}var o;return n.__extends(t,e),o=t,t.prototype.className=function(){return"UITextArea"},t.prototype.createContainer=function(t){return this.nativeInput=this.j.create.element("textarea"),e.prototype.createContainer.call(this,t)},t.defaultState=n.__assign(n.__assign({},r.UIInput.defaultState),{size:5,resizable:!0}),o=n.__decorate([i.component],t)}(r.UIInput);t.UITextArea=a},63747:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UICheckbox=void 0;var n=o(20255);o(70446);var r=o(30194),i=o(43441),a=o(24263),s=function(e){function t(t,r){var i=e.call(this,t,n.__assign(n.__assign({},r),{type:"checkbox"}))||this;return i.state=n.__assign({},o.defaultState),Object.assign(i.state,r),i}var o;return n.__extends(t,e),o=t,t.prototype.className=function(){return"UICheckbox"},t.prototype.render=function(){return this.j.c.element("label",{className:this.componentName})},t.prototype.onChangeChecked=function(){this.value=this.state.checked.toString(),this.nativeInput.checked=this.state.checked,this.setMod("checked",this.state.checked)},t.prototype.onChangeNativeCheckBox=function(){this.state.checked=this.nativeInput.checked},t.prototype.onChangeSwitch=function(){this.setMod("switch",this.state.switch);var e=this.getElm("switch-slider");this.state.switch?(e||(e=this.j.c.div(this.getFullElName("switch-slider"))),a.Dom.after(this.nativeInput,e)):a.Dom.safeRemove(e)},t.defaultState=n.__assign(n.__assign({},r.UIInput.defaultState),{checked:!1,switch:!1}),n.__decorate([(0,i.watch)("state.checked"),(0,i.hook)("ready")],t.prototype,"onChangeChecked",null),n.__decorate([(0,i.watch)("nativeInput:change")],t.prototype,"onChangeNativeCheckBox",null),n.__decorate([(0,i.watch)("state.switch"),(0,i.hook)("ready")],t.prototype,"onChangeSwitch",null),o=n.__decorate([i.component],t)}(r.UIInput);t.UICheckbox=s},41374:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIFileInput=void 0;var n=o(20255);o(18984);var r=o(30194),i=o(11441),a=o(96031),s=function(e){function t(t,o){var i=e.call(this,t,n.__assign({type:"file"},o))||this;return i.state=n.__assign(n.__assign({},r.UIInput.defaultState),{type:"file",onlyImages:!0}),i}return n.__extends(t,e),t.prototype.className=function(){return"UIFileInput"},t.prototype.createContainer=function(e){this.button=new a.UIButton(this.j,{icon:{name:"plus"}});var t=this.button.container;this.nativeInput||(this.nativeInput=this.createNativeInput(e));var o=this.nativeInput;return o.classList.add(this.getFullElName("input")),t.classList.add(this.componentName),t.appendChild(o),t},t.prototype.createNativeInput=function(e){return this.j.create.fromHTML('<input\n\t\t\ttype="file"\n\t\t\taccept="'.concat(e.onlyImages?"image/*":"*",'"\n\t\t\ttabindex="-1"\n\t\t\tdir="auto"\n\t\t\tmultiple=""\n\t\t/>'))},n.__decorate([i.component],t)}(r.UIInput);t.UIFileInput=s},63034:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(30194),t),n.__exportStar(o(21639),t),n.__exportStar(o(63747),t),n.__exportStar(o(75840),t),n.__exportStar(o(41374),t)},30194:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIInput=void 0;var n=o(20255);o(4591);var r=o(53929),i=o(76502),a=o(1853),s=o(24263),l=o(43441),c=o(77904),u=o(60081),d=function(e){function t(t,r){var i=e.call(this,t,r)||this;return i.label=i.j.c.span(i.getFullElName("label")),i.icon=i.j.c.span(i.getFullElName("icon")),i.clearButton=i.j.c.span(i.getFullElName("clear"),c.Icon.get("cancel")),i.state=n.__assign({},o.defaultState),i.__errorBox=i.j.c.span(i.getFullElName("error")),i.validators=new Set([]),void 0!==(null==r?void 0:r.value)&&(r.value=r.value.toString()),Object.assign(i.state,r),void 0!==i.state.clearButton&&(i.j.e.on(i.clearButton,"click",(function(e){e.preventDefault(),i.nativeInput.value="",i.j.e.fire(i.nativeInput,"input"),i.focus()})).on(i.nativeInput,"input",(function(){i.state.clearButton=Boolean(i.value.length)})),i.state.clearButton=Boolean(i.value.length)),i.j.e.on(i.nativeInput,"focus blur",(function(){i.onChangeFocus()})).on(i.nativeInput,"input change",i.onChangeValue),i.onChangeState(),i.onChangeClassName(),i.onChangeStateValue(),i}var o;return n.__extends(t,e),o=t,t.prototype.className=function(){return"UIInput"},t.prototype.onChangeClear=function(){this.state.clearButton?s.Dom.after(this.nativeInput,this.clearButton):s.Dom.safeRemove(this.clearButton)},t.prototype.onChangeClassName=function(e,t){t&&this.container.classList.remove(t),this.state.className&&this.container.classList.add(this.state.className)},t.prototype.onChangeState=function(){this.name=this.state.name;var e=this.nativeInput,t=this.state,o=t.name,n=t.icon,r=t.type,a=t.ref,l=t.required,u=t.placeholder,d=t.autocomplete,p=t.label;(0,i.attr)(e,"name",o),(0,i.attr)(e,"type",r),(0,i.attr)(e,"data-ref",a||o),(0,i.attr)(e,"ref",a||o),(0,i.attr)(e,"required",l||null),(0,i.attr)(e,"autocomplete",d?null:"off"),(0,i.attr)(e,"placeholder",u?this.j.i18n(u):""),n&&c.Icon.exists(n)?(s.Dom.before(e,this.icon),this.icon.innerHTML=c.Icon.get(n)):s.Dom.safeRemove(this.icon),p?(s.Dom.before(this.wrapper,this.label),this.label.innerText=this.j.i18n(p)):s.Dom.safeRemove(this.label),this.updateValidators()},t.prototype.updateValidators=function(){var e,t=this;this.validators.clear(),this.state.required&&this.validators.add(u.inputValidators.required),null===(e=this.state.validators)||void 0===e||e.forEach((function(e){var o=u.inputValidators[e];o&&t.validators.add(o)}))},Object.defineProperty(t.prototype,"error",{set:function(e){this.setMod("has-error",Boolean(e)),e?(this.__errorBox.innerText=this.j.i18n(e,this.j.i18n(this.state.label||"")),this.container.appendChild(this.__errorBox)):s.Dom.safeRemove(this.__errorBox)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this.nativeInput.value},set:function(e){this.value!==e&&(this.nativeInput.value=e,this.onChangeValue())},enumerable:!1,configurable:!0}),t.prototype.onChangeStateValue=function(){var e=this.state.value.toString();e!==this.value&&(this.value=e)},t.prototype.onChangeValue=function(){var e,t,o=this.value;this.state.value!==o&&(this.state.value=o,this.j.e.fire(this,"change",o),null===(t=(e=this.state).onChange)||void 0===t||t.call(e,o))},t.prototype.validate=function(){var e=this;return this.error="",(0,a.toArray)(this.validators).every((function(t){return t(e)}))},t.prototype.createContainer=function(t){var o=e.prototype.createContainer.call(this);this.wrapper=this.j.c.div(this.getFullElName("wrapper")),this.nativeInput||(this.nativeInput=this.createNativeInput());var n=this.nativeInput;return n.classList.add(this.getFullElName("input")),this.wrapper.appendChild(n),o.appendChild(this.wrapper),(0,i.attr)(n,"dir",this.j.o.direction||"auto"),o},t.prototype.createNativeInput=function(e){return this.j.create.element("input")},t.prototype.focus=function(){this.nativeInput.focus()},Object.defineProperty(t.prototype,"isFocused",{get:function(){return this.nativeInput===this.j.od.activeElement},enumerable:!1,configurable:!0}),t.prototype.onChangeFocus=function(){this.setMod("focused",this.isFocused)},t.defaultState={className:"",autocomplete:!0,name:"",value:"",icon:"",label:"",ref:"",type:"text",placeholder:"",required:!1,validators:[]},n.__decorate([(0,l.watch)("state.clearButton")],t.prototype,"onChangeClear",null),n.__decorate([(0,l.watch)("state.className")],t.prototype,"onChangeClassName",null),n.__decorate([(0,l.watch)(["state.name","state.type","state.label","state.placeholder","state.autocomplete","state.icon"]),(0,l.debounce)()],t.prototype,"onChangeState",null),n.__decorate([(0,l.watch)("state.value")],t.prototype,"onChangeStateValue",null),n.__decorate([l.autobind],t.prototype,"onChangeValue",null),o=n.__decorate([l.component],t)}(r.UIElement);t.UIInput=d},75840:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UISelect=void 0;var n=o(20255);o(64194);var r=o(67309),i=o(11441),a=o(30194),s=o(60081),l=function(e){function t(t,r){var i=e.call(this,t,r)||this;return i.state=n.__assign({},o.defaultState),Object.assign(i.state,r),i}var o;return n.__extends(t,e),o=t,t.prototype.className=function(){return"UISelect"},t.prototype.createContainer=function(t){var o,n=e.prototype.createContainer.call(this,t),i=this.j,a=this.nativeInput,s=function(){return i.create.element("option")};if(void 0!==t.placeholder){var l=s();l.value="",l.text=i.i18n(t.placeholder),a.add(l)}return null===(o=t.options)||void 0===o||o.forEach((function(e){var t=s();t.value=e.value.toString(),t.text=i.i18n(e.text),a.add(t)})),t.size&&t.size>0&&(0,r.attr)(a,"size",t.size),t.multiple&&(0,r.attr)(a,"multiple",""),n},t.prototype.createNativeInput=function(){return this.j.create.element("select")},t.prototype.updateValidators=function(){e.prototype.updateValidators.call(this),this.state.required&&(this.validators.delete(s.inputValidators.required),this.validators.add(s.selectValidators.required))},t.defaultState=n.__assign(n.__assign({},a.UIInput.defaultState),{options:[],size:1,multiple:!1}),o=n.__decorate([i.component],t)}(a.UIInput);t.UISelect=l},60081:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectValidators=t.inputValidators=void 0,t.inputValidators=o(63355),t.selectValidators=o(65935)},63355:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.url=t.required=void 0;var n=o(64350),r=o(33941);t.required=function(e){return!!(0,r.trim)(e.value).length||(e.error="Please fill out this field",!1)},t.url=function(e){return!!(0,n.isURL)((0,r.trim)(e.value))||(e.error="Please enter a web address",!1)}},65935:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.required=void 0;var n=o(33941);t.required=function(e){return!!(0,n.trim)(e.value).length||(e.error="Please fill out this field",!1)}},61479:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIGroup=void 0;var n=o(20255);o(70375);var r=o(53929),i=o(43441),a=o(40332),s=(o(52378),o(24263)),l=o(45113),c=function(e){function t(t,o,n){var r=e.call(this,t,n)||this;return r.options=n,r.syncMod=!1,r.elements=[],r.buttonSize="middle",null==o||o.forEach((function(e){return e&&r.append(e)})),(null==n?void 0:n.name)&&(r.name=n.name),r}var o;return n.__extends(t,e),o=t,t.prototype.className=function(){return"UIGroup"},Object.defineProperty(t.prototype,"allChildren",{get:function(){for(var e=[],t=n.__spreadArray([],n.__read(this.elements),!1);t.length;){var r=t.shift();(0,a.isArray)(r)?t.push.apply(t,n.__spreadArray([],n.__read(r),!1)):l.Component.isInstanceOf(r,o)?t.push.apply(t,n.__spreadArray([],n.__read(r.elements),!1)):r&&e.push(r)}return e},enumerable:!1,configurable:!0}),t.prototype.update=function(){this.elements.forEach((function(e){return e.update()})),this.setMod("size",this.buttonSize)},t.prototype.append=function(e,t){var o=this;return(0,a.isArray)(e)?(e.forEach((function(e){return o.append(e,t)})),this):(this.elements.push(e),e.name&&e.container.classList.add(this.getFullElName(e.name)),t?this.getElm(t).appendChild(e.container):this.appendChildToContainer(e.container),e.parentElement=this,e.update(),this)},t.prototype.afterSetMod=function(e,t){this.syncMod&&this.elements.forEach((function(o){return o.setMod(e,t)}))},t.prototype.appendChildToContainer=function(e){this.container.appendChild(e)},t.prototype.remove=function(e){var t=this.elements.indexOf(e);return-1!==t&&(this.elements.splice(t,1),s.Dom.safeRemove(e.container),e.parentElement=null),this},t.prototype.clear=function(){return this.elements.forEach((function(e){return e.destruct()})),this.elements.length=0,this},t.prototype.destruct=function(){return this.clear(),e.prototype.destruct.call(this)},n.__decorate([(0,i.watch)("buttonSize")],t.prototype,"update",null),o=n.__decorate([i.component],t)}(r.UIElement);t.UIGroup=c},3249:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(61479),t),n.__exportStar(o(47970),t),n.__exportStar(o(75018),t),n.__exportStar(o(58495),t)},47970:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIList=void 0;var n=o(20255);o(90235);var r=o(32070),i=o(43441),a=o(61479),s=o(75018),l=o(58495),c=o(96031),u=o(97642),d=o(38546),p=o(14556),f=o(45113),h=function(e){function t(t){var o=e.call(this,t)||this;return o.mode="horizontal",o.removeButtons=[],o.onChangeMode(),o}return n.__extends(t,e),t.prototype.className=function(){return"UIList"},t.prototype.onChangeMode=function(){this.setMod("mode",this.mode)},t.prototype.makeGroup=function(){return new a.UIGroup(this.jodit)},Object.defineProperty(t.prototype,"buttons",{get:function(){return this.allChildren.filter((function(e){return f.Component.isInstanceOf(e,c.UIButton)}))},enumerable:!1,configurable:!0}),t.prototype.getButtonsNames=function(){return this.buttons.map((function(e){return e instanceof c.UIButton&&e.state.name||""})).filter((function(e){return""!==e}))},t.prototype.setRemoveButtons=function(e){return this.removeButtons=e||[],this},t.prototype.build=function(e,t){var o=this;void 0===t&&(t=null),e=(0,p.splitArray)(e),this.clear();var n,i=!1,a=this.makeGroup();this.append(a),a.setMod("line",!0);var c=function(e){var r=null;switch(e.name){case"\n":(a=o.makeGroup()).setMod("line",!0),n=o.makeGroup(),a.append(n),o.append(a);break;case"|":i||(i=!0,r=new s.UISeparator(o.j));break;case"---":n.setMod("before-spacer",!0);var c=new l.UISpacer(o.j);a.append(c),n=o.makeGroup(),a.append(n),i=!1;break;default:i=!1,r=o.makeButton(e,t)}r&&(n||(n=o.makeGroup(),a.append(n)),n.append(r))},f=function(e){return!o.removeButtons.includes(e.name)};return e.forEach((function(e){if((0,u.isButtonGroup)(e)){var t=e.buttons.filter((function(e){return e}));t.length&&((n=o.makeGroup()).setMod("separated",!0).setMod("group",e.group),a.append(n),(0,r.getStrongControlTypes)(t,o.j.o.controls).filter(f).forEach(c))}else{n||(n=o.makeGroup(),a.append(n));var i=(0,d.getControlType)(e,o.j.o.controls);f(i)&&c(i)}})),this.update(),this},t.prototype.makeButton=function(e,t){return new c.UIButton(this.j)},n.__decorate([(0,i.watch)("mode")],t.prototype,"onChangeMode",null),n.__decorate([i.component],t)}(a.UIGroup);t.UIList=h},75018:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UISeparator=void 0;var n=o(20255),r=o(53929),i=o(11441),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.className=function(){return"UISeparator"},n.__decorate([i.component],t)}(r.UIElement);t.UISeparator=a},58495:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UISpacer=void 0;var n=o(20255),r=o(53929),i=o(11441),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.className=function(){return"UISpacer"},n.__decorate([i.component],t)}(r.UIElement);t.UISpacer=a},97642:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.flatButtonsSet=t.isButtonGroup=void 0;var n=o(20255),r=o(49781);t.isButtonGroup=function(e){return(0,r.isArray)(e.buttons)},t.flatButtonsSet=function(e,o){var r=o.getRegisteredButtonGroups();return new Set(e.reduce((function(e,o){var i;return(0,t.isButtonGroup)(o)?e=e.concat(n.__spreadArray(n.__spreadArray([],n.__read(o.buttons),!1),n.__read(null!==(i=r[o.group])&&void 0!==i?i:[]),!1)):e.push(o),e}),[]))}},38546:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.findControlType=t.getControlType=void 0;var n=o(20255),r=o(40332),i=o(93166);function a(e,t){var o=n.__read(e.split(/\./),2),i=o[0],a=o[1],s=t;return null!=a?void 0!==t[i]&&(s=t[i]):a=i,s[a]?n.__assign({name:a},(0,r.ConfigFlatten)(s[a])):void 0}t.getControlType=function(e,t){var o;return t||(t=i.Config.defaultOptions.controls),(0,r.isString)(e)?o=a(e,t)||{name:e,command:e,tooltip:e}:void 0!==t[(o=n.__assign({name:"empty"},(0,r.ConfigFlatten)(e))).name]&&(o=n.__assign(n.__assign({},(0,r.ConfigFlatten)(t[o.name])),(0,r.ConfigFlatten)(o))),o},t.findControlType=a},32070:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getStrongControlTypes=void 0;var n=o(38546),r=o(93166),i=o(49781),a=o(76502);t.getStrongControlTypes=function(e,t){return((0,i.isArray)(e)?e:(0,a.keys)(e,!1).map((function(t){return(0,a.ConfigProto)({name:t},e[t]||{})}))).map((function(e){return(0,n.getControlType)(e,t||r.Config.defaultOptions.controls)}))}},77904:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Icon=void 0;var n=o(26911),r=o(40332),i=function(){function e(){}return e.getIcon=function(t){return/<svg/i.test(t)?t:e.icons[t]||e.icons[t.replace(/-/g,"_")]||e.icons[t.replace(/_/g,"-")]||e.icons[(0,r.camelCase)(t)]||e.icons[(0,r.kebabCase)(t)]||e.icons[t.toLowerCase()]},e.exists=function(e){return void 0!==this.getIcon(e)},e.get=function(e,t){return void 0===t&&(t="<span></span>"),this.getIcon(e)||t},e.set=function(e,t){return this.icons[e.replace("_","-")]=t,this},e.makeIcon=function(t,o){var r,i;if(o){var a=o.name.replace(/[^a-zA-Z0-9]/g,"_");if(o.iconURL)i=t.c.span(),(0,n.css)(i,"backgroundImage","url("+o.iconURL.replace("{basePath}",(null==t?void 0:t.basePath)||"")+")");else{var s=t.e.fire("getIcon",o.name,o,a)||e.get(o.name,"")||(null===(r=t.o.extraIcons)||void 0===r?void 0:r[o.name]);s&&(i=t.c.fromHTML(s.trim()),/^<svg/i.test(o.name)||i.classList.add("jodit-icon_"+a))}}return i&&(i.classList.add("jodit-icon"),i.style.fill=o.fill),i},e.icons={},e}();t.Icon=i},2074:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(53929),t),n.__exportStar(o(96516),t),n.__exportStar(o(35799),t),n.__exportStar(o(3249),t),n.__exportStar(o(95963),t),n.__exportStar(o(77904),t),n.__exportStar(o(63682),t)},35799:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(20255).__exportStar(o(12680),t)},12680:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Popup=void 0;var n=o(20255);o(88477);var r=o(24263),i=o(40332),a=(o(52378),o(53929)),s=o(43441),l=o(45113),c=o(17332),u=function(e){function t(t,o){void 0===o&&(o=!0);var n=e.call(this,t)||this;return n.smart=o,n.isOpened=!1,n.strategy="leftBottom",n.viewBound=function(){return{left:0,top:0,width:n.ow.innerWidth,height:n.ow.innerHeight}},n.childrenPopups=new Set,(0,i.attr)(n.container,"role","popup"),n}return n.__extends(t,e),t.prototype.className=function(){return"Popup"},t.prototype.updateParentElement=function(o){var n=this;return o!==this&&l.Component.isInstanceOf(o,t)&&(this.childrenPopups.forEach((function(e){!o.closest(e)&&e.isOpened&&e.close()})),this.childrenPopups.has(o)||this.j.e.on(o,"beforeClose",(function(){n.childrenPopups.delete(o)})),this.childrenPopups.add(o)),e.prototype.updateParentElement.call(this,o)},t.prototype.setContent=function(e){r.Dom.detach(this.container);var t,o=this.j.c.div("".concat(this.componentName,"__content"));return l.Component.isInstanceOf(e,a.UIElement)?(t=e.container,e.parentElement=this):t=(0,i.isString)(e)?this.j.c.fromHTML(e):e,o.appendChild(t),this.container.appendChild(o),this.updatePosition(),this},t.prototype.open=function(e,o,n){if(void 0===o&&(o=!1),(0,i.markOwner)(this.jodit,this.container),this.calculateZIndex(),this.isOpened=!0,this.addGlobalListeners(),this.targetBound=o?this.getKeepBound(e):e,n)n.appendChild(this.container);else{var r=(0,c.getContainer)(this.jodit,t);n!==this.container.parentElement&&r.appendChild(this.container)}return this.updatePosition(),this.j.e.fire(this,"afterOpen"),this},t.prototype.calculateZIndex=function(){var e=this;if(!this.container.style.zIndex){var t=function(t){var o=t.container.style.zIndex||t.o.zIndex;return!!o&&(e.setZIndex(1+parseInt(o.toString(),10)),!0)},o=this.j;if(!t(o))for(var n=this.parentElement;n;){if(t(o))return;if(n.container.style.zIndex)return void this.setZIndex(1+parseInt(n.container.style.zIndex.toString(),10));if(!n.parentElement&&n.container.parentElement){var r=a.UIElement.closestElement(n.container.parentElement,a.UIElement);if(r){n=r;continue}}n=n.parentElement}}},t.prototype.getKeepBound=function(e){var t=this,o=e(),a=this.od.elementFromPoint(o.left,o.top);if(!a)return e;var s=r.Dom.isHTMLElement(a)?a:a.parentElement,l=(0,i.position)(s,this.j);return function(){var o=e(),r=(0,i.position)(s,t.j);return n.__assign(n.__assign({},o),{top:o.top+(r.top-l.top),left:o.left+(r.left-l.left)})}},t.prototype.updatePosition=function(){if(!this.isOpened)return this;var e=n.__read(this.calculatePosition(this.targetBound(),this.viewBound(),(0,i.position)(this.container,this.j)),2),t=e[0];return this.setMod("strategy",e[1]),(0,i.css)(this.container,{left:t.left,top:t.top}),this.childrenPopups.forEach((function(e){return e.updatePosition()})),this},t.prototype.throttleUpdatePosition=function(){this.updatePosition()},t.prototype.calculatePosition=function(e,o,r,a){void 0===a&&(a=this.strategy);var s={left:e.left,right:e.left-(r.width-e.width)},l={bottom:e.top+e.height,top:e.top-r.height},c=Object.keys(s).reduce((function(e,t){return e.concat(Object.keys(l).map((function(e){return"".concat(t).concat((0,i.ucfirst)(e))})))}),[]),u=function(e){var t=n.__read((0,i.kebabCase)(e).split("-"),2);return{left:s[t[0]],top:l[t[1]],width:r.width,height:r.height}},d=function(e){return t.boxInView(u(a),e)?a:c.find((function(o){if(t.boxInView(u(o),e))return o}))||null},p=d((0,i.position)(this.j.container,this.j));return p&&t.boxInView(u(p),o)||(p=d(o)||p||a),[u(p),p]},t.boxInView=function(e,t){return!(-2>e.top-t.top||-2>e.left-t.left||-2>t.top+t.height-(e.top+e.height)||-2>t.left+t.width-(e.left+e.width))},t.prototype.close=function(){return this.isOpened?(this.isOpened=!1,this.childrenPopups.forEach((function(e){return e.close()})),this.j.e.fire(this,"beforeClose"),this.j.e.fire("beforePopupClose",this),this.removeGlobalListeners(),r.Dom.safeRemove(this.container),this):this},t.prototype.closeOnOutsideClick=function(e){this.isOpened&&!this.isOwnClick(e)&&this.close()},t.prototype.isOwnClick=function(e){if(!e.target)return!1;var o=a.UIElement.closestElement(e.target,t);return Boolean(o&&(this===o||o.closest(this)))},t.prototype.addGlobalListeners=function(){var e=this,t=this.throttleUpdatePosition,o=this.ow;c.eventEmitter.on("closeAllPopups",this.close),this.smart&&this.j.e.on("escape",this.close).on("mousedown touchstart",this.closeOnOutsideClick).on(o,"mousedown touchstart",this.closeOnOutsideClick),this.j.e.on("closeAllPopups",this.close).on("resize",t).on(this.container,"scroll mousewheel",t).on(o,"scroll",t).on(o,"resize",t),r.Dom.up(this.j.container,(function(o){o&&e.j.e.on(o,"scroll mousewheel",t)}))},t.prototype.removeGlobalListeners=function(){var e=this,t=this.throttleUpdatePosition,o=this.ow;c.eventEmitter.off("closeAllPopups",this.close),this.smart&&this.j.e.off("escape",this.close).off("mousedown touchstart",this.closeOnOutsideClick).off(o,"mousedown touchstart",this.closeOnOutsideClick),this.j.e.off("closeAllPopups",this.close).off("resize",t).off(this.container,"scroll mousewheel",t).off(o,"scroll",t).off(o,"resize",t),r.Dom.up(this.j.container,(function(o){o&&e.j.e.off(o,"scroll mousewheel",t)}))},t.prototype.setZIndex=function(e){this.container.style.zIndex=e.toString()},t.prototype.destruct=function(){return this.close(),e.prototype.destruct.call(this)},n.__decorate([s.autobind],t.prototype,"updatePosition",null),n.__decorate([(0,s.throttle)(10),s.autobind],t.prototype,"throttleUpdatePosition",null),n.__decorate([s.autobind],t.prototype,"close",null),n.__decorate([s.autobind],t.prototype,"closeOnOutsideClick",null),t}(a.UIElement);t.Popup=u},63682:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProgressBar=void 0;var n=o(20255);o(50197);var r=o(24263),i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.className=function(){return"ProgressBar"},t.prototype.render=function(){return"<div><div></div></div>"},t.prototype.show=function(){return(this.j.workplace||this.j.container).appendChild(this.container),this},t.prototype.hide=function(){return r.Dom.safeRemove(this.container),this},t.prototype.progress=function(e){return this.container.style.width=e.toFixed(2)+"%",this},t.prototype.destruct=function(){return this.hide(),e.prototype.destruct.call(this)},t}(o(53929).UIElement);t.ProgressBar=i},43608:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ViewWithToolbar=void 0;var n=o(20255);o(39008);var r=o(75902),i=o(40332),a=o(64968),s=o(81438),l=o(56562),c=o(97642),u=o(43441),d=function(e){function t(t,o){void 0===o&&(o=!1);var n=e.call(this,t,o)||this;return n.toolbar=(0,s.makeCollection)(n),n.defaultToolbarContainer=n.c.div("jodit-toolbar__box"),n.registeredButtons=new Set,n.groupToButtons={},n.isJodit=!1,n.isJodit=o,n.e.on("beforeToolbarBuild",n.beforeToolbarBuild),n}return n.__extends(t,e),Object.defineProperty(t.prototype,"toolbarContainer",{get:function(){return this.o.fullsize||!(0,i.isString)(this.o.toolbar)&&!a.Dom.isHTMLElement(this.o.toolbar)?(this.o.toolbar&&a.Dom.appendChildFirst(this.container,this.defaultToolbarContainer),this.defaultToolbarContainer):(0,i.resolveElement)(this.o.toolbar,this.o.shadowRoot||this.od)},enumerable:!1,configurable:!0}),t.prototype.setPanel=function(e){this.o.toolbar=e,this.buildToolbar()},t.prototype.buildToolbar=function(){if(this.o.toolbar){var e=this.o.buttons?(0,i.splitArray)(this.o.buttons):[];this.toolbar.setRemoveButtons(this.o.removeButtons).build(e.concat(this.o.extraButtons||[])).appendTo(this.toolbarContainer)}},t.prototype.getRegisteredButtonGroups=function(){return this.groupToButtons},t.prototype.registerButton=function(e){var t;this.registeredButtons.add(e);var o=null!==(t=e.group)&&void 0!==t?t:"other";return this.groupToButtons[o]||(this.groupToButtons[o]=[]),null!=e.position?this.groupToButtons[o][e.position]=e.name:this.groupToButtons[o].push(e.name),this},t.prototype.unregisterButton=function(e){var t;this.registeredButtons.delete(e);var o=null!==(t=e.group)&&void 0!==t?t:"other",n=this.groupToButtons[o];if(n){var r=n.indexOf(e.name);-1!==r&&n.splice(r,1),0===n.length&&delete this.groupToButtons[o]}return this},t.prototype.beforeToolbarBuild=function(e){var t=this;if(Object.keys(this.groupToButtons).length)return e.map((function(e){return(0,c.isButtonGroup)(e)&&e.group&&t.groupToButtons[e.group]?{group:e.group,buttons:n.__spreadArray(n.__spreadArray([],n.__read(e.buttons),!1),n.__read(t.groupToButtons[e.group]),!1)}:e}))},t.prototype.destruct=function(){this.isDestructed||(this.setStatus(l.STATUSES.beforeDestruct),this.e.off("beforeToolbarBuild",this.beforeToolbarBuild),this.toolbar.destruct(),e.prototype.destruct.call(this))},n.__decorate([u.autobind],t.prototype,"beforeToolbarBuild",null),t}(r.View);t.ViewWithToolbar=d},75902:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0;var n=o(20255),r=o(77462),i=o(40332),a=o(86893),s=o(87837),l=o(17332),c=o(43441),u=o(59829),d=o(55395),p=o(71014),f=function(e){function t(t,n){void 0===n&&(n=!1);var i=e.call(this)||this;return i.isJodit=n,i.isView=!0,i.parent=null,i.mods={},i.components=new Set,i.version="3.24.2",i.buffer=r.Storage.makeStorage(),i.storage=r.Storage.makeStorage(!0,i.componentName),i.OPTIONS=o.defaultOptions,i.__isFullSize=!1,i.__whoLocked="",i.isLockedNotBy=function(e){return i.isLocked&&i.__whoLocked!==e},i.__modulesInstances=new Map,i.id=(new Date).getTime().toString(),i.buffer=r.Storage.makeStorage(),i.initOptions(t),i.initOwners(),i.events=new d.EventEmitter(i.od),i.create=new s.Create(i.od),i.container=i.c.div("jodit ".concat(i.componentName)),i.progressbar=new s.ProgressBar(i),i.message=new p.UIMessages(i,i.container),i}var o;return n.__extends(t,e),o=t,Object.defineProperty(t.prototype,"basePath",{get:function(){return this.o.basePath?this.o.basePath:a.BASE_PATH},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"defaultTimeout",{get:function(){return(0,i.isVoid)(this.o.defaultTimeout)?100:this.o.defaultTimeout},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"c",{get:function(){return this.create},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"container",{get:function(){return this.__container},set:function(e){this.__container=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"e",{get:function(){return this.events},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"options",{get:function(){return this.__options},set:function(e){this.__options=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"o",{get:function(){return this.options},enumerable:!1,configurable:!0}),t.prototype.i18n=function(e){for(var t=[],o=1;arguments.length>o;o++)t[o-1]=arguments[o];return(0,i.i18n)(e,t,this.options)},t.prototype.toggleFullSize=function(e){void 0===e&&(e=!this.__isFullSize),e!==this.__isFullSize&&(this.__isFullSize=e,this.e.fire("toggleFullSize",e))},Object.defineProperty(t.prototype,"isLocked",{get:function(){return""!==this.__whoLocked},enumerable:!1,configurable:!0}),t.prototype.lock=function(e){return void 0===e&&(e="any"),!this.isLocked&&(this.__whoLocked=e,!0)},t.prototype.unlock=function(){return!!this.isLocked&&(this.__whoLocked="",!0)},Object.defineProperty(t.prototype,"isFullSize",{get:function(){return this.__isFullSize},enumerable:!1,configurable:!0}),t.prototype.getVersion=function(){return"3.24.2"},t.getVersion=function(){return"3.24.2"},t.prototype.initOptions=function(e){this.options=(0,i.ConfigProto)(e||{},(0,i.ConfigProto)(this.options||{},o.defaultOptions))},t.prototype.initOwners=function(){var e;this.ownerWindow=null!==(e=this.o.ownerWindow)&&void 0!==e?e:window},t.prototype.attachEvents=function(e){var t=this;if(e){var o=null==e?void 0:e.events;o&&Object.keys(o).forEach((function(e){return t.e.on(e,o[e])}))}},t.prototype.getInstance=function(e,t){var o=this.e.fire((0,i.camelCase)("getInstance_"+e),t);if(o)return o;var n=l.modules[e],r=this.__modulesInstances;if(!(0,i.isFunction)(n))throw(0,i.error)("Need real module name");if(!r.has(e)){var a=n.prototype instanceof s.ViewComponent?new n(this,t):new n(t);this.components.add(a),r.set(e,a)}return r.get(e)},t.prototype.addDisclaimer=function(e){this.container.appendChild(e)},t.prototype.beforeDestruct=function(){this.e.fire(s.STATUSES.beforeDestruct,this),this.components.forEach((function(e){(0,i.isDestructable)(e)&&!e.isInDestruct&&e.destruct()})),this.components.clear()},t.prototype.destruct=function(){this.isDestructed||(this.progressbar.destruct(),this.message.destruct(),this.async&&this.async.destruct(),this.events&&this.e.destruct(),this.buffer&&this.buffer.clear(),s.Dom.safeRemove(this.container),e.prototype.destruct.call(this))},t.esNext=!1,n.__decorate([(0,c.hook)(s.STATUSES.beforeDestruct)],t.prototype,"beforeDestruct",null),o=n.__decorate([(0,c.derive)(u.Mods,u.Elms)],t)}(s.Component);t.View=f,f.defaultOptions={extraButtons:[],textIcons:!1,namespace:"",removeButtons:[],zIndex:100002,defaultTimeout:100,fullsize:!1,showTooltip:!0,useNativeTooltip:!1,buttons:[],globalFullSize:!0,language:"auto"}},37920:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Jodit=void 0;var n=o(20255),r=o(93166),i=o(86893),a=o(87837),s=o(40332),l=o(77462),c=o(86893),u=o(17332),d=o(43441),p=o(59829),f=o(30056),h="data-jodit-default-style-display",m="data-jodit-default-classes",Jodit=function(e){function Jodit(o,n){var r=e.call(this,n,!0)||this;r.isJodit=!0,r.commands=new Map,r.__selectionLocked=null,r.__wasReadOnly=!1,r.createInside=new a.Create((function(){return r.ed}),r.o.createAttributes),r.editorIsActive=!1,r.__mode=i.MODE_WYSIWYG,r.__callChangeCount=0,r.__isSilentChange=!1,r.__elementToPlace=new Map;try{var c=(0,s.resolveElement)(o,r.o.shadowRoot||r.od);if(t.isJoditAssigned(c))return c.component}catch(e){throw r.destruct(),e}r.setStatus(a.STATUSES.beforeInit),r.id=(0,s.attr)((0,s.resolveElement)(o,r.o.shadowRoot||r.od),"id")||(new Date).getTime().toString(),u.instances[r.id]=r,r.storage=l.Storage.makeStorage(!0,r.id),r.attachEvents(n),r.e.on(r.ow,"resize",(function(){r.e&&r.e.fire("resize")})),r.e.on("prepareWYSIWYGEditor",r.__prepareWYSIWYGEditor),r.selection=new a.Select(r);var d=r.beforeInitHook();return(0,s.callPromise)(d,(function(){r.e.fire("beforeInit",r);var e=u.pluginSystem.init(r);(0,s.callPromise)(e,(function(){r.e.fire("afterPluginSystemInit",r),r.e.on("changePlace",(function(){r.setReadOnly(r.o.readonly),r.setDisabled(r.o.disabled)})),r.places.length=0;var e=r.addPlace(o,n);u.instances[r.id]=r,(0,s.callPromise)(e,(function(){r.e&&r.e.fire("afterInit",r),r.afterInitHook(),r.setStatus(a.STATUSES.ready),r.e.fire("afterConstructor",r)}))}))})),r}var t;return n.__extends(Jodit,e),t=Jodit,Jodit.prototype.className=function(){return"Jodit"},Jodit.prototype.waitForReady=function(){var e=this;return this.isReady?Promise.resolve(this):this.async.promise((function(t){e.hookStatus("ready",(function(){return t(e)}))}))},Object.defineProperty(Jodit,"ready",{get:function(){return new Promise((function(e){u.eventEmitter.on("oditready",e)}))},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"text",{get:function(){if(this.editor)return this.editor.innerText||"";var e=this.createInside.div();return e.innerHTML=this.getElementValue(),e.innerText||""},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"defaultTimeout",{get:function(){return(0,s.isNumber)(this.o.defaultTimeout)?this.o.defaultTimeout:r.Config.defaultOptions.defaultTimeout},enumerable:!1,configurable:!0}),Jodit.atom=function(e){return(0,s.markAsAtomic)(e)},Jodit.make=function(e,t){return new this(e,t)},Jodit.isJoditAssigned=function(e){return e&&(0,s.isJoditObject)(e.component)&&!e.component.isInDestruct},Object.defineProperty(Jodit,"defaultOptions",{get:function(){return r.Config.defaultOptions},enumerable:!1,configurable:!0}),Jodit.prototype.__setPlaceField=function(e,t){this.currentPlace||(this.currentPlace={},this.places=[this.currentPlace]),this.currentPlace[e]=t},Object.defineProperty(Jodit.prototype,"element",{get:function(){return this.currentPlace.element},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"editor",{get:function(){return this.currentPlace.editor},set:function(e){this.__setPlaceField("editor",e)},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"container",{get:function(){return this.currentPlace.container},set:function(e){this.__setPlaceField("container",e)},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"workplace",{get:function(){return this.currentPlace.workplace},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"statusbar",{get:function(){return this.currentPlace.statusbar},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"iframe",{get:function(){return this.currentPlace.iframe},set:function(e){this.__setPlaceField("iframe",e)},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"history",{get:function(){return this.currentPlace.history},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"observer",{get:function(){return this.history},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"editorWindow",{get:function(){return this.currentPlace.editorWindow},set:function(e){this.__setPlaceField("editorWindow",e)},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"ew",{get:function(){return this.editorWindow},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"editorDocument",{get:function(){return this.currentPlace.editorWindow.document},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"ed",{get:function(){return this.editorDocument},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"options",{get:function(){return this.currentPlace.options},set:function(e){this.__setPlaceField("options",e)},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"s",{get:function(){return this.selection},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"uploader",{get:function(){return this.getInstance("Uploader",this.o.uploader)},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"filebrowser",{get:function(){var e=this,t=(0,s.ConfigProto)({defaultTimeout:e.defaultTimeout,uploader:e.o.uploader,language:e.o.language,license:e.o.license,theme:e.o.theme,shadowRoot:e.o.shadowRoot,defaultCallback:function(t){t.files&&t.files.length&&t.files.forEach((function(o,n){var r=t.baseurl+o;t.isImages&&t.isImages[n]?e.s.insertImage(r,null,e.o.imageDefaultWidth):e.s.insertNode(e.createInside.fromHTML("<a href='".concat(r,"' title='").concat(r,"'>").concat(r,"</a>")))}))}},this.o.filebrowser);return e.getInstance("FileBrowser",t)},enumerable:!1,configurable:!0}),Object.defineProperty(Jodit.prototype,"mode",{get:function(){return this.__mode},set:function(e){this.setMode(e)},enumerable:!1,configurable:!0}),Jodit.prototype.getNativeEditorValue=function(){var e=this.e.fire("beforeGetNativeEditorValue");return(0,s.isString)(e)?e:this.editor?this.editor.innerHTML:this.getElementValue()},Jodit.prototype.setNativeEditorValue=function(e){var t={value:e};this.e.fire("beforeSetNativeEditorValue",t)||this.editor&&(this.editor.innerHTML=t.value)},Object.defineProperty(Jodit.prototype,"value",{get:function(){return this.getEditorValue()},set:function(e){this.setEditorValue(e),this.history.__processChanges()},enumerable:!1,configurable:!0}),Jodit.prototype.synchronizeValues=function(){this.__imdSynchronizeValues()},Jodit.prototype.__imdSynchronizeValues=function(){this.setEditorValue()},Jodit.prototype.getEditorValue=function(e,t){var o;if(void 0===e&&(e=!0),void 0!==(o=this.e.fire("beforeGetValueFromEditor",t)))return o;o=this.getNativeEditorValue().replace(i.INVISIBLE_SPACE_REG_EXP(),""),e&&(o=o.replace(/<span[^>]+id="jodit-selection_marker_[^>]+><\/span>/g,"")),"<br>"===o&&(o="");var n={value:o};return this.e.fire("afterGetValueFromEditor",n,t),n.value},Jodit.prototype.setEditorValue=function(e){var t=this.e.fire("beforeSetValueToEditor",e);if(!1!==t)if((0,s.isString)(t)&&(e=t),this.editor){if(!(0,s.isString)(e)&&!(0,s.isVoid)(e))throw(0,s.error)("value must be string");(0,s.isVoid)(e)||this.getNativeEditorValue()===e||this.setNativeEditorValue(e),this.e.fire("postProcessSetEditorValue");var o=this.getElementValue(),n=this.getEditorValue();if(!this.__isSilentChange&&o!==n&&i.SAFE_COUNT_CHANGE_CALL>this.__callChangeCount){this.__setElementValue(n),this.__callChangeCount+=1;try{this.history.__upTick(),this.e.fire("change",n,o),this.e.fire(this.history,"change",n,o)}finally{this.__callChangeCount=0}}}else void 0!==e&&this.__setElementValue(e)},Jodit.prototype.updateElementValue=function(){this.__setElementValue(this.getEditorValue())},Jodit.prototype.getElementValue=function(){return void 0!==this.element.value?this.element.value:this.element.innerHTML},Jodit.prototype.setElementValue=function(e){var t=this.getElementValue();return(void 0===e||(0,s.isString)(e)&&e!==t)&&(null!=e||(e=t),e!==this.getEditorValue()&&this.setEditorValue(e)),this.__setElementValue(e)},Jodit.prototype.__setElementValue=function(e){var t=this;if(!(0,s.isString)(e))throw(0,s.error)("value must be string");if(this.element!==this.container&&e!==this.getElementValue()){var o={value:e},n=this.e.fire("beforeSetElementValue",o);(0,s.callPromise)(n,(function(){void 0!==t.element.value?t.element.value=o.value:t.element.innerHTML=o.value,t.e.fire("afterSetElementValue",o)}))}},Jodit.prototype.registerCommand=function(e,t,o){var n=e.toLowerCase(),r=this.commands.get(n);if(void 0===r&&this.commands.set(n,r=[]),r.push(t),!(0,s.isFunction)(t)){var i=this.o.commandToHotkeys[n]||this.o.commandToHotkeys[e]||t.hotkeys;i&&this.registerHotkeyToCommand(i,n,null==o?void 0:o.stopPropagation)}return this},Jodit.prototype.registerHotkeyToCommand=function(e,t,o){var n=this;void 0===o&&(o=!0);var r=(0,s.asArray)(e).map(s.normalizeKeyAliases).map((function(e){return e+".hotkey"})).join(" ");this.e.off(r).on(r,(function(e,r){return r&&(r.shouldStop=null==o||o),n.execCommand(t)}))},Jodit.prototype.execCommand=function(e,t,o){for(var r,i=[],a=3;arguments.length>a;a++)i[a-3]=arguments[a];if(this.s.isFocused()||this.s.focus(),!this.o.readonly||this.o.allowCommandsInReadOnly.includes(e)){var s;if(e=e.toLowerCase(),!1!==(s=(r=this.e).fire.apply(r,n.__spreadArray(["beforeCommand",e,t,o],n.__read(i),!1)))&&(s=this.__execCustomCommands.apply(this,n.__spreadArray([e,t,o],n.__read(i),!1))),!1!==s)if(this.s.focus(),"selectall"===e)this.s.select(this.editor,!0),this.s.expandSelection();else try{s=this.nativeExecCommand(e,t,o)}catch(e){}return this.e.fire("afterCommand",e,t,o),this.setEditorValue(),s}},Jodit.prototype.nativeExecCommand=function(e,t,o){this.__isSilentChange=!0;try{return this.ed.execCommand(e,t,o)}finally{this.__isSilentChange=!1}},Jodit.prototype.__execCustomCommands=function(e,t,o){for(var r=this,i=[],a=3;arguments.length>a;a++)i[a-3]=arguments[a];e=e.toLowerCase();var l,c=this.commands.get(e);if(void 0!==c)return c.forEach((function(a){var c,u=(c=(0,s.isFunction)(a)?a:a.exec).call.apply(c,n.__spreadArray([r,e,t,o],n.__read(i),!1));void 0!==u&&(l=u)})),l},Jodit.prototype.lock=function(t){return void 0===t&&(t="any"),!!e.prototype.lock.call(this,t)&&(this.__selectionLocked=this.s.save(),this.s.clear(),this.editor.classList.add("jodit_lock"),this.e.fire("lock",!0),!0)},Jodit.prototype.unlock=function(){return!!e.prototype.unlock.call(this)&&(this.editor.classList.remove("jodit_lock"),this.__selectionLocked&&this.s.restore(),this.e.fire("lock",!1),!0)},Jodit.prototype.getMode=function(){return this.mode},Jodit.prototype.isEditorMode=function(){return this.getRealMode()===i.MODE_WYSIWYG},Jodit.prototype.getRealMode=function(){if(this.getMode()!==i.MODE_SPLIT)return this.getMode();var e=this.od.activeElement;return e&&(e===this.iframe||a.Dom.isOrContains(this.editor,e)||a.Dom.isOrContains(this.toolbar.container,e))?i.MODE_WYSIWYG:i.MODE_SOURCE},Jodit.prototype.setMode=function(e){var t=this,o=this.getMode(),n={mode:parseInt(e.toString(),10)},r=["jodit-wysiwyg_mode","jodit-source__mode","jodit_split_mode"];!1!==this.e.fire("beforeSetMode",n)&&(this.__mode=[i.MODE_SOURCE,i.MODE_WYSIWYG,i.MODE_SPLIT].includes(n.mode)?n.mode:i.MODE_WYSIWYG,this.o.saveModeInStorage&&this.storage.set("jodit_default_mode",this.mode),r.forEach((function(e){t.container.classList.remove(e)})),this.container.classList.add(r[this.mode-1]),o!==this.getMode()&&this.e.fire("afterSetMode"))},Jodit.prototype.toggleMode=function(){var e=this.getMode();[i.MODE_SOURCE,i.MODE_WYSIWYG,this.o.useSplitMode?i.MODE_SPLIT:9].includes(e+1)?e+=1:e=i.MODE_WYSIWYG,this.setMode(e)},Jodit.prototype.setDisabled=function(e){this.o.disabled=e;var t=this.__wasReadOnly;this.setReadOnly(e||t),this.__wasReadOnly=t,this.editor&&(this.editor.setAttribute("aria-disabled",e.toString()),this.container.classList.toggle("jodit_disabled",e),this.e.fire("disabled",e))},Jodit.prototype.getDisabled=function(){return this.o.disabled},Jodit.prototype.setReadOnly=function(e){this.__wasReadOnly!==e&&(this.__wasReadOnly=e,this.o.readonly=e,e?this.editor&&this.editor.removeAttribute("contenteditable"):this.editor&&this.editor.setAttribute("contenteditable","true"),this.e&&this.e.fire("readonly",e))},Jodit.prototype.getReadOnly=function(){return this.o.readonly},Jodit.prototype.focus=function(){this.getMode()!==i.MODE_SOURCE&&this.s.focus()},Object.defineProperty(Jodit.prototype,"isFocused",{get:function(){return this.s.isFocused()},enumerable:!1,configurable:!0}),Jodit.prototype.beforeInitHook=function(){},Jodit.prototype.afterInitHook=function(){},Jodit.prototype.initOptions=function(e){this.options=(0,s.ConfigProto)(e||{},r.Config.defaultOptions)},Jodit.prototype.initOwners=function(){this.editorWindow=this.o.ownerWindow,this.ownerWindow=this.o.ownerWindow},Jodit.prototype.addPlace=function(e,t){var o=this,n=(0,s.resolveElement)(e,this.o.shadowRoot||this.od);this.attachEvents(t),n.attributes&&(0,s.toArray)(n.attributes).forEach((function(e){var n=e.name,i=e.value;void 0===r.Config.defaultOptions[n]||t&&void 0!==t[n]||(-1!==["readonly","disabled"].indexOf(n)&&(i=""===i||"true"===i),/^[0-9]+(\.)?([0-9]+)?$/.test(i.toString())&&(i=Number(i)),o.options[n]=i)}));var i=this.c.div("jodit-container");i.classList.add("jodit"),i.classList.add("jodit-container"),i.classList.add("jodit_theme_".concat(this.o.theme||"default")),v(this.o.className,i),this.o.containerStyle&&(0,s.css)(i,this.o.containerStyle);var l=this.o.styleValues;Object.keys(l).forEach((function(e){var t=(0,s.kebabCase)(e);i.style.setProperty("--jd-".concat(t),l[e])})),i.setAttribute("contenteditable","false");var c=null;this.o.inline&&(-1===["TEXTAREA","INPUT"].indexOf(n.nodeName)&&(i=n,n.setAttribute(m,n.className.toString()),c=i.innerHTML,i.innerHTML=""),i.classList.add("jodit_inline"),i.classList.add("jodit-container")),n!==i&&(n.style.display&&n.setAttribute(h,n.style.display),n.style.display="none");var u=this.c.div("jodit-workplace",{contenteditable:!1});i.appendChild(u),this.message.destruct(),this.message=new a.UIMessages(this,u),n.parentNode&&n!==i&&n.parentNode.insertBefore(i,n),Object.defineProperty(n,"component",{enumerable:!1,configurable:!0,value:this});var d=this.c.div("jodit-wysiwyg",{contenteditable:!0,"aria-disabled":!1,tabindex:this.o.tabIndex});u.appendChild(d);var p={editor:d,element:n,container:i,workplace:u,statusbar:new a.StatusBar(this,i),options:this.isReady?(0,s.ConfigProto)(t||{},r.Config.defaultOptions):this.options,history:new a.History(this),editorWindow:this.ow};this.__elementToPlace.set(d,p),this.setCurrentPlace(p),this.places.push(p),this.setNativeEditorValue(this.getElementValue());var f=this.__initEditor(c),g=this.options;return(0,s.callPromise)(f,(function(){g.enableDragAndDropFileToEditor&&g.uploader&&(g.uploader.url||g.uploader.insertImageAsBase64URI)&&o.uploader.bind(o.editor),o.__elementToPlace.get(o.editor)||o.__elementToPlace.set(o.editor,p),o.e.fire("afterAddPlace",p)}))},Jodit.prototype.addDisclaimer=function(e){this.workplace.appendChild(e)},Jodit.prototype.setCurrentPlace=function(e){this.currentPlace!==e&&(this.isEditorMode()||this.setMode(i.MODE_WYSIWYG),this.currentPlace=e,this.buildToolbar(),this.isReady&&this.e.fire("changePlace",e))},Jodit.prototype.__initEditor=function(e){var t=this,o=this.__createEditor();return(0,s.callPromise)(o,(function(){if(!t.isInDestruct){if(t.element!==t.container){var o=t.getElementValue();o!==t.getEditorValue()&&t.setEditorValue(o)}else null!=e&&t.setEditorValue(e);var n=t.o.defaultMode;if(t.o.saveModeInStorage){var r=t.storage.get("jodit_default_mode");"string"==typeof r&&(n=parseInt(r,10))}t.setMode(n),t.o.readonly&&(t.__wasReadOnly=!1,t.setReadOnly(!0)),t.o.disabled&&t.setDisabled(!0);try{t.ed.execCommand("defaultParagraphSeparator",!1,t.o.enter.toLowerCase())}catch(e){}try{t.ed.execCommand("enableObjectResizing",!1,"false")}catch(e){}try{t.ed.execCommand("enableInlineTableEditing",!1,"false")}catch(e){}}}))},Jodit.prototype.__createEditor=function(){var e=this,t=this.editor,o=this.e.fire("createEditor",this);return(0,s.callPromise)(o,(function(){if(!e.isInDestruct){if((!1===o||(0,s.isPromise)(o))&&a.Dom.safeRemove(t),v(e.o.editorClassName||e.o.editorCssClass,e.editor),e.o.editorCssClass&&e.editor.classList.add(e.o.editorCssClass),e.o.style&&(0,s.css)(e.editor,e.o.style),e.e.on("synchro",(function(){e.setEditorValue()})).on("focus",(function(){e.editorIsActive=!0})).on("blur",(function(){return e.editorIsActive=!1})),e.__prepareWYSIWYGEditor(),e.o.direction){var n="rtl"===e.o.direction.toLowerCase()?"rtl":"ltr";e.container.style.direction=n,e.container.setAttribute("dir",n),e.toolbar.setDirection(n)}e.o.triggerChangeEvent&&e.e.on("change",e.async.debounce((function(){e.e&&e.e.fire(e.element,"change")}),e.defaultTimeout))}}))},Jodit.prototype.__prepareWYSIWYGEditor=function(){var e=this,t=this.editor;if(this.o.direction){var o="rtl"===this.o.direction.toLowerCase()?"rtl":"ltr";this.editor.style.direction=o,this.editor.setAttribute("dir",o)}this.e.on(t,"mousedown touchstart focus",(function(){var o=e.__elementToPlace.get(t);o&&e.setCurrentPlace(o)})).on(t,"compositionend",this.synchronizeValues).on(t,"selectionchange selectionstart keydown keyup input keypress dblclick mousedown mouseup click copy cut dragstart drop dragover paste resize touchstart touchend focus blur",(function(t){if(!e.o.readonly&&!e.__isSilentChange&&!(t instanceof e.ew.KeyboardEvent&&t.isComposing)&&e.e&&e.e.fire){if(!1===e.e.fire(t.type,t))return!1;e.synchronizeValues()}}))},Jodit.prototype.fetch=function(e,t){var o=this,r=new f.Ajax(n.__assign({url:e},t),this.o.defaultAjaxOptions),i=function(){o.e.off("beforeDestruct",i),o.progressbar.progress(100).hide(),r.destruct()};this.e.one("beforeDestruct",i),this.progressbar.show().progress(30);var a=r.send();return a.finally(i).catch((function(){return null})),a},Jodit.prototype.destruct=function(){var t=this;if(!this.isInDestruct&&(this.setStatus(a.STATUSES.beforeDestruct),this.__elementToPlace.clear(),this.editor)){var o=this.getEditorValue();this.storage.clear(),this.buffer.clear(),this.commands.clear(),this.__selectionLocked=null,this.e.off(this.ow,"resize"),this.e.off(this.ow),this.e.off(this.od),this.e.off(this.od.body),this.places.forEach((function(e){var n=e.container,r=e.workplace,i=e.statusbar,l=e.element,c=e.iframe,u=e.editor,d=e.history;if(l!==n)if(l.hasAttribute(h)){var p=(0,s.attr)(l,h);p&&(l.style.display=p,l.removeAttribute(h))}else l.style.display="";else l.hasAttribute(m)&&(l.className=(0,s.attr)(l,m)||"",l.removeAttribute(m));l.hasAttribute("style")&&!(0,s.attr)(l,"style")&&l.removeAttribute("style"),i.destruct(),t.e.off(n),t.e.off(l),t.e.off(u),a.Dom.safeRemove(r),a.Dom.safeRemove(u),n!==l&&a.Dom.safeRemove(n),Object.defineProperty(l,"component",{enumerable:!1,configurable:!0,value:null}),a.Dom.safeRemove(c),n===l&&(l.innerHTML=o),d.destruct()})),this.places.length=0,this.currentPlace={},delete u.instances[this.id],e.prototype.destruct.call(this)}},Jodit.fatMode=!1,Jodit.plugins=u.pluginSystem,Jodit.modules=u.modules,Jodit.ns=u.modules,Jodit.decorators={},Jodit.constants=i,Jodit.instances=u.instances,Jodit.lang=c.lang,Jodit.core={Plugin:a.Plugin},n.__decorate([d.cache],Jodit.prototype,"uploader",null),n.__decorate([d.cache],Jodit.prototype,"filebrowser",null),n.__decorate([(0,d.throttle)()],Jodit.prototype,"synchronizeValues",null),n.__decorate([(0,d.watch)(":internalChange")],Jodit.prototype,"updateElementValue",null),n.__decorate([d.autobind],Jodit.prototype,"__prepareWYSIWYGEditor",null),t=n.__decorate([(0,d.derive)(p.Dlgs)],Jodit)}(a.ViewWithToolbar);function v(e,t){e&&e.split(/\s+/).forEach((function(e){return t.classList.add(e)}))}t.Jodit=Jodit},26435:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(10172),r={},i=o(90643),a=o(52532),s=o(75178),l=o(51048),c=o(22999),u=o(34145),d=o(40272),p=o(2978),f=o(99113),h=o(51923),m=o(21268),v=o(37289),g=o(17084),y=o(96891),_=o(31211),b=o(31109),S=o(79375),w=o(21042),C=o(73895);r={ar:i,cs_cz:a,de:s,en:l,es:c,fr:u,he:d,hu:p,id:f,it:h,ja:m,ko:v,nl:g,pl:y,pt_br:_,ru:b,tr:S,zh_cn:w,zh_tw:C};var j=o(11399),E=function(e){return e?e.default||e:{}},k={};(0,n.isArray)(E(j))&&E(j).forEach((function(e,t){k[t]=e})),Object.keys(r).forEach((function(e){var t=E(r[e]);(0,n.isArray)(t)?(r[e]={},t.forEach((function(t,o){r[e][k[o]]=t}))):r[e]=t})),t.default=r},60403:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ContextMenu=void 0;var n=o(20255);o(47086);var r=o(35799),i=o(96516),a=o(10172),s=o(11441),l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.className=function(){return"ContextMenu"},t.prototype.show=function(e,t,o){var n=this,r=this,s=this.j.c.div(this.getFullElName("actions"));(0,a.isArray)(o)&&(o.forEach((function(e){if(e){var t=(0,i.Button)(n.jodit,e.icon||"empty",e.title);n.jodit&&t.setParentView(n.jodit),t.setMod("context","menu"),t.onAction((function(t){var o;return null===(o=e.exec)||void 0===o||o.call(r,t),r.close(),!1})),s.appendChild(t.container)}})),this.setContent(s).open((function(){return{left:e,top:t,width:0,height:0}}),!0))},n.__decorate([s.component],t)}(r.Popup);t.ContextMenu=l},97528:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Alert=void 0;var n=o(6690),r=o(40332),i=o(64968),a=o(2074);t.Alert=function(e,t,o,s){void 0===s&&(s="jodit-dialog_alert"),(0,r.isFunction)(t)&&(o=t,t=void 0);var l=this instanceof n.Dialog?this:new n.Dialog,c=l.c.div(s),u=(0,a.Button)(l,"ok","Ok");return(0,r.asArray)(e).forEach((function(e){c.appendChild(i.Dom.isNode(e)?e:l.c.fromHTML(e))})),u.onAction((function(){o&&(0,r.isFunction)(o)&&!1===o(l)||l.close()})),l.setFooter([u]),l.open(c,t||"&nbsp;",!0,!0),u.focus(),l}},47360:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Confirm=void 0;var n=o(6690),r=o(42096),i=o(96031);t.Confirm=function(e,t,o){var a=this instanceof n.Dialog?this:new n.Dialog,s=a.c.fromHTML('<form class="jodit-dialog_prompt"></form>'),l=a.c.element("label");(0,r.isFunction)(t)&&(o=t,t=void 0),l.appendChild(a.c.fromHTML(e)),s.appendChild(l);var c=function(e){return function(){o&&!1===o(e)||a.close()}},u=(0,i.Button)(a,"cancel","Cancel"),d=(0,i.Button)(a,"ok","Yes");return u.onAction(c(!1)),d.onAction(c(!0)),a.e.on(s,"submit",(function(){return c(!0)(),!1})),a.setFooter([d,u]),a.open(s,t||"&nbsp;",!0,!0),d.focus(),a}},6690:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Dialog=void 0;var n=o(20255);o(16462);var r=o(93166),i=o(86893),a=o(40332),s=(o(52378),o(43608)),l=o(64968),c=o(56562),u=o(17332),d=o(43441),p=o(75902),f=o(2074),h=o(71014);r.Config.prototype.dialog={namespace:"",extraButtons:[],resizable:!0,draggable:!0,buttons:["dialog.close"],removeButtons:[],toolbarButtonSize:"middle",zIndex:"inherit"},r.Config.prototype.controls.dialog={close:{icon:"cancel",exec:function(e){e.close()}}};var m=function(e){function t(t){void 0===t&&(t={});var o=e.call(this,t)||this;o.destroyAfterClose=!1,o.moved=!1,o.resizable=!1,o.draggable=!1,o.startX=0,o.startY=0,o.startPoint={x:0,y:0,w:0,h:0},o.lockSelect=function(){o.setMod("moved",!0)},o.unlockSelect=function(){o.setMod("moved",!1)},o.onResize=function(){o.options&&o.o.resizable&&!o.moved&&o.isOpened&&!o.offsetX&&!o.offsetY&&o.setPosition()},o.isModal=!1,o.isOpened=!1;var n=o;n.options=(0,a.ConfigProto)(t,(0,a.ConfigProto)(r.Config.prototype.dialog,p.View.defaultOptions)),l.Dom.safeRemove(n.container);var i=o.getFullElName.bind(o);n.container=o.c.fromHTML('<div class="jodit jodit-dialog '.concat(o.componentName,'">\n\t\t\t\t<div class="').concat(i("overlay"),'"></div>\n\t\t\t\t<div class="').concat(o.getFullElName("panel"),'">\n\t\t\t\t\t<div class="').concat(i("header"),'">\n\t\t\t\t\t\t<div class="').concat(i("header-title"),'"></div>\n\t\t\t\t\t\t<div class="').concat(i("header-toolbar"),'"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="').concat(i("content"),'"></div>\n\t\t\t\t\t<div class="').concat(i("footer"),'"></div>\n\t\t\t\t\t<div class="').concat(i("resizer"),'">').concat(f.Icon.get("resize_handler"),"</div>\n\t\t\t\t</div>\n\t\t\t</div>")),o.o.zIndex&&(o.container.style.zIndex=o.o.zIndex.toString()),(0,a.attr)(n.container,"role","dialog"),Object.defineProperty(n.container,"component",{value:o}),n.setMod("theme",n.o.theme||"default").setMod("resizable",Boolean(n.o.resizable));var s=n.getElm("panel"),c=n.getElm("resizer"),d=n.getElm("header-title"),m=n.getElm("content"),v=n.getElm("footer"),g=n.getElm("header-toolbar");o.message.destruct(),o.message=new h.UIMessages(o,s),o.dialog=s,o.resizer=c,o.dialogbox_header=d,o.dialogbox_content=m,o.dialogbox_footer=v,o.dialogbox_toolbar=g,(0,a.css)(n.dialog,{maxWidth:n.options.maxWidth,minHeight:n.options.minHeight,minWidth:n.options.minWidth});var y=n.getElm("header");y&&n.e.on(y,"pointerdown touchstart",n.onHeaderMouseDown),n.e.on(n.resizer,"mousedown touchstart",n.onResizerMouseDown);var _=u.pluginSystem.get("fullsize");return(0,a.isFunction)(_)&&_(n),o.e.on(n.container,"close_dialog",n.close).on(o.ow,"keydown",o.onEsc).on(o.ow,"resize",o.onResize),o}return n.__extends(t,e),t.prototype.className=function(){return"Dialog"},Object.defineProperty(t.prototype,"destination",{get:function(){var e;return null!==(e=this.o.shadowRoot)&&void 0!==e?e:this.od.body},enumerable:!1,configurable:!0}),t.prototype.setElements=function(e,t){var o=this,n=[];(0,a.asArray)(t).forEach((function(t){if((0,a.isArray)(t)){var r=o.c.div(o.getFullElName("column"));return n.push(r),e.appendChild(r),o.setElements(r,t)}var i;i=(0,a.isString)(t)?o.c.fromHTML(t):(0,a.hasContainer)(t)?t.container:t,n.push(i),i.parentNode!==e&&e.appendChild(i)})),(0,a.toArray)(e.childNodes).forEach((function(t){-1===n.indexOf(t)&&e.removeChild(t)}))},t.prototype.onMouseUp=function(){(this.draggable||this.resizable)&&(this.removeGlobalResizeListeners(),this.draggable=!1,this.resizable=!1,this.unlockSelect(),this.e&&(this.removeGlobalResizeListeners(),this.e.fire(this,"endResize endMove")))},t.prototype.onHeaderMouseDown=function(e){var t=e.target;!this.o.draggable||t&&t.nodeName.match(/^(INPUT|SELECT)$/)||(this.draggable=!0,this.startX=e.clientX,this.startY=e.clientY,this.startPoint.x=(0,a.css)(this.dialog,"left"),this.startPoint.y=(0,a.css)(this.dialog,"top"),this.setMaxZIndex(),e.cancelable&&e.preventDefault(),this.lockSelect(),this.addGlobalResizeListeners(),this.e&&this.e.fire(this,"startMove"))},t.prototype.onMouseMove=function(e){this.draggable&&this.o.draggable&&(this.setPosition(this.startPoint.x+e.clientX-this.startX,this.startPoint.y+e.clientY-this.startY),this.e&&this.e.fire(this,"move",e.clientX-this.startX,e.clientY-this.startY),e.stopImmediatePropagation()),this.resizable&&this.o.resizable&&(this.setSize(this.startPoint.w+e.clientX-this.startX,this.startPoint.h+e.clientY-this.startY),this.e&&this.e.fire(this,"resizeDialog",e.clientX-this.startX,e.clientY-this.startY))},t.prototype.onEsc=function(e){if(this.isOpened&&e.key===i.KEY_ESC&&!0!==this.getMod("static")){var t=this.getMaxZIndexDialog();t?t.close():this.close(),e.stopImmediatePropagation()}},t.prototype.onResizerMouseDown=function(e){this.resizable=!0,this.startX=e.clientX,this.startY=e.clientY,this.startPoint.w=this.dialog.offsetWidth,this.startPoint.h=this.dialog.offsetHeight,this.lockSelect(),this.addGlobalResizeListeners(),this.e&&this.e.fire(this,"startResize")},t.prototype.addGlobalResizeListeners=function(){var e=this;e.e.on(e.ow,"pointermove touchmove",e.onMouseMove).on(e.ow,"pointerup touchend",e.onMouseUp)},t.prototype.removeGlobalResizeListeners=function(){var e=this;e.e.off(e.ow,"mousemove pointermove",e.onMouseMove).off(e.ow,"mouseup pointerup",e.onMouseUp)},t.prototype.setSize=function(e,t){return null==e&&(e=this.dialog.offsetWidth),null==t&&(t=this.dialog.offsetHeight),(0,a.css)(this.dialog,{width:e,height:t}),this},t.prototype.calcAutoSize=function(){return this.setSize("auto","auto"),this.setSize(),this},t.prototype.setPosition=function(e,t){var o=this.ow.innerWidth/2-this.dialog.offsetWidth/2,n=this.ow.innerHeight/2-this.dialog.offsetHeight/2;return 0>o&&(o=0),0>n&&(n=0),void 0!==e&&void 0!==t&&(this.offsetX=e,this.offsetY=t,this.moved=Math.abs(e-o)>100||Math.abs(t-n)>100),this.dialog.style.left=(e||o)+"px",this.dialog.style.top=(t||n)+"px",this},t.prototype.setHeader=function(e){return this.setElements(this.dialogbox_header,e),this},t.prototype.setContent=function(e){return this.setElements(this.dialogbox_content,e),this},t.prototype.setFooter=function(e){return this.setElements(this.dialogbox_footer,e),this.setMod("footer",Boolean(e)),this},t.prototype.getZIndex=function(){return parseInt((0,a.css)(this.container,"zIndex"),10)||0},t.prototype.getMaxZIndexDialog=function(){var e,t,o=0,n=this;return(0,a.$$)(".jodit-dialog",this.destination).forEach((function(r){e=r.component,t=parseInt((0,a.css)(r,"zIndex"),10),e.isOpened&&!isNaN(t)&&t>o&&(n=e,o=t)})),n},t.prototype.setMaxZIndex=function(){if(!this.getMod("static")){var e=20000004,t=0;(0,a.$$)(".jodit-dialog",this.destination).forEach((function(o){t=parseInt((0,a.css)(o,"zIndex"),10),e=Math.max(isNaN(t)?0:t,e)})),this.container.style.zIndex=(e+1).toString()}},t.prototype.toggleFullSize=function(t){(0,a.isVoid)(t)&&(t=!this.getMod("fullsize")),this.setMod("fullsize",t),e.prototype.toggleFullSize.call(this,t)},t.prototype.open=function(e,t,o,n){if(u.eventEmitter.fire("closeAllPopups hideHelpers"),!1===this.e.fire(this,"beforeOpen"))return this;(0,a.isBoolean)(e)&&(o=e),(0,a.isBoolean)(t)&&(n=t),this.destroyAfterClose=!0===o;var r=(0,a.isBoolean)(e)?void 0:e,i=(0,a.isBoolean)(t)?void 0:t;return void 0!==i&&this.setHeader(i),r&&this.setContent(r),this.setMod("active",!0),this.isOpened=!0,this.setModal(n),this.destination.appendChild(this.container),!0!==this.getMod("static")?(this.setPosition(this.offsetX,this.offsetY),this.setMaxZIndex()):this.container.style.removeProperty("z-index"),this.o.fullsize&&this.toggleFullSize(!0),this.e.fire("afterOpen",this),this},t.prototype.setModal=function(e){return this.isModal=Boolean(e),this.setMod("modal",this.isModal),this},t.prototype.close=function(){return this.isDestructed||!this.isOpened||!0===this.getMod("static")||!1===this.e.fire("beforeClose",this)||(this.setMod("active",!1),this.isOpened=!1,this.isFullSize&&this.toggleFullSize(!1),l.Dom.safeRemove(this.container),this.removeGlobalResizeListeners(),this.destroyAfterClose&&this.destruct(),this.e.fire(this,"afterClose"),this.e.fire(this.ow,"joditCloseDialog")),this},t.prototype.buildToolbar=function(){this.o.buttons&&this.toolbar.build((0,a.splitArray)(this.o.buttons)).setMod("mode","header").appendTo(this.dialogbox_toolbar)},t.prototype.destruct=function(){this.isInDestruct||(this.setStatus(c.STATUSES.beforeDestruct),this.isOpened&&this.close(),this.events&&(this.removeGlobalResizeListeners(),this.events.off(this.container,"close_dialog",self.close).off(this.ow,"keydown",this.onEsc).off(this.ow,"resize",this.onResize)),e.prototype.destruct.call(this))},n.__decorate([d.autobind],t.prototype,"onMouseUp",null),n.__decorate([d.autobind],t.prototype,"onHeaderMouseDown",null),n.__decorate([d.autobind],t.prototype,"onMouseMove",null),n.__decorate([d.autobind],t.prototype,"onEsc",null),n.__decorate([d.autobind],t.prototype,"onResizerMouseDown",null),n.__decorate([d.autobind],t.prototype,"close",null),n.__decorate([(0,d.hook)("ready")],t.prototype,"buildToolbar",null),n.__decorate([d.component],t)}(s.ViewWithToolbar);t.Dialog=m},92080:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Confirm=t.Prompt=t.Alert=t.Dialog=void 0;var n=o(6690);Object.defineProperty(t,"Dialog",{enumerable:!0,get:function(){return n.Dialog}});var r=o(97528);Object.defineProperty(t,"Alert",{enumerable:!0,get:function(){return r.Alert}});var i=o(35789);Object.defineProperty(t,"Prompt",{enumerable:!0,get:function(){return i.Prompt}});var a=o(47360);Object.defineProperty(t,"Confirm",{enumerable:!0,get:function(){return a.Confirm}})},35789:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Prompt=void 0;var n=o(92080),r=o(2074),i=o(40332);t.Prompt=function(e,t,o,a,s){var l=this instanceof n.Dialog?this:new n.Dialog,c=(0,r.Button)(l,"cancel","Cancel"),u=(0,r.Button)(l,"ok","Ok"),d=l.c.element("form",{class:"jodit-dialog_prompt"}),p=l.c.element("input",{autofocus:!0,class:"jodit-input"}),f=l.c.element("label");(0,i.isFunction)(t)&&(o=t,t=void 0),a&&(0,i.attr)(p,"placeholder",a),f.appendChild(l.c.text(e)),d.appendChild(f),d.appendChild(p),c.onAction(l.close);var h=function(){o&&(0,i.isFunction)(o)&&!1===o(p.value)||l.close()};return u.onAction(h),l.e.on(d,"submit",(function(){return h(),!1})),l.setFooter([u,c]),l.open(d,t||"&nbsp;",!0,!0),p.focus(),void 0!==s&&s.length&&(p.value=s,p.select()),l}},34468:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255),r=o(64968),i=o(40332),a=o(46341),s=o(2074),l=o(21347),c=o(35503),u=o(66267),d=o(36303),p=o(48096),f="jodit-filebrowser-preview",h=function(e,t){return void 0===e&&(e="next"),void 0===t&&(t="right"),'<div class="'.concat(f,"__navigation ").concat(f,"__navigation_arrow_").concat(e,'">')+""+s.Icon.get("angle-"+t)+"</a>"};t.default=function(e){if(!e.o.contextMenu)return function(){};var t=(0,a.makeContextMenu)(e);return function(o){var a=(0,l.getItem)(o.target,e.container);if(a){var s=a,m=e.options,v=function(e){return(0,i.attr)(s,e)||""};return e.async.setTimeout((function(){var g=(0,l.elementToItem)(a,(0,u.elementsMap)(e));g&&(e.state.activeElements=[g],t.show(o.clientX,o.clientY,[!("1"===v("data-is-file")||!m.editImage||!e.dataProvider.canI("ImageResize")&&!e.dataProvider.canI("ImageCrop"))&&{icon:"pencil",title:"Edit",exec:function(){return c.openImageEditor.call(e,v("href"),v("data-name"),v("data-path"),v("data-source"))}},!!e.dataProvider.canI("FileRename")&&{icon:"italic",title:"Rename",exec:function(){e.e.fire("fileRename.filebrowser",v("data-name"),v("data-path"),v("data-source"))}},!!e.dataProvider.canI("FileRemove")&&{icon:"bin",title:"Delete",exec:function(){return n.__awaiter(void 0,void 0,Promise,(function(){var t;return n.__generator(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),[4,(0,p.deleteFile)(e,v("data-name"),v("data-source"))];case 1:return o.sent(),[3,3];case 2:return t=o.sent(),[2,e.status(t)];case 3:return e.state.activeElements=[],[2,(0,d.loadTree)(e).catch(e.status)]}}))}))}},!!m.preview&&{icon:"eye",title:"Preview",exec:function(){var t=e.dlg({buttons:["fullsize","dialog.close"]}),o=e.c.div(f,'<div class="jodit-icon_loader"></div>'),n=e.c.div(f+"__box"),a=e.c.fromHTML(h()),l=e.c.fromHTML(h("prev","left")),c=function(i){var c=e.c.element("img");c.setAttribute("src",i);var u=function(){var i;e.isInDestruct||(e.e.off(c,"load"),r.Dom.detach(o),m.showPreviewNavigation&&(r.Dom.prevWithClass(s,e.files.getFullElName("item"))&&o.appendChild(l),r.Dom.nextWithClass(s,e.files.getFullElName("item"))&&o.appendChild(a)),o.appendChild(n),n.appendChild(c),t.setPosition(),null===(i=null==e?void 0:e.events)||void 0===i||i.fire("previewOpenedAndLoaded"))};e.e.on(c,"load",u),c.complete&&u()};e.e.on([a,l],"click",(function(){if(!(s=this===a?r.Dom.nextWithClass(s,e.files.getFullElName("item")):r.Dom.prevWithClass(s,e.files.getFullElName("item"))))throw(0,i.error)("Need element");r.Dom.detach(o),r.Dom.detach(n),o.innerHTML='<div class="jodit-icon_loader"></div>',c(v("href"))})),e.e.on("beforeDestruct",(function(){t.destruct()})),t.container.classList.add(f+"__dialog"),t.setContent(o),t.setPosition(),t.open(),c(v("href")),e.events.on("beforeDestruct",(function(){t.destruct()})).fire("previewOpened")}},{icon:"upload",title:"Download",exec:function(){var t=v("href");t&&e.ow.open(t)}}]))}),e.defaultTimeout),e.e.on("beforeClose",(function(){return t.close()})).on("beforeDestruct",(function(){return t.destruct()})),o.stopPropagation(),o.preventDefault(),!1}}}},66267:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.elementsMap=void 0;var o=new WeakMap;t.elementsMap=function(e){var t=o.get(e);return t||o.set(e,t={}),t}},63511:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileBrowserItem=void 0;var n=o(40332),r=function(){function e(e){var t=this;this.data=e,Object.keys(e).forEach((function(o){t[o]=e[o]}))}return e.create=function(t){return t instanceof e?t:new e(t)},Object.defineProperty(e.prototype,"path",{get:function(){return(0,n.normalizePath)(this.data.source.path?this.data.source.path+"/":"/")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"imageURL",{get:function(){var e=this.time||(new Date).getTime().toString(),t=this.data,o=t.source,r=t.thumb||t.file;return t.thumbIsAbsolute&&r?r:(0,n.normalizeUrl)(o.baseurl,o.path,r||"")+"?_tmst="+encodeURIComponent(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"fileURL",{get:function(){var e=this.data.name,t=this.data,o=t.file,r=t.source;return void 0!==o&&(e=o),t.fileIsAbsolute&&e?e:(0,n.normalizeUrl)(r.baseurl,r.path,e||"")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"time",{get:function(){var e=this.data.changed;return e&&("number"==typeof e?new Date(e).toLocaleString():e)||""},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"uniqueHashKey",{get:function(){var e=this.data;return[e.sourceName,e.name,e.file,this.time,e.thumb].join("_").toLowerCase().replace(/[^0-9a-z\-.]/g,"-")},enumerable:!1,configurable:!0}),e.prototype.toJSON=function(){return this.data},e}();t.FileBrowserItem=r},38097:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255),r=o(93166),i=o(10172),a=o(41374),s=o(6102);r.Config.prototype.filebrowser={namespace:"",extraButtons:[],filter:function(e,t){return t=t.toLowerCase(),(0,i.isString)(e)?-1!==e.toLowerCase().indexOf(t):(0,i.isString)(e.name)?-1!==e.name.toLowerCase().indexOf(t):!(0,i.isString)(e.file)||-1!==e.file.toLowerCase().indexOf(t)},sortBy:"changed-desc",sort:function(e,t,o){var r=n.__read(o.toLowerCase().split("-"),2),a=r[0],l="asc"===r[1],c=function(e,t){return t>e?l?-1:1:e>t?l?1:-1:0};if((0,i.isString)(e))return c(e.toLowerCase(),t.toLowerCase());if(void 0===e[a]||"name"===a)return(0,i.isString)(e.name)?c(e.name.toLowerCase(),t.name.toLowerCase()):(0,i.isString)(e.file)?c(e.file.toLowerCase(),t.file.toLowerCase()):0;switch(a){case"changed":var u=new Date(e.changed).getTime(),d=new Date(t.changed).getTime();return l?u-d:d-u;case"size":return u=(0,s.humanSizeToBytes)(e.size),d=(0,s.humanSizeToBytes)(t.size),l?u-d:d-u}return 0},editImage:!0,preview:!0,showPreviewNavigation:!0,showSelectButtonInPreview:!0,contextMenu:!0,howLongShowMsg:3e3,createNewFolder:!0,deleteFolder:!0,renameFolder:!0,moveFolder:!0,moveFile:!0,showFoldersPanel:!0,storeLastOpenedFolder:!0,width:859,height:400,buttons:["filebrowser.upload","filebrowser.remove","filebrowser.update","filebrowser.select","filebrowser.edit","|","filebrowser.tiles","filebrowser.list","|","filebrowser.filter","|","filebrowser.sort"],removeButtons:[],fullsize:!1,showTooltip:!0,view:null,isSuccess:function(e){return e.success},getMessage:function(e){return void 0!==e.data.messages&&(0,i.isArray)(e.data.messages)?e.data.messages.join(" "):""},showFileName:!0,showFileSize:!0,showFileChangeTime:!0,saveStateInStorage:{storeLastOpenedFolder:!0,storeView:!0,storeSortBy:!0},pixelOffsetLoadNewChunk:200,getThumbTemplate:function(e,t,o){var n=this.options,r=this.files.getFullElName("item"),i=n.showFileName,a=n.showFileSize&&e.size,s=n.showFileChangeTime&&e.time,l="";void 0!==e.file&&(l=e.file);var c='<div class="'.concat(r,'-info">').concat(i?'<span class="'.concat(r,'-info-filename">').concat(l,"</span>"):"").concat(a?'<span class="'.concat(r,'-info-filesize">').concat(e.size,"</span>"):"").concat(s?'<span class="'.concat(r,'-info-filechanged">').concat(s,"</span>"):"","</div>");return'<a\n\t\t\tdata-jodit-filebrowser-item="true"\n\t\t\tdata-is-file="'.concat(e.isImage?0:1,'"\n\t\t\tdraggable="true"\n\t\t\tclass="').concat(r,'"\n\t\t\thref="').concat(e.fileURL,'"\n\t\t\tdata-source="').concat(o,'"\n\t\t\tdata-path="').concat(e.path,'"\n\t\t\tdata-name="').concat(l,'"\n\t\t\ttitle="').concat(l,'"\n\t\t\tdata-url="').concat(e.fileURL,'">\n\t\t\t\t<img\n\t\t\t\t\tdata-is-file="').concat(e.isImage?0:1,'"\n\t\t\t\t\tdata-src="').concat(e.fileURL,'"\n\t\t\t\t\tsrc="').concat(e.imageURL,'"\n\t\t\t\t\talt="').concat(l,'"\n\t\t\t\t\tloading="lazy"\n\t\t\t\t/>\n\t\t\t\t').concat(i||a||s?c:"","\n\t\t\t</a>")},ajax:n.__assign(n.__assign({},r.Config.prototype.defaultAjaxOptions),{url:"",data:{},cache:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",method:"POST",processData:!0,headers:{},prepareData:function(e){return e},process:function(e){return e}}),create:{data:{action:"folderCreate"}},getLocalFileByUrl:{data:{action:"getLocalFileByUrl"}},resize:{data:{action:"imageResize"}},crop:{data:{action:"imageCrop"}},fileMove:{data:{action:"fileMove"}},folderMove:{data:{action:"folderMove"}},fileRename:{data:{action:"fileRename"}},folderRename:{data:{action:"folderRename"}},fileRemove:{data:{action:"fileRemove"}},folderRemove:{data:{action:"folderRemove"}},items:{data:{action:"files"}},folder:{data:{action:"folders"}},permissions:{data:{action:"permissions"}}},r.Config.prototype.controls.filebrowser={upload:{icon:"plus",isInput:!0,isDisabled:function(e){return!e.dataProvider.canI("FileUpload")},getContent:function(e){var t=new a.UIFileInput(e,{onlyImages:e.state.onlyImages});return e.e.fire("bindUploader.filebrowser",t.container),t.container}},remove:{icon:"bin",isDisabled:function(e){return!e.state.activeElements.length||!e.dataProvider.canI("FileRemove")},exec:function(e){e.e.fire("fileRemove.filebrowser")}},update:{exec:function(e){e.e.fire("update.filebrowser")}},select:{icon:"check",isDisabled:function(e){return!e.state.activeElements.length},exec:function(e){e.e.fire("select.filebrowser")}},edit:{icon:"pencil",isDisabled:function(e){var t=e.state.activeElements;return 1!==t.length||!t[0].isImage||!(e.dataProvider.canI("ImageCrop")||e.dataProvider.canI("ImageResize"))},exec:function(e){e.e.fire("edit.filebrowser")}},tiles:{icon:"th",isActive:function(e){return"tiles"===e.state.view},exec:function(e){e.e.fire("view.filebrowser","tiles")}},list:{icon:"th-list",isActive:function(e){return"list"===e.state.view},exec:function(e){e.e.fire("view.filebrowser","list")}},filter:{isInput:!0,getContent:function(e,t,o){var n=o.container.querySelector(".jodit-input");if(n)return n;var r=e.c.element("input",{class:"jodit-input",placeholder:e.i18n("Filter")});return r.value=e.state.filterWord,e.e.on(r,"keydown mousedown",e.async.debounce((function(){e.e.fire("filter.filebrowser",r.value)}),e.defaultTimeout)),r}},sort:{isInput:!0,getContent:function(e){var t=e.c.fromHTML('<select class="jodit-input jodit-select">'+'<option value="changed-asc">'.concat(e.i18n("Sort by changed")," (⬆)</option>")+'<option value="changed-desc">'.concat(e.i18n("Sort by changed")," (⬇)</option>")+'<option value="name-asc">'.concat(e.i18n("Sort by name")," (⬆)</option>")+'<option value="name-desc">'.concat(e.i18n("Sort by name")," (⬇)</option>")+'<option value="size-asc">'.concat(e.i18n("Sort by size")," (⬆)</option>")+'<option value="size-desc">'.concat(e.i18n("Sort by size")," (⬇)</option>")+"</select>");return t.value=e.state.sortBy,e.e.on("sort.filebrowser",(function(e){t.value!==e&&(t.value=e)})).on(t,"change",(function(){e.e.fire("sort.filebrowser",t.value)})),t}}}},82530:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_SOURCE_NAME=void 0;var n=o(20255),r=o(40332),i=o(30056),a=o(43441),s=o(63511);t.DEFAULT_SOURCE_NAME="default";var l=function(){function e(e,t){this.parent=e,this.options=t,this.__currentPermissions=null,this.ajaxInstances=new Map,this.progressHandler=function(e){}}return Object.defineProperty(e.prototype,"o",{get:function(){return this.options},enumerable:!1,configurable:!0}),e.prototype.get=function(e){var t=this,o=this.ajaxInstances;if(o.has(e)){var n=o.get(e);null==n||n.abort(),o.delete(e)}var a=(0,r.ConfigProto)(void 0!==this.options[e]?this.options[e]:{},(0,r.ConfigProto)({onProgress:this.progressHandler},this.o.ajax));a.prepareData&&(a.data=a.prepareData.call(this,a.data));var s=new i.Ajax(a);o.set(e,s);var l=s.send();return l.finally((function(){s.destruct(),o.delete(e),t.progressHandler(100)})).catch((function(){return null})),l.then((function(e){return e.json()})).then((function(e){if(e&&!t.isSuccess(e))throw new Error(t.getMessage(e));return e}))},e.prototype.onProgress=function(e){this.progressHandler=e},e.prototype.permissions=function(e,t){return n.__awaiter(this,void 0,Promise,(function(){var o=this;return n.__generator(this,(function(n){return this.o.permissions?(this.o.permissions.data.path=e,this.o.permissions.data.source=t,this.o.permissions.url?[2,this.get("permissions").then((function(e){var t=o.o.permissions.process;if(t||(t=o.o.ajax.process),t){var n=t.call(self,e);n.data.permissions&&(o.__currentPermissions=n.data.permissions)}return o.__currentPermissions}))]:[2,null]):[2,null]}))}))},e.prototype.canI=function(e){var t="allow"+e;return null==this.__currentPermissions||void 0===this.__currentPermissions[t]||this.__currentPermissions[t]},e.prototype.__items=function(e,t,o,n){var r=this,i=this.options;return i.items?(i.items.data.path=e,i.items.data.source=t,i.items.data.mods=o,this.get("items").then((function(e){var t=r.o.items.process;return t||(t=r.o.ajax.process),t&&(e=t.call(self,e)),n(e)}))):Promise.reject("Set Items api options")},e.prototype.items=function(e,t,o){var n=this;return void 0===o&&(o={}),this.__items(e,t,o,(function(e){return n.generateItemsList(e.data.sources,o)}))},e.prototype.itemsEx=function(e,t,o){var n=this;return void 0===o&&(o={}),this.__items(e,t,o,(function(e){return{items:n.generateItemsList(e.data.sources,o),loadedTotal:(t=e.data.sources,t.reduce((function(e,t){return e+t.files.length}),0))};var t}))},e.prototype.generateItemsList=function(e,t){var o=this;void 0===t&&(t={});var i=[];return e.forEach((function(e){if(e.files&&e.files.length){var a=o.o.sort;(0,r.isFunction)(a)&&t.sortBy&&e.files.sort((function(e,o){return a(e,o,t.sortBy)})),e.files.forEach((function(r){(function(e){var n;return!(null===(n=t.filterWord)||void 0===n?void 0:n.length)||void 0===o.o.filter||o.o.filter(e,t.filterWord)})(r)&&function(e){return"folder"===e.type||!t.onlyImages||void 0===e.isImage||e.isImage}(r)&&i.push(s.FileBrowserItem.create(n.__assign(n.__assign({},r),{sourceName:e.name,source:e})))}))}})),i},e.prototype.tree=function(e,t){return n.__awaiter(this,void 0,Promise,(function(){var o=this;return n.__generator(this,(function(n){switch(n.label){case 0:return e=(0,r.normalizeRelativePath)(e),this.o.folder?[4,this.permissions(e,t)]:[2,Promise.reject("Set Folder Api options")];case 1:return n.sent(),this.o.folder.data.path=e,this.o.folder.data.source=t,[2,this.get("folder").then((function(e){var t=o.o.folder.process;return t||(t=o.o.ajax.process),t&&(e=t.call(self,e)),e.data.sources}))]}}))}))},e.prototype.getPathByUrl=function(e){var t=this;return(0,r.set)("options.getLocalFileByUrl.data.url",e,this),this.get("getLocalFileByUrl").then((function(e){if(t.isSuccess(e))return e.data;throw(0,r.error)(t.getMessage(e))}))},e.prototype.createFolder=function(e,t,o){var n=this,i=this.o.create;if(!i)throw(0,r.error)("Set Create api options");return i.data.source=o,i.data.path=t,i.data.name=e,this.get("create").then((function(e){if(n.isSuccess(e))return!0;throw(0,r.error)(n.getMessage(e))}))},e.prototype.move=function(e,t,o,n){var i=this,a=n?"fileMove":"folderMove",s=this.options[a];if(!s)throw(0,r.error)("Set Move api options");return s.data.from=e,s.data.path=t,s.data.source=o,this.get(a).then((function(e){if(i.isSuccess(e))return!0;throw(0,r.error)(i.getMessage(e))}))},e.prototype.remove=function(e,t,o,n){var i=this,a=this.o[e];if(!a)throw(0,r.error)('Set "'.concat(e,'" api options'));return a.data.path=t,a.data.name=o,a.data.source=n,this.get(e).then((function(e){return a.process&&(e=a.process.call(i,e)),i.getMessage(e)}))},e.prototype.fileRemove=function(e,t,o){return this.remove("fileRemove",e,t,o)},e.prototype.folderRemove=function(e,t,o){return this.remove("folderRemove",e,t,o)},e.prototype.rename=function(e,t,o,n,i){var a=this,s=this.o[e];if(!s)throw(0,r.error)('Set "'.concat(e,'" api options'));return s.data.path=t,s.data.name=o,s.data.newname=n,s.data.source=i,this.get(e).then((function(e){return s.process&&(e=s.process.call(self,e)),a.getMessage(e)}))},e.prototype.folderRename=function(e,t,o,n){return this.rename("folderRename",e,t,o,n)},e.prototype.fileRename=function(e,t,o,n){return this.rename("fileRename",e,t,o,n)},e.prototype.changeImage=function(e,t,o,n,r,i){this.o[e]||(this.o[e]={data:{}});var a=this.o[e];return void 0===a.data&&(a.data={action:e}),a.data.newname=r||n,i&&(a.data.box=i),a.data.path=t,a.data.name=n,a.data.source=o,this.get(e).then((function(){return!0}))},e.prototype.crop=function(e,t,o,n,r){return this.changeImage("crop",e,t,o,n,r)},e.prototype.resize=function(e,t,o,n,r){return this.changeImage("resize",e,t,o,n,r)},e.prototype.getMessage=function(e){return this.options.getMessage(e)},e.prototype.isSuccess=function(e){return this.options.isSuccess(e)},e.prototype.destruct=function(){this.ajaxInstances.forEach((function(e){return e.destruct()})),this.ajaxInstances.clear()},n.__decorate([a.autobind],e)}();t.default=l},46341:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeContextMenu=t.makeDataProvider=void 0;var n=o(82530),r=o(60403);t.makeDataProvider=function(e,t){return new n.default(e,t)},t.makeContextMenu=function(e){return new r.ContextMenu(e)}},48096:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.deleteFile=void 0,t.deleteFile=function(e,t,o){return e.dataProvider.fileRemove(e.state.currentPath,t,o).then((function(o){e.status(o||e.i18n('File "%s" was deleted',t),!0)})).catch(e.status)}},4253:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.loadItems=void 0,t.loadItems=function(e){return e.files.setMod("active",!0),e.files.setMod("loading",!0),e.dataProvider.items(e.state.currentPath,e.state.currentSource,{sortBy:e.state.sortBy,onlyImages:e.state.onlyImages,filterWord:e.state.filterWord}).then((function(t){t&&(e.state.elements=t,e.state.activeElements=[])})).catch(e.status).finally((function(){return e.files.setMod("loading",!1)}))}},36303:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.loadTree=void 0;var n=o(20255),r=o(64968),i=o(4253);t.loadTree=function(e){return n.__awaiter(this,void 0,Promise,(function(){var t,o;return n.__generator(this,(function(n){return e.tree.setMod("active",!0),r.Dom.detach(e.tree.container),t=(0,i.loadItems)(e),e.o.showFoldersPanel?(e.tree.setMod("loading",!0),o=e.dataProvider.tree(e.state.currentPath,e.state.currentSource).then((function(t){e.state.sources=t})).catch(e.status).finally((function(){return e.tree.setMod("loading",!1)})),[2,Promise.all([o,t])]):(e.tree.setMod("active",!1),[2,t])}))}))}},50885:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isFileBrowserFilesItem=t.FileBrowser=void 0;var n=o(20255);o(40692);var r=o(93166),i=o(86893),a=o(77462),s=o(40332),l=o(64968),c=o(46341),u=o(86774),d=o(21347),p=o(44734),f=o(82530),h=o(43441),m=o(98782),v=o(55395),g=o(36303),y=o(4253),_=o(56562),b=o(59829),S=o(43608);o(38097);var w=function(e){function t(t){var o,n=this;(n=e.call(this,t)||this).browser=n.c.div(n.componentName),n.status_line=n.c.div(n.getFullElName("status")),n.tree=new m.FileBrowserTree(n),n.files=new m.FileBrowserFiles(n),n.state=(0,v.observable)({currentPath:"",currentSource:f.DEFAULT_SOURCE_NAME,currentBaseUrl:"",activeElements:[],elements:[],sources:[],view:"tiles",sortBy:"changed-desc",filterWord:"",onlyImages:!1}),n.errorHandler=function(e){(0,s.isAbort)(e)||(e instanceof Error?n.status(n.i18n(e.message)):n.status(n.dataProvider.getMessage(e)))},n.close=function(){n._dialog.close()},n.attachEvents(t);var i=n;i.options=(0,s.ConfigProto)(t||{},r.Config.defaultOptions.filebrowser),i.storage=a.Storage.makeStorage(Boolean(n.o.saveStateInStorage),n.componentName),i.dataProvider=(0,c.makeDataProvider)(i,i.options),i._dialog=n.dlg({minWidth:Math.min(700,screen.width),minHeight:300,buttons:null!==(o=n.o.headerButtons)&&void 0!==o?o:["fullsize","dialog.close"]}),n.proxyDialogEvents(i),i.browser.component=n,i.container=i.browser,i.o.showFoldersPanel&&i.browser.appendChild(i.tree.container),i.browser.appendChild(i.files.container),i.browser.appendChild(i.status_line),p.selfListeners.call(i),d.nativeListeners.call(i),u.stateListeners.call(i),i._dialog.setSize(i.o.width,i.o.height),["getLocalFileByUrl","crop","resize","create","fileMove","folderMove","fileRename","folderRename","fileRemove","folderRemove","folder","items","permissions"].forEach((function(e){null!=n.options[e]&&(n.options[e]=(0,s.ConfigProto)(n.options[e],n.o.ajax))}));var l=n.o.saveStateInStorage||{storeLastOpenedFolder:!1,storeView:!1,storeSortBy:!1},h=l.storeSortBy,g=l.storeLastOpenedFolder,y=l.storeView&&n.storage.get("view");i.state.view=y&&null==n.o.view?"list"===y?"list":"tiles":"list"===i.o.view?"list":"tiles",i.files.setMod("view",i.state.view);var b=h&&i.storage.get("sortBy");if(b){var S=b.split("-");i.state.sortBy=["changed","name","size"].includes(S[0])?b:"changed-desc"}else i.state.sortBy=i.o.sortBy||"changed-desc";if(g){var w=i.storage.get("currentPath"),C=i.storage.get("currentSource");i.state.currentPath=null!=w?w:"",i.state.currentSource=null!=C?C:""}return i.initUploader(i),i.setStatus(_.STATUSES.ready),n}return n.__extends(t,e),t.prototype.className=function(){return"Filebrowser"},t.prototype.onSelect=function(e){var t=this;return function(){if(t.state.activeElements.length){var o=[],n=[];t.state.activeElements.forEach((function(e){var t=e.fileURL;t&&(o.push(t),n.push(e.isImage||!1))})),t.close();var r={baseurl:"",files:o,isImages:n};(0,s.isFunction)(e)&&e(r),t.close()}return!1}},Object.defineProperty(t.prototype,"isOpened",{get:function(){return this._dialog.isOpened&&"none"!==this.browser.style.display},enumerable:!1,configurable:!0}),t.prototype.status=function(e,t){e&&!(0,s.isAbort)(e)&&((0,s.isString)(e)||(e=e.message),(0,s.isString)(e)&&(0,s.trim)(e).length&&this.message.message(e,t?"success":"error",this.o.howLongShowMsg))},t.prototype.open=function(e,t){var o=this;return void 0===e&&(e=this.o.defaultCallback),void 0===t&&(t=!1),this.state.onlyImages=t,this.async.promise((function(t,n){var r;if(!o.o.items||!o.o.items.url)throw(0,s.error)("Need set options.filebrowser.ajax.url");var a=0;o.e.off(o.files.container,"dblclick").on(o.files.container,"dblclick",o.onSelect(e)).on(o.files.container,"touchstart",(function(){var t=(new Date).getTime();i.EMULATE_DBLCLICK_TIMEOUT>t-a&&o.onSelect(e)(),a=t})).off("select.filebrowser").on("select.filebrowser",o.onSelect(e));var l=o.c.div();o.toolbar.build(null!==(r=o.o.buttons)&&void 0!==r?r:[]).appendTo(l),o._dialog.open(o.browser,l),o.e.fire("sort.filebrowser",o.state.sortBy),(0,g.loadTree)(o).then(t,n)}))},t.prototype.initUploader=function(e){var t,o=this,n=this,i=null===(t=null==e?void 0:e.options)||void 0===t?void 0:t.uploader,a=(0,s.ConfigProto)(i||{},r.Config.defaultOptions.uploader),l=function(){return(0,y.loadItems)(o)};n.uploader=n.getInstance("Uploader",a),n.uploader.setPath(n.state.currentPath).setSource(n.state.currentSource).bind(n.browser,l,n.errorHandler),this.state.on(["change.currentPath","change.currentSource"],(function(){o.uploader.setPath(o.state.currentPath).setSource(o.state.currentSource)})),n.e.on("bindUploader.filebrowser",(function(e){n.uploader.bind(e,l,n.errorHandler)}))},t.prototype.proxyDialogEvents=function(e){var t=this;["afterClose","beforeOpen"].forEach((function(o){e._dialog.events.on(e.dlg,o,(function(){t.e.fire(o)}))}))},t.prototype.destruct=function(){this.isInDestruct||(e.prototype.destruct.call(this),this._dialog.destruct(),this.events&&this.e.off(".filebrowser"),this.uploader&&this.uploader.destruct())},n.__decorate([h.autobind],t.prototype,"status",null),n.__decorate([h.autobind],t.prototype,"open",null),n.__decorate([(0,h.derive)(b.Dlgs)],t)}(S.ViewWithToolbar);t.FileBrowser=w,t.isFileBrowserFilesItem=function(e){return l.Dom.isElement(e)&&e.classList.contains(m.FileBrowserFiles.prototype.getFullElName("item"))}},63463:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(20255).__exportStar(o(50885),t)},21347:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nativeListeners=t.elementToItem=t.getItem=void 0;var n=o(20255),r=o(40332),i=o(34468),a=o(64968),s=o(66267),l=o(36303);t.getItem=function(e,t,o){return void 0===o&&(o="a"),a.Dom.closest(e,(function(e){return a.Dom.isTag(e,o)}),t)},t.elementToItem=function(e,t){return t[e.dataset.key||""].item},t.nativeListeners=function(){var e=this,o=!1,a=(0,s.elementsMap)(this),c=this;c.e.on(c.tree.container,"dragstart",(function(e){var n=(0,t.getItem)(e.target,c.container);n&&c.o.moveFolder&&(o=n)})).on(c.tree.container,"drop",(function(n){if((c.o.moveFile||c.o.moveFolder)&&o){var i=(0,r.attr)(o,"-path")||"";if(!c.o.moveFolder&&o.classList.contains(e.tree.getFullElName("item")))return!1;if(o.classList.contains(e.files.getFullElName("item"))&&(i+=(0,r.attr)(o,"-name"),!c.o.moveFile))return!1;var a=(0,t.getItem)(n.target,c.container);if(!a)return;c.dataProvider.move(i,(0,r.attr)(a,"-path")||"",(0,r.attr)(a,"-source")||"",o.classList.contains(e.files.getFullElName("item"))).then((function(){return(0,l.loadTree)(e)})).catch(c.status),o=!1}})).on(c.files.container,"contextmenu",(0,i.default)(c)).on(c.files.container,"click",(function(t){(0,r.ctrlKey)(t)||(e.state.activeElements=[])})).on(c.files.container,"click",(function(e){var o=(0,t.getItem)(e.target,c.container);if(o){var i=(0,t.elementToItem)(o,a);if(i)return c.state.activeElements=(0,r.ctrlKey)(e)?n.__spreadArray(n.__spreadArray([],n.__read(c.state.activeElements),!1),[i],!1):[i],e.stopPropagation(),!1}})).on(c.files.container,"dragstart",(function(e){if(c.o.moveFile){var n=(0,t.getItem)(e.target,c.container);if(!n)return;o=n}})).on(c.container,"drop",(function(e){return e.preventDefault()}))}},44734:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selfListeners=void 0;var n=o(20255),r=o(10172),i=o(40332),a=o(82530),s=o(35503),l=o(36303),c=o(4253),u=o(48096);t.selfListeners=function(){var e=this,t=this.state,o=this.dataProvider,d=this;d.e.on("view.filebrowser",(function(e){e!==t.view&&(t.view=e)})).on("sort.filebrowser",(function(e){e!==t.sortBy&&(t.sortBy=e,(0,c.loadItems)(d))})).on("filter.filebrowser",(function(e){e!==t.filterWord&&(t.filterWord=e,(0,c.loadItems)(d))})).on("openFolder.filebrowser",(function(e){var t;t=".."===e.name?e.path.split("/").filter((function(e){return e.length})).slice(0,-1).join("/"):(0,i.normalizePath)(e.path,e.name),d.state.currentPath=t,d.state.currentSource="."===e.name?a.DEFAULT_SOURCE_NAME:e.source})).on("removeFolder.filebrowser",(function(e){d.confirm("Are you sure?","Delete",(function(t){t&&o.folderRemove(e.path,e.name,e.source).then((function(e){return d.status(e,!0),(0,l.loadTree)(d)})).catch(d.status)}))})).on("renameFolder.filebrowser",(function(e){d.prompt("Enter new name","Rename",(function(t){if(!(0,r.isValidName)(t))return d.status(d.i18n("Enter new name")),!1;o.folderRename(e.path,e.name,t,e.source).then((function(e){return d.state.activeElements=[],d.status(e,!0),(0,l.loadTree)(d)})).catch(d.status)}),"type name",e.name)})).on("addFolder.filebrowser",(function(e){d.prompt("Enter Directory name","Create directory",(function(t){o.createFolder(t,e.path,e.source).then((function(){return(0,l.loadTree)(d)})).catch(d.status)}),"type name")})).on("fileRemove.filebrowser",(function(){d.state.activeElements.length&&d.confirm("Are you sure?","",(function(e){if(e){var t=[];d.state.activeElements.forEach((function(e){t.push((0,u.deleteFile)(d,e.file||e.name||"",e.sourceName))})),d.state.activeElements=[],Promise.all(t).then((function(){return(0,l.loadTree)(d).catch(d.status)}),d.status)}}))})).on("edit.filebrowser",(function(){if(1===d.state.activeElements.length){var t=n.__read(e.state.activeElements,1)[0];s.openImageEditor.call(d,t.fileURL,t.file||"",t.path,t.sourceName)}})).on("fileRename.filebrowser",(function(e,t,n){1===d.state.activeElements.length&&d.prompt("Enter new name","Rename",(function(i){if(!(0,r.isValidName)(i))return d.status(d.i18n("Enter new name")),!1;o.fileRename(t,e,i,n).then((function(e){d.state.activeElements=[],d.status(e,!0),(0,c.loadItems)(d)})).catch(d.status)}),"type name",e)})).on("update.filebrowser",(function(){(0,l.loadTree)(e).then(e.status,e.status)}))}},86774:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stateListeners=void 0;var n=o(64968),r=o(89693),i=o(2074),a=o(66267),s=o(36303);t.stateListeners=function(){var e=this,t=(0,a.elementsMap)(this),o=this,l=o.state,c=o.files,u=o.create,d=o.options;l.on(["change.currentPath","change.currentSource"],this.async.debounce((function(){e.o.saveStateInStorage&&e.o.saveStateInStorage.storeLastOpenedFolder&&e.storage.set("currentPath",e.state.currentPath).set("currentSource",e.state.currentSource),(0,s.loadTree)(e).catch(e.status)}),this.defaultTimeout)).on("beforeChange.activeElements",(function(){l.activeElements.forEach((function(e){var o=t[e.uniqueHashKey].elm;o&&o.classList.remove(c.getFullElName("item","active",!0))}))})).on("change.activeElements",(function(){e.e.fire("changeSelection"),l.activeElements.forEach((function(e){var o=t[e.uniqueHashKey].elm;o&&o.classList.add(c.getFullElName("item","active",!0))}))})).on("change.view",(function(){c.setMod("view",l.view),e.o.saveStateInStorage&&e.o.saveStateInStorage.storeView&&e.storage.set("view",l.view)})).on("change.sortBy",(function(){e.o.saveStateInStorage&&e.o.saveStateInStorage.storeSortBy&&e.storage.set("sortBy",l.sortBy)})).on("change.elements",this.async.debounce((function(){n.Dom.detach(c.container),l.elements.length?l.elements.forEach((function(o){e.files.container.appendChild(function(o){var n=o.uniqueHashKey;if(t[n])return t[n].elm;var r=u.fromHTML(d.getThumbTemplate.call(e,o,o.source,o.sourceName.toString()));return r.dataset.key=n,t[n]={item:o,elm:r},t[n].elm}(o))})):c.container.appendChild(u.div(e.componentName+"_no-files_true",e.i18n("There are no files")))}),this.defaultTimeout)).on("change.sources",this.async.debounce((function(){n.Dom.detach(e.tree.container),l.sources.forEach((function(t){var o=t.name;if(o&&"default"!==o&&e.tree.container.appendChild(u.div(e.tree.getFullElName("source-title"),o)),t.folders.forEach((function(n){var a,s=u.a(e.tree.getFullElName("item"),{draggable:"draggable",href:"#","data-path":(0,r.normalizePath)(t.path,n+"/"),"data-name":n,"data-source":o,"data-source-path":t.path},u.span(e.tree.getFullElName("item-title"),n)),l=function(i){return function(a){e.e.fire("".concat(i,".filebrowser"),{name:n,path:(0,r.normalizePath)(t.path+"/"),source:o}),a.stopPropagation(),a.preventDefault()}};e.e.on(s,"click",l("openFolder")),e.tree.container.appendChild(s),".."!==n&&"."!==n&&(d.renameFolder&&e.dataProvider.canI("FolderRename")&&((a=(0,i.Button)(e,{icon:{name:"pencil"},name:"rename",tooltip:"Rename",size:"tiny"})).onAction(l("renameFolder")),s.appendChild(a.container)),d.deleteFolder&&e.dataProvider.canI("FolderRemove")&&((a=(0,i.Button)(e,{icon:{name:"cancel"},name:"remove",tooltip:"Delete",size:"tiny"})).onAction(l("removeFolder")),s.appendChild(a.container)))})),d.createNewFolder&&e.dataProvider.canI("FolderCreate")){var n=(0,i.Button)(e,"plus","Add folder","secondary");n.onAction((function(){e.e.fire("addFolder",{path:(0,r.normalizePath)(t.path+"/"),source:o})})),e.tree.append(n)}}))}),this.defaultTimeout))}},21505:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileBrowserFiles=void 0;var n=o(20255);o(27452);var r=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.className=function(){return"FilebrowserFiles"},t}(o(2074).UIGroup);t.FileBrowserFiles=r},98782:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(21505),t),n.__exportStar(o(42472),t)},42472:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileBrowserTree=void 0;var n=o(20255);o(51422);var r=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.className=function(){return"FilebrowserTree"},t}(o(2074).UIGroup);t.FileBrowserTree=r},3107:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Command=void 0;var o=function(){function e(e,t,o,n){this.oldValue=e,this.newValue=t,this.history=o,this.tick=n}return e.prototype.undo=function(){this.history.snapshot.restore(this.oldValue)},e.prototype.redo=function(){this.history.snapshot.restore(this.newValue)},e}();t.Command=o},15432:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.History=void 0;var n=o(20255),r=o(93166),i=o(56562),a=o(31648),s=o(3621),l=o(3107),c=o(43441);r.Config.prototype.history={enable:!0,maxHistoryLength:1/0,timeout:1e3},r.Config.prototype.observer=r.Config.prototype.history;var u=function(e){function t(t,o,n){void 0===o&&(o=new s.Stack(t.o.history.maxHistoryLength)),void 0===n&&(n=new a.Snapshot(t));var r=e.call(this,t)||this;return r.updateTick=0,r.__stack=o,r.snapshot=n,t.o.history.enable&&t.e.on("afterAddPlace.history",(function(){r.isInDestruct||(r.startValue=r.snapshot.make(),t.events.on("internalChange internalUpdate",(function(){r.startValue=r.snapshot.make()})).on(t.editor,["changeSelection","selectionstart","selectionchange","mousedown","mouseup","keydown","keyup"].map((function(e){return e+".history"})).join(" "),(function(){r.startValue.html===r.j.getNativeEditorValue()&&(r.startValue=r.snapshot.make())})).on(r,"change.history",r.onChange))})),r}return n.__extends(t,e),t.prototype.className=function(){return"History"},Object.defineProperty(t.prototype,"startValue",{get:function(){return this.__startValue},set:function(e){this.__startValue=e},enumerable:!1,configurable:!0}),t.prototype.__upTick=function(){this.updateTick+=1},t.prototype.onChange=function(){this.__processChanges()},t.prototype.__processChanges=function(){!this.snapshot.isBlocked&&this.j.o.history.enable&&this.updateStack()},t.prototype.updateStack=function(e){void 0===e&&(e=!1);var t=this.snapshot.make();if(!a.Snapshot.equal(t,this.startValue)){var o=new l.Command(this.startValue,t,this,this.updateTick);if(e){var n=this.__stack.current();n&&this.updateTick===n.tick&&this.__stack.replace(o)}else this.__stack.push(o);this.startValue=t,this.fireChangeStack()}},t.prototype.redo=function(){this.__stack.redo()&&(this.startValue=this.snapshot.make(),this.fireChangeStack())},t.prototype.canRedo=function(){return this.__stack.canRedo()},t.prototype.undo=function(){this.__stack.undo()&&(this.startValue=this.snapshot.make(),this.fireChangeStack())},t.prototype.canUndo=function(){return this.__stack.canUndo()},t.prototype.clear=function(){this.startValue=this.snapshot.make(),this.__stack.clear(),this.fireChangeStack()},Object.defineProperty(t.prototype,"length",{get:function(){return this.__stack.length},enumerable:!1,configurable:!0}),t.prototype.fireChangeStack=function(){var e;this.j&&!this.j.isInDestruct&&(null===(e=this.j.events)||void 0===e||e.fire("changeStack"))},t.prototype.destruct=function(){this.isInDestruct||(this.j.events&&this.j.e.off(".history"),this.snapshot.destruct(),e.prototype.destruct.call(this))},n.__decorate([(0,c.debounce)()],t.prototype,"onChange",null),t}(i.ViewComponent);t.History=u},31648:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Snapshot=void 0;var n=o(20255),r=o(56562),i=o(64968),a=o(86893),s=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.__isBlocked=!1,t}return n.__extends(t,e),t.prototype.className=function(){return"Snapshot"},t.equal=function(e,t){return e.html===t.html&&JSON.stringify(e.range)===JSON.stringify(t.range)},t.countNodesBeforeInParent=function(e){if(!e.parentNode)return 0;for(var t=e.parentNode.childNodes,o=0,n=null,r=0;t.length>r;r+=1){if(!n||this.isIgnoredNode(t[r])||i.Dom.isText(n)&&i.Dom.isText(t[r])||(o+=1),t[r]===e)return o;n=t[r]}return 0},t.strokeOffset=function(e,t){for(;i.Dom.isText(e);)i.Dom.isText(e=e.previousSibling)&&e.nodeValue&&(t+=e.nodeValue.length);return t},t.prototype.calcHierarchyLadder=function(e){var o=[];if(!e||!e.parentNode||!i.Dom.isOrContains(this.j.editor,e))return[];for(;e&&e!==this.j.editor;)e&&!t.isIgnoredNode(e)&&o.push(t.countNodesBeforeInParent(e)),e=e.parentNode;return o.reverse()},t.prototype.getElementByLadder=function(e){var t,o=this.j.editor;for(t=0;o&&e.length>t;t+=1)o=o.childNodes[e[t]];return o},Object.defineProperty(t.prototype,"isBlocked",{get:function(){return this.__isBlocked},enumerable:!1,configurable:!0}),t.prototype.__block=function(e){this.__isBlocked=e},t.prototype.transaction=function(e){this.__block(!0);try{e()}catch(e){}this.__block(!1)},t.prototype.make=function(){var e={html:"",range:{startContainer:[],startOffset:0,endContainer:[],endOffset:0}};e.html=this.removeJoditSelection(this.j.editor);var o=this.j.s.sel;if(o&&o.rangeCount){var n=o.getRangeAt(0),r=this.calcHierarchyLadder(n.startContainer),i=this.calcHierarchyLadder(n.endContainer),a=t.strokeOffset(n.startContainer,n.startOffset),s=t.strokeOffset(n.endContainer,n.endOffset);r.length||n.startContainer===this.j.editor||(a=0),i.length||n.endContainer===this.j.editor||(s=0),e.range={startContainer:r,startOffset:a,endContainer:i,endOffset:s}}return e},t.prototype.restore=function(e){var t=this;this.transaction((function(){var o=t.storeScrollState();t.j.getNativeEditorValue()!==e.html&&(t.j.value=e.html),t.restoreOnlySelection(e),t.restoreScrollState(o)}))},t.prototype.storeScrollState=function(){return[this.j.ow.scrollY,this.j.editor.scrollTop]},t.prototype.restoreScrollState=function(e){var t=this.j,o=t.ow;o.scrollTo(o.scrollX,e[0]),t.editor.scrollTop=e[1]},t.prototype.restoreOnlySelection=function(e){try{if(e.range){var t=this.j.ed.createRange();t.setStart(this.getElementByLadder(e.range.startContainer),e.range.startOffset),t.setEnd(this.getElementByLadder(e.range.endContainer),e.range.endOffset),this.j.s.selectRange(t)}}catch(e){this.j.editor.lastChild&&this.j.s.setCursorAfter(this.j.editor.lastChild)}},t.prototype.destruct=function(){this.__block(!1),e.prototype.destruct.call(this)},t.isIgnoredNode=function(e){return i.Dom.isText(e)&&!e.nodeValue||i.Dom.isTemporary(e)},t.prototype.removeJoditSelection=function(e){var t=e.cloneNode(!0);return t.querySelectorAll("[".concat(a.TEMP_ATTR,"]")).forEach(i.Dom.unwrap),t.innerHTML},t}(r.ViewComponent);t.Snapshot=s},3621:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Stack=void 0;var o=function(){function e(e){this.size=e,this.commands=[],this.stackPosition=-1}return Object.defineProperty(e.prototype,"length",{get:function(){return this.commands.length},enumerable:!1,configurable:!0}),e.prototype.clearRedo=function(){this.commands.length=this.stackPosition+1},e.prototype.clear=function(){this.commands.length=0,this.stackPosition=-1},e.prototype.push=function(e){this.clearRedo(),this.commands.push(e),this.stackPosition+=1,this.commands.length>this.size&&(this.commands.shift(),this.stackPosition-=1)},e.prototype.replace=function(e){this.commands[this.stackPosition]=e},e.prototype.current=function(){return this.commands[this.stackPosition]},e.prototype.undo=function(){return!!this.canUndo()&&(this.commands[this.stackPosition]&&this.commands[this.stackPosition].undo(),this.stackPosition-=1,!0)},e.prototype.redo=function(){return!!this.canRedo()&&(this.stackPosition+=1,this.commands[this.stackPosition]&&this.commands[this.stackPosition].redo(),!0)},e.prototype.canUndo=function(){return this.stackPosition>=0},e.prototype.canRedo=function(){return this.commands.length-1>this.stackPosition},e}();t.Stack=o},95356:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(77904);n.Config.prototype.imageeditor={min_width:20,min_height:20,closeAfterSave:!1,width:"85%",height:"85%",crop:!0,resize:!0,resizeUseRatio:!0,resizeMinWidth:20,resizeMinHeight:20,cropUseRatio:!0,cropDefaultWidth:"70%",cropDefaultHeight:"70%"},r.Icon.set("crop",o(3610)).set("resize",o(56170))},35503:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.openImageEditor=t.ImageEditor=void 0;var n=o(20255);o(62820);var r=o(93166),i=o(56562),a=o(40332),s=o(64968),l=o(96516),c=o(9249),u=o(43441);o(95356);var d="jodit-image-editor",p="resize",f="crop",h=function(e){function t(t){var n=e.call(this,t)||this;n.resizeUseRatio=!0,n.cropUseRatio=!0,n.clicked=!1,n.start_x=0,n.start_y=0,n.top_x=0,n.top_y=0,n.width=0,n.height=0,n.activeTab=p,n.naturalWidth=0,n.naturalHeight=0,n.ratio=0,n.new_h=0,n.new_w=0,n.diff_x=0,n.diff_y=0,n.cropBox={x:0,y:0,w:0,h:0},n.resizeBox={w:0,h:0},n.calcCropBox=function(){var e=n.crop_box.parentNode,t=.8*e.offsetWidth,o=.8*e.offsetHeight,r=t,i=o,s=n.naturalWidth,l=n.naturalHeight;t>s&&o>l?(r=s,i=l):n.ratio>t/o?(r=t,i=l*(t/s)):(r=s*(o/l),i=o),(0,a.css)(n.crop_box,{width:r,height:i})},n.showCrop=function(){if(n.cropImage){n.calcCropBox();var e=n.cropImage.offsetWidth||n.image.offsetWidth||n.image.naturalWidth;n.new_w=o.calcValueByPercent(e,n.o.cropDefaultWidth);var t=n.cropImage.offsetHeight||n.image.offsetHeight||n.image.naturalHeight;n.new_h=n.cropUseRatio?n.new_w/n.ratio:o.calcValueByPercent(t,n.o.cropDefaultHeight),(0,a.css)(n.cropHandler,{backgroundImage:"url("+(0,a.attr)(n.cropImage,"src")+")",width:n.new_w,height:n.new_h,left:e/2-n.new_w/2,top:t/2-n.new_h/2}),n.j.e.fire(n.cropHandler,"updatesize")}},n.updateCropBox=function(){if(n.cropImage){var e=n.cropImage.offsetWidth/n.naturalWidth,t=n.cropImage.offsetHeight/n.naturalHeight;n.cropBox.x=(0,a.css)(n.cropHandler,"left")/e,n.cropBox.y=(0,a.css)(n.cropHandler,"top")/t,n.cropBox.w=n.cropHandler.offsetWidth/e,n.cropBox.h=n.cropHandler.offsetHeight/t,n.sizes.textContent=n.cropBox.w.toFixed(0)+"x"+n.cropBox.h.toFixed(0)}},n.updateResizeBox=function(){n.resizeBox.w=n.image.offsetWidth||n.naturalWidth,n.resizeBox.h=n.image.offsetHeight||n.naturalHeight},n.setHandlers=function(){var e=n,t=(0,a.refs)(n.editor),o=t.widthInput,r=t.heightInput;e.j.e.on([e.editor.querySelector(".jodit_bottomright"),e.cropHandler],"mousedown.".concat(d),n.onResizeHandleMouseDown).on(n.j.ow,"resize.".concat(d),(function(){n.j.e.fire(e.resizeHandler,"updatesize"),e.showCrop(),n.j.e.fire(e.cropHandler,"updatesize")})),e.j.e.on((0,a.toArray)(n.editor.querySelectorAll(".".concat(d,"__slider-title"))),"click",n.onTitleModeClick).on([o,r],"input",n.onChangeSizeInput);var i=(0,a.refs)(n.editor),s=i.keepAspectRatioResize,l=i.keepAspectRatioCrop;s&&s.addEventListener("change",(function(){n.resizeUseRatio=s.checked})),l&&l.addEventListener("change",(function(){n.cropUseRatio=l.checked})),e.j.e.on(e.resizeHandler,"updatesize",(function(){(0,a.css)(e.resizeHandler,{top:0,left:0,width:e.image.offsetWidth||e.naturalWidth,height:e.image.offsetHeight||e.naturalHeight}),n.updateResizeBox()})).on(e.cropHandler,"updatesize",(function(){if(e.cropImage){var t=(0,a.css)(e.cropHandler,"left"),o=(0,a.css)(e.cropHandler,"top"),n=e.cropHandler.offsetWidth,r=e.cropHandler.offsetHeight;0>t&&(t=0),0>o&&(o=0),t+n>e.cropImage.offsetWidth&&(n=e.cropImage.offsetWidth-t,e.cropUseRatio&&(r=n/e.ratio)),o+r>e.cropImage.offsetHeight&&(r=e.cropImage.offsetHeight-o,e.cropUseRatio&&(n=r*e.ratio)),(0,a.css)(e.cropHandler,{width:n,height:r,left:t,top:o,backgroundPosition:-t-1+"px "+(-o-1)+"px",backgroundSize:e.cropImage.offsetWidth+"px "+e.cropImage.offsetHeight+"px"}),e.updateCropBox()}})),Object.values(e.buttons).forEach((function(t){t.onAction((function(){var n={action:e.activeTab,box:e.activeTab===p?e.resizeBox:e.cropBox};switch(t){case e.buttons.saveas:e.j.prompt("Enter new name","Save in new file",(function(t){if(!(0,a.trim)(t))return e.j.alert("The name should not be empty"),!1;e.onSave(t,n,e.hide,(function(t){e.j.alert(t.message)}))}));break;case e.buttons.save:e.onSave(void 0,n,e.hide,(function(t){e.j.alert(t.message)}));break;case e.buttons.reset:e.activeTab===p?((0,a.css)(e.image,{width:null,height:null}),o.value=e.naturalWidth.toString(),r.value=e.naturalHeight.toString(),e.j.e.fire(e.resizeHandler,"updatesize")):e.showCrop()}}))}))},n.options=t&&t.o&&t.o.imageeditor?t.o.imageeditor:r.Config.defaultOptions.imageeditor;var i=n.options;n.resizeUseRatio=i.resizeUseRatio,n.cropUseRatio=i.cropUseRatio,n.buttons={reset:(0,l.Button)(n.j,"update","Reset"),save:(0,l.Button)(n.j,"save","Save"),saveas:(0,l.Button)(n.j,"save","Save as ...")},n.activeTab=i.resize?p:f,n.editor=(0,c.form)(n.j,n.options);var s=(0,a.refs)(n.editor),u=s.cropBox;return n.resize_box=s.resizeBox,n.crop_box=u,n.sizes=n.editor.querySelector(".".concat(d,"__area.").concat(d,"__area_crop .jodit-image-editor__sizes")),n.resizeHandler=n.editor.querySelector(".".concat(d,"__resizer")),n.cropHandler=n.editor.querySelector(".".concat(d,"__croper")),n._dialog=n.j.dlg({buttons:["fullsize","dialog.close"]}),n._dialog.setContent(n.editor),n._dialog.setSize(n.o.width,n.o.height),n._dialog.setHeader([n.buttons.reset,n.buttons.save,n.buttons.saveas]),n.setHandlers(),n}var o;return n.__extends(t,e),o=t,t.prototype.className=function(){return"ImageEditor"},t.prototype.onTitleModeClick=function(e){var t=this,o=e.target,n=null==o?void 0:o.parentElement;if(n){(0,a.$$)(".".concat(d,"__slider,.").concat(d,"__area"),t.editor).forEach((function(e){return e.classList.remove("".concat(d,"_active"))})),n.classList.add("".concat(d,"_active")),this.activeTab=(0,a.attr)(n,"-area")||p;var r=t.editor.querySelector(".".concat(d,"__area.").concat(d,"__area_")+t.activeTab);r&&r.classList.add("".concat(d,"_active")),t.activeTab===f&&t.showCrop()}},t.prototype.onChangeSizeInput=function(e){var t,o=this,n=e.target,r=(0,a.refs)(this.editor),i=r.widthInput,s=r.heightInput,l="widthInput"===(0,a.attr)(n,"data-ref"),c=parseInt(n.value,10),u=l?o.o.min_height:o.o.min_width;c>(l?o.o.min_width:o.o.min_height)&&((0,a.css)(o.image,l?"width":"height",c),o.resizeUseRatio&&(t=l?Math.round(c/o.ratio):Math.round(c*o.ratio))>u&&((0,a.css)(o.image,l?"height":"width",t),l?s.value=t.toString():i.value=t.toString())),this.j.e.fire(o.resizeHandler,"updatesize")},t.prototype.onResizeHandleMouseDown=function(e){var t=this;t.target=e.target,e.preventDefault(),e.stopImmediatePropagation(),t.clicked=!0,t.start_x=e.clientX,t.start_y=e.clientY,t.activeTab===f?(t.top_x=(0,a.css)(t.cropHandler,"left"),t.top_y=(0,a.css)(t.cropHandler,"top"),t.width=t.cropHandler.offsetWidth,t.height=t.cropHandler.offsetHeight):(t.width=t.image.offsetWidth,t.height=t.image.offsetHeight),t.j.e.on(this.j.ow,"mousemove",this.onGlobalMouseMove).one(this.j.ow,"mouseup",this.onGlobalMouseUp)},t.prototype.onGlobalMouseUp=function(e){this.clicked&&(this.clicked=!1,e.stopImmediatePropagation(),this.j.e.off(this.j.ow,"mousemove",this.onGlobalMouseMove))},t.prototype.onGlobalMouseMove=function(e){var t=this;if(t.clicked){var o=(0,a.refs)(this.editor),n=o.widthInput,r=o.heightInput;t.diff_x=e.clientX-t.start_x,t.diff_y=e.clientY-t.start_y,t.activeTab===p&&t.resizeUseRatio||t.activeTab===f&&t.cropUseRatio?t.diff_x?(t.new_w=t.width+t.diff_x,t.new_h=Math.round(t.new_w/t.ratio)):(t.new_h=t.height+t.diff_y,t.new_w=Math.round(t.new_h*t.ratio)):(t.new_w=t.width+t.diff_x,t.new_h=t.height+t.diff_y),t.activeTab===p?(t.new_w>t.o.resizeMinWidth&&((0,a.css)(t.image,"width",t.new_w+"px"),n.value=t.new_w.toString()),t.new_h>t.o.resizeMinHeight&&((0,a.css)(t.image,"height",t.new_h+"px"),r.value=t.new_h.toString()),this.j.e.fire(t.resizeHandler,"updatesize")):(t.target!==t.cropHandler?(t.top_x+t.new_w>t.cropImage.offsetWidth&&(t.new_w=t.cropImage.offsetWidth-t.top_x),t.top_y+t.new_h>t.cropImage.offsetHeight&&(t.new_h=t.cropImage.offsetHeight-t.top_y),(0,a.css)(t.cropHandler,{width:t.new_w,height:t.new_h})):(t.top_x+t.diff_x+t.cropHandler.offsetWidth>t.cropImage.offsetWidth&&(t.diff_x=t.cropImage.offsetWidth-t.top_x-t.cropHandler.offsetWidth),(0,a.css)(t.cropHandler,"left",t.top_x+t.diff_x),t.top_y+t.diff_y+t.cropHandler.offsetHeight>t.cropImage.offsetHeight&&(t.diff_y=t.cropImage.offsetHeight-t.top_y-t.cropHandler.offsetHeight),(0,a.css)(t.cropHandler,"top",t.top_y+t.diff_y)),this.j.e.fire(t.cropHandler,"updatesize"))}},Object.defineProperty(t.prototype,"o",{get:function(){return this.options},enumerable:!1,configurable:!0}),t.prototype.hide=function(){this._dialog.close()},t.prototype.open=function(e,t){var o=this;return this.j.async.promise((function(n){var r=(new Date).getTime();o.image=o.j.c.element("img"),(0,a.$$)("img,.jodit-icon_loader",o.resize_box).forEach(s.Dom.safeRemove),(0,a.$$)("img,.jodit-icon_loader",o.crop_box).forEach(s.Dom.safeRemove),(0,a.css)(o.cropHandler,"background","transparent"),o.onSave=t,o.resize_box.appendChild(o.j.c.element("i",{class:"jodit-icon_loader"})),o.crop_box.appendChild(o.j.c.element("i",{class:"jodit-icon_loader"})),/\?/.test(e)?e+="&_tst="+r:e+="?_tst="+r,o.image.setAttribute("src",e),o._dialog.open();var i=(0,a.refs)(o.editor),l=i.widthInput,c=i.heightInput,u=function(){o.isDestructed||(o.image.removeEventListener("load",u),o.naturalWidth=o.image.naturalWidth,o.naturalHeight=o.image.naturalHeight,l.value=o.naturalWidth.toString(),c.value=o.naturalHeight.toString(),o.ratio=o.naturalWidth/o.naturalHeight,o.resize_box.appendChild(o.image),o.cropImage=o.image.cloneNode(!0),o.crop_box.appendChild(o.cropImage),s.Dom.safeRemove.apply(null,(0,a.$$)(".jodit-icon_loader",o.editor)),o.activeTab===f&&o.showCrop(),o.j.e.fire(o.resizeHandler,"updatesize"),o.j.e.fire(o.cropHandler,"updatesize"),o._dialog.setPosition(),o.j.e.fire("afterImageEditor"),n(o._dialog))};o.image.addEventListener("load",u),o.image.complete&&u()}))},t.prototype.destruct=function(){this.isDestructed||(this._dialog&&!this._dialog.isInDestruct&&this._dialog.destruct(),s.Dom.safeRemove(this.editor),this.j.e&&this.j.e.off(this.j.ow,"mousemove",this.onGlobalMouseMove).off(this.j.ow,"mouseup",this.onGlobalMouseUp).off(this.ow,".".concat(d)).off(".".concat(d)),e.prototype.destruct.call(this))},t.calcValueByPercent=function(e,t){var o,n=t.toString(),r=parseFloat(e.toString());return(o=/^[-+]?[0-9]+(px)?$/.exec(n))?parseInt(n,10):(o=/^([-+]?[0-9.]+)%$/.exec(n))?Math.round(r*(parseFloat(o[1])/100)):r||0},n.__decorate([u.autobind],t.prototype,"onTitleModeClick",null),n.__decorate([(0,u.debounce)(),u.autobind],t.prototype,"onChangeSizeInput",null),n.__decorate([u.autobind],t.prototype,"onResizeHandleMouseDown",null),n.__decorate([u.autobind],t.prototype,"onGlobalMouseUp",null),n.__decorate([(0,u.throttle)(10)],t.prototype,"onGlobalMouseMove",null),n.__decorate([u.autobind],t.prototype,"hide",null),n.__decorate([u.autobind],t.prototype,"open",null),o=n.__decorate([u.component],t)}(i.ViewComponent);t.ImageEditor=h,t.openImageEditor=function(e,t,o,n,r,i){var s=this;return this.getInstance("ImageEditor",this.o).open(e,(function(e,l,c,u){return(0,a.call)("resize"===l.action?s.dataProvider.resize:s.dataProvider.crop,o,n,t,e,l.box).then((function(e){e&&(c(),r&&r())})).catch((function(e){u(e),i&&i(e)}))}))}},9249:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.form=void 0;var n=o(2074),r="jodit-image-editor",i=n.Icon.get.bind(n.Icon),a=function(e,t){return void 0===t&&(t="jodti-image-editor_active"),e?t:""};t.form=function(e,t){var o=e.i18n.bind(e),n=function(e,t,n){return void 0===n&&(n=!0),'<div class="jodit-form__group">\n\t\t\t<label>'.concat(o(e),"</label>\n\n\t\t\t<label class='jodit-switcher'>\n\t\t\t\t<input ").concat(a(n,"checked"),' data-ref="').concat(t,'" type="checkbox"/>\n\t\t\t\t<span class="jodit-switcher__slider"></span>\n\t\t\t</label>\n\t</div>')};return e.create.fromHTML('<form class="'.concat(r,' jodit-properties">\n\t\t<div class="jodit-grid jodit-grid_xs-column">\n\t\t\t<div class="jodit_col-lg-3-4 jodit_col-sm-5-5">\n\t\t\t').concat(t.resize?'<div class="'.concat(r,"__area ").concat(r,"__area_resize ").concat(r,'_active">\n\t\t\t\t\t\t\t<div data-ref="resizeBox" class="').concat(r,'__box"></div>\n\t\t\t\t\t\t\t<div class="').concat(r,'__resizer">\n\t\t\t\t\t\t\t\t<i class="jodit_bottomright"></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>'):"","\n\t\t\t").concat(t.crop?'<div class="'.concat(r,"__area ").concat(r,"__area_crop ").concat(a(!t.resize),'">\n\t\t\t\t\t\t\t<div data-ref="cropBox" class="').concat(r,'__box">\n\t\t\t\t\t\t\t\t<div class="').concat(r,'__croper">\n\t\t\t\t\t\t\t\t\t<i class="jodit_bottomright"></i>\n\t\t\t\t\t\t\t\t\t<i class="').concat(r,'__sizes"></i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>'):"",'\n\t\t\t</div>\n\t\t\t<div class="jodit_col-lg-1-4 jodit_col-sm-5-5">\n\t\t\t').concat(t.resize?'<div data-area="resize" class="'.concat(r,"__slider ").concat(r,'_active">\n\t\t\t\t\t\t\t<div class="').concat(r,'__slider-title">\n\t\t\t\t\t\t\t\t').concat(i("resize"),"\n\t\t\t\t\t\t\t\t").concat(o("Resize"),'\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="').concat(r,'__slider-content">\n\t\t\t\t\t\t\t\t<div class="jodit-form__group">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t').concat(o("Width"),'\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type="number" data-ref="widthInput" class="jodit-input"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="jodit-form__group">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t').concat(o("Height"),'\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type="number" data-ref="heightInput" class="jodit-input"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t').concat(n("Keep Aspect Ratio","keepAspectRatioResize"),"\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>"):"","\n\t\t\t").concat(t.crop?'<div data-area="crop" class="'.concat(r,"__slider ").concat(a(!t.resize),'\'">\n\t\t\t\t\t\t\t<div class="').concat(r,'__slider-title">\n\t\t\t\t\t\t\t\t').concat(i("crop"),"\n\t\t\t\t\t\t\t\t").concat(o("Crop"),'\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="').concat(r,'__slider-content">\n\t\t\t\t\t\t\t\t').concat(n("Keep Aspect Ratio","keepAspectRatioCrop"),"\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>"):"","\n\t\t\t</div>\n\t\t</div>\n\t</form>"))}},87837:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PluginSystem=t.UIMessages=t.Uploader=t.ToolbarCollection=t.ToolbarEditorCollection=t.Table=t.StatusBar=t.CommitStyle=t.Select=t.Snapshot=t.History=t.ImageEditor=t.Helpers=t.ViewWithToolbar=t.View=t.Icon=t.ProgressBar=t.UIBlock=t.UICheckbox=t.UITextArea=t.UIInput=t.UIForm=t.UIList=t.UIGroup=t.UISeparator=t.Popup=t.UIButton=t.UIElement=t.Create=t.Plugin=t.LazyWalker=t.Dom=t.ContextMenu=t.STATUSES=t.ViewComponent=t.Component=t.Async=void 0;var n=o(20255);n.__exportStar(o(55395),t);var r=o(22630);Object.defineProperty(t,"Async",{enumerable:!0,get:function(){return r.Async}}),n.__exportStar(o(30056),t);var i=o(56562);Object.defineProperty(t,"Component",{enumerable:!0,get:function(){return i.Component}}),Object.defineProperty(t,"ViewComponent",{enumerable:!0,get:function(){return i.ViewComponent}}),Object.defineProperty(t,"STATUSES",{enumerable:!0,get:function(){return i.STATUSES}});var a=o(60403);Object.defineProperty(t,"ContextMenu",{enumerable:!0,get:function(){return a.ContextMenu}}),n.__exportStar(o(92080),t);var s=o(64968);Object.defineProperty(t,"Dom",{enumerable:!0,get:function(){return s.Dom}}),Object.defineProperty(t,"LazyWalker",{enumerable:!0,get:function(){return s.LazyWalker}});var l=o(57549);Object.defineProperty(t,"Plugin",{enumerable:!0,get:function(){return l.Plugin}});var c=o(42841);Object.defineProperty(t,"Create",{enumerable:!0,get:function(){return c.Create}});var u=o(2074);Object.defineProperty(t,"UIElement",{enumerable:!0,get:function(){return u.UIElement}}),Object.defineProperty(t,"UIButton",{enumerable:!0,get:function(){return u.UIButton}}),Object.defineProperty(t,"Popup",{enumerable:!0,get:function(){return u.Popup}}),Object.defineProperty(t,"UISeparator",{enumerable:!0,get:function(){return u.UISeparator}}),Object.defineProperty(t,"UIGroup",{enumerable:!0,get:function(){return u.UIGroup}}),Object.defineProperty(t,"UIList",{enumerable:!0,get:function(){return u.UIList}}),Object.defineProperty(t,"UIForm",{enumerable:!0,get:function(){return u.UIForm}}),Object.defineProperty(t,"UIInput",{enumerable:!0,get:function(){return u.UIInput}}),Object.defineProperty(t,"UITextArea",{enumerable:!0,get:function(){return u.UITextArea}}),Object.defineProperty(t,"UICheckbox",{enumerable:!0,get:function(){return u.UICheckbox}}),Object.defineProperty(t,"UIBlock",{enumerable:!0,get:function(){return u.UIBlock}}),Object.defineProperty(t,"ProgressBar",{enumerable:!0,get:function(){return u.ProgressBar}}),Object.defineProperty(t,"Icon",{enumerable:!0,get:function(){return u.Icon}});var d=o(75902);Object.defineProperty(t,"View",{enumerable:!0,get:function(){return d.View}});var p=o(43608);Object.defineProperty(t,"ViewWithToolbar",{enumerable:!0,get:function(){return p.ViewWithToolbar}}),n.__exportStar(o(63463),t);var f=o(40332);t.Helpers=f;var h=o(35503);Object.defineProperty(t,"ImageEditor",{enumerable:!0,get:function(){return h.ImageEditor}});var m=o(15432);Object.defineProperty(t,"History",{enumerable:!0,get:function(){return m.History}});var v=o(31648);Object.defineProperty(t,"Snapshot",{enumerable:!0,get:function(){return v.Snapshot}});var g=o(2123);Object.defineProperty(t,"Select",{enumerable:!0,get:function(){return g.Select}}),Object.defineProperty(t,"CommitStyle",{enumerable:!0,get:function(){return g.CommitStyle}});var y=o(38603);Object.defineProperty(t,"StatusBar",{enumerable:!0,get:function(){return y.StatusBar}});var _=o(25120);Object.defineProperty(t,"Table",{enumerable:!0,get:function(){return _.Table}});var b=o(81698);Object.defineProperty(t,"ToolbarEditorCollection",{enumerable:!0,get:function(){return b.ToolbarEditorCollection}});var S=o(72719);Object.defineProperty(t,"ToolbarCollection",{enumerable:!0,get:function(){return S.ToolbarCollection}}),n.__exportStar(o(3890),t);var w=o(50454);Object.defineProperty(t,"Uploader",{enumerable:!0,get:function(){return w.Uploader}});var C=o(71014);Object.defineProperty(t,"UIMessages",{enumerable:!0,get:function(){return C.UIMessages}});var j=o(44540);Object.defineProperty(t,"PluginSystem",{enumerable:!0,get:function(){return j.PluginSystem}})},37762:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIMessage=void 0;var n=o(20255),r=o(2074),i=o(11441),a=function(e){function t(t,o){var n=e.call(this,t)||this;return n.setMod("active",!0),n.setMod("variant",o.variant),n.container.textContent=o.text,n}return n.__extends(t,e),t.prototype.className=function(){return"UIMessage"},n.__decorate([i.component],t)}(r.UIElement);t.UIMessage=a},71014:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UIMessages=void 0;var n=o(20255);o(63421);var r=o(26911),i=o(61479),a=o(11441),s=o(46163),l=o(37762),c=function(e){function t(t,o,n){void 0===n&&(n={defaultTimeout:3e3,defaultOffset:5});var r=e.call(this,t)||this;return r.__box=o,r.options=n,r.__messages=new Set,r}return n.__extends(t,e),t.prototype.className=function(){return"UIMessages"},t.prototype.info=function(e,t){this.__message(e,"info",t)},t.prototype.success=function(e,t){this.__message(e,"success",t)},t.prototype.error=function(e,t){this.__message(e,"error",t)},t.prototype.message=function(e,t,o){this.__message(e,t,o)},t.prototype.__message=function(e,t,o){void 0===t&&(t="info");var n=e+":"+t;if(this.__messages.has(n))this.async.updateTimeout(n,o||this.options.defaultTimeout);else{this.__box.appendChild(this.container);var r=new l.UIMessage(this.j,{text:e,variant:t});this.append(r),this.__calcOffsets(),this.__messages.add(n);var i=this.__getRemoveCallback(r,n);this.j.e.on(r.container,"pointerdown",i),this.async.setTimeout(i,{label:n,timeout:o||this.options.defaultTimeout})}},t.prototype.__getRemoveCallback=function(e,t){var o=this,n=function(r){r&&r.preventDefault(),e.isInDestruct||(o.async.clearTimeout(t),o.j.e.off(e.container,"pointerdown",n),o.__messages.delete(t),e.setMod("active",!1),o.async.setTimeout((function(){o.remove(e),e.destruct(),o.__calcOffsets()}),300))};return n},t.prototype.__calcOffsets=function(){var e=this,t=5;this.elements.forEach((function(o){(0,r.css)(o.container,"bottom",t+"px"),t+=o.container.offsetHeight+e.options.defaultOffset}))},n.__decorate([(0,s.watch)(":errorMessage")],t.prototype,"__message",null),n.__decorate([a.component],t)}(i.UIGroup);t.UIMessages=c},38603:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.StatusBar=void 0;var n=o(20255);o(32115);var r=o(56562),i=o(64968),a=o(59829),s=o(43441),l=function(e){function t(t,o){var n=e.call(this,t)||this;return n.target=o,n.mods={},n.container=t.c.div("jodit-status-bar"),o.appendChild(n.container),n.hide(),n}return n.__extends(t,e),t.prototype.className=function(){return"StatusBar"},t.prototype.hide=function(){this.container.classList.add("jodit_hidden")},t.prototype.show=function(){this.container.classList.remove("jodit_hidden")},Object.defineProperty(t.prototype,"isShown",{get:function(){return!this.container.classList.contains("jodit_hidden")},enumerable:!1,configurable:!0}),t.prototype.getHeight=function(){var e,t;return null!==(t=null===(e=this.container)||void 0===e?void 0:e.offsetHeight)&&void 0!==t?t:0},t.prototype.findEmpty=function(e){void 0===e&&(e=!1);for(var t=this.getElms(e?"item-right":"item"),o=0;t.length>o;o+=1)if(!t[o].innerHTML.trim().length)return t[o]},t.prototype.append=function(e,t){var o;void 0===t&&(t=!1);var n=this.findEmpty(t)||this.j.c.div(this.getFullElName("item"));t&&n.classList.add(this.getFullElName("item-right")),n.appendChild(e),null===(o=this.container)||void 0===o||o.appendChild(n),this.j.o.statusbar&&this.show(),this.j.e.fire("resize")},t.prototype.destruct=function(){this.isInDestruct||(this.setStatus(r.STATUSES.beforeDestruct),i.Dom.safeRemove(this.container),e.prototype.destruct.call(this))},n.__decorate([s.component,(0,s.derive)(a.Mods,a.Elms)],t)}(r.ViewComponent);t.StatusBar=l},25120:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Table=void 0;var n=o(20255),r=o(86893),i=o(64968),a=o(40332),s=o(56562),l=o(17332),c=o(43441),u=new WeakMap,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.selected=new Set,t}return n.__extends(t,e),t.prototype.className=function(){return"Table"},t.prototype.recalculateStyles=function(){var e=(0,l.getContainer)(this.j,t,"style",!0),o=[];this.selected.forEach((function(e){var t=(0,a.cssPath)(e);t&&o.push(t)})),e.innerHTML=o.length?o.join(",")+"{".concat(this.jodit.options.table.selectionCellStyle,"}"):""},t.prototype.addSelection=function(e){this.selected.add(e),this.recalculateStyles();var o=i.Dom.closest(e,"table",this.j.editor);if(o){var n=t.selectedByTable.get(o)||new Set;n.add(e),t.selectedByTable.set(o,n)}},t.prototype.removeSelection=function(e){this.selected.delete(e),this.recalculateStyles();var o=i.Dom.closest(e,"table",this.j.editor);if(o){var n=t.selectedByTable.get(o);n&&(n.delete(e),n.size||t.selectedByTable.delete(o))}},t.prototype.getAllSelectedCells=function(){return(0,a.toArray)(this.selected)},t.getSelectedCellsByTable=function(e){var o=t.selectedByTable.get(e);return o?(0,a.toArray)(o):[]},t.prototype.destruct=function(){return this.selected.clear(),e.prototype.destruct.call(this)},t.getRowsCount=function(e){return e.rows.length},t.getColumnsCount=function(e){return t.formalMatrix(e).reduce((function(e,t){return Math.max(e,t.length)}),0)},t.formalMatrix=function(e,t){for(var o=[[]],n=(0,a.toArray)(e.rows),r=function(e,n){void 0===o[n]&&(o[n]=[]);for(var r,i,a=e.colSpan,s=e.rowSpan,l=0;o[n][l];)l+=1;for(i=0;s>i;i+=1)for(r=0;a>r;r+=1){if(void 0===o[n+i]&&(o[n+i]=[]),t&&!1===t(e,n+i,l+r,a,s))return!1;o[n+i][l+r]=e}},i=0;n.length>i;i+=1)for(var s=(0,a.toArray)(n[i].cells),l=0;s.length>l;l+=1)if(!1===r(s[l],i))return o;return o},t.formalCoordinate=function(e,o,n){void 0===n&&(n=!1);var r=0,i=0,a=1,s=1;return t.formalMatrix(e,(function(e,t,l,c,u){if(o===e)return r=t,i=l,a=c||1,s=u||1,n&&(i+=(c||1)-1,r+=(u||1)-1),!1})),[r,i,a,s]},t.appendRow=function(e,o,n,r){var i,s;if(o)s=o.cloneNode(!0),(0,a.$$)("td,th",o).forEach((function(e){var t=(0,a.attr)(e,"rowspan");if(t&&parseInt(t,10)>1){var o=parseInt(t,10)-1;(0,a.attr)(e,"rowspan",o>1?o:null)}})),(0,a.$$)("td,th",s).forEach((function(e){e.innerHTML=""}));else{var l=t.getColumnsCount(e);s=r.element("tr");for(var c=0;l>c;c+=1)s.appendChild(r.element("td"))}n&&o&&o.nextSibling?o.parentNode&&o.parentNode.insertBefore(s,o.nextSibling):!n&&o?o.parentNode&&o.parentNode.insertBefore(s,o):((null===(i=e.getElementsByTagName("tbody"))||void 0===i?void 0:i[0])||e).appendChild(s)},t.removeRow=function(e,o){var n,r=t.formalMatrix(e),s=e.rows[o];r[o].forEach((function(t,l){if(n=!1,0>o-1||r[o-1][l]!==t)if(r[o+1]&&r[o+1][l]===t){if(t.parentNode===s&&t.parentNode.nextSibling){n=!0;for(var c=l+1;r[o+1][c]===t;)c+=1;var u=i.Dom.next(t.parentNode,(function(e){return i.Dom.isTag(e,"tr")}),e);u&&(r[o+1][c]?u.insertBefore(t,r[o+1][c]):u.appendChild(t))}}else i.Dom.safeRemove(t);else n=!0;if(n&&(t.parentNode===s||t!==r[o][l-1])){var d=t.rowSpan;(0,a.attr)(t,"rowspan",d-1>1?d-1:null)}})),i.Dom.safeRemove(s)},t.appendColumn=function(e,o,n,r){var s,l=t.formalMatrix(e);for((void 0===o||0>o)&&(o=t.getColumnsCount(e)-1),s=0;l.length>s;s+=1){var c=r.element("td"),u=l[s][o],d=!1;n?(l[s]&&u&&o+1>=l[s].length||u!==l[s][o+1])&&(u.nextSibling?i.Dom.before(u.nextSibling,c):u.parentNode&&u.parentNode.appendChild(c),d=!0):(0>o-1||l[s][o]!==l[s][o-1]&&l[s][o].parentNode)&&(i.Dom.before(l[s][o],c),d=!0),d||(0,a.attr)(l[s][o],"colspan",parseInt((0,a.attr)(l[s][o],"colspan")||"1",10)+1)}},t.removeColumn=function(e,o){var n,r=t.formalMatrix(e);r.forEach((function(e,t){var s=e[o];if(n=!1,0>o-1||r[t][o-1]!==s?e.length>o+1&&r[t][o+1]===s?n=!0:i.Dom.safeRemove(s):n=!0,n&&(0>t-1||s!==r[t-1][o])){var l=s.colSpan;(0,a.attr)(s,"colspan",l-1>1?(l-1).toString():null)}}))},t.getSelectedBound=function(e,o){var n,r,i,a=[[1/0,1/0],[0,0]],s=t.formalMatrix(e);for(n=0;s.length>n;n+=1)for(r=0;s[n]&&s[n].length>r;r+=1)o.includes(s[n][r])&&(a[0][0]=Math.min(n,a[0][0]),a[0][1]=Math.min(r,a[0][1]),a[1][0]=Math.max(n,a[1][0]),a[1][1]=Math.max(r,a[1][1]));for(n=a[0][0];a[1][0]>=n;n+=1)for(i=1,r=a[0][1];a[1][1]>=r;r+=1){for(;s[n]&&s[n][r-i]&&s[n][r]===s[n][r-i];)a[0][1]=Math.min(r-i,a[0][1]),a[1][1]=Math.max(r-i,a[1][1]),i+=1;for(i=1;s[n]&&s[n][r+i]&&s[n][r]===s[n][r+i];)a[0][1]=Math.min(r+i,a[0][1]),a[1][1]=Math.max(r+i,a[1][1]),i+=1;for(i=1;s[n-i]&&s[n][r]===s[n-i][r];)a[0][0]=Math.min(n-i,a[0][0]),a[1][0]=Math.max(n-i,a[1][0]),i+=1;for(i=1;s[n+i]&&s[n][r]===s[n+i][r];)a[0][0]=Math.min(n+i,a[0][0]),a[1][0]=Math.max(n+i,a[1][0]),i+=1}return a},t.normalizeTable=function(e){var o,n,r,i,s=[],l=t.formalMatrix(e);for(n=0;l[0].length>n;n+=1){for(r=1e6,i=!1,o=0;l.length>o;o+=1)if(void 0!==l[o][n]){if(2>l[o][n].colSpan){i=!0;break}r=Math.min(r,l[o][n].colSpan)}if(!i)for(o=0;l.length>o;o+=1)void 0!==l[o][n]&&t.mark(l[o][n],"colspan",l[o][n].colSpan-r+1,s)}for(o=0;l.length>o;o+=1){for(r=1e6,i=!1,n=0;l[o].length>n;n+=1)if(void 0!==l[o][n]){if(2>l[o][n].rowSpan){i=!0;break}r=Math.min(r,l[o][n].rowSpan)}if(!i)for(n=0;l[o].length>n;n+=1)void 0!==l[o][n]&&t.mark(l[o][n],"rowspan",l[o][n].rowSpan-r+1,s)}for(o=0;l.length>o;o+=1)for(n=0;l[o].length>n;n+=1)void 0!==l[o][n]&&(l[o][n].hasAttribute("rowspan")&&1===l[o][n].rowSpan&&(0,a.attr)(l[o][n],"rowspan",null),l[o][n].hasAttribute("colspan")&&1===l[o][n].colSpan&&(0,a.attr)(l[o][n],"colspan",null),l[o][n].hasAttribute("class")&&!(0,a.attr)(l[o][n],"class")&&(0,a.attr)(l[o][n],"class",null));t.unmark(s)},t.mergeSelected=function(e,o){var n,s=[],l=t.getSelectedBound(e,t.getSelectedCellsByTable(e)),c=0,u=null,d=0,f=0,h=0,m=new Set,v=[];l&&(l[0][0]-l[1][0]||l[0][1]-l[1][1])&&(t.formalMatrix(e,(function(e,r,i,g,y){if(!(l[0][0]>r||r>l[1][0]||l[0][1]>i||i>l[1][1])){if(m.has(n=e))return;m.add(n),r===l[0][0]&&n.style.width&&(c+=n.offsetWidth),""!==(0,a.trim)(e.innerHTML.replace(/<br(\/)?>/g,""))&&s.push(e.innerHTML),g>1&&(f+=g-1),y>1&&(h+=y-1),u?(t.mark(n,"remove",1,v),p(o).removeSelection(n)):(u=e,d=i)}})),f=l[1][1]-l[0][1]+1,h=l[1][0]-l[0][0]+1,u&&(f>1&&t.mark(u,"colspan",f,v),h>1&&t.mark(u,"rowspan",h,v),c&&(t.mark(u,"width",(c/e.offsetWidth*100).toFixed(r.ACCURACY)+"%",v),d&&t.setColumnWidthByDelta(e,d,0,!0,v)),u.innerHTML=s.join("<br/>"),p(o).addSelection(u),m.delete(u),t.unmark(v),t.normalizeTable(e),(0,a.toArray)(e.rows).forEach((function(e,t){e.cells.length||i.Dom.safeRemove(e)}))))},t.splitHorizontal=function(e,o){var n,r,a,s,l,c=[];t.getSelectedCellsByTable(e).forEach((function(u){(r=o.createInside.element("td")).appendChild(o.createInside.element("br")),a=o.createInside.element("tr"),n=t.formalCoordinate(e,u),2>u.rowSpan?(t.formalMatrix(e,(function(e,o,r){n[0]===o&&n[1]!==r&&e!==u&&t.mark(e,"rowspan",e.rowSpan+1,c)})),i.Dom.after(i.Dom.closest(u,"tr",e),a),a.appendChild(r)):(t.mark(u,"rowspan",u.rowSpan-1,c),t.formalMatrix(e,(function(t,o,r){o>n[0]&&n[0]+u.rowSpan>o&&n[1]>r&&t.parentNode.rowIndex===o&&(l=t),o>n[0]&&t===u&&(s=e.rows[o])})),l?i.Dom.after(l,r):s.insertBefore(r,s.firstChild)),u.colSpan>1&&t.mark(r,"colspan",u.colSpan,c),t.unmark(c),p(o).removeSelection(u)})),this.normalizeTable(e)},t.splitVertical=function(e,o){var n,a,s,l=[];t.getSelectedCellsByTable(e).forEach((function(c){n=t.formalCoordinate(e,c),2>c.colSpan?t.formalMatrix(e,(function(e,o,r){n[1]===r&&n[0]!==o&&e!==c&&t.mark(e,"colspan",e.colSpan+1,l)})):t.mark(c,"colspan",c.colSpan-1,l),(a=o.createInside.element("td")).appendChild(o.createInside.element("br")),c.rowSpan>1&&t.mark(a,"rowspan",c.rowSpan,l);var u=c.offsetWidth;i.Dom.after(c,a),t.mark(c,"width",(100*(s=u/e.offsetWidth/2)).toFixed(r.ACCURACY)+"%",l),t.mark(a,"width",(100*s).toFixed(r.ACCURACY)+"%",l),t.unmark(l),p(o).removeSelection(c)})),t.normalizeTable(e)},t.setColumnWidthByDelta=function(e,o,n,i,a){for(var s=t.formalMatrix(e),l=0,c=0;s.length>c;c+=1)if(1>=(u=s[c][o]).colSpan||1>=s.length){t.mark(u,"width",((u.offsetWidth+n)/e.offsetWidth*100).toFixed(r.ACCURACY)+"%",a),l=c;break}for(c=l+1;s.length>c;c+=1){var u;t.mark(u=s[c][o],"width",null,a)}i||t.unmark(a)},t.mark=function(e,t,o,n){var r;n.push(e);var i=null!==(r=u.get(e))&&void 0!==r?r:{};i[t]=void 0===o?1:o,u.set(e,i)},t.unmark=function(e){e.forEach((function(e){var t=u.get(e);t&&(Object.keys(t).forEach((function(o){var n=t[o];switch(o){case"remove":i.Dom.safeRemove(e);break;case"rowspan":(0,a.attr)(e,"rowspan",(0,a.isNumber)(n)&&n>1?n:null);break;case"colspan":(0,a.attr)(e,"colspan",(0,a.isNumber)(n)&&n>1?n:null);break;case"width":null==n?(e.style.removeProperty("width"),(0,a.attr)(e,"style")||(0,a.attr)(e,"style",null)):e.style.width=n.toString()}delete t[o]})),u.delete(e))}))},t.selectedByTable=new WeakMap,n.__decorate([(0,c.debounce)()],t.prototype,"recalculateStyles",null),t}(s.ViewComponent);t.Table=d;var p=function(e){return e.getInstance("Table",e.o)}},48197:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ToolbarButton=void 0;var n=o(20255);o(53362);var r=o(96516),i=o(43441),a=o(64968),s=o(12680),l=o(81438),c=o(40332),u=o(77904),d=o(72719),p=o(29411),f=o(38546),h=function(e){function t(t,o,i){void 0===i&&(i=null);var a=e.call(this,t)||this;return a.control=o,a.target=i,a.state=n.__assign(n.__assign({},(0,r.UIButtonState)()),{theme:"toolbar",currentValue:"",hasTrigger:!1}),a.openedPopup=null,t.e.on([a.button,a.trigger],"mousedown",(function(e){return e.preventDefault()})),a.onAction(a.onClick),a.hookStatus(p.STATUSES.ready,(function(){a.initFromControl(),a.initTooltip(),a.update()})),o.mods&&Object.keys(o.mods).forEach((function(e){o.mods&&a.setMod(e,o.mods[e])})),a}return n.__extends(t,e),t.prototype.className=function(){return"ToolbarButton"},Object.defineProperty(t.prototype,"toolbar",{get:function(){return this.closest(d.ToolbarCollection)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"button",{get:function(){return this.container.querySelector("button.".concat(this.componentName,"__button"))},enumerable:!1,configurable:!0}),t.prototype.update=function(){var t=this.control,o=this.state,n=this.closest(d.ToolbarCollection);o.disabled=this.calculateDisabledStatus(n),o.activated=this.calculateActivatedStatus(n),(0,c.isFunction)(t.update)&&n&&t.update(this,n.jodit),e.prototype.update.call(this)},t.prototype.calculateActivatedStatus=function(e){return!((0,c.isJoditObject)(this.j)&&!this.j.editorIsActive)&&(!(!(0,c.isFunction)(this.control.isActive)||!this.control.isActive(this.j,this.control,this))||Boolean(e&&e.shouldBeActive(this)))},t.prototype.calculateDisabledStatus=function(e){return!!this.j.o.disabled||!(!this.j.o.readonly||this.j.o.activeButtonsInReadOnly&&this.j.o.activeButtonsInReadOnly.includes(this.control.name))||!(!(0,c.isFunction)(this.control.isDisabled)||!this.control.isDisabled(this.j,this.control,this))||Boolean(e&&e.shouldBeDisabled(this))},t.prototype.onChangeActivated=function(){(0,c.attr)(this.button,"aria-pressed",this.state.activated),e.prototype.onChangeActivated.call(this)},t.prototype.onChangeText=function(){(0,c.isFunction)(this.control.template)?this.text.innerHTML=this.control.template(this.j,this.control.name,this.j.i18n(this.state.text)):e.prototype.onChangeText.call(this),this.setMod("text-icons",Boolean(this.text.innerText.trim().length))},t.prototype.onChangeTabIndex=function(){(0,c.attr)(this.button,"tabindex",this.state.tabIndex)},t.prototype.onChangeTooltip=function(){(0,c.attr)(this.button,"aria-label",this.state.tooltip),e.prototype.onChangeTooltip.call(this)},t.prototype.createContainer=function(){var t=this.componentName,o=this.j.c.span(t),n=e.prototype.createContainer.call(this);return(0,c.attr)(o,"role","listitem"),n.classList.remove(t),n.classList.add(t+"__button"),Object.defineProperty(n,"component",{value:this}),o.appendChild(n),this.trigger=this.j.c.fromHTML('<span role="trigger" class="'.concat(t,'__trigger">').concat(u.Icon.get("chevron"),"</span>")),o},t.prototype.focus=function(){var e;null===(e=this.container.querySelector("button"))||void 0===e||e.focus()},t.prototype.onChangeHasTrigger=function(){this.state.hasTrigger?this.container.appendChild(this.trigger):a.Dom.safeRemove(this.trigger),this.setMod("with-trigger",this.state.hasTrigger||null)},t.prototype.onChangeDisabled=function(){var e=this.state.disabled?"disabled":null;(0,c.attr)(this.trigger,"disabled",e),(0,c.attr)(this.button,"disabled",e),(0,c.attr)(this.container,"disabled",e)},t.prototype.initTooltip=function(){var e=this;this.j.o.textIcons||!this.j.o.showTooltip||this.j.o.useNativeTooltip||this.j.e.off(this.container,"mouseenter mouseleave").on(this.container,"mousemove",(function(t){e.state.tooltip&&!e.state.disabled&&e.j.e.fire("delayShowTooltip",(function(){return{x:t.clientX+10,y:t.clientY+10}}),e.state.tooltip)})).on(this.container,"mouseleave",(function(){e.j.e.fire("hideTooltip")}))},t.prototype.initFromControl=function(){var e,t=this.control,o=this.state;this.updateSize(),o.name=t.name;var n=this.j.o.textIcons;if(!0===n||(0,c.isFunction)(n)&&n(t.name)||t.template)o.icon=(0,r.UIButtonState)().icon,o.text=t.text||t.name;else{if(t.iconURL)o.icon.iconURL=t.iconURL;else{var i=t.icon||t.name;o.icon.name=u.Icon.exists(i)||(null===(e=this.j.o.extraIcons)||void 0===e?void 0:e[i])?i:""}t.iconURL||o.icon.name||(o.text=t.text||t.name)}t.tooltip&&(o.tooltip=this.j.i18n((0,c.isFunction)(t.tooltip)?t.tooltip(this.j,t,this):t.tooltip)),o.hasTrigger=Boolean(t.list||t.popup&&t.exec)},t.prototype.onTriggerClick=function(e){var t,o,n,r=this;if(this.openedPopup)this.closePopup();else{var i=this.control;if(e.buffer={actionTrigger:this},i.list)return this.openControlList(i);if((0,c.isFunction)(i.popup)){var a=this.openPopup();if(a.parentElement=this,!1!==this.j.e.fire((0,c.camelCase)("before-".concat(i.name,"-open-popup")),this.target,i,a)){var s=null!==(n=null!==(o=null===(t=this.toolbar)||void 0===t?void 0:t.getTarget(this))&&void 0!==o?o:this.target)&&void 0!==n?n:null,l=i.popup(this.j,s,i,this.closePopup,this);l&&a.setContent((0,c.isString)(l)?this.j.c.fromHTML(l):l).open((function(){return(0,c.position)(r.container)}),!1,this.j.o.allowTabNavigation?this.container:void 0)}this.j.e.fire((0,c.camelCase)("after-".concat(i.name,"-open-popup")),a.container)}}},t.prototype.openControlList=function(e){var t,o=this,r=null!==(t=this.jodit.options.controls)&&void 0!==t?t:{},i=function(e){return(0,f.findControlType)(e,r)},a=e.list,s=this.openPopup(),u=(0,l.makeCollection)(this.j);s.parentElement=this,u.parentElement=s,u.mode="vertical";var d=function(t,r){if((0,c.isString)(r)&&i(r))return n.__assign({name:r.toString()},i(r));if((0,c.isString)(t)&&i(t))return n.__assign(n.__assign({name:t.toString()},i(t)),"object"==typeof r?r:{});(function(e){return(0,c.isPlainObject)(e)&&"title"in e&&"value"in e})(t)&&(r=t.value,t=t.title);var a=e.childTemplate,s={name:t.toString(),template:a&&function(e,t,n){return a(e,t,n,o)},exec:e.childExec?function(t,o,r){var i;return null===(i=e.childExec)||void 0===i?void 0:i.call(e,t,o,n.__assign(n.__assign({},r),{parentControl:e}))}:e.exec,data:e.data,command:e.command,isActive:e.isChildActive,isDisabled:e.isChildDisabled,mode:e.mode,args:n.__spreadArray(n.__spreadArray([],n.__read(e.args?e.args:[]),!1),[t,r],!1)};return(0,c.isString)(r)&&(s.text=r),s};u.build((0,c.isArray)(a)?a.map(d):(0,c.keys)(a,!1).map((function(e){return d(e,a[e])})),this.target),s.setContent(u.container).open((function(){return(0,c.position)(o.container)}),!1,this.j.o.allowTabNavigation?this.container:void 0),this.state.activated=!0},t.prototype.onOutsideClick=function(e){this.openedPopup&&(e&&a.Dom.isNode(e.target)&&(a.Dom.isOrContains(this.container,e.target)||this.openedPopup.isOwnClick(e))||this.closePopup())},t.prototype.openPopup=function(){return this.closePopup(),this.openedPopup=new s.Popup(this.j,!1),this.j.e.on(this.ow,"mousedown touchstart",this.onOutsideClick).on("escape closeAllPopups",this.onOutsideClick),this.openedPopup},t.prototype.closePopup=function(){this.openedPopup&&(this.j.e.off(this.ow,"mousedown touchstart",this.onOutsideClick).off("escape closeAllPopups",this.onOutsideClick),this.state.activated=!1,this.openedPopup.close(),this.openedPopup.destruct(),this.openedPopup=null)},t.prototype.onClick=function(e){var t,o,n,r,i,a,s,l=this.control;if((0,c.isFunction)(l.exec)){var u=null!==(n=null!==(o=null===(t=this.toolbar)||void 0===t?void 0:t.getTarget(this))&&void 0!==o?o:this.target)&&void 0!==n?n:null,d=l.exec(this.j,u,{control:l,originalEvent:e,button:this});if(!1!==d&&!0!==d&&(null===(i=null===(r=this.j)||void 0===r?void 0:r.e)||void 0===i||i.fire("synchro"),this.parentElement&&this.parentElement.update(),null===(s=null===(a=this.j)||void 0===a?void 0:a.e)||void 0===s||s.fire("closeAllPopups afterExec")),!1!==d)return}return l.list?this.openControlList(l):(0,c.isFunction)(l.popup)?this.onTriggerClick(e):void((l.command||l.name)&&((0,c.call)((0,c.isJoditObject)(this.j)?this.j.execCommand.bind(this.j):this.j.od.execCommand.bind(this.j.od),l.command||l.name,!1,l.args&&l.args[0]),this.j.e.fire("closeAllPopups")))},t.prototype.destruct=function(){return this.closePopup(),e.prototype.destruct.call(this)},n.__decorate([(0,i.watch)("state.tooltip")],t.prototype,"onChangeTooltip",null),n.__decorate([(0,i.watch)("state.hasTrigger")],t.prototype,"onChangeHasTrigger",null),n.__decorate([(0,i.watch)("trigger:click")],t.prototype,"onTriggerClick",null),n.__decorate([i.autobind],t.prototype,"onOutsideClick",null),n.__decorate([i.autobind],t.prototype,"closePopup",null),n.__decorate([i.component],t)}(r.UIButton);t.ToolbarButton=h},34375:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ToolbarContent=void 0;var n=o(20255);o(48904);var r=o(96516),i=o(64968),a=o(40332),s=o(43441),l=function(e){function t(t,o,n){void 0===n&&(n=null);var r=e.call(this,t)||this;return r.control=o,r.target=n,r.container.classList.add("".concat(r.componentName,"_").concat(r.clearName(o.name))),(0,a.attr)(r.container,"role","content"),r}return n.__extends(t,e),t.prototype.className=function(){return"ToolbarContent"},t.prototype.update=function(){var t=this.control.getContent(this.j,this.control,this);((0,a.isString)(t)||t.parentNode!==this.container)&&(i.Dom.detach(this.container),this.container.appendChild((0,a.isString)(t)?this.j.create.fromHTML(t):t)),e.prototype.update.call(this)},t.prototype.createContainer=function(){return this.j.c.span(this.componentName)},n.__decorate([s.component],t)}(r.UIButton);t.ToolbarContent=l},3890:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(48197),t),n.__exportStar(o(34375),t)},72719:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ToolbarCollection=void 0;var n=o(20255);o(85796);var r=o(40332),i=o(2074),a=o(81438),s=o(43441),l=function(e){function t(t){var o=e.call(this,t)||this;return o.listenEvents="updateToolbar changeStack mousedown mouseup keydown change afterInit readonly afterResize selectionchange changeSelection focus afterSetMode touchstart focus blur",o.update=o.j.async.debounce(o.immediateUpdate,(function(){return o.j.defaultTimeout})),o.__tooltip=null,o.initEvents(),o.__tooltip=i.UITooltip.make(t),o}return n.__extends(t,e),t.prototype.className=function(){return"ToolbarCollection"},Object.defineProperty(t.prototype,"firstButton",{get:function(){return n.__read(this.buttons,1)[0]||null},enumerable:!1,configurable:!0}),t.prototype.makeButton=function(e,t){return void 0===t&&(t=null),(0,a.makeButton)(this.j,e,t)},t.prototype.shouldBeActive=function(e){},t.prototype.shouldBeDisabled=function(e){},t.prototype.getTarget=function(e){return e.target||null},t.prototype.immediateUpdate=function(){this.isDestructed||this.j.isLocked||(e.prototype.update.call(this),this.j.e.fire("afterUpdateToolbar"))},t.prototype.setDirection=function(e){this.container.style.direction=e,this.container.setAttribute("dir",e)},t.prototype.initEvents=function(){this.j.e.on(this.listenEvents,this.update).on("afterSetMode focus",this.immediateUpdate)},t.prototype.hide=function(){this.container.remove()},t.prototype.show=function(){this.appendTo(this.j.toolbarContainer)},t.prototype.showInline=function(e){throw(0,r.error)("The method is not implemented for this class.")},t.prototype.build=function(t,o){void 0===o&&(o=null);var n=this.j.e.fire("beforeToolbarBuild",t);return n&&(t=n),e.prototype.build.call(this,t,o),this},t.prototype.destruct=function(){var t;this.isDestructed||(null===(t=this.__tooltip)||void 0===t||t.destruct(),this.j.e.off(this.listenEvents,this.update).off("afterSetMode focus",this.immediateUpdate),e.prototype.destruct.call(this))},n.__decorate([s.autobind],t.prototype,"immediateUpdate",null),n.__decorate([s.component],t)}(i.UIList);t.ToolbarCollection=l},81698:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ToolbarEditorCollection=void 0;var n=o(20255),r=o(72719),i=o(86893),a=o(64968),s=o(40332),l=o(43441),c=function(e){function t(t){var o=e.call(this,t)||this;return o.checkActiveStatus=function(e,t){var n=0,r=0;return Object.keys(e).forEach((function(i){var a=e[i];(0,s.isFunction)(a)?a(o.j,(0,s.css)(t,i).toString())&&(n+=1):-1!==a.indexOf((0,s.css)(t,i).toString())&&(n+=1),r+=1})),r===n},o.prependInvisibleInput(o.container),o}return n.__extends(t,e),t.prototype.className=function(){return"ToolbarEditorCollection"},t.prototype.shouldBeDisabled=function(t){var o=e.prototype.shouldBeDisabled.call(this,t);if(void 0!==o)return o;var n=void 0===t.control.mode?i.MODE_WYSIWYG:t.control.mode;return!(n===i.MODE_SPLIT||n===this.j.getRealMode())},t.prototype.shouldBeActive=function(t){var o=this,n=e.prototype.shouldBeActive.call(this,t);if(void 0!==n)return n;var r=this.j.selection?this.j.s.current():null;if(!r)return!1;if(t.control.tags){var i=t.control.tags;if(a.Dom.up(r,(function(e){if(e&&-1!==i.indexOf(e.nodeName.toLowerCase()))return!0}),this.j.editor))return!0}if(t.control.css){var s=t.control.css;if(a.Dom.up(r,(function(e){if(e&&!a.Dom.isText(e))return o.checkActiveStatus(s,e)}),this.j.editor))return!0}return!1},t.prototype.getTarget=function(e){return e.target||this.j.s.current()||null},t.prototype.prependInvisibleInput=function(e){var t=this.j.create.element("input",{tabIndex:-1,disabled:!0,style:"width: 0; height:0; position: absolute; visibility: hidden;"});a.Dom.appendChildFirst(e,t)},t.prototype.showInline=function(e){this.jodit.e.fire("showInlineToolbar",e)},t.prototype.hide=function(){this.jodit.e.fire("hidePopup"),e.prototype.hide.call(this),this.jodit.e.fire("toggleToolbar")},t.prototype.show=function(){e.prototype.show.call(this),this.jodit.e.fire("toggleToolbar")},n.__decorate([l.component],t)}(r.ToolbarCollection);t.ToolbarEditorCollection=c},81438:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeButton=t.makeCollection=void 0;var n=o(40332),r=o(72719),i=o(81698),a=o(48197),s=o(34375);t.makeCollection=function(e,t){var o=(0,n.isJoditObject)(e)?new i.ToolbarEditorCollection(e):new r.ToolbarCollection(e);return e.o.textIcons&&o.container.classList.add("jodit_text_icons"),t&&(o.parentElement=t),e.o.toolbarButtonSize&&(o.buttonSize=e.o.toolbarButtonSize),o},t.makeButton=function(e,t,o){if(void 0===o&&(o=null),(0,n.isFunction)(t.getContent))return new s.ToolbarContent(e,t,o);var r=new a.ToolbarButton(e,t,o);return r.state.tabIndex=e.o.allowTabNavigation?0:-1,r}},36262:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255),r=o(93166),i=o(49781),a=o(77892);r.Config.prototype.enableDragAndDropFileToEditor=!0,r.Config.prototype.uploader={url:"",insertImageAsBase64URI:!1,imagesExtensions:["jpg","png","jpeg","gif"],headers:null,data:null,filesVariableName:function(e){return"files[".concat(e,"]")},withCredentials:!1,pathVariableName:"path",format:"json",method:"POST",prepareData:function(e){return e},isSuccess:function(e){return e.success},getMessage:function(e){return void 0!==e.data.messages&&(0,i.isArray)(e.data.messages)?e.data.messages.join(" "):""},processFileName:function(e,t,o){return[e,t,o]},process:function(e){return e.data},error:function(e){this.j.e.fire("errorMessage",e.message,"error",4e3)},getDisplayName:function(e,t){return e+t},defaultHandlerSuccess:function(e){var t=this,o=this.j||this;(0,a.isJoditObject)(o)&&e.files&&e.files.length&&e.files.forEach((function(r,i){var a=n.__read(e.isImages&&e.isImages[i]?["img","src"]:["a","href"],2),s=a[0],l=a[1],c=o.createInside.element(s);c.setAttribute(l,e.baseurl+r),"a"===s&&(c.textContent=o.o.uploader.getDisplayName.call(t,e.baseurl,r)),"img"===s?o.s.insertImage(c,null,o.o.imageDefaultWidth):o.s.insertNode(c)}))},defaultHandlerError:function(e){this.j.e.fire("errorMessage",e.message)},contentType:function(e){return(void 0===this.ow.FormData||"string"==typeof e)&&"application/x-www-form-urlencoded; charset=UTF-8"}}},55778:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.buildData=void 0;var n=o(40332);t.buildData=function(e,t){if((0,n.isFunction)(e.o.buildData))return e.o.buildData.call(e,t);var o=e.ow.FormData;if(void 0!==o){if(t instanceof o)return t;if((0,n.isString)(t))return t;var r=new o;return Object.keys(t).forEach((function(e){r.append(e,t[e])})),r}return t}},98099:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.dataURItoBlob=void 0,t.dataURItoBlob=function(e){for(var t=atob(e.split(",")[1]),o=e.split(",")[0].split(":")[1].split(";")[0],n=new ArrayBuffer(t.length),r=new Uint8Array(n),i=0;t.length>i;i+=1)r[i]=t.charCodeAt(i);return new Blob([r],{type:o})}},41566:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasItems=t.hasFiles=void 0;var n=o(20255);n.__exportStar(o(32937),t),n.__exportStar(o(98099),t),n.__exportStar(o(55778),t),n.__exportStar(o(30863),t),n.__exportStar(o(20704),t),t.hasFiles=function(e){return Boolean(e&&e.files&&e.files.length>0)},t.hasItems=function(e){return Boolean(e&&e.items&&e.items.length>0)}},32937:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.processOldBrowserDrag=void 0;var n=o(86893),r=o(17332),i=o(40332),a=o(64968),s=o(41566);t.processOldBrowserDrag=function(e,t,o,l,c){if(t&&(!t.types.length||t.types[0]!==n.TEXT_PLAIN)){var u=e.j.c.div("",{tabindex:-1,style:"left: -9999px; top: 0; width: 0; height: 100%;line-height: 140%; overflow: hidden; position: fixed; z-index: 2147483647; word-break: break-all;",contenteditable:!0});(0,r.getContainer)(e.j,e.constructor).appendChild(u);var d=(0,i.isJoditObject)(e.j)?e.j.s.save():null;u.focus(),e.j.async.setTimeout((function(){var t=u.firstChild;if(a.Dom.safeRemove(u),t&&t.hasAttribute("src")){var n=(0,i.attr)(t,"src")||"";d&&(0,i.isJoditObject)(e.j)&&e.j.s.restore(),(0,s.sendFiles)(e,[(0,s.dataURItoBlob)(n)],o,l).finally(c)}}),e.j.defaultTimeout)}}},20704:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sendFiles=void 0;var n=o(20255),r=o(40332),i=o(30863);t.sendFiles=function(e,t,o,a,s){if(!t)return Promise.reject((0,r.error)("Need files"));var l=e.o,c=(0,r.toArray)(t);if(!c.length)return Promise.reject((0,r.error)("Need files"));var u=[];if(l.insertImageAsBase64URI){var d,p=void 0,f=function(){if((d=c[p])&&d.type){var t=d.type.match(/\/([a-z0-9]+)/i),n=t[1]?t[1].toLowerCase():"";if(l.imagesExtensions.includes(n)){var i=new FileReader;u.push(e.j.async.promise((function(t,n){i.onerror=n,i.onloadend=function(){var n={baseurl:"",files:[i.result],isImages:[!0]};((0,r.isFunction)(o)?o:l.defaultHandlerSuccess).call(e,n),t(n)},i.readAsDataURL(d)}))),c[p]=null}}};for(p=0;c.length>p;p+=1)f()}if((c=c.filter((function(e){return e}))).length){var h=new FormData;h.append(l.pathVariableName,e.path),h.append("source",e.source);var m=void 0;for(p=0;c.length>p;p+=1)if(m=c[p]){var v=/\.[\d\w]+$/.test(m.name),g=m.type.match(/\/([a-z0-9]+)/i),y=g&&g[1]?g[1].toLowerCase():"",_=c[p].name||Math.random().toString().replace(".","");if(!v&&y){var b=y;["jpeg","jpg"].includes(b)&&(b="jpeg|jpg"),new RegExp(".("+b+")$","i").test(_)||(_+="."+y)}var S=n.__read(l.processFileName.call(e,l.filesVariableName(p),c[p],_),3);h.append(S[0],S[1],S[2])}s&&s(h),l.data&&(0,r.isPlainObject)(l.data)&&Object.keys(l.data).forEach((function(e){h.append(e,l.data[e])})),l.prepareData.call(e,h),u.push((0,i.send)(e,h).then((function(t){return l.isSuccess.call(e,t)?(((0,r.isFunction)(o)?o:l.defaultHandlerSuccess).call(e,l.process.call(e,t)),t):(((0,r.isFunction)(a)?a:l.defaultHandlerError).call(e,(0,r.error)(l.getMessage.call(e,t))),t)})).then((function(){e.j.events&&e.j.e.fire("filesWereUploaded")})))}return Promise.all(u)}},30863:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.send=t.ajaxInstances=void 0;var n=o(30056),r=o(40332),i=o(55778);t.ajaxInstances=new WeakMap,t.send=function(e,o){var a=(0,i.buildData)(e,o),s=function(o){var i=new n.Ajax({xhr:function(){var t=new XMLHttpRequest;return void 0!==e.j.ow.FormData&&t.upload?(e.j.progressbar.show().progress(10),t.upload.addEventListener("progress",(function(t){if(t.lengthComputable){var o=t.loaded/t.total;o*=100,e.j.progressbar.show().progress(o),100>o||e.j.progressbar.hide()}}),!1)):e.j.progressbar.hide(),t},method:e.o.method||"POST",data:o,url:(0,r.isFunction)(e.o.url)?e.o.url(o):e.o.url,headers:e.o.headers,queryBuild:e.o.queryBuild,contentType:e.o.contentType.call(e,o),withCredentials:e.o.withCredentials||!1}),a=t.ajaxInstances.get(e);return a||(a=new Set,t.ajaxInstances.set(e,a)),a.add(i),e.j.e.one("beforeDestruct",i.destruct),i.send().then((function(e){return e.json()})).catch((function(t){e.o.error.call(e,t)})).finally((function(){i.destruct(),null==a||a.delete(i)}))};return(0,r.isPromise)(a)?a.then(s).catch((function(t){e.o.error.call(e,t)})):s(a)}},50454:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Uploader=void 0;var n=o(20255);o(28654);var r=o(93166),i=o(86893),a=o(40332),s=o(56562),l=o(41566);o(36262);var c=function(e){function t(t,o){var n=e.call(this,t)||this;return n.path="",n.source="default",n.options=(0,a.ConfigProto)(o||{},(0,a.ConfigProto)(r.Config.defaultOptions.uploader,(0,a.isJoditObject)(t)?t.o.uploader:{})),n}return n.__extends(t,e),Object.defineProperty(t.prototype,"j",{get:function(){return this.jodit},enumerable:!1,configurable:!0}),t.prototype.className=function(){return"Uploader"},Object.defineProperty(t.prototype,"o",{get:function(){return this.options},enumerable:!1,configurable:!0}),t.prototype.setPath=function(e){return this.path=e,this},t.prototype.setSource=function(e){return this.source=e,this},t.prototype.bind=function(e,t,o){var n=function(){e.classList.remove("jodit_drag_hover")},r=this,a=function(e){var a,s,c,u=e.clipboardData,d=function(e){s&&(e.append("extension",c),e.append("mimetype",s.type))};if(!i.IS_IE&&(0,l.hasFiles)(u))return(0,l.sendFiles)(r,u.files,t,o).finally(n),!1;if(i.IS_IE)return(0,l.processOldBrowserDrag)(r,u,t,o,n);if((0,l.hasItems)(u)){var p=u.items;for(a=0;p.length>a;a+=1)if("file"===p[a].kind&&"image/png"===p[a].type){if(s=p[a].getAsFile()){var f=s.type.match(/\/([a-z0-9]+)/i);c=f[1]?f[1].toLowerCase():"",(0,l.sendFiles)(r,[s],t,o,d).finally(n)}e.preventDefault();break}}};r.j&&r.j.editor!==e?r.j.e.on(e,"paste",a):r.j.e.on("beforePaste",a),this.attachEvents(e,t,o,n)},t.prototype.attachEvents=function(e,t,o,n){var r=this;r.j.e.on(e,"dragend dragover dragenter dragleave drop",(function(e){e.preventDefault()})).on(e,"dragover",(function(t){((0,l.hasFiles)(t.dataTransfer)||(0,l.hasItems)(t.dataTransfer))&&(e.classList.add("jodit_drag_hover"),t.preventDefault())})).on(e,"dragend dragleave",(function(t){e.classList.remove("jodit_drag_hover"),(0,l.hasFiles)(t.dataTransfer)&&t.preventDefault()})).on(e,"drop",(function(i){e.classList.remove("jodit_drag_hover"),(0,l.hasFiles)(i.dataTransfer)&&(i.preventDefault(),i.stopImmediatePropagation(),(0,l.sendFiles)(r,i.dataTransfer.files,t,o).finally(n))}));var i=e.querySelector("input[type=file]");i&&r.j.e.on(i,"change",(function(){(0,l.sendFiles)(r,i.files,t,o).then((function(){i.value="",/safari/i.test(navigator.userAgent)||(i.type="",i.type="file")})).finally(n)}))},t.prototype.uploadRemoteImage=function(e,t,o){var n=this,r=n.o,i=(0,a.isFunction)(o)?o:r.defaultHandlerError;(0,l.send)(n,{action:"fileUploadRemote",url:e}).then((function(e){r.isSuccess.call(n,e)?((0,a.isFunction)(t)?t:r.defaultHandlerSuccess).call(n,r.process.call(n,e)):i.call(n,(0,a.error)(r.getMessage.call(n,e)))})).catch((function(e){return i.call(n,e)}))},t.prototype.destruct=function(){this.setStatus(s.STATUSES.beforeDestruct);var t=l.ajaxInstances.get(this);t&&(t.forEach((function(e){try{e.destruct()}catch(e){}})),t.clear()),e.prototype.destruct.call(this)},t}(s.ViewComponent);t.Uploader=c},75243:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ColorPickerWidget=void 0,o(60819);var n=o(40332),r=o(2074),i=o(64968);r.Icon.set("palette",o(95331)),t.ColorPickerWidget=function(e,t,o){var a="jodit-color-picker",s=(0,n.normalizeColor)(o),l=e.c.div(a),c=e.o.textIcons?"<span>".concat(e.i18n("palette"),"</span>"):r.Icon.get("palette"),u=function(e){var t=[];return(0,n.isPlainObject)(e)?Object.keys(e).forEach((function(o){t.push('<div class="'.concat(a,"__group ").concat(a,"__group-").concat(o,'">')),t.push(u(e[o])),t.push("</div>")})):(0,n.isArray)(e)&&e.forEach((function(e){t.push("<span class='".concat(a,"__color-item ").concat(s===e?a+"__color-item_active_true":"","' title=\"").concat(e,'" style="background-color:').concat(e,'" data-color="').concat(e,'"></span>'))})),t.join("")};l.appendChild(e.c.fromHTML('<div class="'.concat(a,'__groups">').concat(u(e.o.colors),"</div>"))),l.appendChild(e.c.fromHTML('<div data-ref="extra" class="'.concat(a,'__extra"></div>')));var d=(0,n.refs)(l).extra;return e.o.showBrowserColorPicker&&(0,n.hasBrowserColorPicker)()&&(d.appendChild(e.c.fromHTML('<div class="'.concat(a,'__native">').concat(c,'<input type="color" value="#ffffff"/></div>'))),e.e.on(l,"change",(function(e){e.stopPropagation();var o=e.target;if(o&&o.tagName&&i.Dom.isTag(o,"input")){var r=o.value||"";(0,n.isFunction)(t)&&t(r),e.preventDefault()}}))),e.e.on(l,"mousedown touchend",(function(o){o.stopPropagation(),o.preventDefault();var r=o.target;if(r&&r.tagName&&!i.Dom.isTag(r,"svg")&&!i.Dom.isTag(r,"path")||!r.parentNode||(r=i.Dom.closest(r.parentNode,"span",e.editor)),i.Dom.isTag(r,"span")&&r.classList.contains(a+"__color-item")){var s=(0,n.attr)(r,"-color")||"";t&&(0,n.isFunction)(t)&&t(s)}})),e.e.fire("afterGenerateColorPicker",l,d,t,s),l}},83029:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FileSelectorWidget=void 0;var n=o(40332),r=o(64968),i=o(2074),a=o(60929);t.FileSelectorWidget=function(e,t,o,s,l){var c;void 0===l&&(l=!0);var u=[];if(t.upload&&e.o.uploader&&(e.o.uploader.url||e.o.uploader.insertImageAsBase64URI)){var d=e.c.fromHTML('<div class="jodit-drag-and-drop__file-box">'+"<strong>".concat(e.i18n(l?"Drop image":"Drop file"),"</strong>")+"<span><br>".concat(e.i18n("or click"),"</span>")+'<input type="file" accept="'.concat(l?"image/*":"*",'" tabindex="-1" dir="auto" multiple=""/>')+"</div>");e.uploader.bind(d,(function(o){var r=(0,n.isFunction)(t.upload)?t.upload:e.o.uploader.defaultHandlerSuccess;(0,n.isFunction)(r)&&r.call(e,o),e.e.fire("closeAllPopups")}),(function(t){e.e.fire("errorMessage",t.message),e.e.fire("closeAllPopups")})),u.push({icon:"upload",name:"Upload",content:d})}if(t.filebrowser&&(e.o.filebrowser.ajax.url||e.o.filebrowser.items.url)&&u.push({icon:"folder",name:"Browse",content:function(){s&&s(),t.filebrowser&&e.filebrowser.open(t.filebrowser,l)}}),t.url){var p=new i.UIButton(e,{type:"submit",variant:"primary",text:"Insert"}),f=new i.UIForm(e,[new i.UIInput(e,{required:!0,label:"URL",name:"url",type:"text",placeholder:"https://"}),new i.UIInput(e,{name:"text",label:"Alternative text"}),new i.UIBlock(e,[p])]);c=null,o&&!r.Dom.isText(o)&&(r.Dom.isTag(o,"img")||(0,n.$$)("img",o).length)&&(c="IMG"===o.tagName?o:(0,n.$$)("img",o)[0],(0,n.val)(f.container,"input[name=url]",(0,n.attr)(c,"src")),(0,n.val)(f.container,"input[name=text]",(0,n.attr)(c,"alt")),p.state.text="Update"),o&&r.Dom.isTag(o,"a")&&((0,n.val)(f.container,"input[name=url]",(0,n.attr)(o,"href")),(0,n.val)(f.container,"input[name=text]",(0,n.attr)(o,"title")),p.state.text="Update"),f.onSubmit((function(o){(0,n.isFunction)(t.url)&&t.url.call(e,o.url,o.text)})),u.push({icon:"link",name:"URL",content:f.container})}return(0,a.TabsWidget)(e,u)}},718:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(75243),t),n.__exportStar(o(60929),t),n.__exportStar(o(83029),t)},60929:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TabsWidget=void 0,o(96410);var n=o(40332),r=o(42096),i=o(2074),a=o(56562),s=o(24263);t.TabsWidget=function(e,t,o){var l=e.c.div("jodit-tabs"),c=e.c.div("jodit-tabs__wrapper"),u=e.c.div("jodit-tabs__buttons"),d={},p=[],f="",h=0;l.appendChild(u),l.appendChild(c);var m=function(e){d[e]&&(p.forEach((function(e){e.state.activated=!1})),(0,n.$$)(".jodit-tab",c).forEach((function(e){e.classList.remove("jodit-tab_active")})),d[e].button.state.activated=!0,d[e].tab.classList.add("jodit-tab_active"))};if(t.forEach((function(n){var l=n.icon,v=n.name,g=n.content,y=e.c.div("jodit-tab"),_=(0,i.Button)(e,l||v,v);e.e.on(_.container,"mousedown",(function(e){return e.preventDefault()})),f||(f=v),u.appendChild(_.container),p.push(_),_.container.classList.add("jodit-tabs__button","jodit-tabs__button_columns_"+t.length),(0,r.isFunction)(g)?y.appendChild(e.c.div("jodit-tab_empty")):y.appendChild(a.Component.isInstanceOf(g,i.UIElement)?g.container:g),c.appendChild(y),_.onAction((function(){return m(v),(0,r.isFunction)(g)&&!s.Dom.isElement(g)&&g.call(e),o&&(o.__activeTab=v),!1})),d[v]={button:_,tab:y},h+=1})),!h)return l;if((0,n.$$)("a",u).forEach((function(e){e.style.width=(100/h).toFixed(10)+"%"})),m(o&&o.__activeTab&&d[o.__activeTab]?o.__activeTab:f),o){var v=o.__activeTab;Object.defineProperty(o,"__activeTab",{configurable:!0,enumerable:!1,get:function(){return v},set:function(e){v=e,m(e)}})}return l}},55692:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(33126);var n=o(93166),r=o(40332),i=o(86893),a=o(17332),s=o(77904);n.Config.prototype.controls.about={exec:function(e){var t=e.dlg(),o=e.i18n.bind(e);t.setMod("theme",e.o.theme).setHeader(o("About Jodit")).setContent('<div class="jodit-about">\n\t\t\t\t\t<div>'.concat(o("Jodit Editor")," v.").concat(e.getVersion(),"</div>\n\t\t\t\t\t<div>").concat(o("License: %s",(0,r.isLicense)(e.o.license)?(0,r.normalizeLicense)(e.o.license):"MIT"),'</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href="').concat("https://xdsoft.net/jodit/",'" target="_blank">').concat("https://xdsoft.net/jodit/",'</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href="https://xdsoft.net/jodit/doc/" target="_blank">').concat(o("Jodit User's Guide"),"</a>\n\t\t\t\t\t\t").concat(o("contains detailed help for using"),"\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>").concat(o("Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved."),"</div>\n\t\t\t\t</div>")),(0,r.css)(t.dialog,{minHeight:200,minWidth:420}),t.open(!0)},tooltip:"About Jodit",mode:i.MODE_SOURCE+i.MODE_WYSIWYG},a.pluginSystem.add("about",(function(e){e.registerButton({name:"about",group:"info"})})),s.Icon.set("about",o(84279))},66031:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addNewLine=void 0;var n=o(20255);o(30724);var r=o(87837),i=o(40332),a=o(43441),s=o(17332);o(46360);var l="addnewline",c=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.line=t.j.c.fromHTML('<div role="button" tabindex="-1" title="'.concat(t.j.i18n("Break"),'" class="jodit-add-new-line"><span>').concat(r.Icon.get("enter"),"</span></div>")),t.isMatchedTag=function(e){return Boolean(e&&t.j.o.addNewLineTagsTriggers.includes(e.nodeName.toLowerCase()))},t.preview=!1,t.lineInFocus=!1,t.isShown=!1,t.hideForce=function(){t.isShown&&(t.isShown=!1,t.j.async.clearTimeout(t.timeout),t.lineInFocus=!1,r.Dom.safeRemove(t.line),t.line.style.setProperty("--jd-offset-handle","0"))},t.canGetFocus=function(e){return null!=e&&r.Dom.isBlock(e)&&!/^(img|table|iframe|hr)$/i.test(e.nodeName)},t.onClickLine=function(e){var o=t.j,n=o.createInside.element(o.o.enter);t.preview&&t.current&&t.current.parentNode?t.current===o.editor?r.Dom.prepend(o.editor,n):t.current.parentNode.insertBefore(n,t.current):o.editor.appendChild(n),o.s.setCursorIn(n),(0,i.scrollIntoViewIfNeeded)(n,o.editor,o.ed),o.synchronizeValues(),t.hideForce(),e.preventDefault()},t}return n.__extends(t,e),t.prototype.show=function(){this.isShown||this.j.o.readonly||this.j.isLocked||(this.isShown=!0,this.j.async.clearTimeout(this.timeout),this.line.classList.toggle("jodit-add-new-line_after",!this.preview),this.j.container.appendChild(this.line),this.line.style.width=this.j.container.clientWidth+"px")},t.prototype.onLock=function(e){e&&this.isShown&&this.hideForce()},t.prototype.hide=function(){this.isShown&&!this.lineInFocus&&(this.timeout=this.j.async.setTimeout(this.hideForce,{timeout:500,label:"add-new-line-hide"}))},t.prototype.afterInit=function(e){var t=this;e.o.addNewLine&&(e.e.on(this.line,"mousemove",(function(e){e.stopPropagation()})).on(this.line,"mousedown touchstart",this.onClickLine).on("change",this.hideForce).on(this.line,"mouseenter",(function(){t.j.async.clearTimeout(t.timeout),t.lineInFocus=!0})).on(this.line,"mouseleave",(function(){t.lineInFocus=!1})).on("changePlace",this.addEventListeners.bind(this)),this.addEventListeners())},t.prototype.addEventListeners=function(){var e=this.j;e.e.off(e.editor,"."+l).off(e.container,"."+l).on([e.ow,e.ew,e.editor],"scroll."+l,this.hideForce).on(e.editor,"click."+l,this.hide).on(e.container,"mouseleave."+l,this.hide).on(e.editor,"mousemove."+l,this.onMouseMove)},t.prototype.onDblClickEditor=function(e){var t=this.j;if(!t.o.readonly&&t.o.addNewLineOnDBLClick&&e.target===t.editor&&t.s.isCollapsed()){var o=(0,i.offset)(t.editor,t,t.ed),n=e.pageY-t.ew.pageYOffset,r=t.createInside.element(t.o.enter);Math.abs(n-o.top)<Math.abs(n-(o.height+o.top))&&t.editor.firstChild?t.editor.insertBefore(r,t.editor.firstChild):t.editor.appendChild(r),t.s.setCursorIn(r),t.synchronizeValues(),this.hideForce(),e.preventDefault()}},t.prototype.onMouseMove=function(e){var t=this.j,o=t.ed.elementFromPoint(e.clientX,e.clientY);if(r.Dom.isHTMLElement(o)&&!r.Dom.isOrContains(this.line,o)&&r.Dom.isOrContains(t.editor,o))if(t.editor===o||this.isMatchedTag(o)||(o=r.Dom.closest(o,this.isMatchedTag,t.editor)),o){if(this.isMatchedTag(o)){var n=r.Dom.up(o,r.Dom.isBlock,t.editor);n&&n!==t.editor&&(o=n)}var a=(0,i.position)(o,this.j),s=!1,l=e.clientY,c=e.clientX;if(this.j.iframe){var u=(0,i.position)(this.j.iframe,this.j,!0);l+=u.top,c+=u.left}var d=this.j.o.addNewLineDeltaShow;Math.abs(l-a.top)>d||(s=a.top,this.preview=!0),Math.abs(l-(a.top+a.height))>d||(s=a.top+a.height,this.preview=!1),!1===s||(t.editor!==o||this.preview)&&(0,i.call)(this.preview?r.Dom.prev:r.Dom.next,o,this.canGetFocus,t.editor)?(this.current=!1,this.hide()):(this.line.style.top=s+"px",this.current=o,this.show(),this.line.style.setProperty("--jd-offset-handle",c-a.left-10+"px"))}else this.hide()},t.prototype.beforeDestruct=function(){this.j.async.clearTimeout(this.timeout),this.j.e.off(this.line).off("changePlace",this.addEventListeners),r.Dom.safeRemove(this.line),this.j.e.off([this.j.ow,this.j.ew,this.j.editor],"."+l).off(this.j.container,"."+l)},n.__decorate([(0,a.watch)(":lock")],t.prototype,"onLock",null),n.__decorate([a.autobind],t.prototype,"hide",null),n.__decorate([(0,a.watch)(":dblclick")],t.prototype,"onDblClickEditor",null),n.__decorate([(0,a.debounce)((function(e){return 5*e.defaultTimeout}))],t.prototype,"onMouseMove",null),t}(r.Plugin);t.addNewLine=c,s.pluginSystem.add("addNewLine",c)},46360:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(2074);n.Config.prototype.addNewLine=!0,n.Config.prototype.addNewLineOnDBLClick=!0,n.Config.prototype.addNewLineTagsTriggers=["table","iframe","img","hr","pre","jodit"],n.Config.prototype.addNewLineDeltaShow=20,r.Icon.set("enter",o(11257))},91241:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.backspace=void 0;var n=o(20255),r=o(57549),i=o(64968),a=o(86893),s=o(40332),l=o(10109),c=o(17332),u=o(90089),d=o(95441);o(48229);var p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.requires=["hotkeys"],t}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;e.e.on("afterCommand.delete",(function(e){"delete"===e&&t.afterDeleteCommand()})),e.registerCommand("deleteButton",{exec:function(){return t.onDelete(!1)},hotkeys:e.o.delete.hotkeys.delete},{stopPropagation:!1}).registerCommand("backspaceButton",{exec:function(){return t.onDelete(!0)},hotkeys:e.o.delete.hotkeys.backspace},{stopPropagation:!1}).registerCommand("deleteWordButton",{exec:function(){return t.onDelete(!1,"word")},hotkeys:e.o.delete.hotkeys.deleteWord}).registerCommand("backspaceWordButton",{exec:function(){return t.onDelete(!0,"word")},hotkeys:e.o.delete.hotkeys.backspaceWord}).registerCommand("deleteSentenceButton",{exec:function(){return t.onDelete(!1,"sentence")},hotkeys:e.o.delete.hotkeys.deleteSentence}).registerCommand("backspaceSentenceButton",{exec:function(){return t.onDelete(!0,"sentence")},hotkeys:e.o.delete.hotkeys.backspaceSentence})},t.prototype.beforeDestruct=function(e){e.e.off("afterCommand.delete")},t.prototype.afterDeleteCommand=function(){var e=this.j,t=e.s.current();if(t&&i.Dom.isTag(t.firstChild,"br")&&e.s.removeNode(t.firstChild),!((0,s.trim)(e.editor.textContent||"")||e.editor.querySelector("img,table,jodit,iframe,hr")||t&&i.Dom.closest(t,"table",e.editor))){e.editor.innerHTML="";var o=e.s.setCursorIn(e.editor);e.s.removeNode(o)}},t.prototype.onDelete=function(e,t){void 0===t&&(t="char");var o=this.j,n=o.selection;if(n.isFocused()||n.focus(),(0,d.checkNotCollapsed)(o))return!1;var r=n.range,c=o.createInside.text(a.INVISIBLE_SPACE);try{if(i.Dom.safeInsertNode(r,c),!i.Dom.isOrContains(o.editor,c))return;if(o.e.fire("backSpaceBeforeCases",e,c))return!1;if((0,l.moveNodeInsideStart)(o,c,e),u.cases.some((function(n){if((0,s.isFunction)(n)&&n(o,c,e,t))return!0})))return!1}catch(e){throw e}finally{o.e.fire("backSpaceAfterDelete",e,c),this.safeRemoveEmptyNode(c)}return!1},t.prototype.safeRemoveEmptyNode=function(e){var t,o,n=this.j.s.range;n.startContainer===e&&(e.previousSibling?i.Dom.isText(e.previousSibling)?n.setStart(e.previousSibling,null!==(o=null===(t=e.previousSibling.nodeValue)||void 0===t?void 0:t.length)&&void 0!==o?o:0):n.setStartAfter(e.previousSibling):e.nextSibling&&(i.Dom.isText(e.nextSibling)?n.setStart(e.nextSibling,0):n.setStartBefore(e.nextSibling)),n.collapse(!0),this.j.s.selectRange(n)),i.Dom.safeRemove(e)},t}(r.Plugin);t.backspace=p,c.pluginSystem.add("backspace",p)},31078:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkJoinNeighbors=void 0;var n=o(24263),r=o(30861);function i(e,t,o,i){if(t&&n.Dom.isElement(o)){n.Dom.moveContent(t,o,!i,(0,r.getMoveFilter)(e));for(var a=t;a&&a!==e.editor&&n.Dom.isEmpty(a);){var s=a.parentElement;n.Dom.safeRemove(a),a=s}return!0}return!1}t.checkJoinNeighbors=function(e,t,o){for(var r=t,a=r;r&&!n.Dom.findNotEmptySibling(r,o)&&r.parentElement!==e.editor;)a=r=r.parentElement;if(n.Dom.isElement(a)&&n.Dom.isContentEditable(a,e.editor)){var s=n.Dom.findNotEmptySibling(a,o);if(s&&(function(e,t,o,r){var a=n.Dom.isTag(o,["ol","ul"]),s=n.Dom.isTag(t,["ol","ul"]),l=function(e,t){return t?e.firstElementChild:e.lastElementChild};return s?(o=e.createInside.element(e.o.enterBlock),n.Dom.before(t,o),i(e,l(t,r),o,r)):!(!o||!a||s)&&i(e,t,l(o,!r),r)}(e,a,s,o)||i(e,a,s,o)))return e.s.setCursorBefore(t),!0}return!1}},92156:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkJoinTwoLists=void 0;var n=o(24263),r=o(67309),i=o(30861);t.checkJoinTwoLists=function(e,t,o){var a=n.Dom.findSibling(t,o),s=n.Dom.findSibling(t,!o);if(!n.Dom.closest(t,n.Dom.isElement,e.editor)&&n.Dom.isTag(a,["ul","ol"])&&n.Dom.isTag(s,["ul","ol"])&&n.Dom.isTag(a.lastElementChild,"li")&&n.Dom.isTag(s.firstElementChild,"li")){var l=e.s,c=l.setCursorBefore,u=l.setCursorAfter,d=a.lastElementChild;return(0,r.call)(o?n.Dom.prepend:n.Dom.append,s.firstElementChild,t),n.Dom.moveContent(s,a,!o,(0,i.getMoveFilter)(e)),n.Dom.safeRemove(s),(0,r.call)(o?n.Dom.append:n.Dom.prepend,d,t),(0,r.call)(o?c:u,t),!0}return!1}},95441:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkNotCollapsed=void 0,t.checkNotCollapsed=function(e){return!e.s.isCollapsed()&&(e.execCommand("Delete"),!0)}},13116:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkRemoveChar=void 0;var n=o(64968),r=o(40332),i=o(86893),a=o(30861);t.checkRemoveChar=function e(t,o,s,l){var c,u,d,p,f=s?-1:1,h=n.Dom.sibling(o,!s),m=n.Dom.sibling(o,s),v=null,g=!1,y=function(e){var o=n.Dom.sibling(e,s);return!o&&e.parentNode&&e.parentNode!==t.editor&&(o=(0,a.findMostNestedNeighbor)(e,!s,t.editor,!0)),o};for(m||(m=y(o));m&&(n.Dom.isText(m)||n.Dom.isInlineBlock(m));){for(;n.Dom.isInlineBlock(m);)m=s?null==m?void 0:m.lastChild:null==m?void 0:m.firstChild;if(!m)break;if(null===(c=m.nodeValue)||void 0===c?void 0:c.length){var _=(0,r.toArray)(m.nodeValue),b=_.length,S=s?b-1:0;if(_[S]===i.INVISIBLE_SPACE)for(;_[S]===i.INVISIBLE_SPACE;)S+=f;if(p=_[S],_[S+f]===i.INVISIBLE_SPACE){for(S+=f;_[S]===i.INVISIBLE_SPACE;)S+=f;S+=s?1:-1}if(_=s&&0>S?[]:_.slice(s?0:S+1,s?S:b),!h||!n.Dom.isText(h)||(s?/^ /:/ $/).test(null!==(u=h.nodeValue)&&void 0!==u?u:"")||!(0,r.trimInv)(h.nodeValue||"").length)for(var w=s?_.length-1:0;(s?w>=0:_.length>w)&&" "===_[w];w+=s?-1:1)_[w]=i.NBSP_SPACE;m.nodeValue=_.join("")}if((null===(d=m.nodeValue)||void 0===d?void 0:d.length)||(v=m),!(0,r.isVoid)(p)&&p!==i.INVISIBLE_SPACE){g=!0,(0,r.call)(s?n.Dom.after:n.Dom.before,m,o),("sentence"===l||"word"===l&&" "!==p&&p!==i.NBSP_SPACE)&&e(t,o,s,l);break}var C=y(m);v&&(n.Dom.safeRemove(v),v=null),m=C}return v&&(n.Dom.safeRemove(v),v=null),g&&(function(e){for(var t=e.parentElement;t&&n.Dom.isInlineBlock(t);){var o=t.parentElement;n.Dom.isEmpty(t)&&(n.Dom.after(t,e),n.Dom.safeRemove(t)),t=o}}(o),function(e,t){t.parentElement!==e.editor&&n.Dom.isBlock(t.parentElement)&&n.Dom.each(t.parentElement,n.Dom.isEmptyTextNode)&&n.Dom.after(t,e.createInside.element("br"))}(t,o),t.s.setCursorBefore(o),n.Dom.isTag(o.previousSibling,"br")&&!n.Dom.findNotEmptySibling(o,!1)&&n.Dom.after(o,t.createInside.element("br"))),g}},74217:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkRemoveContentNotEditable=void 0;var n=o(64968),r=o(40332),i=o(10109);t.checkRemoveContentNotEditable=function(e,t,o){var a=n.Dom.findSibling(t,o);return!a&&t.parentElement&&t.parentElement!==e.editor&&(a=n.Dom.findSibling(t.parentElement,o)),!(!n.Dom.isElement(a)||n.Dom.isContentEditable(a,e.editor)||((0,r.call)(o?n.Dom.before:n.Dom.after,a,t),n.Dom.safeRemove(a),(0,i.moveNodeInsideStart)(e,t,o),(0,r.call)(o?e.s.setCursorBefore:e.s.setCursorAfter,t),0))}},34181:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkRemoveEmptyNeighbor=void 0;var n=o(24263);t.checkRemoveEmptyNeighbor=function(e,t,o){var r=n.Dom.closest(t,n.Dom.isElement,e.editor);if(!r)return!1;var i=n.Dom.findNotEmptySibling(r,o);return!(!i||!n.Dom.isEmpty(i)||(n.Dom.safeRemove(i),e.s.setCursorBefore(t),0))}},13890:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkRemoveEmptyParent=void 0;var n=o(64968),r=o(86893),i=o(92156);t.checkRemoveEmptyParent=function(e,t,o){var a=!1,s=e.s,l=s.setCursorBefore,c=s.setCursorIn,u=n.Dom.closest(t,n.Dom.isElement,e.editor);if(!u||!n.Dom.isEmpty(u))return!1;var d=n.Dom.findNotEmptyNeighbor(t,o,e.editor);do{if(!u||!n.Dom.isEmpty(u)||n.Dom.isCell(u))break;n.Dom.after(u,t);var p=n.Dom.closest(u,(function(e){return n.Dom.isElement(e)&&e!==u}),e.editor);n.Dom.safeRemove(u),a=!0,u=p}while(u);return!(!a||!(0,i.checkJoinTwoLists)(e,t,o))||(!d||n.Dom.isText(d)||n.Dom.isTag(d,r.INSEPARABLE_TAGS)?l(t):c(d,!o),a)}},8249:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkRemoveUnbreakableElement=void 0;var n=o(24263),r=o(86893),i=o(13890);t.checkRemoveUnbreakableElement=function(e,t,o){var a=n.Dom.findSibling(t,o);return!(!n.Dom.isElement(a)||!n.Dom.isTag(a,r.INSEPARABLE_TAGS)&&!n.Dom.isEmpty(a)||(n.Dom.safeRemove(a),n.Dom.isTag(a,"br")&&!n.Dom.findNotEmptySibling(t,!1)&&n.Dom.after(t,e.createInside.element("br")),e.s.setCursorBefore(t),n.Dom.isTag(a,"br")&&(0,i.checkRemoveEmptyParent)(e,t,o),0))}},58368:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkTableCell=void 0;var n=o(24263);t.checkTableCell=function(e,t){return!!n.Dom.isCell(t.parentElement)}},6028:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkUnwrapFirstListItem=void 0;var n=o(24263),r=o(76502);t.checkUnwrapFirstListItem=function(e,t,o){var i,a=n.Dom.closest(t,n.Dom.isElement,e.editor),s=e.s;if(n.Dom.isTag(a,"li")&&(null===(i=null==a?void 0:a.parentElement)||void 0===i?void 0:i[o?"firstElementChild":"lastElementChild"])===a&&s.cursorInTheEdge(o,a)){var l=a.parentElement,c=e.createInside.element(e.o.enterBlock);return(0,r.call)(o?n.Dom.before:n.Dom.after,l,c),n.Dom.moveContent(a,c),n.Dom.safeRemove(a),n.Dom.isEmpty(l)&&n.Dom.safeRemove(l),(0,r.call)(o?s.setCursorBefore:s.setCursorAfter,t),!0}return!1}},90089:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cases=void 0;var n=o(8249),r=o(74217),i=o(13116),a=o(58368),s=o(13890),l=o(34181),c=o(92156),u=o(31078),d=o(6028);t.cases=[n.checkRemoveUnbreakableElement,r.checkRemoveContentNotEditable,i.checkRemoveChar,a.checkTableCell,s.checkRemoveEmptyParent,l.checkRemoveEmptyNeighbor,c.checkJoinTwoLists,u.checkJoinNeighbors,d.checkUnwrapFirstListItem]},48229:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.delete={hotkeys:{delete:["delete","cmd+backspace"],deleteWord:["ctrl+delete","cmd+alt+backspace","ctrl+alt+backspace"],deleteSentence:["ctrl+shift+delete","cmd+shift+delete"],backspace:["backspace"],backspaceWord:["ctrl+backspace"],backspaceSentence:["ctrl+shift+backspace","cmd+shift+backspace"]}}},30861:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getMoveFilter=t.findMostNestedNeighbor=void 0;var n=o(64968);t.findMostNestedNeighbor=function(e,t,o,r){void 0===r&&(r=!1);var i=function(e){return t?e.firstChild:e.lastChild},a=n.Dom.findNotEmptyNeighbor(e,!t,o);if(r&&n.Dom.isElement(a)&&!n.Dom.isInlineBlock(a))return null;if(a)do{if(!i(a))return a;a=i(a)}while(a);return null},t.getMoveFilter=function(e){return function(t){return!0!==e.e.fire("backSpaceIsMovedIgnore",t)}}},87565:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bold=void 0;var n=o(20255),r=o(93166),i=o(40332),a=o(17332),s=o(77904);function l(e){var t=function(t){var o,a=r.Config.defaultOptions.controls[t],s=n.__assign({},a.css);return Object.keys(s).forEach((function(e){o||(o={}),o[e]=(0,i.isArray)(s[e])?s[e][0]:s[e]})),e.s.applyStyle(o,{element:a.tags?a.tags[0]:void 0}),e.synchronizeValues(),!1};["bold","italic","underline","strikethrough"].forEach((function(t){e.registerButton({name:t,group:"font-style"})})),["superscript","subscript"].forEach((function(t){e.registerButton({name:t,group:"script"})})),e.registerCommand("bold",{exec:t,hotkeys:["ctrl+b","cmd+b"]}).registerCommand("italic",{exec:t,hotkeys:["ctrl+i","cmd+i"]}).registerCommand("underline",{exec:t,hotkeys:["ctrl+u","cmd+u"]}).registerCommand("strikethrough",{exec:t}).registerCommand("subscript",{exec:t}).registerCommand("superscript",{exec:t})}o(58334),o(90740),t.bold=l,a.pluginSystem.add("bold",l),s.Icon.set("bold",o(25141)).set("italic",o(24557)).set("strikethrough",o(10859)).set("subscript",o(9813)).set("superscript",o(93395)).set("underline",o(98213))},90740:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.controls.subscript={tags:["sub"],tooltip:"subscript"},n.Config.prototype.controls.superscript={tags:["sup"],tooltip:"superscript"},n.Config.prototype.controls.bold={tagRegExp:/^(strong|b)$/i,tags:["strong","b"],css:{"font-weight":["bold","700"]},tooltip:"Bold"},n.Config.prototype.controls.italic={tagRegExp:/^(em|i)$/i,tags:["em","i"],css:{"font-style":"italic"},tooltip:"Italic"},n.Config.prototype.controls.underline={tagRegExp:/^(u)$/i,tags:["u"],css:{"text-decoration-line":"underline"},tooltip:"Underline"},n.Config.prototype.controls.strikethrough={tagRegExp:/^(s)$/i,tags:["s"],css:{"text-decoration-line":"line-through"},tooltip:"Strike through"}},58334:function(){},60894:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.classSpan=void 0;var n=o(20255),r=o(57549),i=o(93166),a=o(64968),s=o(40332),l=o(17332),c=o(2074);i.Config.prototype.controls.classSpan={command:"applyClassName",exec:s.memorizeExec,list:["enabled","disabled","activated","text-left","text-center","text-right","warning","error"],isChildActive:function(e,t){var o=e.s.current();if(o){var n=a.Dom.closest(o,a.Dom.isElement,e.editor)||e.editor;return Boolean(t.args&&n.classList.contains(t.args[0].toString()))}return!1},isActive:function(e,t){var o=e.s.current();if(o){var n=a.Dom.closest(o,a.Dom.isElement,e.editor)||e.editor,r=!1;return t.list&&Object.keys(t.list).forEach((function(e){n.classList.contains(e)&&(r=!0)})),Boolean(n&&n!==e.editor&&void 0!==t.list&&r)}return!1},childTemplate:function(e,t,o){return'<span class="'.concat(t,'">').concat(e.i18n(o),"</span>")},tooltip:"Insert className"};var u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.buttons=[{name:"classSpan",group:"font"}],t}return n.__extends(t,e),t.prototype.afterInit=function(e){e.registerCommand("applyClassName",(function(t,o,n){return e.s.applyStyle(void 0,{className:n}),!1}))},t.prototype.beforeDestruct=function(){},t}(r.Plugin);t.classSpan=u,l.pluginSystem.add("classSpan",u),c.Icon.set("class-span",o(20026))},90302:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cleanHtml=void 0;var n=o(20255),r=o(67128),i=o(85605),a=o(43441),s=o(33841),l=o(17332),c=o(24263),u=o(57713);o(98889);var d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.buttons=[{name:"eraser",group:"font-style"}],t.currentSelectionNode=null,t.walker=new s.LazyWalker(t.j.async,{timeout:t.j.o.cleanHTML.timeout}),t}return n.__extends(t,e),t.prototype.afterInit=function(e){},Object.defineProperty(t.prototype,"isEditMode",{get:function(){return!(this.j.isInDestruct||!this.j.isEditorMode()||this.j.getReadOnly())},enumerable:!1,configurable:!0}),t.prototype.onChangeCleanHTML=function(){if(this.isEditMode){var e=this.j;this.walker.setWork(e.editor),this.currentSelectionNode=e.s.current()}},t.prototype.startWalker=function(){var e=this,t=this.jodit,o=(0,u.getHash)(this.j.o.cleanHTML.allowTags),n=(0,u.getHash)(this.j.o.cleanHTML.denyTags);this.walker.on("visit",(function(r){return(0,u.visitNodeWalker)(t,r,o,n,e.currentSelectionNode)})).on("end",(function(t){e.j.e.fire(t?"internalChange finishedCleanHTMLWorker":"finishedCleanHTMLWorker")}))},t.prototype.beforeCommand=function(e){if("removeformat"===e.toLowerCase())return this.j.s.isCollapsed()?(0,u.removeFormatForCollapsedSelection)(this.j):(0,u.removeFormatForSelection)(this.j),!1},t.prototype.onBeforeSetNativeEditorValue=function(e){var t=this.j.o.cleanHTML.useIframeSandbox?this.j.createInside.sandbox():this.j.createInside.div();return t.innerHTML=e.value,this.onSafeHTML(t),e.value=t.innerHTML,(0,r.safeHTML)(t,{safeJavaScriptLink:!0,removeOnError:!0}),c.Dom.safeRemove(t),!1},t.prototype.onSafeHTML=function(e){(0,r.safeHTML)(e,this.j.o.cleanHTML)},t.prototype.beforeDestruct=function(){this.walker.destruct()},n.__decorate([(0,a.watch)([":change",":afterSetMode",":afterInit",":mousedown",":keydown"])],t.prototype,"onChangeCleanHTML",null),n.__decorate([(0,a.hook)("ready")],t.prototype,"startWalker",null),n.__decorate([(0,a.watch)(":beforeCommand")],t.prototype,"beforeCommand",null),n.__decorate([(0,a.watch)(":beforeSetNativeEditorValue")],t.prototype,"onBeforeSetNativeEditorValue",null),n.__decorate([(0,a.watch)(":safeHTML")],t.prototype,"onSafeHTML",null),t}(i.Plugin);t.cleanHtml=d,l.pluginSystem.add("cleanHtml",d)},98889:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(77904);n.Config.prototype.cleanHTML={timeout:300,removeEmptyElements:!0,fillEmptyParagraph:!0,replaceNBSP:!0,replaceOldTags:{i:"em",b:"strong"},allowTags:!1,denyTags:"script",useIframeSandbox:!1,removeOnError:!0,safeJavaScriptLink:!0,disableCleanFilter:null},n.Config.prototype.controls.eraser={command:"removeFormat",tooltip:"Clear Formatting"},r.Icon.set("eraser",o(66911))},38655:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getHash=void 0;var n=o(33941),r=o(24421);t.getHash=function(e){var t=/([^[]*)\[([^\]]+)]/,o=/[\s]*,[\s]*/,i=/^(.*)[\s]*=[\s]*(.*)$/,a={};return(0,r.isString)(e)?(e.split(o).map((function(e){e=(0,n.trim)(e);var r=t.exec(e),s={};if(r){var l=r[2].split(o);r[1]&&(l.forEach((function(e){e=(0,n.trim)(e);var t=i.exec(e);t?s[t[1]]=t[2]:s[e]=!0})),a[r[1].toUpperCase()]=s)}else a[e.toUpperCase()]=!0})),a):!!e&&(Object.keys(e).forEach((function(t){a[t.toUpperCase()]=e[t]})),a)}},57713:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(38655),t),n.__exportStar(o(72170),t),n.__exportStar(o(87783),t),n.__exportStar(o(88972),t)},72170:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isInlineBlock=t.removeFormatForCollapsedSelection=void 0;var n=o(24263),r=o(86893);function i(e){return n.Dom.isInlineBlock(e)&&!n.Dom.isTag(e,r.INSEPARABLE_TAGS)}t.removeFormatForCollapsedSelection=function(e,t){var o=e.s,r=t;if(!r){r=e.createInside.fake();var a=o.range;n.Dom.safeInsertNode(a,r),a.collapse()}var s=n.Dom.furthest(r,i,e.editor);if(s)if(o.cursorOnTheLeft(s))n.Dom.before(s,r);else if(o.cursorOnTheRight(s))n.Dom.after(s,r);else{var l=o.splitSelection(s);l&&n.Dom.after(l,r)}t||(o.setCursorBefore(r),n.Dom.safeRemove(r))},t.isInlineBlock=i},87783:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.removeFormatForSelection=void 0;var n=o(24263),r=o(76502),i=o(72170);t.removeFormatForSelection=function(e){var t=e.s,o=e.editor,a=e.createInside,s=t.range,l=s.cloneRange(),c=s.cloneRange(),u=a.fake(),d=a.fake();l.collapse(!0),c.collapse(!1),n.Dom.safeInsertNode(l,u),n.Dom.safeInsertNode(c,d),s.setStartBefore(u),s.collapse(!0),t.selectRange(s),(0,i.removeFormatForCollapsedSelection)(e,u),s.setEndAfter(d),s.collapse(!1),t.selectRange(s),(0,i.removeFormatForCollapsedSelection)(e,d);var p=[];n.Dom.between(u,d,(function(e){(0,i.isInlineBlock)(e)&&!n.Dom.isTag(e,["a"])&&p.push(e),n.Dom.isElement(e)&&(0,r.attr)(e,"style")&&(0,r.attr)(e,"style",null)})),p.forEach((function(e){return n.Dom.unwrap(e)}));var f=function(e,t){if(!n.Dom.findNotEmptySibling(e,t)){var i=e.parentNode;if(i&&i!==o&&(0,r.attr)(i,"style"))return(0,r.attr)(i,"style",null),f(i,t),!0}};f(u,!0)&&f(d,!1),s.setStartAfter(u),s.setEndBefore(d),t.selectRange(s),n.Dom.safeRemove(u),n.Dom.safeRemove(d)}},9948:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allowAttributes=void 0;var n=o(24263);t.allowAttributes=function(e,t,o,r){if(r&&n.Dom.isElement(t)&&!0!==r[t.nodeName]){var i=t.attributes;if(i&&i.length){for(var a=[],s=0;i.length>s;s+=1){var l=r[t.nodeName][i[s].name];(!l||!0!==l&&l!==i[s].value)&&a.push(i[s].name)}a.length&&(o=!0),a.forEach((function(e){t.removeAttribute(e)}))}}return o}},74722:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fillEmptyParagraph=void 0;var n=o(24263),r=o(86893);t.fillEmptyParagraph=function(e,t,o){if(e.o.cleanHTML.fillEmptyParagraph&&n.Dom.isBlock(t)&&n.Dom.isEmpty(t,r.INSEPARABLE_TAGS)){var i=e.createInside.element("br");return t.appendChild(i),!0}return o}},2549:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(55901),t),n.__exportStar(o(9948),t),n.__exportStar(o(74722),t),n.__exportStar(o(75096),t),n.__exportStar(o(28194),t),n.__exportStar(o(94254),t),n.__exportStar(o(64701),t)},28194:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.removeEmptyTextNode=void 0;var n=o(24263);t.removeEmptyTextNode=function(e,t,o,r,i,a){return n.Dom.isText(t)&&!t.nodeValue?(t===a&&e.s.isCollapsed()&&e.s.setCursorAfter(t),n.Dom.safeRemove(t),!0):o}},94254:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.removeInvTextNodes=void 0;var n=o(86893),r=o(24263);t.removeInvTextNodes=function(e,t,o,i,a,s){return s!==t&&r.Dom.isText(t)&&null!=t.nodeValue&&(0,n.INVISIBLE_SPACE_REG_EXP)().test(t.nodeValue)?(t.nodeValue=t.nodeValue.replace((0,n.INVISIBLE_SPACE_REG_EXP)(),""),t===s&&e.s.isCollapsed()&&e.s.setCursorAfter(t),t.nodeValue||r.Dom.safeRemove(t),!0):o}},55901:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.replaceOldTags=void 0;var n=o(24263);t.replaceOldTags=function(e,t,o){var r=function(e,t,o){if(!o||!n.Dom.isHTMLElement(t))return t;var r=o[t.nodeName.toLowerCase()]||o[t.nodeName];return r?n.Dom.replace(t,r,e.createInside,!0,!1):t}(e,t,e.o.cleanHTML.replaceOldTags);return t!==r?(t=r,!0):o}},64701:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sanitizeAttributes=void 0;var n=o(24263),r=o(40332);t.sanitizeAttributes=function(e,t,o){return!(!n.Dom.isElement(t)||!(0,r.sanitizeHTMLElement)(t,{safeJavaScriptLink:e.options.cleanHTML.safeJavaScriptLink,removeOnError:e.options.cleanHTML.removeOnError}))||o}},75096:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tryRemoveNode=void 0;var n=o(24263),r=o(86893),i=o(33941);t.tryRemoveNode=function(e,t,o,a,s,l){return function(e,t,o,a,s){return!(n.Dom.isText(t)||!(a&&!a[t.nodeName]||s&&s[t.nodeName]))||e.o.cleanHTML.removeEmptyElements&&n.Dom.isElement(t)&&null!=t.nodeName.match(r.IS_INLINE)&&!n.Dom.isTemporary(t)&&0===(0,i.trim)(t.innerHTML).length&&(null==o||!n.Dom.isOrContains(t,o))}(e,t,l,a,s)?(n.Dom.safeRemove(t),!0):o}},88972:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.visitNodeWalker=void 0;var n=o(20255),r=o(2549),i=Object.keys(r);t.visitNodeWalker=function(e,t,o,a,s){var l,c,u=!1,d=e.o.cleanHTML.disableCleanFilter;try{for(var p=n.__values(i),f=p.next();!f.done;f=p.next()){var h=f.value;if(!(d&&d.has(h)||(u=(0,r[h])(e,t,u,o,a,s),t.isConnected)))return!0}}catch(e){l={error:e}}finally{try{f&&!f.done&&(c=p.return)&&c.call(p)}finally{if(l)throw l.error}}return u}},92138:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.clipboard=void 0;var n=o(86893),r=o(40332),i=o(17332);o(31473);var a=function(){function e(){this.buttons=[{name:"cut",group:"clipboard"},{name:"copy",group:"clipboard"},{name:"paste",group:"clipboard"},{name:"selectall",group:"clipboard"}]}return e.prototype.init=function(e){var t;null===(t=this.buttons)||void 0===t||t.forEach((function(t){return e.registerButton(t)})),e.e.off("copy.".concat(n.CLIPBOARD_ID," cut.").concat(n.CLIPBOARD_ID)).on("copy.".concat(n.CLIPBOARD_ID," cut.").concat(n.CLIPBOARD_ID),(function(t){var o,i=e.s.html,a=(0,r.getDataTransfer)(t)||(0,r.getDataTransfer)(e.ew)||(0,r.getDataTransfer)(t.originalEvent);a&&(a.setData(n.TEXT_PLAIN,(0,r.stripTags)(i)),a.setData(n.TEXT_HTML,i)),e.buffer.set(n.CLIPBOARD_ID,i),e.e.fire("pasteStack",{html:i,action:e.o.defaultActionOnPaste||n.INSERT_AS_HTML}),"cut"===t.type&&(e.s.remove(),e.s.focus()),t.preventDefault(),null===(o=null==e?void 0:e.events)||void 0===o||o.fire("afterCopy",i)}))},e.prototype.destruct=function(e){var t,o;null===(t=null==e?void 0:e.buffer)||void 0===t||t.set(n.CLIPBOARD_ID,""),null===(o=null==e?void 0:e.events)||void 0===o||o.off("."+n.CLIPBOARD_ID)},e}();t.clipboard=a,i.pluginSystem.add("clipboard",a)},31473:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(77904);n.Config.prototype.controls.cut={command:"cut",isDisabled:function(e){return e.s.isCollapsed()},tooltip:"Cut selection"},n.Config.prototype.controls.copy={command:"copy",isDisabled:function(e){return e.s.isCollapsed()},tooltip:"Copy selection"},n.Config.prototype.controls.selectall={icon:"select-all",command:"selectall",tooltip:"Select all"},r.Icon.set("copy",o(50018)).set("cut",o(99738)).set("paste",o(9185)).set("select-all",o(8619))},88412:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.color=void 0;var n=o(40332),r=o(17332);function i(e){e.registerButton({name:"brush",group:"color"});var t=function(t,o,r){var i=(0,n.normalizeColor)(r);switch(t){case"background":e.s.applyStyle({backgroundColor:i||""});break;case"forecolor":e.s.applyStyle({color:i||""})}return e.synchronizeValues(),!1};e.registerCommand("forecolor",t).registerCommand("background",t)}o(21924),t.color=i,r.pluginSystem.add("color",i)},21924:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(40332),i=o(718),a=o(77904),s=o(24263);a.Icon.set("brush",o(73894)),n.Config.prototype.controls.brush={update:function(e,t){var o=(0,r.dataBind)(e,"color"),n=function(o,n){n&&n!==(0,r.css)(t.editor,o).toString()&&(e.state.icon.fill=n)};if(o){var i=(0,r.dataBind)(e,"color");n("color"===i?i:"background-color",o)}else{var a=t.s.current();if(a&&!e.state.disabled){var l=s.Dom.closest(a,s.Dom.isElement,t.editor)||t.editor;n("color",(0,r.css)(l,"color").toString()),n("background-color",(0,r.css)(l,"background-color").toString())}e.state.icon.fill="",e.state.activated=!1}},popup:function(e,t,o,n,a){var l="",c="",u=[],d=null;return t&&t!==e.editor&&s.Dom.isNode(t)&&(s.Dom.isElement(t)&&e.s.isCollapsed()&&!s.Dom.isTag(t,["br","hr"])&&(d=t),s.Dom.up(t,(function(e){if(s.Dom.isHTMLElement(e)){var t=(0,r.css)(e,"color",!0),o=(0,r.css)(e,"background-color",!0);if(t)return l=t.toString(),!0;if(o)return c=o.toString(),!0}}),e.editor)),u=[{name:"Background",content:(0,i.ColorPickerWidget)(e,(function(t){d?d.style.backgroundColor=t:e.execCommand("background",!1,t),(0,r.dataBind)(a,"color",t),(0,r.dataBind)(a,"color-mode","background"),n()}),c)},{name:"Text",content:(0,i.ColorPickerWidget)(e,(function(t){d?d.style.color=t:e.execCommand("forecolor",!1,t),(0,r.dataBind)(a,"color",t),(0,r.dataBind)(a,"color-mode","color"),n()}),l)}],"background"!==e.o.colorPickerDefaultTab&&(u=u.reverse()),(0,i.TabsWidget)(e,u,d)},exec:function(e,t,o){var n=o.button,i=(0,r.dataBind)(n,"color-mode"),a=(0,r.dataBind)(n,"color");if(!i)return!1;if(t&&t!==e.editor&&s.Dom.isNode(t)&&s.Dom.isElement(t))switch(i){case"color":t.style.color=a;break;case"background":t.style.backgroundColor=a}else e.execCommand("background"===i?i:"forecolor",!1,a)},tooltip:"Fill color or set the text color"}},79308:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.copyFormat=void 0;var n=o(93166),r=o(24263),i=o(26911),a=o(17332),s=o(77904),l="copy-format",c=["fontWeight","fontStyle","fontSize","color","margin","padding","borderWidth","borderStyle","borderColor","borderRadius","backgroundColor","textDecorationLine","fontFamily"],u=function(e,t,o,n){var r=(0,i.css)(o,t);return r===n[t]&&(r=o.parentNode&&o!==e.editor&&o.parentNode!==e.editor?u(e,t,o.parentNode,n):void 0),r};function d(e){e.registerButton({name:"copyformat",group:"clipboard"}),(0,a.extendLang)(o(9188))}n.Config.prototype.controls.copyformat={exec:function(e,t,o){var n=o.button;if(t){if(e.buffer.exists(l))e.buffer.delete(l),e.e.off(e.editor,"mouseup."+l);else{var a={},s=r.Dom.up(t,(function(e){return e&&!r.Dom.isText(e)}),e.editor)||e.editor,d=e.createInside.span();e.editor.appendChild(d),c.forEach((function(e){a[e]=(0,i.css)(d,e)})),d!==e.editor&&r.Dom.safeRemove(d);var p=function(e,t,o){var n={};return t&&c.forEach((function(r){n[r]=u(e,r,t,o),r.match(/border(Style|Color)/)&&!n.borderWidth&&(n[r]=void 0)})),n}(e,s,a);e.e.on(e.editor,"mouseup."+l,(function(){e.buffer.delete(l);var t=e.s.current();t&&(r.Dom.isTag(t,"img")?(0,i.css)(t,p):e.s.applyStyle(p)),e.e.off(e.editor,"mouseup."+l)})),e.buffer.set(l,!0)}n.update()}},isActive:function(e){return e.buffer.exists(l)},tooltip:"Paint format"},t.copyFormat=d,a.pluginSystem.add("copyformat",d),s.Icon.set("copyformat",o(83301))},9188:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.zh_tw=t.zh_cn=t.tr=t.ru=t.pt_br=t.pl=t.nl=t.ko=t.ja=t.it=t.id=t.hu=t.he=t.fr=t.fa=t.es=t.de=t.cs_cz=t.ar=void 0;var n=o(80078);t.ar=n;var r=o(16986);t.cs_cz=r;var i=o(59347);t.de=i;var a=o(63640);t.es=a;var s=o(53434);t.fa=s;var l=o(85638);t.fr=l;var c=o(31743);t.he=c;var u=o(66219);t.hu=u;var d=o(50331);t.id=d;var p=o(25582);t.it=p;var f=o(82066);t.ja=f;var h=o(71925);t.ko=h;var m=o(65274);t.nl=m;var v=o(58548);t.pl=v;var g=o(82958);t.pt_br=g;var y=o(52315);t.ru=y;var _=o(87727);t.tr=_;var b=o(9396);t.zh_cn=b;var S=o(28765);t.zh_tw=S},9412:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.draggableTags=["img","jodit-media","jodit"]},30598:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.dragAndDropElement=void 0;var n,r=o(20255),i=o(40332),a=o(57549),s=o(64968),l=o(17332),c=o(43441);o(9412),function(e){e[e.IDLE=0]="IDLE",e[e.WAIT_DRAGGING=1]="WAIT_DRAGGING",e[e.DRAGGING=2]="DRAGGING"}(n||(n={}));var u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.dragList=[],t.draggable=null,t.isCopyMode=!1,t.diffStep=10,t.startX=0,t.startY=0,t.state=n.IDLE,t}return r.__extends(t,e),t.prototype.afterInit=function(){this.dragList=this.j.o.draggableTags?(0,i.splitArray)(this.j.o.draggableTags).filter(Boolean).map((function(e){return e.toLowerCase()})):[],this.dragList.length&&this.j.e.on("mousedown dragstart",this.onDragStart)},t.prototype.onDragStart=function(e){var t=this;if("dragstart"===e.type&&this.draggable)return!1;if(n.IDLE>=this.state){var o=e.target;if(this.dragList.length&&o){var r=function(e){return Boolean(e&&t.dragList.includes(e.nodeName.toLowerCase()))},a=s.Dom.furthest(o,r,this.j.editor)||(r(o)?o:null);a&&(s.Dom.isTag(a.parentElement,"a")&&a.parentElement.firstChild===a&&a.parentElement.lastChild===a&&(a=a.parentElement),this.startX=e.clientX,this.startY=e.clientY,this.isCopyMode=(0,i.ctrlKey)(e),this.draggable=a.cloneNode(!0),(0,i.dataBind)(this.draggable,"target",a),this.state=n.WAIT_DRAGGING,this.addDragListeners())}}},t.prototype.onDrag=function(e){var o,r;if(this.draggable&&this.state!==n.IDLE){var a=e.clientY;if(this.state!==n.WAIT_DRAGGING||Math.sqrt(Math.pow(e.clientX-this.startX,2)+Math.pow(a-this.startY,2))>=this.diffStep){if(this.state===n.WAIT_DRAGGING&&(this.j.lock("drag-and-drop-element"),this.state=n.DRAGGING),this.j.e.fire("hidePopup hideResizer"),!this.draggable.parentNode){var s=(0,i.dataBind)(this.draggable,"target");(0,i.css)(this.draggable,{zIndex:1e13,pointerEvents:"none",pointer:"drag",position:"fixed",opacity:.7,display:"inline-block",left:e.clientX,top:e.clientY,width:null!==(o=null==s?void 0:s.offsetWidth)&&void 0!==o?o:100,height:null!==(r=null==s?void 0:s.offsetHeight)&&void 0!==r?r:100}),(0,l.getContainer)(this.j,t).appendChild(this.draggable)}(0,i.css)(this.draggable,{left:e.clientX,top:e.clientY}),this.j.s.insertCursorAtPoint(e.clientX,e.clientY)}}},t.prototype.onDragEnd=function(){this.isInDestruct||(this.removeDragListeners(),this.j.unlock(),this.state=n.IDLE,this.draggable&&(s.Dom.safeRemove(this.draggable),this.draggable=null))},t.prototype.onDrop=function(){if(this.draggable&&this.state>=n.DRAGGING){var e=(0,i.dataBind)(this.draggable,"target");this.onDragEnd(),this.isCopyMode&&(e=e.cloneNode(!0));var t=e.parentElement;this.j.s.insertNode(e,!0,!1),t&&s.Dom.isEmpty(t)&&!s.Dom.isTag(t,["td","th"])&&s.Dom.safeRemove(t),s.Dom.isTag(e,"img")&&this.j.e&&this.j.e.fire("afterInsertImage",e),this.j.e.fire("synchro")}else this.onDragEnd()},t.prototype.addDragListeners=function(){this.j.e.on(this.j.editor,"mousemove",this.onDrag).on("mouseup",this.onDrop).on([this.j.ew,this.ow],"mouseup",this.onDragEnd)},t.prototype.removeDragListeners=function(){this.j.e.off(this.j.editor,"mousemove",this.onDrag).off("mouseup",this.onDrop).off([this.j.ew,this.ow],"mouseup",this.onDragEnd)},t.prototype.beforeDestruct=function(){this.onDragEnd(),this.j.e.off("mousedown dragstart",this.onDragStart),this.removeDragListeners()},r.__decorate([c.autobind],t.prototype,"onDragStart",null),r.__decorate([(0,c.throttle)((function(e){return e.defaultTimeout/10}))],t.prototype,"onDrag",null),r.__decorate([c.autobind],t.prototype,"onDragEnd",null),r.__decorate([c.autobind],t.prototype,"onDrop",null),t}(a.Plugin);t.dragAndDropElement=u,l.pluginSystem.add("dragAndDropElement",u)},19268:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.dragAndDrop=void 0;var n=o(20255),r=o(86893),i=o(24263),a=o(40332),s=o(57549),l=o(43441),c=o(63463),u=o(17332),d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.isFragmentFromEditor=!1,t.isCopyMode=!1,t.startDragPoint={x:0,y:0},t.draggable=null,t.bufferRange=null,t.getText=function(e){var t=(0,a.getDataTransfer)(e);return t?t.getData(r.TEXT_HTML)||t.getData(r.TEXT_PLAIN):null},t}return n.__extends(t,e),t.prototype.afterInit=function(){this.j.e.on([window,this.j.ed,this.j.editor],"dragstart.DragAndDrop",this.onDragStart)},t.prototype.onDragStart=function(e){var t=e.target;if(this.onDragEnd(),this.isFragmentFromEditor=i.Dom.isOrContains(this.j.editor,t,!0),this.isCopyMode=!this.isFragmentFromEditor||(0,a.ctrlKey)(e),this.isFragmentFromEditor){var o=this.j.s.sel,n=o&&o.rangeCount?o.getRangeAt(0):null;n&&(this.bufferRange=n.cloneRange())}else this.bufferRange=null;this.startDragPoint.x=e.clientX,this.startDragPoint.y=e.clientY,(0,c.isFileBrowserFilesItem)(t)&&(t=t.querySelector("img")),i.Dom.isTag(t,"img")&&(this.draggable=t.cloneNode(!0),(0,a.dataBind)(this.draggable,"target",t)),this.addDragListeners()},t.prototype.addDragListeners=function(){this.j.e.on("dragover",this.onDrag).on("drop.DragAndDrop",this.onDrop).on(window,"dragend.DragAndDrop drop.DragAndDrop mouseup.DragAndDrop",this.onDragEnd)},t.prototype.removeDragListeners=function(){this.j.e.off("dragover",this.onDrag).off("drop.DragAndDrop",this.onDrop).off(window,"dragend.DragAndDrop drop.DragAndDrop mouseup.DragAndDrop",this.onDragEnd)},t.prototype.onDrag=function(e){this.draggable&&(this.j.e.fire("hidePopup"),this.j.s.insertCursorAtPoint(e.clientX,e.clientY),e.preventDefault(),e.stopPropagation())},t.prototype.onDragEnd=function(){this.draggable&&(i.Dom.safeRemove(this.draggable),this.draggable=null),this.isCopyMode=!1,this.removeDragListeners()},t.prototype.onDrop=function(e){if(!e.dataTransfer||!e.dataTransfer.files||!e.dataTransfer.files.length){if(!this.isFragmentFromEditor&&!this.draggable)return this.j.e.fire("paste",e),e.preventDefault(),e.stopPropagation(),!1;var t=this.j.s.sel,o=this.bufferRange||(t&&t.rangeCount?t.getRangeAt(0):null),r=null;if(!this.draggable&&o)r=this.isCopyMode?o.cloneContents():o.extractContents();else if(this.draggable)if(this.isCopyMode){var s=n.__read("1"===(0,a.attr)(this.draggable,"-is-file")?["a","href"]:["img","src"],2),l=s[0],c=s[1];(r=this.j.createInside.element(l)).setAttribute(c,(0,a.attr)(this.draggable,"data-src")||(0,a.attr)(this.draggable,"src")||""),"a"===l&&(r.textContent=(0,a.attr)(r,c)||"")}else r=(0,a.dataBind)(this.draggable,"target");else this.getText(e)&&(r=this.j.createInside.fromHTML(this.getText(e)));t&&t.removeAllRanges(),this.j.s.insertCursorAtPoint(e.clientX,e.clientY),r&&(this.j.s.insertNode(r,!1,!1),o&&r.firstChild&&r.lastChild&&(o.setStartBefore(r.firstChild),o.setEndAfter(r.lastChild),this.j.s.selectRange(o),this.j.e.fire("synchro")),i.Dom.isTag(r,"img")&&this.j.events&&this.j.e.fire("afterInsertImage",r)),e.preventDefault(),e.stopPropagation()}this.isFragmentFromEditor=!1,this.removeDragListeners()},t.prototype.beforeDestruct=function(){this.onDragEnd(),this.j.e.off(window,".DragAndDrop").off(".DragAndDrop").off([window,this.j.ed,this.j.editor],"dragstart.DragAndDrop",this.onDragStart)},n.__decorate([l.autobind],t.prototype,"onDragStart",null),n.__decorate([(0,l.throttle)((function(e){return e.defaultTimeout/10}))],t.prototype,"onDrag",null),n.__decorate([l.autobind],t.prototype,"onDragEnd",null),n.__decorate([l.autobind],t.prototype,"onDrop",null),t}(s.Plugin);t.dragAndDrop=d,u.pluginSystem.add("dragAndDrop",d)},95049:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(20255).__exportStar(o(69516),t)},69516:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.removeExtraBr=void 0;var n=o(24263);t.removeExtraBr=function(e,t){if(e.o.dtd.removeExtraBr&&!n.Dom.isTag(t,"br")){var o=n.Dom.furthest(t,n.Dom.isBlock,e.editor);if(o&&!n.Dom.isTag(o,["table","pre","blockquote","code"])){var r=n.Dom.isTag(t,"br")?t:n.Dom.findNotEmptySibling(t,!1);if(!n.Dom.isTag(r,"br"))return;e.s.setCursorBefore(r),n.Dom.safeRemove(r)}}}},73967:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkBlockNesting=void 0;var n=o(24263);t.checkBlockNesting=function(e,t){if(n.Dom.isFragment(t)&&(t=t.firstChild),e.o.dtd.checkBlockNesting&&n.Dom.isBlock(t)){var o=n.Dom.furthest(e.s.current(),n.Dom.isBlock,e.editor);o&&!e.o.dtd.blockLimits[o.tagName.toLowerCase()]&&(e.s.setCursorAfter(o),n.Dom.isEmpty(o)&&n.Dom.safeRemove(o))}}},73690:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(20255).__exportStar(o(73967),t)},20173:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.dtd={removeExtraBr:!0,checkBlockNesting:!0,blockLimits:{article:1,aside:1,audio:1,body:1,caption:1,details:1,dir:1,div:1,dl:1,fieldset:1,figcaption:1,figure:1,footer:1,form:1,header:1,hgroup:1,main:1,menu:1,nav:1,ol:1,section:1,table:1,td:1,th:1,tr:1,ul:1,video:1}}},96899:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255),r=o(57549),i=o(17332),a=o(46163);o(20173);var s=o(73690),l=o(95049),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.afterInit=function(e){},t.prototype.beforeDestruct=function(e){},t.prototype.__onBeforeInsertNode=function(e){var t=this;Object.keys(s).forEach((function(o){s[o](t.j,e)}))},t.prototype.__onAfterInsertNode=function(e){var t=this;Object.keys(l).forEach((function(o){l[o](t.j,e)}))},n.__decorate([(0,a.watch)(":beforeInsertNode")],t.prototype,"__onBeforeInsertNode",null),n.__decorate([(0,a.watch)(":afterInsertNode")],t.prototype,"__onAfterInsertNode",null),t}(r.Plugin);i.pluginSystem.add("dtd",c)},33122:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.enter=void 0;var n=o(20255),r=o(24263),i=o(85605),a=o(86893),s=o(43441),l=o(67749),c=o(23217),u=o(17332);o(26231);var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this,o=e.o.enter.toLowerCase(),n=o===a.BR.toLowerCase();e.o.enterBlock||(e.o.enterBlock=n?a.PARAGRAPH:o),e.registerCommand("enter",(function(e,o,n){return void 0===n&&(n={}),t.onEnter(n)}))},t.prototype.onEnterKeyDown=function(e){if(e.key===a.KEY_ENTER){var t=this.j,o=t.e.fire("beforeEnter",e);return void 0!==o?o:(t.s.isCollapsed()||t.execCommand("Delete"),t.s.focus(),this.onEnter(e),t.e.fire("afterEnter",e),t.synchronizeValues(),!1)}},t.prototype.onEnter=function(e){var t=this.j,o=this.getCurrentOrFillEmpty(t);(0,c.moveCursorOutFromSpecialTags)(t,o,["a"]);var n=(0,c.getBlockWrapper)(t,o),i=r.Dom.isTag(n,"li");return!!(i&&!(null==e?void 0:e.shiftKey)||(0,c.checkBR)(t,o,null==e?void 0:e.shiftKey))&&(n||(0,c.hasPreviousBlock)(t,o)||(n=(0,c.wrapText)(t,o)),n&&n!==o?!!(0,c.checkUnsplittableBox)(t,n)&&(i&&this.__isEmptyListLeaf(n)?((0,c.processEmptyLILeaf)(t,n),!1):void(0,c.splitFragment)(t,n)):((0,c.insertParagraph)(t,null,i?"li":t.o.enter),!1))},t.prototype.__isEmptyListLeaf=function(e){var t=this.j.e.fire("enterIsEmptyListLeaf",e);return(0,l.isBoolean)(t)?t:r.Dom.isEmpty(e)},t.prototype.getCurrentOrFillEmpty=function(e){var t=e.s,o=t.current(!1);return o&&o!==e.editor||(o=e.createInside.text(a.INVISIBLE_SPACE),t.insertNode(o,!1,!1),t.select(o)),o},t.prototype.beforeDestruct=function(e){e.e.off("keydown.enter")},n.__decorate([(0,s.watch)(":keydown.enter")],t.prototype,"onEnterKeyDown",null),t}(i.Plugin);t.enter=d,u.pluginSystem.add("enter",d)},94149:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkBR=void 0;var n=o(24263),r=o(9005),i=o(86893);t.checkBR=function(e,t,o){var a=n.Dom.closest(t,["pre","blockquote"],e.editor);if(e.o.enter.toLowerCase()===i.BR.toLowerCase()||o&&!a||!o&&a){var s=e.createInside.element("br");e.s.insertNode(s,!1,!1),n.Dom.findNotEmptySibling(s,!1)||n.Dom.after(s,s.cloneNode());var l=e.s.range;return l.setStartAfter(s),l.collapse(!0),e.s.selectRange(l),(0,r.scrollIntoViewIfNeeded)(s,e.editor,e.ed),!1}return!0}},58921:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkUnsplittableBox=void 0;var n=o(24263);t.checkUnsplittableBox=function(e,t){var o=e.s;if(!n.Dom.canSplitBlock(t)){var r=e.createInside.element("br");return o.insertNode(r,!1,!1),o.setCursorAfter(r),!1}return!0}},70638:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getBlockWrapper=void 0;var n=o(86893),r=o(24263);t.getBlockWrapper=function e(t,o,i){void 0===i&&(i=n.IS_BLOCK);var a=o,s=t.editor;do{if(!a||a===s)break;if(i.test(a.nodeName))return r.Dom.isTag(a,"li")?a:e(t,a.parentNode,/^li$/i)||a;a=a.parentNode}while(a&&a!==s);return null}},50781:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasPreviousBlock=void 0;var n=o(24263);t.hasPreviousBlock=function(e,t){return Boolean(n.Dom.prev(t,(function(e){return n.Dom.isBlock(e)||n.Dom.isImage(e)}),e.editor))}},23217:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(94149),t),n.__exportStar(o(58921),t),n.__exportStar(o(92291),t),n.__exportStar(o(70638),t),n.__exportStar(o(50781),t),n.__exportStar(o(90443),t),n.__exportStar(o(52521),t),n.__exportStar(o(81512),t),n.__exportStar(o(29575),t)},90443:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.insertParagraph=void 0;var n=o(24263),r=o(9005);t.insertParagraph=function(e,t,o,i){var a,s,l=e.s,c=e.createInside,u=c.element(o),d=c.element("br");u.appendChild(d),i&&i.cssText&&u.setAttribute("style",i.cssText),t&&t.isConnected?(n.Dom.before(t,u),n.Dom.safeRemove(t)):l.insertNode(u,!1,!1);var p=l.createRange();return p.setStartBefore("br"!==o.toLowerCase()?d:u),p.collapse(!0),null===(a=l.sel)||void 0===a||a.removeAllRanges(),null===(s=l.sel)||void 0===s||s.addRange(p),(0,r.scrollIntoViewIfNeeded)(u,e.editor,e.ed),u}},29575:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.moveCursorOutFromSpecialTags=void 0;var n=o(24263);t.moveCursorOutFromSpecialTags=function(e,t,o){var r=e.s,i=n.Dom.closest(t,o,e.editor);i&&(r.cursorOnTheRight(i)?r.setCursorAfter(i):r.cursorOnTheLeft(i)&&r.setCursorBefore(i))}},92291:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.processEmptyLILeaf=void 0;var n=o(24263),r=o(54188),i=o(90443);t.processEmptyLILeaf=function(e,t){var o=n.Dom.closest(t,["ol","ul"],e.editor);if(o){var a=o.parentElement,s=n.Dom.isTag(a,"li"),l=s?a:o,c=e.s.createRange();c.setStartAfter(t),c.setEndAfter(o);var u=c.extractContents(),d=e.createInside.fake();n.Dom.after(l,d),n.Dom.safeRemove(t),(0,r.$$)("li",o).length||n.Dom.safeRemove(o);var p=(0,i.insertParagraph)(e,d,s?"li":e.o.enter);u.querySelector("li")&&(s?p.appendChild(u):n.Dom.after(p,u))}}},52521:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.splitFragment=void 0;var n=o(9005),r=o(24263),i=o(90443);t.splitFragment=function(e,t){var o,a=e.s,s=e.o.enter.toLowerCase(),l=r.Dom.isTag(t,"li"),c=t.tagName.toLowerCase()===s||l,u=a.cursorOnTheRight(t),d=a.cursorOnTheLeft(t);if(!c&&(u||d))return o=u?a.setCursorAfter(t):a.setCursorBefore(t),(0,i.insertParagraph)(e,o,s),void(d&&!u&&a.setCursorIn(t,!0));var p=a.splitSelection(t);(0,n.scrollIntoViewIfNeeded)(p,e.editor,e.ed)}},81512:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wrapText=void 0;var n=o(24263);t.wrapText=function(e,t){var o=t;n.Dom.up(o,(function(t){t&&t.hasChildNodes()&&t!==e.editor&&(o=t)}),e.editor);var r=n.Dom.wrapInline(o,e.o.enter,e);if(n.Dom.isEmpty(r)){var i=e.createInside.element("br");r.appendChild(i),e.s.setCursorBefore(i)}return r}},26231:function(){},10135:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.file=void 0;var n=o(93166),r=o(24263),i=o(718),a=o(17332);function s(e){e.registerButton({name:"file",group:"media"})}n.Config.prototype.controls.file={popup:function(e,t,o,n){var a=function(t,o){void 0===o&&(o=""),e.s.insertNode(e.createInside.fromHTML('<a href="'.concat(t,'" title="').concat(o,'">').concat(o||t,"</a>")))},s=null;return t&&(r.Dom.isTag(t,"a")||r.Dom.closest(t,"a",e.editor))&&(s=r.Dom.isTag(t,"a")?t:r.Dom.closest(t,"a",e.editor)),(0,i.FileSelectorWidget)(e,{filebrowser:function(e){e.files&&e.files.forEach((function(t){return a(e.baseurl+t)})),n()},upload:!0,url:function(e,t){s?(s.setAttribute("href",e),s.setAttribute("title",t)):a(e,t),n()}},s,n,!1)},tags:["a"],tooltip:"Insert file"},t.file=s,a.pluginSystem.add("file",s)},66994:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.focus=void 0;var n=o(93166),r=o(64968),i=o(17332);function a(e){e.o.saveSelectionOnBlur&&e.e.on("blur",(function(){e.isEditorMode()&&e.s.save(!0)})).on("focus",(function(){e.s.restore()}));var t=function(){if(e.s.focus(),"end"===e.o.cursorAfterAutofocus){var t=r.Dom.last(e.editor,(function(e){return r.Dom.isText(e)}));t&&e.s.setCursorIn(t,!1)}};e.e.on("afterInit",(function(){e.o.autofocus&&(e.defaultTimeout?e.async.setTimeout(t,300):t())})),e.e.on("afterInit afterAddPlace",(function(){e.e.off(e.editor,"mousedown.autofocus").on(e.editor,"mousedown.autofocus",(function(t){e.isEditorMode()&&t.target&&r.Dom.isBlock(t.target)&&!t.target.childNodes.length&&(e.editor===t.target?e.s.focus():e.s.setCursorIn(t.target))}))}))}n.Config.prototype.autofocus=!1,n.Config.prototype.cursorAfterAutofocus="end",n.Config.prototype.saveSelectionOnBlur=!0,t.focus=a,i.pluginSystem.add("focus",a)},8082:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255),r=o(93166),i=o(24263),a=o(76502),s=o(77904);r.Config.prototype.defaultFontSizePoints="px",s.Icon.set("font",o(84142)).set("fontsize",o(57292)),r.Config.prototype.controls.fontsize={command:"fontsize",data:{cssRule:"font-size"},list:["8","9","10","11","12","14","16","18","24","30","36","48","60","72","96"],exec:function(e,t,o){var n=o.control;return(0,a.memorizeExec)(e,t,{control:n},(function(t){var o;return"fontsize"===(null===(o=n.command)||void 0===o?void 0:o.toLowerCase())?"".concat(t).concat(e.o.defaultFontSizePoints):t}))},childTemplate:function(e,t,o){return"".concat(o).concat(e.o.defaultFontSizePoints)},tooltip:"Font size",isChildActive:function(e,t){var o,n,r=e.s.current(),s=(null===(o=t.data)||void 0===o?void 0:o.cssRule)||"font-size",l=(null===(n=t.data)||void 0===n?void 0:n.normalize)||function(t){return/pt$/i.test(t)&&"pt"===e.o.defaultFontSizePoints?t.replace(/pt$/i,""):t};if(r){var c=i.Dom.closest(r,i.Dom.isElement,e.editor)||e.editor,u=(0,a.css)(c,s);return Boolean(u&&t.args&&l(t.args[0].toString())===l(u.toString()))}return!1}},r.Config.prototype.controls.font=n.__assign(n.__assign({},r.Config.prototype.controls.fontsize),{command:"fontname",list:{"":"Default","helvetica,sans-serif":"Helvetica","arial,helvetica,sans-serif":"Arial","georgia,palatino,serif":"Georgia","impact,charcoal,sans-serif":"Impact","tahoma,geneva,sans-serif":"Tahoma","times new roman,times,serif":"Times New Roman","verdana,geneva,sans-serif":"Verdana"},childTemplate:function(e,t,o){var n=!1;try{n=-1===t.indexOf("dings")&&document.fonts.check("16px ".concat(t),o)}catch(e){}return'<span data-style="'.concat(t,'" style="').concat(n?"font-family: ".concat(t,"!important;"):"",'">').concat(o,"</span>")},data:{cssRule:"font-family",normalize:function(e){return e.toLowerCase().replace(/['"]+/g,"").replace(/[^a-z0-9]+/g,",")}},tooltip:"Font family"})},54798:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.font=void 0;var n=o(40332),r=o(17332);function i(e){e.registerButton({name:"font",group:"font"}).registerButton({name:"fontsize",group:"font"});var t=function(t,o,r){switch(t){case"fontsize":e.s.applyStyle({fontSize:(0,n.normalizeSize)(r)});break;case"fontname":e.s.applyStyle({fontFamily:r})}return e.synchronizeValues(),!1};e.registerCommand("fontsize",t).registerCommand("fontname",t)}o(8082),t.font=i,r.pluginSystem.add("font",i)},12908:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatBlock=void 0;var n=o(93166),r=o(87837),i=o(40332),a=o(17332);function s(e){e.registerButton({name:"paragraph",group:"font"}),e.registerCommand("formatblock",(function(t,o,n){return e.s.applyStyle(void 0,{element:n}),e.synchronizeValues(),!1}))}o(77904).Icon.set("paragraph",o(18019)),n.Config.prototype.controls.paragraph={command:"formatBlock",update:function(e,t){var o=e.control,n=t.s.current();if(n&&t.o.textIcons){var i=(r.Dom.closest(n,r.Dom.isBlock,t.editor)||t.editor).nodeName.toLowerCase(),a=o.list;e&&o.data&&o.data.currentValue!==i&&a&&a[i]&&(t.o.textIcons?e.state.text=i:e.state.icon.name=i,o.data.currentValue=i)}return!1},exec:i.memorizeExec,data:{currentValue:"left"},list:{p:"Normal",h1:"Heading 1",h2:"Heading 2",h3:"Heading 3",h4:"Heading 4",blockquote:"Quote",pre:"Code"},isChildActive:function(e,t){var o=e.s.current();if(o){var n=r.Dom.closest(o,r.Dom.isBlock,e.editor);return Boolean(n&&n!==e.editor&&void 0!==t.args&&n.nodeName.toLowerCase()===t.args[0])}return!1},isActive:function(e,t){var o=e.s.current();if(o){var n=r.Dom.closest(o,r.Dom.isBlock,e.editor);return Boolean(n&&n!==e.editor&&void 0!==t.list&&!r.Dom.isTag(n,"p")&&void 0!==t.list[n.nodeName.toLowerCase()])}return!1},childTemplate:function(e,t,o){return"<".concat(t,' style="margin:0;padding:0"><span>').concat(e.i18n(o),"</span></").concat(t,">")},tooltip:"Insert format block"},t.formatBlock=s,a.pluginSystem.add("formatBlock",s)},15045:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(14320);var n=o(93166),r=o(86893),i=o(77904);n.Config.prototype.fullsize=!1,n.Config.prototype.globalFullSize=!0,i.Icon.set("fullsize",o(45146)).set("shrink",o(53576)),n.Config.prototype.controls.fullsize={exec:function(e){e.toggleFullSize()},update:function(e,t){var o=t.isFullSize?"shrink":"fullsize";e.state.activated=t.isFullSize,t.o.textIcons?e.state.text=o:e.state.icon.name=o},tooltip:"Open in fullsize",mode:r.MODE_SOURCE+r.MODE_WYSIWYG}},65123:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fullsize=void 0,o(14320);var n=o(26911),r=o(77892),i=o(17332);o(15045);var a=new Set;function s(e){e.registerButton({name:"fullsize"});var t=!1,o=0,i=0,s=!1,l=function(){var r=e.container;e.events&&(t?(o=(0,n.css)(r,"height",!0),i=(0,n.css)(r,"width",!0),(0,n.css)(r,{height:e.ow.innerHeight,width:e.ow.innerWidth}),s=!0):s&&(0,n.css)(r,{height:o||"auto",width:i||"auto"}))},c=function(o){var i=e.container,s=e.events;if(i){if(void 0===o&&(o=!i.classList.contains("jodit_fullsize")),e.setMod("fullsize",o),e.o.fullsize=o,t=o,i.classList.toggle("jodit_fullsize",o),e.toolbar&&((0,r.isJoditObject)(e)&&e.toolbarContainer.appendChild(e.toolbar.container),(0,n.css)(e.toolbar.container,"width","auto")),o?a.add(i):a.delete(i),e.o.globalFullSize&&(1===a.size&&o||0===a.size&&!o)){for(var c=i.parentNode;c&&c.nodeType!==Node.DOCUMENT_NODE&&c.nodeType!==Node.DOCUMENT_FRAGMENT_NODE;)c.classList.toggle("jodit_fullsize-box_true",o),c=c.parentNode;l()}s.fire("afterResize")}};e.o.globalFullSize&&e.e.on(e.ow,"resize",l),e.e.on("afterInit afterOpen",(function(){var t;e.toggleFullSize(null===(t=null==e?void 0:e.options)||void 0===t?void 0:t.fullsize)})).on("toggleFullSize",c).on("beforeDestruct",(function(){t&&c(!1)})).on("beforeDestruct",(function(){e.events&&e.e.off(e.ow,"resize",l)}))}t.fullsize=s,i.pluginSystem.add("fullsize",s)},16829:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.commandToHotkeys={removeFormat:["ctrl+shift+m","cmd+shift+m"],insertOrderedList:["ctrl+shift+7","cmd+shift+7"],insertUnorderedList:["ctrl+shift+8, cmd+shift+8"],selectall:["ctrl+a","cmd+a"]}},83228:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hotkeys=void 0;var n=o(20255),r=o(57549),i=o(40332),a=o(86893),s=o(17332);o(16829);var l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.onKeyPress=function(e){var o=t.specialKeys[e.which],n=(e.key||String.fromCharCode(e.which)).toLowerCase(),r=[o||n];return["alt","ctrl","shift","meta"].forEach((function(t){e[t+"Key"]&&o!==t&&r.push(t)})),(0,i.normalizeKeyAliases)(r.join("+"))},t.specialKeys={8:"backspace",9:"tab",10:"return",13:"return",16:"shift",17:"ctrl",18:"alt",19:"pause",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"insert",46:"del",59:";",61:"=",91:"meta",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9",106:"*",107:"+",109:"-",110:".",111:"/",112:"f1",113:"f2",114:"f3",115:"f4",116:"f5",117:"f6",118:"f7",119:"f8",120:"f9",121:"f10",122:"f11",123:"f12",144:"numlock",145:"scroll",173:"-",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},t}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;(0,i.keys)(e.o.commandToHotkeys,!1).forEach((function(t){var o=e.o.commandToHotkeys[t];o&&((0,i.isArray)(o)||(0,i.isString)(o))&&e.registerHotkeyToCommand(o,t)}));var o=!1;e.e.off(".hotkeys").on([e.ow,e.ew],"keydown.hotkeys",(function(e){if(e.key===a.KEY_ESC)return t.j.e.fire("escape",e)})).on("keydown.hotkeys",(function(n){var r=t.onKeyPress(n),i={shouldStop:!0};if(!1===t.j.e.fire(r+".hotkey",n.type,i)){if(i.shouldStop)return o=!0,e.e.stopPropagation("keydown"),!1;n.preventDefault()}}),{top:!0}).on("keyup.hotkeys",(function(){if(o)return o=!1,e.e.stopPropagation("keyup"),!1}),{top:!0})},t.prototype.beforeDestruct=function(e){e.events&&e.e.off(".hotkeys")},t}(r.Plugin);t.hotkeys=l,s.pluginSystem.add("hotkeys",l)},43889:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hr=void 0;var n=o(93166),r=o(64968),i=o(17332);function a(e){e.registerButton({name:"hr",group:"insert"}),e.registerCommand("insertHorizontalRule",(function(){var t=e.createInside.element("hr");e.s.insertNode(t,!1,!1);var o=r.Dom.closest(t.parentElement,r.Dom.isBlock,e.editor);o&&r.Dom.isEmpty(o)&&o!==e.editor&&(r.Dom.after(o,t),r.Dom.safeRemove(o));var n=r.Dom.next(t,r.Dom.isBlock,e.editor,!1);return n||(n=e.createInside.element(e.o.enter),r.Dom.after(t,n)),e.s.setCursorIn(n),!1}))}o(77904).Icon.set("hr",o(14655)),n.Config.prototype.controls.hr={command:"insertHorizontalRule",tags:["hr"],tooltip:"Insert Horizontal Line"},t.hr=a,i.pluginSystem.add("hr",a)},2509:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.iframeBaseUrl="",n.Config.prototype.iframeTitle="Jodit Editor",n.Config.prototype.iframeDoctype="<!DOCTYPE html>",n.Config.prototype.iframeDefaultSrc="about:blank",n.Config.prototype.iframeStyle='html{margin:0;padding:0;min-height: 100%;}body{box-sizing:border-box;font-size:13px;line-height:1.6;padding:10px;margin:0;background:transparent;color:#000;position:relative;z-index:2;user-select:auto;margin:0px;overflow:auto;outline:none;}table{width:100%;border:none;border-collapse:collapse;empty-cells: show;max-width: 100%;}th,td{padding: 2px 5px;border:1px solid #ccc;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}p{margin-top:0;}.jodit_editor .jodit_iframe_wrapper{display: block;clear: both;user-select: none;position: relative;}.jodit_editor .jodit_iframe_wrapper:after {position:absolute;content:"";z-index:1;top:0;left:0;right: 0;bottom: 0;cursor: pointer;display: block;background: rgba(0, 0, 0, 0);} .jodit_disabled{user-select: none;-o-user-select: none;-moz-user-select: none;-khtml-user-select: none;-webkit-user-select: none;-ms-user-select: none}',n.Config.prototype.iframeCSSLinks=[]},93300:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.iframe=void 0;var n=o(40332),r=o(40332),i=o(86893),a=o(17332);function s(e){var t=e.options;e.e.on("afterSetMode",(function(){e.isEditorMode()&&e.s.focus()})).on("generateDocumentStructure.iframe",(function(e,o){var r=e||o.iframe.contentWindow.document;if(r.open(),r.write(t.iframeDoctype+'<html dir="'.concat(t.direction,'" class="jodit" lang="').concat((0,n.defaultLanguage)(t.language),'">')+"<head>"+"<title>".concat(t.iframeTitle,"</title>")+(t.iframeBaseUrl?'<base href="'.concat(t.iframeBaseUrl,'"/>'):"")+'</head><body class="jodit-wysiwyg"></body></html>'),r.close(),t.iframeCSSLinks&&t.iframeCSSLinks.forEach((function(e){var t=r.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("href",e),r.head&&r.head.appendChild(t)})),t.iframeStyle){var i=r.createElement("style");i.innerHTML=t.iframeStyle,r.head&&r.head.appendChild(i)}})).on("createEditor",(function(){if(t.iframe){var o=e.c.element("iframe");o.style.display="block",o.src="about:blank",o.className="jodit-wysiwyg_iframe",o.setAttribute("allowtransparency","true"),o.setAttribute("tabindex",t.tabIndex.toString()),o.setAttribute("frameborder","0"),e.workplace.appendChild(o),e.iframe=o;var a=e.e.fire("generateDocumentStructure.iframe",null,e);return(0,n.callPromise)(a,(function(){if(!e.iframe)return!1;var o=e.iframe.contentWindow.document;e.editorWindow=e.iframe.contentWindow;var a=function(){(0,n.attr)(o.body,"contenteditable",e.getMode()!==i.MODE_SOURCE&&!e.getReadOnly()||null)},s=function(e){var t=/<body.*<\/body>/im,o="{%%BODY%%}",n=t.exec(e);return n&&(e=e.replace(t,o).replace(/<span([^>]*?)>(.*?)<\/span>/gim,"").replace(/&lt;span([^&]*?)&gt;(.*?)&lt;\/span&gt;/gim,"").replace(o,n[0].replace(/(<body[^>]+?)min-height["'\s]*:[\s"']*[0-9]+(px|%)/im,"$1").replace(/(<body[^>]+?)([\s]*["'])?contenteditable["'\s]*=[\s"']*true["']?/im,"$1").replace(/<(style|script|span)[^>]+jodit[^>]+>.*?<\/\1>/g,"")).replace(/(class\s*=\s*)(['"])([^"']*)(jodit-wysiwyg|jodit)([^"']*\2)/g,"$1$2$3$5").replace(/(<[^<]+?)\sclass="[\s]*"/gim,"$1").replace(/(<[^<]+?)\sstyle="[\s;]*"/gim,"$1").replace(/(<[^<]+?)\sdir="[\s]*"/gim,"$1")),e};if(t.editHTMLDocumentMode){var l=e.element.tagName;if("TEXTAREA"!==l&&"INPUT"!==l)throw(0,r.error)("If enable `editHTMLDocumentMode` - source element should be INPUT or TEXTAREA");e.e.on("beforeGetNativeEditorValue",(function(){return s(e.o.iframeDoctype+o.documentElement.outerHTML)})).on("beforeSetNativeEditorValue",(function(t){var n=t.value;return!e.isLocked&&(/<(html|body)/i.test(n)?s(o.documentElement.outerHTML)!==s(n)&&(o.open(),o.write(e.o.iframeDoctype+s(n)),o.close(),e.editor=o.body,e.e.fire("safeHTML",e.editor),a(),e.e.fire("prepareWYSIWYGEditor"),e.e.stopPropagation("beforeSetNativeEditorValue")):o.body.innerHTML=n,!0)}),{top:!0})}if(e.editor=o.body,e.e.on("afterSetMode afterInit afterAddPlace",a),"auto"===t.height){o.documentElement&&(o.documentElement.style.overflowY="hidden");var c=e.async.throttle((function(){if(e.editor&&e.iframe&&"auto"===t.height){var o=e.ew.getComputedStyle(e.editor),r=parseInt(o.marginTop||"0",10)+parseInt(o.marginBottom||"0",10);(0,n.css)(e.iframe,"height",e.editor.offsetHeight+r)}}),e.defaultTimeout/2);if(e.e.on("change afterInit afterSetMode resize",c).on([e.iframe,e.ew,o.documentElement],"load",c).on(o,"readystatechange DOMContentLoaded",c),"function"==typeof ResizeObserver){var u=new ResizeObserver(c);u.observe(o.body),e.e.on("beforeDestruct",(function(){u.unobserve(o.body)}))}}return o.documentElement&&e.e.on(o.documentElement,"mousedown touchend",(function(){e.s.isFocused()||(e.s.focus(),e.editor===o.body&&e.s.setCursorIn(o.body))})).on(e.ew,"mousedown touchstart keydown keyup touchend click mouseup mousemove scroll",(function(t){var o;null===(o=e.events)||void 0===o||o.fire(e.ow,t)})),!1}))}}))}o(2509),t.iframe=s,a.pluginSystem.add("iframe",s)},18226:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.imageProcessor={replaceDataURIToBlobIdInView:!0}},92575:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.imageProcessor=void 0;var n=o(20255),r=o(40332),i=o(57549),a=o(43441),s=o(86893),l=o(17332);o(18226);var c="__jodit_imageprocessor_binded",u="__jodit_imageprocessor_bindedblob-id",d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.afterInit=function(e){},t.prototype.beforeDestruct=function(e){var t,o,r=e.buffer.get(u);if(r){var i=Object.keys(r);try{for(var a=n.__values(i),s=a.next();!s.done;s=a.next())URL.revokeObjectURL(s.value)}catch(e){t={error:e}}finally{try{s&&!s.done&&(o=a.return)&&o.call(a)}finally{if(t)throw t.error}}e.buffer.delete(u)}},t.prototype.onAfterGetValueFromEditor=function(e,t){if(t!==s.SOURCE_CONSUMER)return this.onBeforeSetElementValue(e)},t.prototype.onBeforeSetElementValue=function(e){var t,o,r=this.jodit;if(r.o.imageProcessor.replaceDataURIToBlobIdInView){var i=r.buffer.get(u);if(i){var a=Object.keys(i);try{for(var s=n.__values(a),l=s.next();!l.done;l=s.next())for(var c=l.value;e.value.includes(c);)e.value=e.value.replace(c,i[c])}catch(e){t={error:e}}finally{try{l&&!l.done&&(o=s.return)&&o.call(s)}finally{if(t)throw t.error}}}}},t.prototype.afterChange=function(e){return n.__awaiter(this,void 0,Promise,(function(){var e;return n.__generator(this,(function(t){return(e=this.jodit).editor?((0,r.$$)("img",e.editor).forEach((function(t){(0,r.dataBind)(t,c)||((0,r.dataBind)(t,c,!0),t.complete||e.e.on(t,"load",(function o(){var n;!e.isInDestruct&&(null===(n=e.e)||void 0===n||n.fire("resize")),e.e.off(t,"load",o)})),t.src&&/^data:/.test(t.src)&&function(e,t){if(e.o.imageProcessor.replaceDataURIToBlobIdInView&&"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof URL){var o=t.src,n=function(e){for(var t=atob(e.split(",")[1]),o=e.split(",")[0].split(":")[1].split(";")[0],n=new ArrayBuffer(t.length),r=new Uint8Array(n),i=0;t.length>i;i++)r[i]=t.charCodeAt(i);return new Blob([n],{type:o})}(o);t.src=URL.createObjectURL(n),e.e.fire("internalUpdate");var r=e.buffer.get(u)||{};r[t.src]=o,e.buffer.set(u,r)}}(e,t),e.e.on(t,"mousedown touchstart",(function(){e.s.select(t)})))})),[2]):[2]}))}))},n.__decorate([(0,a.watch)(":afterGetValueFromEditor")],t.prototype,"onAfterGetValueFromEditor",null),n.__decorate([(0,a.watch)(":beforeSetElementValue")],t.prototype,"onBeforeSetElementValue",null),n.__decorate([(0,a.watch)([":change",":afterInit",":changePlace"]),(0,a.debounce)()],t.prototype,"afterChange",null),t}(i.Plugin);t.imageProcessor=d,l.pluginSystem.add("imageProcessor",d)},1601:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.image={dialogWidth:600,openOnDblClick:!0,editSrc:!0,useImageEditor:!0,editTitle:!0,editAlt:!0,editLink:!0,editSize:!0,editBorderRadius:!0,editMargins:!0,editClass:!0,availableClasses:[],editStyle:!0,editId:!0,editAlign:!0,showPreview:!0,selectImageAfterClose:!0}},15747:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.imageProperties=void 0;var n=o(20255);o(9947);var r=o(87837),i=o(40332),a=o(718),s=o(96516),l=o(43441),c=o(35503),u=o(17332),d=o(49391),p=o(27506),f=o(50109);o(1601);var h=function(e){return e=(0,i.trim)(e),/^[0-9]+$/.test(e)?e+"px":e},m=function(e){return/^[-+]?[0-9.]+px$/.test(e.toString())?parseFloat(e.toString()):e},v=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={image:new Image,get ratio(){return this.image.naturalWidth/this.image.naturalHeight||1},sizeIsLocked:!0,marginIsLocked:!0},t.activeTabState={__activeTab:"Image"},t}return n.__extends(t,e),t.prototype.onChangeMarginIsLocked=function(){var e=this;if(this.form){var t=(0,i.refs)(this.form),o=t.lockMargin;[t.marginRight,t.marginBottom,t.marginLeft].forEach((function(t){(0,i.attr)(t,"disabled",e.state.marginIsLocked||null)})),o.innerHTML=r.Icon.get(this.state.marginIsLocked?"lock":"unlock")}},t.prototype.onChangeSizeIsLocked=function(){if(this.form){var e=(0,i.refs)(this.form),t=e.lockSize,o=e.imageWidth;t.innerHTML=r.Icon.get(this.state.sizeIsLocked?"lock":"unlock"),t.classList.remove("jodit-properties__lock"),t.classList.remove("jodit-properties__unlock"),t.classList.add(this.state.sizeIsLocked?"jodit-properties__lock":"jodit-properties__unlock"),this.j.e.fire(o,"change")}},t.prototype.open=function(){return this.makeForm(),this.activeTabState.__activeTab="Image",this.j.e.fire("hidePopup"),(0,i.markOwner)(this.j,this.dialog.container),this.state.marginIsLocked=!0,this.state.sizeIsLocked=!0,this.onChangeMarginIsLocked(),this.onChangeSizeIsLocked(),this.updateValues(),this.dialog.open().setModal(!0).setPosition(),!1},t.prototype.makeForm=function(){var e=this;if(!this.dialog){this.dialog=this.j.dlg({minWidth:Math.min(400,screen.width),minHeight:590,buttons:["fullsize","dialog.close"]});var t=this.j,o=t.o,n=t.i18n.bind(t),r={check:(0,s.Button)(t,"ok","Apply","primary"),remove:(0,s.Button)(t,"bin","Delete")};t.e.on(this.dialog,"afterClose",(function(){e.state.image.parentNode&&o.image.selectImageAfterClose&&t.s.select(e.state.image)})),r.remove.onAction((function(){t.s.removeNode(e.state.image),e.dialog.close()}));var l=this.dialog;l.setHeader(n("Image properties"));var c=(0,d.form)(t);this.form=c,l.setContent(c);var u=(0,i.refs)(this.form).tabsBox;u&&u.appendChild((0,a.TabsWidget)(t,[{name:"Image",content:(0,p.mainTab)(t)},{name:"Advanced",content:(0,f.positionTab)(t)}],this.activeTabState)),r.check.onAction(this.onApply);var h=(0,i.refs)(this.form),m=h.editImage;t.e.on(h.changeImage,"click",this.openImagePopup),o.image.useImageEditor&&t.e.on(m,"click",this.openImageEditor);var v=(0,i.refs)(c),g=v.lockSize,y=v.lockMargin,_=v.imageWidth,b=v.imageHeight;g&&t.e.on(g,"click",(function(){e.state.sizeIsLocked=!e.state.sizeIsLocked})),t.e.on(y,"click",(function(t){e.state.marginIsLocked=!e.state.marginIsLocked,t.preventDefault()}));var S=function(t){if((0,i.isNumeric)(_.value)&&(0,i.isNumeric)(b.value)){var o=parseFloat(_.value),n=parseFloat(b.value);t.target===_?b.value=Math.round(o/e.state.ratio).toString():_.value=Math.round(n*e.state.ratio).toString()}};t.e.on([_,b],"change keydown mousedown paste",(function(o){e.state.sizeIsLocked&&t.async.setTimeout(S.bind(e,o),{timeout:t.defaultTimeout,label:"image-properties-changeSize"})})),l.setFooter([r.remove,r.check]),l.setSize(this.j.o.image.dialogWidth)}},t.prototype.updateValues=function(){var e,t,o=this,n=this.j.o,a=this.state.image,s=(0,i.refs)(this.form),l=s.marginTop,c=s.marginRight,u=s.marginBottom,d=s.marginLeft,p=s.imageSrc,f=s.id,h=s.classes,v=s.align,g=s.style,y=s.imageTitle,_=s.imageAlt,b=s.borderRadius,S=s.imageLink,w=s.imageWidth,C=s.imageHeight,j=s.imageLinkOpenInNewTab,E=s.imageViewSrc,k=s.lockSize;s.lockMargin.checked=o.state.marginIsLocked,k.checked=o.state.sizeIsLocked,p.value=(0,i.attr)(a,"src")||"",E&&(0,i.attr)(E,"src",(0,i.attr)(a,"src")||""),function(){y.value=(0,i.attr)(a,"title")||"",_.value=(0,i.attr)(a,"alt")||"";var e=r.Dom.closest(a,"a",o.j.editor);e?(S.value=(0,i.attr)(e,"href")||"",j.checked="_blank"===(0,i.attr)(e,"target")):(S.value="",j.checked=!1)}(),e=(0,i.attr)(a,"width")||(0,i.css)(a,"width",!0)||!1,t=(0,i.attr)(a,"height")||(0,i.css)(a,"height",!0)||!1,w.value=!1!==e?m(e).toString():a.offsetWidth.toString(),C.value=!1!==t?m(t).toString():a.offsetHeight.toString(),o.state.sizeIsLocked=function(){if(!(0,i.isNumeric)(w.value)||!(0,i.isNumeric)(C.value))return!1;var e=parseFloat(w.value),t=parseFloat(C.value);return 1>Math.abs(e-t*o.state.ratio)}(),function(){if(n.image.editMargins){var e=!0,t=!1;[l,c,u,d].forEach((function(o){var n=(0,i.attr)(o,"data-ref")||"",r=a.style.getPropertyValue((0,i.kebabCase)(n));if(!r)return t=!0,void(o.value="");/^[0-9]+(px)?$/.test(r)&&(r=parseInt(r,10)),o.value=r.toString()||"",(t&&o.value||e&&"marginTop"!==n&&o.value!==l.value)&&(e=!1)})),o.state.marginIsLocked=e}}(),h.value=((0,i.attr)(a,"class")||"").replace(/jodit_focused_image[\s]*/,""),f.value=(0,i.attr)(a,"id")||"",b.value=(parseInt(a.style.borderRadius||"0",10)||"0").toString(),a.style.cssFloat&&-1!==["left","right"].indexOf(a.style.cssFloat.toLowerCase())?v.value=(0,i.css)(a,"float"):"block"===(0,i.css)(a,"display")&&"auto"===a.style.marginLeft&&"auto"===a.style.marginRight&&(v.value="center"),g.value=(0,i.attr)(a,"style")||""},t.prototype.onApply=function(){var e=(0,i.refs)(this.form),t=e.imageSrc,o=e.borderRadius,n=e.imageTitle,a=e.imageAlt,s=e.imageLink,l=e.imageWidth,c=e.imageHeight,u=e.marginTop,d=e.marginRight,p=e.marginBottom,f=e.marginLeft,m=e.imageLinkOpenInNewTab,v=e.align,g=e.classes,y=e.id,_=this.j.o,b=this.state.image;if(_.image.editStyle&&(0,i.attr)(b,"style",e.style.value||null),!t.value)return r.Dom.safeRemove(b),void this.dialog.close();(0,i.attr)(b,"src",t.value),b.style.borderRadius="0"!==o.value&&/^[0-9]+$/.test(o.value)?o.value+"px":"",(0,i.attr)(b,"title",n.value||null),(0,i.attr)(b,"alt",a.value||null);var S=r.Dom.closest(b,"a",this.j.editor);if(s.value?(S||(S=r.Dom.wrap(b,"a",this.j.createInside)),(0,i.attr)(S,"href",s.value),(0,i.attr)(S,"target",m.checked?"_blank":null)):S&&S.parentNode&&S.parentNode.replaceChild(b,S),l.value!==b.offsetWidth.toString()||c.value!==b.offsetHeight.toString()){var w=(0,i.trim)(l.value)?h(l.value):null,C=(0,i.trim)(c.value)?h(c.value):null;(0,i.css)(b,{width:w,height:C}),(0,i.attr)(b,"width",(0,i.attr)(b,"width")?w:null),(0,i.attr)(b,"height",(0,i.attr)(b,"height")?C:null)}var j=[u,d,p,f];_.image.editMargins&&(this.state.marginIsLocked?(0,i.css)(b,"margin",h(u.value)):j.forEach((function(e){var t=(0,i.attr)(e,"data-ref")||"";(0,i.css)(b,t,h(e.value))}))),_.image.editClass&&(0,i.attr)(b,"class",g.value||null),_.image.editId&&(0,i.attr)(b,"id",y.value||null),_.image.editAlign&&(0,i.hAlignElement)(b,v.value),this.j.synchronizeValues(),this.dialog.close()},t.prototype.openImageEditor=function(){var e=this,t=(0,i.attr)(this.state.image,"src")||"",o=this.j.c.element("a"),n=function(){o.host===location.host||e.j.confirm("You can only edit your own images. Download this image on the host?",(function(t){t&&e.j.uploader&&e.j.uploader.uploadRemoteImage(o.href.toString(),(function(t){e.j.alert("The image has been successfully uploaded to the host!",(function(){(0,i.isString)(t.newfilename)&&((0,i.attr)(e.state.image,"src",t.baseurl+t.newfilename),e.updateValues())}))}),(function(t){e.j.alert("There was an error loading %s",t.message)}))}))};o.href=t,this.j.filebrowser.dataProvider.getPathByUrl(o.href.toString()).then((function(n){c.openImageEditor.call(e.j.filebrowser,o.href,n.name,n.path,n.source,(function(){var o=(new Date).getTime();(0,i.attr)(e.state.image,"src",t+(-1!==t.indexOf("?")?"":"?")+"&_tmp="+o.toString()),e.updateValues()}),(function(t){e.j.alert(t.message)}))})).catch((function(t){e.j.alert(t.message,n)}))},t.prototype.openImagePopup=function(e){var t=this,o=new r.Popup(this.j),n=(0,i.refs)(this.form).changeImage;o.setZIndex(this.dialog.getZIndex()+1),o.setContent((0,a.FileSelectorWidget)(this.j,{upload:function(e){e.files&&e.files.length&&(0,i.attr)(t.state.image,"src",e.baseurl+e.files[0]),t.updateValues(),o.close()},filebrowser:function(e){e&&(0,i.isArray)(e.files)&&e.files.length&&((0,i.attr)(t.state.image,"src",e.files[0]),o.close(),t.updateValues())}},this.state.image,o.close)).open((function(){return(0,i.position)(n)})),e.stopPropagation()},t.prototype.afterInit=function(e){var t=this,o=this;e.e.on("afterConstructor changePlace",(function(){e.e.off(e.editor,".imageproperties").on(e.editor,"dblclick.imageproperties",(function(n){var i=n.target;if(r.Dom.isTag(i,"img"))if(e.o.image.openOnDblClick){if(!1===t.j.e.fire("openOnDblClick",i))return;o.state.image=i,e.o.readonly||(n.stopImmediatePropagation(),n.preventDefault(),o.open())}else n.stopImmediatePropagation(),e.s.select(i)}))})).on("openImageProperties.imageproperties",(function(e){t.state.image=e,t.open()}))},t.prototype.beforeDestruct=function(e){this.dialog&&this.dialog.destruct(),e.e.off(e.editor,".imageproperties").off(".imageproperties")},n.__decorate([(0,l.watch)("state.marginIsLocked")],t.prototype,"onChangeMarginIsLocked",null),n.__decorate([(0,l.watch)("state.sizeIsLocked")],t.prototype,"onChangeSizeIsLocked",null),n.__decorate([l.autobind],t.prototype,"onApply",null),n.__decorate([l.autobind],t.prototype,"openImageEditor",null),n.__decorate([l.autobind],t.prototype,"openImagePopup",null),t}(r.Plugin);t.imageProperties=v,u.pluginSystem.add("imageProperties",v)},49391:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.form=void 0;var n=o(77904);t.form=function(e){var t=e.o.image,o=t.showPreview,r=t.editSize,i=n.Icon.get.bind(n.Icon);return e.c.fromHTML('<form class="jodit-properties">\n\t\t<div class="jodit-grid jodit-grid_xs-column">\n\t\t\t<div class="jodit_col-lg-2-5 jodit_col-xs-5-5">\n\t\t\t\t<div class="jodit-properties_view_box">\n\t\t\t\t\t<div style="'.concat(o?"":"display:none",'" class="jodit-properties_image_view">\n\t\t\t\t\t\t<img data-ref="imageViewSrc" src="" alt=""/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style="').concat(r?"":"display:none",'" class="jodit-form__group jodit-properties_image_sizes">\n\t\t\t\t\t\t<input data-ref="imageWidth" type="text" class="jodit-input"/>\n\t\t\t\t\t\t<a data-ref="lockSize" class="jodit-properties__lock">').concat(i("lock"),'</a>\n\t\t\t\t\t\t<input data-ref="imageHeight" type="text" class="imageHeight jodit-input"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div data-ref="tabsBox" class="jodit_col-lg-3-5 jodit_col-xs-5-5"></div>\n\t\t</div>\n\t</form>'))}},27506:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mainTab=void 0;var n=o(77904);t.mainTab=function(e){var t=e.o,o=e.i18n.bind(e),r=n.Icon.get.bind(n.Icon),i=t.filebrowser.ajax.url||t.uploader.url,a=t.image.useImageEditor;return e.c.fromHTML('<div style="'.concat(t.image.editSrc?"":"display:none",'" class="jodit-form__group">\n\t\t\t<label>').concat(o("Src"),'</label>\n\t\t\t<div class="jodit-input_group">\n\t\t\t\t<input data-ref="imageSrc" class="jodit-input" type="text"/>\n\t\t\t\t<div\n\t\t\t\t\tclass="jodit-input_group-buttons"\n\t\t\t\t\tstyle="').concat(i?"":"display: none",'"\n\t\t\t\t>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tdata-ref="changeImage"\n\t\t\t\t\t\t\tclass="jodit-button"\n\t\t\t\t\t\t>').concat(r("image"),'</a>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tdata-ref="editImage"\n\t\t\t\t\t\t\tclass="jodit-button"\n\t\t\t\t\t\t\tstyle="').concat(a?"":"display: none",'"\n\t\t\t\t\t\t>').concat(r("crop"),'</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div style="').concat(t.image.editTitle?"":"display:none",'" class="jodit-form__group">\n\t\t\t<label>').concat(o("Title"),'</label>\n\t\t\t<input data-ref="imageTitle" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div style="').concat(t.image.editAlt?"":"display:none",'" class="jodit-form__group">\n\t\t\t<label>').concat(o("Alternative"),'</label>\n\t\t\t<input data-ref="imageAlt" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div style="').concat(t.image.editLink?"":"display:none",'" class="jodit-form__group">\n\t\t\t<label>').concat(o("Link"),'</label>\n\t\t\t<input data-ref="imageLink" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div style="').concat(t.image.editLink?"":"display:none",'" class="jodit-form__group">\n\t\t\t<label class="jodit_vertical_middle">\n\t\t\t\t<input data-ref="imageLinkOpenInNewTab" type="checkbox" class="jodit-checkbox"/>\n\t\t\t\t<span>').concat(o("Open link in new tab"),"</span>\n\t\t\t</label>\n\t\t</div>"))}},50109:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.positionTab=void 0;var n=o(77904);t.positionTab=function(e){var t=e.o,o=e.i18n.bind(e),r=n.Icon.get.bind(n.Icon),i=[];return t.image.availableClasses.length>0?(i.push('<select data-ref="classes" class="jodit-input jodit-select">'),t.image.availableClasses.forEach((function(e){i.push("string"==typeof e?'<option value="'.concat(e,'">').concat(e,"</option>"):'<option value="'.concat(e[0],'">').concat(e[1],"</option>"))})),i.push("</select>")):i.push('<input data-ref="classes" type="text" class="jodit-input"/>'),e.c.fromHTML('<div style="'.concat(t.image.editMargins?"":"display:none",'" class="jodit-form__group">\n\t\t\t<label>').concat(o("Margins"),'</label>\n\t\t\t<div class="jodit-grid jodit_vertical_middle">\n\t\t\t\t<input class="jodit_col-lg-1-5 jodit-input" data-ref="marginTop" type="text" placeholder="').concat(o("top"),'"/>\n\t\t\t\t<a style="text-align: center;" data-ref="lockMargin" class="jodit-properties__lock jodit_col-lg-1-5">').concat(r("lock"),'</a>\n\t\t\t\t<input disabled="true" class="jodit_col-lg-1-5 jodit-input" data-ref="marginRight" type="text" placeholder="').concat(o("right"),'"/>\n\t\t\t\t<input disabled="true" class="jodit_col-lg-1-5 jodit-input" data-ref="marginBottom" type="text" placeholder="').concat(o("bottom"),'"/>\n\t\t\t\t<input disabled="true" class="jodit_col-lg-1-5 jodit-input" data-ref="marginLeft" type="text" placeholder="').concat(o("left"),'"/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tstyle="').concat(t.image.editAlign?"":"display:none",'"\n\t\t\tclass="jodit-form__group"\n\t\t>\n\t\t\t<label>').concat(o("Align"),'</label>\n\t\t\t<select data-ref="align" class="jodit-select">\n\t\t\t\t<option value="">').concat(o("--Not Set--"),'</option>\n\t\t\t\t<option value="left">').concat(o("Left"),'</option>\n\t\t\t\t<option value="center">').concat(o("Center"),'</option>\n\t\t\t\t<option value="right">').concat(o("Right"),'</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div style="').concat(t.image.editStyle?"":"display:none",'" class="jodit-form__group">\n\t\t\t<label>').concat(o("Styles"),'</label>\n\t\t\t<input data-ref="style" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div style="').concat(t.image.editClass?"":"display:none",'" class="jodit-form__group">\n\t\t\t<label>').concat(o("Classes"),"</label>\n\t\t\t").concat(i.join(""),'\n\t\t</div>\n\t\t<div style="').concat(t.image.editId?"":"display:none",'" class="jodit-form__group">\n\t\t\t<label>Id</label>\n\t\t\t<input data-ref="id" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div\n\t\t\tstyle="').concat(t.image.editBorderRadius?"":"display:none",'"\n\t\t\tclass="jodit-form__group"\n\t\t>\n\t\t\t<label>').concat(o("Border radius"),'</label>\n\t\t\t\t<input data-ref="borderRadius" type="number" class="jodit-input"/>\n\t\t</div>'))}},67547:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.image=void 0;var n=o(20255),r=o(64968),i=o(40332),a=o(718),s=o(93166),l=o(17332);function c(e){e.registerButton({name:"image",group:"media"})}o(77904).Icon.set("image",o(53477)),s.Config.prototype.controls.image={popup:function(e,t,o,s){var l=null;return t&&!r.Dom.isText(t)&&r.Dom.isHTMLElement(t)&&(r.Dom.isTag(t,"img")||(0,i.$$)("img",t).length)&&(l=r.Dom.isTag(t,"img")?t:(0,i.$$)("img",t)[0]),e.s.save(),(0,a.FileSelectorWidget)(e,{filebrowser:function(t){e.s.restore(),t.files&&t.files.forEach((function(o){return e.s.insertImage(t.baseurl+o,null,e.o.imageDefaultWidth)})),s()},upload:!0,url:function(t,o){return n.__awaiter(void 0,void 0,void 0,(function(){var r;return n.__generator(this,(function(n){switch(n.label){case 0:return e.s.restore(),/^[a-z\d_-]+(\.[a-z\d_-]+)+/i.test(t)&&(t="//"+t),(r=l||e.createInside.element("img")).setAttribute("src",t),r.setAttribute("alt",o),l?[3,2]:[4,e.s.insertImage(r,null,e.o.imageDefaultWidth)];case 1:n.sent(),n.label=2;case 2:return s(),[2]}}))}))}},l,s)},tags:["img"],tooltip:"Insert Image"},t.image=c,l.pluginSystem.add("image",c)},2916:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(64968),i=o(77904),a=o(26011);i.Icon.set("indent",o(90053)).set("outdent",o(72230)),n.Config.prototype.controls.indent={tooltip:"Increase Indent"},n.Config.prototype.controls.outdent={isDisabled:function(e){var t=e.s.current();if(t){var o=r.Dom.closest(t,r.Dom.isBlock,e.editor);if(o){var n=(0,a.getKey)(e.o.direction,o);return!o.style[n]||0>=parseInt(o.style[n],10)}}return!0},tooltip:"Decrease Indent"},n.Config.prototype.indentMargin=10},26011:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getKey=void 0;var n=o(24263);t.getKey=function(e,t){return"".concat(n.Dom.isCell(t)?"padding":"margin").concat("rtl"===e?"Right":"Left")}},71838:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.indent=void 0;var n=o(86893),r=o(64968),i=o(40332),a=o(17332);o(2916);var s=o(26011);function l(e){e.registerButton({name:"indent",group:"indent"}).registerButton({name:"outdent",group:"indent"});var t=function(t){var o=[];return e.s.eachSelection((function(a){e.s.save();var l=!!a&&r.Dom.up(a,r.Dom.isBlock,e.editor),c=e.o.enter;if(!l&&a&&(l=r.Dom.wrapInline(a,c!==n.BR?c:n.PARAGRAPH,e)),!l)return e.s.restore(),!1;var u=o.includes(l);if(l&&!u){var d=(0,s.getKey)(e.o.direction,l);o.push(l);var p=l.style[d]?parseInt(l.style[d],10):0;l.style[d]=(p+=e.o.indentMargin*("outdent"===t?-1:1))>0?p+"px":"",(0,i.attr)(l,"style")||(0,i.attr)(l,"style",null)}e.s.restore()})),e.synchronizeValues(),!1};e.registerCommand("indent",{exec:t,hotkeys:["ctrl+]","cmd+]"]}),e.registerCommand("outdent",{exec:t,hotkeys:["ctrl+[","cmd+["]})}t.indent=l,a.pluginSystem.add("indent",l)},70022:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(55692),o(66031),o(91241),o(87565),o(60894),o(90302),o(92138),o(88412),o(79308),o(19268),o(30598),o(33122),o(10135),o(66994),o(54798),o(12908),o(65123),o(83228),o(43889),o(93300),o(67547),o(92575),o(15747),o(71838),o(54752),o(54452),o(46324),o(27738),o(61421),o(27582),o(76303),o(19806),o(52598),o(19483),o(15428),o(47224),o(83211),o(88297),o(72930),o(51197),o(2327),o(47608),o(90523),o(69257),o(14889),o(95323),o(37458),o(71003),o(86030),o(17002),o(1557),o(82808),o(48560),o(32246),o(45842),o(23308),o(19889),o(20728),o(96899),o(18238)},35387:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(77904);n.Config.prototype.toolbarInline=!0,n.Config.prototype.toolbarInlineForSelection=!1,n.Config.prototype.toolbarInlineDisableFor=[],n.Config.prototype.toolbarInlineDisabledButtons=["source"],r.Icon.set("addcolumn",o(78321)).set("addrow",o(77654)).set("merge",o(43371)).set("th",o(52242)).set("splitg",o(44563)).set("splitv",o(53183)).set("th-list",o(18548)),n.Config.prototype.popup={a:o(27487).Z,img:o(97425).default,cells:o(59500).Z,toolbar:o(55350).Z,jodit:o(66686).Z,iframe:o(66686).Z,"jodit-media":o(66686).Z,selection:["bold","underline","italic","ul","ol","\n","outdent","indent","fontsize","brush","cut","\n","paragraph","link","align","dots"]}},27487:function(e,t,o){"use strict";var n=o(76502);t.Z=[{name:"eye",tooltip:"Open link",exec:function(e,t){var o=(0,n.attr)(t,"href");t&&o&&e.ow.open(o)}},{name:"link",tooltip:"Edit link",icon:"pencil"},"unlink","brush","file"]},59500:function(e,t,o){"use strict";var n=o(10172),r=o(26911),i=o(718),a=function(e){return e.args&&(0,n.isString)(e.args[0])?e.args[0].toLowerCase():""};t.Z=[{name:"brush",popup:function(e,t,o,a){if((0,n.isJoditObject)(e)){var s=e.getInstance("Table",e.o).getAllSelectedCells();if(!s.length)return!1;var l=function(t){return(0,i.ColorPickerWidget)(e,(function(o){s.forEach((function(e){(0,r.css)(e,t,o)})),e.lock(),e.synchronizeValues(),a(),e.unlock()}),(0,r.css)(s[0],t))};return(0,i.TabsWidget)(e,[{name:"Background",content:l("background-color")},{name:"Text",content:l("color")},{name:"Border",content:l("border-color")}])}},tooltip:"Background"},{name:"valign",list:["Top","Middle","Bottom","Normal"],childTemplate:function(e,t,o){return o},exec:function(e,t,o){var n=a(o.control);e.getInstance("Table",e.o).getAllSelectedCells().forEach((function(e){(0,r.css)(e,"vertical-align","normal"===n?"":n)}))},tooltip:"Vertical align"},{name:"splitv",list:{tablesplitv:"Split vertical",tablesplitg:"Split horizontal"},tooltip:"Split"},{name:"align",icon:"left"},"\n",{name:"merge",command:"tablemerge",tooltip:"Merge"},{name:"addcolumn",list:{tableaddcolumnbefore:"Insert column before",tableaddcolumnafter:"Insert column after"},exec:function(e,t,o){var r=o.control;if((0,n.isJoditObject)(e)){var i=a(r);e.execCommand(i,!1,t)}},tooltip:"Add column"},{name:"addrow",list:{tableaddrowbefore:"Insert row above",tableaddrowafter:"Insert row below"},exec:function(e,t,o){var r=o.control;if((0,n.isJoditObject)(e)){var i=a(r);e.execCommand(i,!1,t)}},tooltip:"Add row"},{name:"delete",icon:"bin",list:{tablebin:"Delete table",tablebinrow:"Delete row",tablebincolumn:"Delete column",tableempty:"Empty cell"},exec:function(e,t,o){var r=o.control;if((0,n.isJoditObject)(e)){var i=a(r);e.execCommand(i,!1,t),e.e.fire("hidePopup")}},tooltip:"Delete"}]},66686:function(e,t,o){"use strict";var n=o(97425);t.Z=[{name:"bin",tooltip:"Delete",exec:function(e,t){t&&e.s.removeNode(t)}},n.align]},97425:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.align=void 0;var n=o(64968),r=o(24421),i=o(26911),a=o(60303);t.align={name:"left",childTemplate:function(e,t,o){return o},list:["Left","Right","Center","Normal"],exec:function(e,t,o){var i=o.control;if(n.Dom.isTag(t,["img","jodit","jodit-media"])){var s=i.args&&(0,r.isString)(i.args[0])?i.args[0].toLowerCase():"";if(!s)return!1;(0,a.hAlignElement)(t,s),n.Dom.isTag(t,["jodit","jodit-media"])&&t.firstElementChild&&(0,a.hAlignElement)(t.firstElementChild,s),e.synchronizeValues(),e.e.fire("recalcPositionPopup")}},tooltip:"Horizontal align"},t.default=[{name:"delete",icon:"bin",tooltip:"Delete",exec:function(e,t){t&&e.s.removeNode(t)}},{name:"pencil",exec:function(e,t){"img"===t.tagName.toLowerCase()&&e.e.fire("openImageProperties",t)},tooltip:"Edit"},{name:"valign",list:["Top","Middle","Bottom","Normal"],tooltip:"Vertical align",exec:function(e,t,o){var a=o.control;if(n.Dom.isTag(t,"img")){var s=a.args&&(0,r.isString)(a.args[0])?a.args[0].toLowerCase():"";if(!s)return!1;(0,i.css)(t,"vertical-align","normal"===s?"":s),e.e.fire("recalcPositionPopup")}}},t.align]},55350:function(e,t){"use strict";t.Z=["bold","italic","|","ul","ol","eraser","|","fontsize","brush","paragraph","---","image","table","\n","link","|","align","|","undo","redo","|","copyformat","fullsize","---","dots"]},54752:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.inlinePopup=void 0;var n=o(20255);o(45109);var r=o(57549),i=o(81438),a=o(35799),s=o(40332),l=o(64968),c=o(2074),u=o(43441),d=o(17332);o(35387);var p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.requires=["select"],t.type=null,t.popup=new a.Popup(t.jodit,!1),t.toolbar=(0,i.makeCollection)(t.jodit,t.popup),t.snapRange=null,t.elmsList=(0,s.keys)(t.j.o.popup,!1).filter((function(e){return!t.isExcludedTarget(e)})),t}return n.__extends(t,e),t.prototype.onClick=function(e){var t=this,o=this.elmsList,n=l.Dom.isTag(e,"img")?e:l.Dom.closest(e,o,this.j.editor);if(n&&this.canShowPopupForType(n.nodeName.toLowerCase()))return this.showPopup((function(){return(0,s.position)(n,t.j)}),n.nodeName.toLowerCase(),n),!1},t.prototype.showPopup=function(e,t,o){if(t=t.toLowerCase(),!this.canShowPopupForType(t))return!1;if(this.type!==t||o!==this.previousTarget){this.previousTarget=o;var n=this.j.o.popup[t],r=void 0;r=(0,s.isFunction)(n)?n(this.j,o,this.popup.close):n,(0,s.isArray)(r)&&(this.toolbar.build(r,o),this.toolbar.buttonSize=this.j.o.toolbarButtonSize,r=this.toolbar.container),this.popup.setContent(r),this.type=t}return this.popup.open(e),!0},t.prototype.hidePopup=function(e){(0,s.isString)(e)&&e!==this.type||this.popup.close()},t.prototype.onOutsideClick=function(){this.popup.close()},t.prototype.canShowPopupForType=function(e){var t=this.j.o.popup[e.toLowerCase()];return!(this.j.o.readonly||!this.j.o.toolbarInline||!t||this.isExcludedTarget(e))},t.prototype.isExcludedTarget=function(e){return(0,s.splitArray)(this.j.o.toolbarInlineDisableFor).map((function(e){return e.toLowerCase()})).includes(e.toLowerCase())},t.prototype.afterInit=function(e){var t=this;this.j.e.on("getDiffButtons.mobile",(function(o){if(t.toolbar===o){var n=t.toolbar.getButtonsNames();return(0,s.toArray)(e.registeredButtons).filter((function(e){return!t.j.o.toolbarInlineDisabledButtons.includes(e.name)})).filter((function(e){var t=(0,s.isString)(e)?e:e.name;return t&&"|"!==t&&"\n"!==t&&!n.includes(t)}))}})).on("hidePopup",this.hidePopup).on("showInlineToolbar",this.showInlineToolbar).on("showPopup",(function(e,o,n){t.showPopup(o,n||((0,s.isString)(e)?e:e.nodeName),(0,s.isString)(e)?void 0:e)})).on("mousedown keydown",this.onSelectionStart).on("change",(function(){t.popup.isOpened&&t.previousTarget&&!t.previousTarget.parentNode&&(t.hidePopup(),t.previousTarget=void 0)})).on([this.j.ew,this.j.ow],"mouseup keyup",this.onSelectionEnd),this.addListenersForElements()},t.prototype.onSelectionStart=function(){this.snapRange=this.j.s.range.cloneRange()},t.prototype.onSelectionEnd=function(e){if(!(e&&e.target&&c.UIElement.closestElement(e.target,a.Popup))){var t=this.snapRange,o=this.j.s.range;t&&!o.collapsed&&o.startContainer===t.startContainer&&o.startOffset===t.startOffset&&o.endContainer===t.endContainer&&o.endOffset===t.endOffset||this.onSelectionChange()}},t.prototype.onSelectionChange=function(){if(this.j.o.toolbarInlineForSelection){var e="selection",t=this.j.s.sel,o=this.j.s.range;(null==t?void 0:t.isCollapsed)||this.isSelectedTarget(o)||this.tableModule.getAllSelectedCells().length?this.type===e&&this.popup.isOpened&&this.hidePopup():this.j.s.current()&&this.showPopup((function(){return o.getBoundingClientRect()}),e)}},t.prototype.isSelectedTarget=function(e){var t=e.startContainer;return l.Dom.isElement(t)&&t===e.endContainer&&l.Dom.isTag(t.childNodes[e.startOffset],(0,s.keys)(this.j.o.popup,!1))&&e.startOffset===e.endOffset-1},Object.defineProperty(t.prototype,"tableModule",{get:function(){return this.j.getInstance("Table",this.j.o)},enumerable:!1,configurable:!0}),t.prototype.beforeDestruct=function(e){e.e.off("showPopup").off([this.j.ew,this.j.ow],"mouseup keyup",this.onSelectionEnd),this.removeListenersForElements()},t.prototype._eventsList=function(){var e=this.elmsList;return e.map((function(e){return(0,s.camelCase)("click_".concat(e))})).concat(e.map((function(e){return(0,s.camelCase)("touchstart_".concat(e))}))).join(" ")},t.prototype.addListenersForElements=function(){this.j.e.on(this._eventsList(),this.onClick)},t.prototype.removeListenersForElements=function(){this.j.e.off(this._eventsList(),this.onClick)},t.prototype.showInlineToolbar=function(e){var t=this;this.showPopup((function(){return e||t.j.s.range.getBoundingClientRect()}),"toolbar")},n.__decorate([u.autobind],t.prototype,"onClick",null),n.__decorate([(0,u.wait)((function(e){return!e.j.isLocked}))],t.prototype,"showPopup",null),n.__decorate([(0,u.watch)(":clickEditor"),u.autobind],t.prototype,"hidePopup",null),n.__decorate([(0,u.watch)(":outsideClick")],t.prototype,"onOutsideClick",null),n.__decorate([u.autobind],t.prototype,"onSelectionStart",null),n.__decorate([u.autobind],t.prototype,"onSelectionEnd",null),n.__decorate([(0,u.debounce)((function(e){return e.defaultTimeout}))],t.prototype,"onSelectionChange",null),n.__decorate([u.autobind],t.prototype,"showInlineToolbar",null),t}(r.Plugin);t.inlinePopup=p,d.pluginSystem.add("inlinePopup",p)},54452:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.justify=void 0;var n=o(93166),r=o(24263),i=o(26911),a=o(60303),s=o(17332);function l(e){e.registerButton({name:"align",group:"indent"});var t=function(t){return e.s.focus(),e.s.eachSelection((function(o){if(o){var n=r.Dom.up(o,r.Dom.isBlock,e.editor);n||(n=r.Dom.wrapInline(o,e.o.enterBlock,e)),(0,a.alignElement)(t,n)}})),!1};e.registerCommand("justifyfull",t),e.registerCommand("justifyright",t),e.registerCommand("justifyleft",t),e.registerCommand("justifycenter",t)}o(77904).Icon.set("justify",o(87498)),n.Config.prototype.controls.align={name:"left",tooltip:"Align",update:function(e,t){var o=e.control,n=t.s.current();if(n){var a=r.Dom.closest(n,r.Dom.isBlock,t.editor)||t.editor,s=(0,i.css)(a,"text-align").toString();o.defaultValue&&-1!==o.defaultValue.indexOf(s)&&(s="left"),o.data&&o.data.currentValue!==s&&o.list&&-1!==o.list.indexOf(s)&&(t.o.textIcons?e.state.text=s:e.state.icon.name=s,o.data.currentValue=s)}},isActive:function(e,t){var o=e.s.current();if(o&&t.defaultValue){var n=r.Dom.closest(o,r.Dom.isBlock,e.editor)||e.editor;return-1===t.defaultValue.indexOf((0,i.css)(n,"text-align").toString())}return!1},defaultValue:["left","start","inherit"],data:{currentValue:"left"},list:["center","left","right","justify"]},n.Config.prototype.controls.center={command:"justifyCenter",css:{"text-align":"center"},tooltip:"Align Center"},n.Config.prototype.controls.justify={command:"justifyFull",css:{"text-align":"justify"},tooltip:"Align Justify"},n.Config.prototype.controls.left={command:"justifyLeft",css:{"text-align":"left"},tooltip:"Align Left"},n.Config.prototype.controls.right={command:"justifyRight",css:{"text-align":"right"},tooltip:"Align Right"},t.justify=l,s.pluginSystem.add("justify",l)},46324:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyArrowOutside=void 0;var n=o(20255),r=o(57549),i=o(43441),a=o(86893),s=o(24263),l=o(17332),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.afterInit=function(e){},t.prototype.beforeDestruct=function(e){},t.prototype.onKeyDownArrow=function(e){var t;if(e.key===a.KEY_RIGHT&&this.j.selection.isCollapsed()){var o=this.j.selection.range,n=o.endContainer,r=o.endOffset;if(s.Dom.isText(n)&&(null===(t=n.nodeValue)||void 0===t?void 0:t.length)===r){var i=n.parentNode;s.Dom.isInlineBlock(i)&&!s.Dom.findNotEmptyNeighbor(i,!1,this.j.editor)&&s.Dom.after(i,this.j.createInside.text(a.NBSP_SPACE))}}},n.__decorate([(0,i.watch)(":keydown")],t.prototype,"onKeyDownArrow",null),t}(r.Plugin);t.keyArrowOutside=c,l.pluginSystem.add("keyArrowOutside",c)},19250:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.limitWords=!1,n.Config.prototype.limitChars=!1,n.Config.prototype.limitHTML=!1},27738:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.limit=void 0;var n=o(20255),r=o(57549),i=o(86893),a=o(43441),s=o(17332);o(19250);var l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this,o=e.o;if(e&&(o.limitWords||o.limitChars)){var n=null;e.e.off(".limit").on("beforePaste.limit",(function(){n=e.history.snapshot.make()})).on("keydown.limit keyup.limit beforeEnter.limit",this.checkPreventKeyPressOrPaste).on("change.limit",this.checkPreventChanging).on("afterPaste.limit",(function(){if(t.__shouldDenyInput(!0)&&n)return e.history.snapshot.restore(n),e.e.fire("denyPaste.limit"),!1}))}},t.prototype.shouldPreventInsertHTML=function(e){return(!e||!(i.COMMAND_KEYS.includes(e.key)||e.ctrlKey||e.metaKey))&&this.__shouldDenyInput(!1)},t.prototype.__shouldDenyInput=function(e){var t=this.jodit,o=t.o,n=o.limitWords,r=o.limitChars,i=this.__splitWords(t.o.limitHTML?t.value:t.text);if(n&&c(i.length,n,e))return t.e.fire("denyWords.limit limit.limit"),!0;var a=Boolean(r&&c(i.join("").length,r,e));return a&&t.e.fire("denyChars.limit limit.limit"),a},t.prototype.checkPreventKeyPressOrPaste=function(e){if(this.shouldPreventInsertHTML(e))return!1},t.prototype.checkPreventChanging=function(e,t){var o=this.jodit;this.__shouldDenyInput(!0)&&(o.value=t)},t.prototype.__splitWords=function(e){return e.replace((0,i.INVISIBLE_SPACE_REG_EXP)(),"").split((0,i.SPACE_REG_EXP)()).filter((function(e){return e.length}))},t.prototype.beforeDestruct=function(e){e.e.off(".limit")},n.__decorate([a.autobind],t.prototype,"checkPreventKeyPressOrPaste",null),n.__decorate([a.autobind],t.prototype,"checkPreventChanging",null),t}(r.Plugin);function c(e,t,o){return o?e>t:e>=t}t.limit=l,s.pluginSystem.add("limit",l)},29490:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(40332),i=o(77904);n.Config.prototype.defaultLineHeight=null,i.Icon.set("line-height",o(7986)),n.Config.prototype.controls.lineHeight={command:"applyLineHeight",tags:["ol"],tooltip:"Line height",list:[1,1.1,1.2,1.3,1.4,1.5,2],exec:function(e,t,o){return(0,r.memorizeExec)(e,t,{control:o.control},(function(e){return e}))}}},26752:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.zh_tw=t.zh_cn=t.tr=t.ru=t.pt_br=t.pl=t.nl=t.ko=t.ja=t.it=t.id=t.hu=t.he=t.fr=t.fa=t.es=t.de=t.cs_cz=t.ar=void 0;var n=o(47762);t.ar=n;var r=o(97495);t.cs_cz=r;var i=o(80131);t.de=i;var a=o(1201);t.es=a;var s=o(89912);t.fa=s;var l=o(3405);t.fr=l;var c=o(14129);t.he=c;var u=o(93729);t.hu=u;var d=o(16106);t.id=d;var p=o(89690);t.it=p;var f=o(33216);t.ja=f;var h=o(17282);t.ko=h;var m=o(91761);t.nl=m;var v=o(61675);t.pl=v;var g=o(69709);t.pt_br=g;var y=o(82591);t.ru=y;var _=o(87649);t.tr=_;var b=o(60268);t.zh_cn=b;var S=o(58214);t.zh_tw=S},61421:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.lineHeight=void 0;var n=o(20255),r=o(57549),i=o(40332),a=o(43441),s=o(24263),l=o(17332);o(29490);var c=function(e){function t(t){var n=e.call(this,t)||this;return n.buttons=[{name:"lineHeight",group:"font"}],(0,l.extendLang)(o(26752)),n}return n.__extends(t,e),t.prototype.afterInit=function(e){(0,i.css)(e.editor,{lineHeight:e.o.defaultLineHeight}),e.registerCommand("applyLineHeight",this.applyLineHeight)},t.prototype.applyLineHeight=function(e,t,o){var n,r=this.j,a=r.s,l=r.createInside,c=r.editor,u=r.o;a.isFocused()||a.focus(),a.save();var d=function(e){var t=s.Dom.closest(e,s.Dom.isBlock,c);t||(t=s.Dom.wrap(e,u.enter,l));var r=(0,i.css)(t,"lineHeight");void 0===n&&(n=r.toString()!==o.toString()),(0,i.css)(t,"lineHeight",n?o:null)};try{if(a.isCollapsed()){var p=l.fake();a.insertNode(p,!1,!1),d(p),s.Dom.safeRemove(p)}else a.eachSelection(d)}finally{a.restore()}},t.prototype.beforeDestruct=function(e){(0,i.css)(e.editor,{lineHeight:null})},n.__decorate([a.autobind],t.prototype,"applyLineHeight",null),t}(r.Plugin);t.lineHeight=c,l.pluginSystem.add("lineHeight",c)},56367:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(54238),i=o(24263),a=o(77904);n.Config.prototype.link={formTemplate:r.formTemplate,followOnDblClick:!1,processVideoLink:!0,processPastedLink:!0,noFollowCheckbox:!0,openInNewTabCheckbox:!0,modeClassName:"input",selectMultipleClassName:!0,selectSizeClassName:3,selectOptionsClassName:[],hotkeys:["ctrl+k","cmd+k"]},a.Icon.set("link",o(23075)).set("unlink",o(10655)),n.Config.prototype.controls.unlink={exec:function(e,t){var o=i.Dom.closest(t,"a",e.editor);o&&i.Dom.unwrap(o),e.synchronizeValues(),e.e.fire("hidePopup")},tooltip:"Unlink"},n.Config.prototype.controls.link={isActive:function(e){var t=e.s.current();return Boolean(t&&i.Dom.closest(t,"a",e.editor))},popup:function(e,t,o,n){return e.e.fire("generateLinkForm.link",t,n)},tags:["a"],tooltip:"Insert link"}},27582:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.link=void 0;var n=o(20255),r=o(64968),i=o(40332),a=o(57549),s=o(43441),l=o(17332);o(56367);var c=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.buttons=[{name:"link",group:"insert"}],t}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;e.o.link.followOnDblClick&&e.e.on("dblclick.link",this.onDblClickOnLink),e.o.link.processPastedLink&&e.e.on("processPaste.link",this.onProcessPasteLink),e.e.on("generateLinkForm.link",this.__generateForm),e.registerCommand("openLinkDialog",{exec:function(){var o=e.dlg({resizable:!1}),n=t.__generateForm(e.s.current(),(function(){o.close()}));n.container.classList.add("jodit-dialog_alert"),o.setContent(n),o.open(),e.async.requestIdleCallback((function(){var e=(0,i.refs)(n.container).url_input;null==e||e.focus()}))},hotkeys:e.o.link.hotkeys})},t.prototype.onDblClickOnLink=function(e){if(r.Dom.isTag(e.target,"a")){var t=(0,i.attr)(e.target,"href");t&&(location.href=t,e.preventDefault())}},t.prototype.onProcessPasteLink=function(e,t){var o=this.jodit;if((0,i.isURL)(t)&&o.o.link.processPastedLink){if(o.e.stopPropagation("processPaste"),o.o.link.processVideoLink){var n=(0,i.convertMediaUrlToVideoEmbed)(t);if(n!==t)return o.createInside.fromHTML(n)}if(o.s.isCollapsed()){var r=o.createInside.element("a");return r.setAttribute("href",t),r.textContent=t,o.e.fire("applyLink",o,r,null),r}return o.s.applyStyle(void 0,{element:"a",attributes:{href:t}}),!0}},t.prototype.__generateForm=function(e,t){var o,n=this.jodit,a=n.i18n.bind(n),s=n.o.link,l=s.openInNewTabCheckbox,c=s.noFollowCheckbox,u=s.formClassName,d=s.modeClassName,p=(0,s.formTemplate)(n),f=(0,i.isString)(p)?n.c.fromHTML(p,{target_checkbox_box:l,nofollow_checkbox_box:c}):p,h=r.Dom.isElement(f)?f:f.container,m=(0,i.refs)(h),v=m.insert,g=m.unlink,y=m.content_input_box,_=m.target_checkbox,b=m.nofollow_checkbox,S=m.url_input,w=r.Dom.isImage(e),C=m.content_input,j=m.className_input,E=m.className_select;C||(C=n.c.element("input",{type:"hidden",ref:"content_input"})),u&&h.classList.add(u),w&&r.Dom.hide(y);var k=function(){return o?o.innerText:(0,i.stripTags)(n.s.range.cloneContents(),n.ed)};if(o=!(!e||!r.Dom.closest(e,"a",n.editor))&&r.Dom.closest(e,"a",n.editor),!w&&e&&(C.value=k()),o){if(S.value=(0,i.attr)(o,"href")||"",d)switch(d){case"input":j&&(j.value=(0,i.attr)(o,"class")||"");break;case"select":if(E){for(var x=0;E.selectedOptions.length>x;x++){var I=E.options.item(x);I&&(I.selected=!1)}((0,i.attr)(o,"class")||"").split(" ").forEach((function(e){if(e)for(var t=0;E.options.length>t;t++){var o=E.options.item(t);(null==o?void 0:o.value)&&o.value===e&&(o.selected=!0)}}))}}l&&_&&(_.checked="_blank"===(0,i.attr)(o,"target")),c&&b&&(b.checked="nofollow"===(0,i.attr)(o,"rel")),v.textContent=a("Update")}else r.Dom.hide(g);n.editor.normalize();var T=n.history.snapshot.make();g&&n.e.on(g,"click",(function(e){n.s.restore(),n.history.snapshot.restore(T),o&&r.Dom.unwrap(o),n.synchronizeValues(),t(),e.preventDefault()}));var P=function(){if(!S.value.trim().length)return S.focus(),S.classList.add("jodit_error"),!1;var e;n.s.restore(),n.s.removeMarkers(),n.editor.normalize(),n.history.snapshot.restore(T);var a=k()!==C.value.trim(),s=n.createInside;if(o)e=[o];else{if(n.s.isCollapsed()){var u=s.element("a");n.s.insertNode(u,!1,!1),e=[u]}else{var p=n.s.current();e=r.Dom.isTag(p,["img"])?[r.Dom.wrap(p,"a",s)]:n.s.wrapInTag("a")}e.forEach((function(e){return n.s.select(e)}))}return e.forEach((function(e){var t;if((0,i.attr)(e,"href",S.value),d&&(null!=j?j:E))if("input"===d)""===j.value&&e.hasAttribute("class")&&(0,i.attr)(e,"class",null),""!==j.value&&(0,i.attr)(e,"class",j.value);else if("select"===d){e.hasAttribute("class")&&(0,i.attr)(e,"class",null);for(var o=0;E.selectedOptions.length>o;o++){var r=null===(t=E.selectedOptions.item(o))||void 0===t?void 0:t.value;r&&e.classList.add(r)}}if(!w){var s=e.textContent;C.value.trim().length?a&&(s=C.value):s=S.value,s!==e.textContent&&(e.textContent=s)}l&&_&&(0,i.attr)(e,"target",_.checked?"_blank":null),c&&b&&(0,i.attr)(e,"rel",b.checked?"nofollow":null),n.e.fire("applyLink",n,e,f)})),n.synchronizeValues(),t(),!1};return r.Dom.isElement(f)?n.e.on(f,"submit",(function(e){return e.preventDefault(),e.stopImmediatePropagation(),P(),!1})):f.onSubmit(P),f},t.prototype.beforeDestruct=function(e){e.e.off("generateLinkForm.link",this.__generateForm).off("dblclick.link",this.onDblClickOnLink).off("processPaste.link",this.onProcessPasteLink)},n.__decorate([s.autobind],t.prototype,"onDblClickOnLink",null),n.__decorate([s.autobind],t.prototype,"onProcessPasteLink",null),n.__decorate([s.autobind],t.prototype,"__generateForm",null),t}(a.Plugin);t.link=c,l.pluginSystem.add("link",c)},54238:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formTemplate=void 0;var n=o(95963),r=o(96516);t.formTemplate=function(e){var t=e.o.link,o=t.openInNewTabCheckbox,i=t.noFollowCheckbox,a=t.modeClassName,s=t.selectSizeClassName,l=t.selectMultipleClassName,c=t.selectOptionsClassName;return new n.UIForm(e,[new n.UIBlock(e,[new n.UIInput(e,{name:"url",type:"text",ref:"url_input",label:"URL",placeholder:"http://",required:!0})]),new n.UIBlock(e,[new n.UIInput(e,{name:"content",ref:"content_input",label:"Text"})],{ref:"content_input_box"}),a?new n.UIBlock(e,["input"===a?new n.UIInput(e,{name:"className",ref:"className_input",label:"Class name"}):"select"===a?new n.UISelect(e,{name:"className",ref:"className_select",label:"Class name",size:s,multiple:l,options:c}):null]):null,o?new n.UICheckbox(e,{name:"target",ref:"target_checkbox",label:"Open in new tab"}):null,i?new n.UICheckbox(e,{name:"nofollow",ref:"nofollow_checkbox",label:"No follow"}):null,new n.UIBlock(e,[new r.UIButton(e,{name:"unlink",variant:"default",text:"Unlink"}),new r.UIButton(e,{name:"insert",type:"submit",variant:"primary",text:"Insert"})],{align:"full"})])}},11737:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.mediaFakeTag="jodit-media",n.Config.prototype.mediaInFakeBlock=!0,n.Config.prototype.mediaBlocks=["video","audio"]},76303:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.media=void 0;var n=o(86893),r=o(76502),i=o(17332);function a(e){var t="jodit_fake_wrapper",o=e.options,i=o.mediaFakeTag,a=o.mediaBlocks;o.mediaInFakeBlock&&e.e.on("afterGetValueFromEditor",(function(e){var o=new RegExp("<".concat(i,"[^>]+data-").concat(t,"[^>]+>([^]+?)</").concat(i,">"),"ig");o.test(e.value)&&(e.value=e.value.replace(o,"$1"))})).on("change afterInit afterSetMode changePlace",e.async.debounce((function(){e.isDestructed||e.getMode()===n.MODE_SOURCE||(0,r.$$)(a.join(","),e.editor).forEach((function(o){(0,r.dataBind)(o,t)||((0,r.dataBind)(o,t,!0),function(o){var n;if(o.parentNode&&(0,r.attr)(o.parentNode,"data-jodit_iframe_wrapper"))o=o.parentNode;else{var a=e.createInside.element(i,((n={"data-jodit-temp":1,contenteditable:!1,draggable:!0})["data-".concat(t)]=1,n));(0,r.attr)(a,"style",(0,r.attr)(o,"style")),a.style.display="inline-block"===o.style.display?"inline-block":"block",a.style.width=o.offsetWidth+"px",a.style.height=o.offsetHeight+"px",o.parentNode&&o.parentNode.insertBefore(a,o),a.appendChild(o),o=a}e.e.off(o,"mousedown.select touchstart.select").on(o,"mousedown.select touchstart.select",(function(){e.s.setCursorAfter(o)}))}(o))}))}),e.defaultTimeout))}o(11737),t.media=a,i.pluginSystem.add("media",a)},8860:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(86893),i=o(81438),a=o(40332),s=o(72719);n.Config.prototype.mobileTapTimeout=300,n.Config.prototype.toolbarAdaptive=!0,n.Config.prototype.controls.dots={mode:r.MODE_SOURCE+r.MODE_WYSIWYG,popup:function(e,t,o,n,r){var l=o.data;return void 0===l&&(l={toolbar:(0,i.makeCollection)(e),rebuild:function(){var t;if(r){var o=e.e.fire("getDiffButtons.mobile",r.closest(s.ToolbarCollection));if(o&&l){l.toolbar.build((0,a.splitArray)(o));var n=(null===(t=e.toolbar.firstButton)||void 0===t?void 0:t.container.offsetWidth)||36;l.toolbar.container.style.width=3*(n+4)+"px"}}}},o.data=l),l.rebuild(),l.toolbar},tooltip:"Show all"}},19806:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mobile=void 0;var n=o(40332),r=o(97642),i=o(17332);function a(e){var t=0,o=(0,n.splitArray)(e.o.buttons);e.o.mobileTapTimeout&&e.e.on("touchend",(function(o){if(o.changedTouches&&o.changedTouches.length){var n=(new Date).getTime(),r=n-t;r>e.o.mobileTapTimeout&&(t=n,1.5*e.o.mobileTapTimeout>r&&e.s.insertCursorAtPoint(o.clientX,o.clientY))}})),e.e.on("getDiffButtons.mobile",(function(t){if(t===e.toolbar){var i=(0,r.flatButtonsSet)((0,n.splitArray)(e.o.buttons),e),a=(0,r.flatButtonsSet)(o,e);return(0,n.toArray)(i).reduce((function(e,t){return a.has(t)||e.push(t),e}),[])}})),e.o.toolbarAdaptive&&e.e.on("resize afterInit recalcAdaptive changePlace afterAddPlace",(function(){var t;if(e.o.toolbar){var r=(null!==(t=e.container.parentElement)&&void 0!==t?t:e.container).offsetWidth,i=(0,n.splitArray)(e.isFullSize||r>=e.o.sizeLG?e.o.buttons:e.o.sizeMD>r?e.o.sizeSM>r?e.o.buttonsXS:e.o.buttonsSM:e.o.buttonsMD);i.toString()!==o.toString()&&(o=i,e.e.fire("closeAllPopups"),e.toolbar.setRemoveButtons(e.o.removeButtons).build(o.concat(e.o.extraButtons)))}})).on(e.ow,"load resize",(function(){return e.e.fire("recalcAdaptive")}))}o(8860),t.mobile=a,i.pluginSystem.add("mobile",a)},73013:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(63122),i=function(e,t,o){var n,i=o.control,a="button".concat(i.command),s=null!==(n=i.args&&i.args[0])&&void 0!==n?n:(0,r.dataBind)(e,a);(0,r.dataBind)(e,a,s),e.execCommand(i.command,!1,"default"===s?null:s)};o(77904).Icon.set("ol",o(15476)).set("ul",o(59403)),n.Config.prototype.controls.ul={command:"insertUnorderedList",tags:["ul"],tooltip:"Insert Unordered List",list:{default:"Default",circle:"Circle",disc:"Dot",square:"Quadrate"},exec:i},n.Config.prototype.controls.ol={command:"insertOrderedList",tags:["ol"],tooltip:"Insert Ordered List",list:{default:"Default","lower-alpha":"Lower Alpha","lower-greek":"Lower Greek","lower-roman":"Lower Roman","upper-alpha":"Upper Alpha","upper-roman":"Upper Roman"},exec:i}},52598:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.orderedList=void 0;var n=o(20255),r=o(57549),i=o(43441),a=o(17332);o(73013);var s=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.buttons=[{name:"ul",group:"list"},{name:"ol",group:"list"}],t}return n.__extends(t,e),t.prototype.afterInit=function(e){e.registerCommand("insertUnorderedList",this.onCommand).registerCommand("insertOrderedList",this.onCommand)},t.prototype.onCommand=function(e,t,o){return this.jodit.s.applyStyle({listStyleType:null!=o?o:null},{element:"insertunorderedlist"===e?"ul":"ol"}),this.jodit.synchronizeValues(),!1},t.prototype.beforeDestruct=function(e){},n.__decorate([i.autobind],t.prototype,"onCommand",null),t}(r.Plugin);t.orderedList=s,a.pluginSystem.add("orderedList",s)},47470:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(86893);n.Config.prototype.askBeforePasteFromWord=!0,n.Config.prototype.processPasteFromWord=!0,n.Config.prototype.defaultActionOnPasteFromWord=null,n.Config.prototype.pasteFromWordActionList=[{value:r.INSERT_AS_HTML,text:"Keep"},{value:r.INSERT_AS_TEXT,text:"Clean"},{value:r.INSERT_ONLY_TEXT,text:"Insert only Text"}]},15428:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pasteFromWord=void 0;var n=o(20255),r=o(57549),i=o(40332),a=o(86893),s=o(43441),l=o(64280),c=o(17332);o(47470);var u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.requires=["paste"],t}return n.__extends(t,e),t.prototype.afterInit=function(e){},t.prototype.beforeDestruct=function(e){},t.prototype.processWordHTML=function(e,t,o){var n=this,r=this.j,a=r.o,s=a.askBeforePasteFromWord,c=a.defaultActionOnPasteFromWord,u=a.defaultActionOnPaste,d=a.pasteFromWordActionList;return!(!a.processPasteFromWord||!(0,i.isHtmlFromWord)(t)||(s?(0,l.askInsertTypeDialog)(r,"The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?","Word Paste Detected",(function(r){n.insertFromWordByType(e,t,r,o)}),d):this.insertFromWordByType(e,t,c||u,o),0))},t.prototype.insertFromWordByType=function(e,t,o,n){var r;switch(o){case a.INSERT_AS_HTML:t=(0,i.applyStyles)(t);var s=null===(r=this.j.events)||void 0===r?void 0:r.fire("beautifyHTML",t);(0,i.isString)(s)&&(t=s);break;case a.INSERT_AS_TEXT:t=(0,i.cleanFromWord)(t);break;case a.INSERT_ONLY_TEXT:t=(0,i.stripTags)((0,i.cleanFromWord)(t))}(0,l.pasteInsertHtml)(e,this.j,t)},n.__decorate([(0,s.watch)(":processHTML")],t.prototype,"processWordHTML",null),t}(r.Plugin);t.pasteFromWord=u,c.pluginSystem.add("pasteFromWord",u)},47224:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pasteStorage=void 0;var n=o(20255);o(71708);var r=o(86893),i=o(85605),a=o(24263),s=o(40332),l=o(96031),c=o(17332),u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.currentIndex=0,t.list=[],t.container=null,t.listBox=null,t.previewBox=null,t.dialog=null,t.paste=function(){if(t.j.s.focus(),t.j.s.insertHTML(t.list[t.currentIndex]),0!==t.currentIndex){var e=t.list[0];t.list[0]=t.list[t.currentIndex],t.list[t.currentIndex]=e}t.dialog&&t.dialog.close(),t.j.synchronizeValues(),t.j.e.fire("afterPaste")},t.onKeyDown=function(e){var o=t.currentIndex;-1!==[r.KEY_UP,r.KEY_DOWN,r.KEY_ENTER].indexOf(e.key)&&(e.key===r.KEY_UP&&(0===o?o=t.list.length-1:o-=1),e.key===r.KEY_DOWN&&(o===t.list.length-1?o=0:o+=1),e.key!==r.KEY_ENTER?(o!==t.currentIndex&&t.selectIndex(o),e.stopImmediatePropagation(),e.preventDefault()):t.paste())},t.selectIndex=function(e){t.listBox&&(0,s.toArray)(t.listBox.childNodes).forEach((function(o,n){o.classList.remove("jodit_active"),e===n&&t.previewBox&&(o.classList.add("jodit_active"),t.previewBox.innerHTML=t.list[e],o.focus())})),t.currentIndex=e},t.showDialog=function(){2>t.list.length||(t.dialog||t.createDialog(),t.listBox&&(t.listBox.innerHTML=""),t.previewBox&&(t.previewBox.innerHTML=""),t.list.forEach((function(e,o){var n=t.j.c.element("a");n.textContent=o+1+". "+e.replace((0,r.SPACE_REG_EXP)(),""),t.j.e.on(n,"keydown",t.onKeyDown),(0,s.attr)(n,"href","#"),(0,s.attr)(n,"data-index",o.toString()),(0,s.attr)(n,"tab-index","-1"),t.listBox&&t.listBox.appendChild(n)})),t.dialog&&t.dialog.open(),t.j.async.setTimeout((function(){t.selectIndex(0)}),100))},t}return n.__extends(t,e),t.prototype.createDialog=function(){var e=this;this.dialog=this.j.dlg();var t=(0,l.Button)(this.j,"paste","Paste","primary");t.onAction(this.paste);var o=(0,l.Button)(this.j,"","Cancel");o.onAction(this.dialog.close),this.container=this.j.c.div(),this.container.classList.add("jodit-paste-storage"),this.listBox=this.j.c.div(),this.previewBox=this.j.c.div(),this.container.appendChild(this.listBox),this.container.appendChild(this.previewBox),this.dialog.setHeader(this.j.i18n("Choose Content to Paste")),this.dialog.setContent(this.container),this.dialog.setFooter([t,o]),this.j.e.on(this.listBox,"click dblclick",(function(t){var o=t.target;return a.Dom.isTag(o,"a")&&o.hasAttribute("data-index")&&e.selectIndex(parseInt((0,s.attr)(o,"-index")||"0",10)),"dblclick"===t.type&&e.paste(),!1}))},t.prototype.afterInit=function(){var e=this;this.j.e.off("afterCopy.paste-storage").on("pasteStorageList.paste-storage",(function(){return e.list.length})).on("afterCopy.paste-storage",(function(t){-1!==e.list.indexOf(t)&&e.list.splice(e.list.indexOf(t),1),e.list.unshift(t),e.list.length>5&&(e.list.length=5)})),this.j.registerCommand("showPasteStorage",{exec:this.showDialog,hotkeys:["ctrl+shift+v","cmd+shift+v"]})},t.prototype.beforeDestruct=function(){this.dialog&&this.dialog.destruct(),this.j.e.off(".paste-storage"),a.Dom.safeRemove(this.previewBox),a.Dom.safeRemove(this.listBox),a.Dom.safeRemove(this.container),this.container=null,this.listBox=null,this.previewBox=null,this.dialog=null,this.list=[]},t}(i.Plugin);t.pasteStorage=u,c.pluginSystem.add("pasteStorage",u)},24703:function(e,t,o){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0});var r=o(20255),i=o(86893),a=o(93166),s=o(64280);a.Config.prototype.askBeforePasteHTML=!0,a.Config.prototype.processPasteHTML=!0,a.Config.prototype.pasteHTMLActionList=[{value:i.INSERT_AS_HTML,text:"Keep"},{value:i.INSERT_AS_TEXT,text:"Insert as Text"},{value:i.INSERT_ONLY_TEXT,text:"Insert only Text"}],a.Config.prototype.memorizeChoiceWhenPasteFragment=!1,a.Config.prototype.nl2brInPlainText=!0;var l="pasteStorage";a.Config.prototype.controls.paste={tooltip:"Paste from clipboard",exec:function(e,t,o){var n=o.control;return r.__awaiter(this,void 0,void 0,(function(){var t,o,a,c,u;return r.__generator(this,(function(r){switch(r.label){case 0:if(n.name===l)return e.execCommand("showPasteStorage"),[2];if(e.s.focus(),t="",o=!0,!navigator.clipboard)return[3,11];r.label=1;case 1:return r.trys.push([1,6,,7]),[4,navigator.clipboard.read()];case 2:return(a=r.sent())&&a.length?[4,a[0].getType(i.TEXT_PLAIN)]:[3,5];case 3:return c=r.sent(),[4,new Response(c).text()];case 4:t=r.sent(),r.label=5;case 5:return o=!1,[3,7];case 6:return r.sent(),[3,7];case 7:if(!o)return[3,11];r.label=8;case 8:return r.trys.push([8,10,,11]),[4,navigator.clipboard.readText()];case 9:return t=r.sent(),o=!1,[3,11];case 10:return r.sent(),[3,11];case 11:return o&&(t=e.buffer.get(i.CLIPBOARD_ID)||"",o=0===t.length),u=e.value,o?(e.ed.execCommand("paste"),!(o=u===e.value)&&e.e.fire("afterPaste")):t.length?((0,s.pasteInsertHtml)(null,e,t),e.e.fire("afterPaste")):o&&e.alert("Your browser doesn't support direct access to the clipboard.",(function(){e.s.focus()})),[2]}}))}))},list:(n={},n[l]="Paste Storage",n),isChildDisabled:function(e){return 2>e.e.fire("pasteStorageList")}}},64280:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.askInsertTypeDialog=t.getAllTypes=t.pasteInsertHtml=void 0;var n=o(20255),r=o(10172),i=o(24263),a=o(86893),s=o(96031);t.pasteInsertHtml=function(e,t,o){if(!t.isInDestruct){(function(e){return Boolean(e&&"drop"===e.type)})(e)&&t.s.insertCursorAtPoint(e.clientX,e.clientY);var n=t.e.fire("beforePasteInsert",o);!(0,r.isVoid)(n)&&((0,r.isString)(n)||(0,r.isNumber)(n)||i.Dom.isNode(n))&&(o=n),(0,r.isString)(o)&&(o=function(e){var t=(e=e.replace(/<meta[^>]+?>/g,"")).search(/<!--StartFragment-->/i);-1!==t&&(e=e.substring(t+20));var o=e.search(/<!--EndFragment-->/i);return-1!==o&&(e=e.substring(0,o)),e}(o)),t.s.insertHTML(o)}},t.getAllTypes=function(e){var t=e.types,o="";if((0,r.isArray)(t)||"[object DOMStringList]"==={}.toString.call(t))for(var n=0;t.length>n;n+=1)o+=t[n]+";";else o=(t||a.TEXT_PLAIN).toString()+";";return o},t.askInsertTypeDialog=function(e,t,o,r,i){if(!1!==e.e.fire("beforeOpenPasteDialog",t,o,r,i)){var a=e.confirm('<div style="word-break: normal; white-space: normal">'.concat(e.i18n(t),"</div>"),e.i18n(o)),l=i.map((function(t){var o=t.text,n=t.value;return(0,s.Button)(e,{text:o,name:o.toLowerCase(),tabIndex:0}).onAction((function(){a.close(),r(n)}))}));a.e.one(a,"afterClose",(function(){e.s.isFocused()||e.s.focus()}));var c=(0,s.Button)(e,{text:"Cancel",tabIndex:0}).onAction((function(){a.close()}));return a.setFooter(n.__spreadArray(n.__spreadArray([],n.__read(l),!1),[c],!1)),l[0].focus(),l[0].state.variant="primary",e.e.fire("afterOpenPasteDialog",a,t,o,r,i),a}}},19483:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.paste=void 0;var n=o(20255),r=o(85605),i=o(86893),a=o(24263),s=o(43441),l=o(40332),c=o(17332),u=o(64280);o(24703);var d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.pasteStack=new l.LimitedStack(20),t._isDialogOpened=!1,t}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;e.e.on("paste.paste",this.onPaste).on("pasteStack.paste",(function(e){return t.pasteStack.push(e)})),e.o.nl2brInPlainText&&this.j.e.on("processPaste.paste",this.onProcessPasteReplaceNl2Br)},t.prototype.beforeDestruct=function(e){e.e.off("paste.paste",this.onPaste).off("processPaste.paste",this.onProcessPasteReplaceNl2Br).off(".paste")},t.prototype.onPaste=function(e){try{if(!1===this.customPasteProcess(e)||!1===this.j.e.fire("beforePaste",e))return e.preventDefault(),!1;this.defaultPasteProcess(e)}finally{this.j.e.fire("afterPaste",e)}},t.prototype.customPasteProcess=function(e){if(this.j.o.processPasteHTML){var t,o=(0,l.getDataTransfer)(e),n={html:null==o?void 0:o.getData(i.TEXT_HTML),plain:null==o?void 0:o.getData(i.TEXT_PLAIN),rtf:null==o?void 0:o.getData(i.TEXT_RTF)};for(t in n){var r=n[t];if((0,l.isHTML)(r)&&(this.j.e.fire("processHTML",e,r,n)||this.processHTML(e,r)))return!1}}},t.prototype.defaultPasteProcess=function(e){var t=(0,l.getDataTransfer)(e),o=(null==t?void 0:t.getData(i.TEXT_HTML))||(null==t?void 0:t.getData(i.TEXT_PLAIN));if(t&&o&&""!==(0,l.trim)(o)){var n=this.j.e.fire("processPaste",e,o,(0,u.getAllTypes)(t));void 0!==n&&(o=n),((0,l.isString)(o)||a.Dom.isNode(o))&&this.insertByType(e,o,this.j.o.defaultActionOnPaste),e.preventDefault(),e.stopPropagation()}},t.prototype.processHTML=function(e,t){var o=this;if(this.j.o.askBeforePasteHTML){if(this.j.o.memorizeChoiceWhenPasteFragment){var n=this.pasteStack.find((function(e){return e.html===t}));if(n)return this.insertByType(e,t,n.action||this.j.o.defaultActionOnPaste),!0}if(this._isDialogOpened)return!0;var r=(0,u.askInsertTypeDialog)(this.j,"Your code is similar to HTML. Keep as HTML?","Paste as HTML",(function(n){o._isDialogOpened=!1,o.insertByType(e,t,n)}),this.j.o.pasteHTMLActionList);return r&&(this._isDialogOpened=!0,r.e.on("beforeClose",(function(){o._isDialogOpened=!1}))),!0}return!1},t.prototype.insertByType=function(e,t,o){if(this.pasteStack.push({html:t,action:o}),(0,l.isString)(t))switch(this.j.buffer.set(i.CLIPBOARD_ID,t),o){case i.INSERT_CLEAR_HTML:t=(0,l.cleanFromWord)(t);break;case i.INSERT_ONLY_TEXT:t=(0,l.stripTags)(t);break;case i.INSERT_AS_TEXT:t=(0,l.htmlspecialchars)(t)}(0,u.pasteInsertHtml)(e,this.j,t)},t.prototype.onProcessPasteReplaceNl2Br=function(e,t,o){if(o===i.TEXT_PLAIN+";"&&!(0,l.isHTML)(t))return(0,l.nl2br)(t)},n.__decorate([s.autobind],t.prototype,"onPaste",null),n.__decorate([s.autobind],t.prototype,"onProcessPasteReplaceNl2Br",null),t}(r.Plugin);t.paste=d,c.pluginSystem.add("paste",d)},76952:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.showPlaceholder=!0,n.Config.prototype.placeholder="Type something",n.Config.prototype.useInputsPlaceholder=!0},83211:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.placeholder=t.isEditorEmpty=void 0;var n=o(20255);o(51629);var r=o(86893),i=o(67309),a=o(26911),s=o(37204),l=o(24263),c=o(85605),u=o(86893),d=o(43441),p=o(17332);function f(e){var t;if(!e.firstChild)return!0;var o=e.firstChild;if(u.INSEPARABLE_TAGS.has(null===(t=o.nodeName)||void 0===t?void 0:t.toLowerCase())||/^(TABLE)$/i.test(o.nodeName))return!1;var n=l.Dom.next(o,(function(e){return e&&!l.Dom.isEmptyTextNode(e)}),e);return l.Dom.isText(o)&&!n?l.Dom.isEmptyTextNode(o):!n&&l.Dom.each(o,(function(e){return!l.Dom.isTag(e,["ul","li","ol"])&&(l.Dom.isEmpty(e)||l.Dom.isTag(e,"br"))}))}o(76952),t.isEditorEmpty=f;var h=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.addNativeListeners=function(){t.j.e.off(t.j.editor,"input.placeholder keydown.placeholder").on(t.j.editor,"input.placeholder keydown.placeholder",t.toggle)},t.addEvents=function(){var e=t.j;e.o.useInputsPlaceholder&&e.element.hasAttribute("placeholder")&&(t.placeholderElm.innerHTML=(0,i.attr)(e.element,"placeholder")||""),e.e.fire("placeholder",t.placeholderElm.innerHTML),e.e.off(".placeholder").on("changePlace.placeholder",t.addNativeListeners).on("change.placeholder focus.placeholder keyup.placeholder mouseup.placeholder keydown.placeholder mousedown.placeholder afterSetMode.placeholder changePlace.placeholder",t.toggle).on(window,"load",t.toggle),t.addNativeListeners(),t.toggle()},t}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;e.o.showPlaceholder&&(this.placeholderElm=e.c.fromHTML('<span data-ref="placeholder" style="display: none;" class="jodit-placeholder">'.concat(e.i18n(e.o.placeholder),"</span>")),"rtl"===e.o.direction&&(this.placeholderElm.style.right="0px",this.placeholderElm.style.direction="rtl"),e.e.on("readonly",(function(e){e?t.hide():t.toggle()})).on("changePlace",this.addEvents),this.addEvents())},t.prototype.show=function(){var e=this.j;if(!e.o.readonly){var t=0,o=0,n=e.s.current(),r=n&&l.Dom.closest(n,l.Dom.isBlock,e.editor)||e.editor,i=e.ew.getComputedStyle(r),c=e.ew.getComputedStyle(e.editor);e.workplace.appendChild(this.placeholderElm);var u=e.editor.firstChild;if(l.Dom.isElement(u)&&!(0,s.isMarker)(u)){var d=e.ew.getComputedStyle(u);t=parseInt(d.getPropertyValue("margin-top"),10),o=parseInt(d.getPropertyValue("margin-left"),10),this.placeholderElm.style.fontSize=parseInt(d.getPropertyValue("font-size"),10)+"px",this.placeholderElm.style.lineHeight=d.getPropertyValue("line-height")}else this.placeholderElm.style.fontSize=parseInt(i.getPropertyValue("font-size"),10)+"px",this.placeholderElm.style.lineHeight=i.getPropertyValue("line-height");(0,a.css)(this.placeholderElm,{display:"block",textAlign:i.getPropertyValue("text-align"),paddingTop:parseInt(c.paddingTop,10)+"px",paddingLeft:parseInt(c.paddingLeft,10)+"px",paddingRight:parseInt(c.paddingRight,10)+"px",marginTop:Math.max(parseInt(i.getPropertyValue("margin-top"),10),t),marginLeft:Math.max(parseInt(i.getPropertyValue("margin-left"),10),o)})}},t.prototype.hide=function(){l.Dom.safeRemove(this.placeholderElm)},t.prototype.toggle=function(){var e=this.j;e.editor&&!e.isInDestruct&&(e.getRealMode()===r.MODE_WYSIWYG&&f(e.editor)?this.show():this.hide())},t.prototype.beforeDestruct=function(e){this.hide(),e.e.off(".placeholder").off(window,"load",this.toggle)},n.__decorate([(0,d.debounce)((function(e){return e.defaultTimeout/10}),!0)],t.prototype,"toggle",null),t}(c.Plugin);t.placeholder=h,p.pluginSystem.add("placeholder",h)},88297:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.poweredByJodit=void 0;var n=o(17332);function r(e){var t=e.o;t.hidePoweredByJodit||t.inline||!(t.showCharsCounter||t.showWordsCounter||t.showXPathInStatusbar)||e.hookStatus("ready",(function(){e.statusbar.append(e.create.fromHTML('<a\n\t\t\t\t\t\ttabindex="-1"\n\t\t\t\t\t\tstyle="text-transform: uppercase"\n\t\t\t\t\t\tclass="jodit-status-bar-link"\n\t\t\t\t\t\ttarget="_blank"\n\t\t\t\t\t\thref="https://xdsoft.net/jodit/">\n\t\t\t\t\t\t\tPowered by Jodit\n\t\t\t\t\t\t</a>'),!0)}))}t.poweredByJodit=r,n.pluginSystem.add("poweredByJodit",r)},72930:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.preview=void 0,o(54860);var n=o(93166),r=o(86893),i=o(21498),a=o(17332);function s(e){e.registerButton({name:"preview"}),e.registerCommand("preview",(function(t,o,n){var r=e.dlg();r.setSize(1024,600).open("",e.i18n("Preview")).setModal(!0),(0,i.previewBox)(e,n,"px",r.getElm("content"))}))}n.Config.prototype.controls.preview={icon:"eye",command:"preview",mode:r.MODE_SOURCE+r.MODE_WYSIWYG,tooltip:"Preview"},t.preview=s,a.pluginSystem.add("preview",s)},20137:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateCriticalCSS=void 0;var n=o(20255),r=o(1853);t.generateCriticalCSS=function(e){var t=function(e,t){return void 0===t&&(t=e.ownerDocument.styleSheets),(0,r.toArray)(t).map((function(e){try{return(0,r.toArray)(e.cssRules)}catch(e){}return[]})).flat().filter((function(t){try{return Boolean(t&&e.matches(t.selectorText))}catch(e){}return!1}))},o=function(){function o(o,r,i){var a=this;this.css={};var s=i||{},l=function(t){var o=t.selectorText.split(",").map((function(e){return e.trim()})).sort().join(",");!1===Boolean(a.css[o])&&(a.css[o]={});for(var r=t.style.cssText.split(/;(?![A-Za-z0-9])/),i=0;r.length>i;i++)if(r[i]){var s=r[i].split(":");s[0]=s[0].trim(),s[1]=s[1].trim(),a.css[o][s[0]]=s[1].replace(/var\(([^)]+)\)/g,(function(t,o){var r=n.__read(o.split(","),2),i=r[0],a=r[1];return(e.ew.getComputedStyle(e.editor).getPropertyValue(i.trim())||a||t).trim()}))}};!function(){for(var n=o.innerHeight,i=r.createTreeWalker(e.editor,NodeFilter.SHOW_ELEMENT,(function(){return NodeFilter.FILTER_ACCEPT}));i.nextNode();){var a=i.currentNode;if(n>a.getBoundingClientRect().top||s.scanFullPage){var c=t(a);if(c)for(var u=0;c.length>u;u++)l(c[u])}}}()}return o.prototype.generateCSS=function(){var e="";for(var t in this.css)if(!/:not\(/.test(t)){for(var o in e+=t+" { ",this.css[t])e+=o+": "+this.css[t][o]+"; ";e+="}\n"}return e},o}();try{return new o(e.ew,e.ed,{scanFullPage:!0}).generateCSS()}catch(e){}return""}},51197:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.print=void 0;var n=o(93166),r=o(17332),i=o(64968),a=o(93351),s=o(86893),l=o(17332),c=o(77904),u=o(20137),d=o(21498);function p(e){e.registerButton({name:"print"})}c.Icon.set("print",o(22860)),n.Config.prototype.controls.print={exec:function(e){var t=e.create.element("iframe");Object.assign(t.style,{position:"fixed",right:0,bottom:0,width:0,height:0,border:0}),(0,r.getContainer)(e,n.Config).appendChild(t);var o=function(){e.e.off(e.ow,"mousemove",o),i.Dom.safeRemove(t)},s=t.contentWindow;if(s){e.e.on(s,"onbeforeunload onafterprint",o).on(e.ow,"mousemove",o),e.o.iframe?(e.e.fire("generateDocumentStructure.iframe",s.document,e),s.document.body.innerHTML=e.value):(s.document.write('<!doctype html><html lang="'+(0,a.defaultLanguage)(e.o.language)+'"><head><title></title></head><style>'+(0,u.generateCriticalCSS)(e)+"</style><body></body></html>"),s.document.close(),(0,d.previewBox)(e,void 0,"px",s.document.body));var l=s.document.createElement("style");l.innerHTML="@media print {\n\t\t\t\t\tbody {\n\t\t\t\t\t\t\t-webkit-print-color-adjust: exact;\n\t\t\t\t\t}\n\t\t\t}",s.document.head.appendChild(l),s.focus(),s.print()}},mode:s.MODE_SOURCE+s.MODE_WYSIWYG,tooltip:"Print"},t.print=p,l.pluginSystem.add("print",p)},2327:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.redoUndo=void 0;var n=o(20255),r=o(93166),i=o(86893),a=o(85605),s=o(17332);o(77904).Icon.set("redo",o(95600)).set("undo",o(76214)),r.Config.prototype.controls.redo={mode:i.MODE_SPLIT,isDisabled:function(e){return!e.history.canRedo()},tooltip:"Redo"},r.Config.prototype.controls.undo={mode:i.MODE_SPLIT,isDisabled:function(e){return!e.history.canUndo()},tooltip:"Undo"};var l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.buttons=[{name:"undo",group:"history"},{name:"redo",group:"history"}],t}return n.__extends(t,e),t.prototype.beforeDestruct=function(){},t.prototype.afterInit=function(e){var t=function(t){return e.history[t](),!1};e.registerCommand("redo",{exec:t,hotkeys:["ctrl+y","ctrl+shift+z","cmd+y","cmd+shift+z"]}),e.registerCommand("undo",{exec:t,hotkeys:["ctrl+z","cmd+z"]})},t}(a.Plugin);t.redoUndo=l,s.pluginSystem.add("redoUndo",l)},52444:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.tableAllowCellResize=!0},47608:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resizeCells=void 0;var n=o(20255);o(47818);var r=o(86893),i=o(87837),a=o(40332),s=o(43441),l=o(24263),c=o(17332);o(52444);var u="table_processor_observer-resize",d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.selectMode=!1,t.resizeDelta=0,t.createResizeHandle=function(){t.resizeHandler||(t.resizeHandler=t.j.c.div("jodit-table-resizer"),t.j.e.on(t.resizeHandler,"mousedown.table touchstart.table",t.onHandleMouseDown).on(t.resizeHandler,"mouseenter.table",(function(){t.j.async.clearTimeout(t.hideTimeout)})))},t.hideTimeout=0,t.drag=!1,t.minX=0,t.maxX=0,t.startX=0,t}return n.__extends(t,e),Object.defineProperty(t.prototype,"module",{get:function(){return this.j.getInstance("Table",this.j.o)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isRTL",{get:function(){return"rtl"===this.j.o.direction},enumerable:!1,configurable:!0}),t.prototype.showResizeHandle=function(){this.j.async.clearTimeout(this.hideTimeout),this.j.workplace.appendChild(this.resizeHandler)},t.prototype.hideResizeHandle=function(){var e=this;this.hideTimeout=this.j.async.setTimeout((function(){l.Dom.safeRemove(e.resizeHandler)}),{timeout:this.j.defaultTimeout,label:"hideResizer"})},t.prototype.onHandleMouseDown=function(e){var t=this;if(!this.j.isLocked){this.drag=!0,this.j.e.on(this.j.ow,"mouseup.resize-cells touchend.resize-cells",this.onMouseUp).on(this.j.ew,"mousemove.table touchmove.table",this.onMouseMove),this.startX=e.clientX,this.j.lock(u),this.resizeHandler.classList.add("jodit-table-resizer_moved");var o,n=this.workTable.getBoundingClientRect();if(this.minX=0,this.maxX=1e6,null!=this.wholeTable)n=this.workTable.parentNode.getBoundingClientRect(),this.minX=n.left,this.maxX=this.minX+n.width;else{var a=i.Table.formalCoordinate(this.workTable,this.workCell,!0);i.Table.formalMatrix(this.workTable,(function(e,n,i){a[1]===i&&(o=e.getBoundingClientRect(),t.minX=Math.max(o.left+r.NEARBY/2,t.minX)),a[1]+(t.isRTL?-1:1)===i&&(o=e.getBoundingClientRect(),t.maxX=Math.min(o.left+o.width-r.NEARBY/2,t.maxX))}))}return!1}},t.prototype.onMouseMove=function(e){if(this.drag){this.j.e.fire("closeAllPopups");var t=e.clientX,o=(0,a.offset)(this.resizeHandler.parentNode||this.j.od.documentElement,this.j,this.j.od,!0);this.minX>t&&(t=this.minX),t>this.maxX&&(t=this.maxX),this.resizeDelta=t-this.startX+(this.j.o.iframe?o.left:0),this.resizeHandler.style.left=t-(this.j.o.iframe?0:o.left)+"px";var n=this.j.s.sel;n&&n.removeAllRanges()}},t.prototype.onMouseUp=function(e){(this.selectMode||this.drag)&&(this.selectMode=!1,this.j.unlock()),this.resizeHandler&&this.drag&&(this.drag=!1,this.j.e.off(this.j.ew,"mousemove.table touchmove.table",this.onMouseMove),this.resizeHandler.classList.remove("jodit-table-resizer_moved"),this.startX!==e.clientX&&(null==this.wholeTable?this.resizeColumns():this.resizeTable()),this.j.synchronizeValues(),this.j.s.focus())},t.prototype.resizeColumns=function(){var e=this.resizeDelta,t=[];i.Table.setColumnWidthByDelta(this.workTable,i.Table.formalCoordinate(this.workTable,this.workCell,!0)[1],e,!0,t);var o=(0,a.call)(this.isRTL?l.Dom.prev:l.Dom.next,this.workCell,l.Dom.isCell,this.workCell.parentNode);i.Table.setColumnWidthByDelta(this.workTable,i.Table.formalCoordinate(this.workTable,o)[1],-e,!1,t)},t.prototype.resizeTable=function(){var e=this.resizeDelta*(this.isRTL?-1:1),t=this.workTable.offsetWidth,o=(0,a.getContentWidth)(this.workTable.parentNode,this.j.ew),n=!this.wholeTable;if(this.isRTL?!n:n)this.workTable.style.width=(t+e)/o*100+"%";else{var r=this.isRTL?"marginRight":"marginLeft",i=parseInt(this.j.ew.getComputedStyle(this.workTable)[r]||"0",10);this.workTable.style.width=(t-e)/o*100+"%",this.workTable.style[r]=(i+e)/o*100+"%"}},t.prototype.setWorkCell=function(e,t){void 0===t&&(t=null),this.wholeTable=t,this.workCell=e,this.workTable=l.Dom.up(e,(function(e){return l.Dom.isTag(e,"table")}),this.j.editor)},t.prototype.calcHandlePosition=function(e,t,o,n){void 0===o&&(o=0),void 0===n&&(n=0);var i=(0,a.offset)(t,this.j,this.j.ed);if(o>r.NEARBY&&i.width-r.NEARBY>o)this.hideResizeHandle();else{var s=(0,a.offset)(this.j.workplace,this.j,this.j.od,!0),c=(0,a.offset)(e,this.j,this.j.ed);if(this.resizeHandler.style.left=(o>r.NEARBY?i.left+i.width:i.left)-s.left+n+"px",Object.assign(this.resizeHandler.style,{height:c.height+"px",top:c.top-s.top+"px"}),this.showResizeHandle(),o>r.NEARBY){var u=(0,a.call)(this.isRTL?l.Dom.prev:l.Dom.next,t,l.Dom.isCell,t.parentNode);this.setWorkCell(t,!!u&&null)}else{var d=(0,a.call)(this.isRTL?l.Dom.next:l.Dom.prev,t,l.Dom.isCell,t.parentNode);this.setWorkCell(d||t,!d||null)}}},t.prototype.afterInit=function(e){var t=this;e.o.tableAllowCellResize&&e.e.off(this.j.ow,".resize-cells").off(".resize-cells").on("change.resize-cells afterCommand.resize-cells afterSetMode.resize-cells",(function(){(0,a.$$)("table",e.editor).forEach(t.observe)})).on(this.j.ow,"scroll.resize-cells",(function(){if(t.drag){var o=l.Dom.up(t.workCell,(function(e){return l.Dom.isTag(e,"table")}),e.editor);if(o){var n=o.getBoundingClientRect();t.resizeHandler.style.top=n.top+"px"}}})).on("beforeSetMode.resize-cells",(function(){t.module.getAllSelectedCells().forEach((function(o){t.module.removeSelection(o),i.Table.normalizeTable(l.Dom.closest(o,"table",e.editor))}))}))},t.prototype.observe=function(e){var t=this;(0,a.dataBind)(e,u)||((0,a.dataBind)(e,u,!0),this.j.e.on(e,"mouseleave.resize-cells",(function(e){t.resizeHandler&&t.resizeHandler!==e.relatedTarget&&t.hideResizeHandle()})).on(e,"mousemove.resize-cells touchmove.resize-cells",this.j.async.throttle((function(o){if(!t.j.isLocked){var n=l.Dom.up(o.target,l.Dom.isCell,e);n&&t.calcHandlePosition(e,n,o.offsetX)}}),{timeout:this.j.defaultTimeout})),this.createResizeHandle())},t.prototype.beforeDestruct=function(e){e.events&&(e.e.off(this.j.ow,".resize-cells"),e.e.off(".resize-cells"))},n.__decorate([s.autobind],t.prototype,"onHandleMouseDown",null),n.__decorate([s.autobind],t.prototype,"onMouseMove",null),n.__decorate([s.autobind],t.prototype,"onMouseUp",null),n.__decorate([s.autobind],t.prototype,"observe",null),t}(i.Plugin);t.resizeCells=d,c.pluginSystem.add("resizeCells",d)},91637:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.allowResizeX=!1,n.Config.prototype.allowResizeY=!0},90523:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resizeHandler=void 0;var n=o(20255),r=o(57549),i=o(64968),a=o(43441),s=o(2074),l=o(17332);o(91637);var c=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.isResized=!1,t.start={x:0,y:0,w:0,h:0},t.handle=t.j.c.div("jodit-editor__resize",s.Icon.get("resize_handler")),t}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this,o=e.o,n=o.height,r=o.width,i=e.o.allowResizeY;"auto"===n&&"auto"!==r&&(i=!1),"auto"===n&&"auto"===r||!o.allowResizeX&&!i||(e.statusbar.setMod("resize-handle",!0),e.e.on("toggleFullSize.resizeHandler",(function(){t.handle.style.display=e.isFullSize?"none":"block"})).on(this.handle,"mousedown touchstart",this.onHandleResizeStart).on(e.ow,"mouseup touchend",this.onHandleResizeEnd),e.container.appendChild(this.handle))},t.prototype.onHandleResizeStart=function(e){this.isResized=!0,this.start.x=e.clientX,this.start.y=e.clientY,this.start.w=this.j.container.offsetWidth,this.start.h=this.j.container.offsetHeight,this.j.lock(),this.j.e.on(this.j.ow,"mousemove touchmove",this.onHandleResize),e.preventDefault()},t.prototype.onHandleResize=function(e){this.isResized&&(this.j.o.allowResizeY&&this.j.e.fire("setHeight",this.start.h+e.clientY-this.start.y),this.j.o.allowResizeX&&this.j.e.fire("setWidth",this.start.w+e.clientX-this.start.x),this.j.e.fire("resize"))},t.prototype.onHandleResizeEnd=function(){this.isResized&&(this.isResized=!1,this.j.e.off(this.j.ow,"mousemove touchmove",this.onHandleResize),this.j.unlock())},t.prototype.beforeDestruct=function(){i.Dom.safeRemove(this.handle),this.j.e.off(this.j.ow,"mouseup touchsend",this.onHandleResizeEnd)},t.requires=["size"],n.__decorate([a.autobind],t)}(r.Plugin);t.resizeHandler=c,l.pluginSystem.add("resizeHandler",c)},36560:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.allowResizeTags=["img","iframe","table","jodit"],n.Config.prototype.resizer={showSize:!0,hideSizeTimeout:1e3,forImageChangeAttributes:!0,min_width:10,min_height:10,useAspectRatio:["img"]}},69257:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resizer=void 0;var n=o(20255);o(6316);var r=o(86893),i=o(86893),a=o(24263),s=o(40332),l=o(85605),c=o(17332),u=o(43441),d=o(17332);o(36560);var p="__jodit-resizer_binded",f=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.LOCK_KEY="resizer",t.element=null,t.isResizeMode=!1,t.isShown=!1,t.startX=0,t.startY=0,t.width=0,t.height=0,t.ratio=0,t.rect=t.j.c.fromHTML('<div title="'.concat(t.j.i18n("Press Alt for custom resizing"),'" class="jodit-resizer">\n\t\t\t\t<div class="jodit-resizer__top-left"></div>\n\t\t\t\t<div class="jodit-resizer__top-right"></div>\n\t\t\t\t<div class="jodit-resizer__bottom-right"></div>\n\t\t\t\t<div class="jodit-resizer__bottom-left"></div>\n\t\t\t\t<span>100x100</span>\n\t\t\t</div>')),t.sizeViewer=t.rect.getElementsByTagName("span")[0],t.pointerX=0,t.pointerY=0,t.isAltMode=!1,t.onClickElement=function(e){t.isResizeMode||t.element===e&&t.isShown||(t.element=e,t.show(),a.Dom.isTag(t.element,"img")&&!t.element.complete&&t.j.e.one(t.element,"load",t.updateSize))},t.updateSize=function(){if(!t.isInDestruct&&t.isShown&&t.element&&t.rect){var e=t.getWorkplacePosition(),o=(0,s.offset)(t.element,t.j,t.j.ed),n=parseInt(t.rect.style.left||"0",10),r=parseInt(t.rect.style.top||"0",10),i=o.top-e.top,a=o.left-e.left;r===i&&n===a&&t.rect.offsetWidth===t.element.offsetWidth&&t.rect.offsetHeight===t.element.offsetHeight||((0,s.css)(t.rect,{top:i,left:a,width:t.element.offsetWidth,height:t.element.offsetHeight}),t.j.events&&(t.j.e.fire(t.element,"changesize"),isNaN(n)||t.j.e.fire("resize")))}},t.hideSizeViewer=function(){t.sizeViewer.style.opacity="0"},t}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;(0,s.$$)("div",this.rect).forEach((function(o){e.e.on(o,"mousedown.resizer touchstart.resizer",t.onStartResizing.bind(t,o))})),c.eventEmitter.on("hideHelpers",this.hide),e.e.on("readonly",(function(e){e&&t.hide()})).on("afterInit changePlace",this.addEventListeners.bind(this)).on("afterGetValueFromEditor.resizer",(function(e){var t=/<jodit[^>]+data-jodit_iframe_wrapper[^>]+>(.*?<iframe[^>]*>.*?<\/iframe>.*?)<\/jodit>/gi;t.test(e.value)&&(e.value=e.value.replace(t,"$1"))})).on("hideResizer",this.hide).on("change afterInit afterSetMode",this.onChangeEditor),this.addEventListeners(),this.onChangeEditor()},t.prototype.onEditorClick=function(e){for(var t=e.target,o=this.j,n=o.editor,r=o.options.allowResizeTags;t&&t!==n;){if(a.Dom.isTag(t,r))return this.bind(t),void this.onClickElement(t);t=t.parentNode}},t.prototype.addEventListeners=function(){var e=this,t=this.j;t.e.off(t.editor,".resizer").off(t.ow,".resizer").on(t.editor,"keydown.resizer",(function(t){e.isShown&&t.key===r.KEY_DELETE&&e.element&&!a.Dom.isTag(e.element,"table")&&e.onDelete(t)})).on(t.ow,"resize.resizer",this.updateSize).on("resize.resizer",this.updateSize).on([t.ow,t.editor],"scroll.resizer",(function(){e.isShown&&!e.isResizeMode&&e.hide()})).on(t.ow,"keydown.resizer",this.onKeyDown).on(t.ow,"keyup.resizer",this.onKeyUp).on(t.ow,"mouseup.resizer touchend.resizer",this.onClickOutside)},t.prototype.onStartResizing=function(e,t){if(!this.element||!this.element.parentNode)return this.hide(),!1;this.handle=e,t.cancelable&&t.preventDefault(),t.stopImmediatePropagation(),this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.ratio=this.width/this.height,this.isResizeMode=!0,this.startX=t.clientX,this.startY=t.clientY,this.pointerX=t.clientX,this.pointerY=t.clientY;var o=this.j;o.e.fire("hidePopup"),o.lock(this.LOCK_KEY),o.e.on(o.ow,"mousemove.resizer touchmove.resizer",this.onResize)},t.prototype.onEndResizing=function(){var e=this.j;e.unlock(),this.isResizeMode=!1,this.isAltMode=!1,e.synchronizeValues(),e.e.off(e.ow,"mousemove.resizer touchmove.resizer",this.onResize)},t.prototype.onResize=function(e){if(this.isResizeMode){if(!this.element)return;this.pointerX=e.clientX,this.pointerY=e.clientY;var t=void 0,o=void 0;if(this.j.options.iframe){var n=this.getWorkplacePosition();t=e.clientX+n.left-this.startX,o=e.clientY+n.top-this.startY}else t=this.pointerX-this.startX,o=this.pointerY-this.startY;var r=this.handle.className,i=0,l=0,c=this.j.o.resizer.useAspectRatio;!this.isAltMode&&(!0===c||Array.isArray(c)&&a.Dom.isTag(this.element,c))?(t?(i=this.width+(r.match(/left/)?-1:1)*t,l=Math.round(i/this.ratio)):(l=this.height+(r.match(/top/)?-1:1)*o,i=Math.round(l*this.ratio)),i>(0,s.innerWidth)(this.j.editor,this.j.ow)&&(i=(0,s.innerWidth)(this.j.editor,this.j.ow),l=Math.round(i/this.ratio))):(i=this.width+(r.match(/left/)?-1:1)*t,l=this.height+(r.match(/top/)?-1:1)*o),i>this.j.o.resizer.min_width&&this.applySize(this.element,"width",this.rect.parentNode.offsetWidth>i?i:"100%"),l>this.j.o.resizer.min_height&&this.applySize(this.element,"height",l),this.updateSize(),this.showSizeViewer(this.element.offsetWidth,this.element.offsetHeight),e.stopImmediatePropagation()}},t.prototype.onKeyDown=function(e){this.isAltMode=e.key===i.KEY_ALT,!this.isAltMode&&this.isResizeMode&&this.onEndResizing()},t.prototype.onKeyUp=function(){this.isAltMode&&this.isResizeMode&&this.element&&(this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.ratio=this.width/this.height,this.startX=this.pointerX,this.startY=this.pointerY),this.isAltMode=!1},t.prototype.onClickOutside=function(e){if(this.isShown){if(!this.isResizeMode)return this.hide();e.stopImmediatePropagation(),this.onEndResizing()}},t.prototype.getWorkplacePosition=function(){return(0,s.offset)(this.rect.parentNode||this.j.od.documentElement,this.j,this.j.od,!0)},t.prototype.applySize=function(e,t,o){var n=a.Dom.isImage(e)&&this.j.o.resizer.forImageChangeAttributes;n&&(0,s.attr)(e,t,o),n&&!e.style[t]||(0,s.css)(e,t,o)},t.prototype.onDelete=function(e){this.element&&("JODIT"!==this.element.tagName?this.j.s.select(this.element):(a.Dom.safeRemove(this.element),this.hide(),e.preventDefault()))},t.prototype.onChangeEditor=function(){this.isShown&&(this.element&&this.element.parentNode?this.updateSize():this.hide()),(0,s.$$)("iframe",this.j.editor).forEach(this.bind)},t.prototype.bind=function(e){var t=this;if(a.Dom.isHTMLElement(e)&&this.j.o.allowResizeTags.includes(e.tagName.toLowerCase())&&!(0,s.dataBind)(e,p)){var o;if((0,s.dataBind)(e,p,!0),a.Dom.isTag(e,"iframe")){var n=e;a.Dom.isHTMLElement(e.parentNode)&&(0,s.attr)(e.parentNode,"-jodit_iframe_wrapper")?e=e.parentNode:(o=this.j.createInside.element("jodit",{"data-jodit-temp":1,contenteditable:!1,draggable:!0,"data-jodit_iframe_wrapper":1}),(0,s.attr)(o,"style",(0,s.attr)(e,"style")),(0,s.css)(o,{display:"inline-block"===e.style.display?"inline-block":"block",width:e.offsetWidth,height:e.offsetHeight}),e.parentNode&&e.parentNode.insertBefore(o,e),o.appendChild(e),this.j.e.on(o,"click",(function(){(0,s.attr)(o,"data-jodit-wrapper_active",!0)})),e=o),this.j.e.off(e,"mousedown.select touchstart.select").on(e,"mousedown.select touchstart.select",(function(){t.j.s.select(e)})).off(e,"changesize").on(e,"changesize",(function(){n.setAttribute("width",e.offsetWidth+"px"),n.setAttribute("height",e.offsetHeight+"px")}))}this.j.e.on(e,"dragstart",this.hide),i.IS_IE&&this.j.e.on(e,"mousedown",(function(t){a.Dom.isTag(e,"img")&&t.preventDefault()}))}},t.prototype.showSizeViewer=function(e,t){this.j.o.resizer.showSize&&(this.sizeViewer.offsetWidth>e||this.sizeViewer.offsetHeight>t?this.hideSizeViewer():(this.sizeViewer.style.opacity="1",this.sizeViewer.textContent="".concat(e," x ").concat(t),this.j.async.setTimeout(this.hideSizeViewer,{timeout:this.j.o.resizer.hideSizeTimeout,label:"hideSizeViewer"})))},t.prototype.show=function(){this.j.o.readonly||this.isShown||(this.isShown=!0,this.rect.parentNode||((0,s.markOwner)(this.j,this.rect),this.j.workplace.appendChild(this.rect)),this.j.isFullSize&&(this.rect.style.zIndex=(0,s.css)(this.j.container,"zIndex").toString()),this.updateSize())},t.prototype.hide=function(){this.isResizeMode||(this.isResizeMode=!1,this.isShown=!1,this.element=null,a.Dom.safeRemove(this.rect),(0,s.$$)("[data-jodit-wrapper_active='true']",this.j.editor).forEach((function(e){return(0,s.attr)(e,"data-jodit-wrapper_active",!1)})))},t.prototype.beforeDestruct=function(e){this.hide(),c.eventEmitter.off("hideHelpers",this.hide),e.e.off(this.j.ow,".resizer").off(".resizer")},n.__decorate([(0,u.watch)(":click")],t.prototype,"onEditorClick",null),n.__decorate([u.autobind],t.prototype,"onStartResizing",null),n.__decorate([u.autobind],t.prototype,"onEndResizing",null),n.__decorate([u.autobind],t.prototype,"onResize",null),n.__decorate([u.autobind],t.prototype,"onKeyDown",null),n.__decorate([u.autobind],t.prototype,"onKeyUp",null),n.__decorate([u.autobind],t.prototype,"onClickOutside",null),n.__decorate([(0,u.debounce)()],t.prototype,"onChangeEditor",null),n.__decorate([u.autobind],t.prototype,"bind",null),n.__decorate([u.autobind],t.prototype,"hide",null),t}(l.Plugin);t.resizer=f,d.pluginSystem.add("resizer",f)},61975:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(77904);o(59535),n.Config.prototype.useSearch=!0,n.Config.prototype.search={lazyIdleTimeout:0},r.Icon.set("search",o(41197)),n.Config.prototype.controls.find={tooltip:"Find",icon:"search",exec:function(e,t,o){var n=o.control;switch(n.args&&n.args[0]){case"findPrevious":e.e.fire("searchPrevious");break;case"findNext":e.e.fire("searchNext");break;case"replace":e.execCommand("openReplaceDialog");break;default:e.execCommand("openSearchDialog")}},list:{search:"Find",findNext:"Find Next",findPrevious:"Find Previous",replace:"Replace"},childTemplate:function(e,t,o){return o}}},73934:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(18562),t),n.__exportStar(o(3928),t)},18562:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SentenceFinder=void 0;var n=o(20255),r=o(93163),i=function(){function e(e){void 0===e&&(e=r.fuzzySearchIndex),this.searchIndex=e,this.queue=[],this.value=""}return e.prototype.add=function(e){var t,o=(null!==(t=e.nodeValue)&&void 0!==t?t:"").toLowerCase();if(o.length){var n=this.value.length;this.queue.push({startIndex:n,endIndex:n+o.length,node:e}),this.value+=o}},e.prototype.ranges=function(e,t){var o;void 0===t&&(t=0);var r=[],i=t,a=0,s=0;do{if(a=(o=n.__read(this.searchIndex(e,this.value,i),2))[1],-1!==(i=o[0])){for(var l=void 0,c=0,u=void 0,d=0,p=s;this.queue.length>p;p+=1)if(!l&&this.queue[p].endIndex>i&&(l=this.queue[p].node,c=i-this.queue[p].startIndex),l&&this.queue[p].endIndex>=i+a){u=this.queue[p].node,d=i+a-this.queue[p].startIndex,s=p;break}l&&u&&r.push({startContainer:l,startOffset:c,endContainer:u,endOffset:d}),i+=a}}while(-1!==i);return 0===r.length?null:r},e}();t.SentenceFinder=i},3928:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isSelectionWrapper=t.clearSelectionWrappersFromHTML=t.clearSelectionWrappers=t.getSelectionWrappers=t.wrapRangesTextsInTmpSpan=void 0;var n=o(20255),r=o(24263),i=o(54188),a="jd-tmp-selection";function s(e){return(0,i.$$)("[".concat(a,"]"),e)}function l(e){return r.Dom.isElement(e)&&e.hasAttribute(a)}t.wrapRangesTextsInTmpSpan=function(e,t,o,i){var s,c,u;if(null!=e.startContainer.nodeValue&&null!=e.endContainer.nodeValue){var d=o.element("span",((s={})[a]=!0,s));r.Dom.markTemporary(d);var p=e.startContainer.nodeValue,f=0;if(0!==e.startOffset){var h=o.text(p.substring(0,e.startOffset));e.startContainer.nodeValue=p.substring(e.startOffset),r.Dom.before(e.startContainer,h),e.startContainer===e.endContainer&&(e.endOffset-=f=e.startOffset),e.startOffset=0}var m=e.endContainer.nodeValue;if(e.endOffset!==m.length){h=o.text(m.substring(e.endOffset)),e.endContainer.nodeValue=m.substring(0,e.endOffset),r.Dom.after(e.endContainer,h);try{for(var v=n.__values(t),g=v.next();!g.done;g=v.next()){var y=g.value;if(y.startContainer!==e.endContainer)break;y.startContainer=h,y.startOffset=y.startOffset-e.endOffset-f,y.endContainer===e.endContainer&&(y.endContainer=h,y.endOffset=y.endOffset-e.endOffset-f)}}catch(e){c={error:e}}finally{try{g&&!g.done&&(u=v.return)&&u.call(v)}finally{if(c)throw c.error}}e.endOffset=e.endContainer.nodeValue.length}var _=e.startContainer;do{if(!_)break;if(r.Dom.isText(_)&&!l(_.parentNode)&&r.Dom.wrap(_,d.cloneNode(),o),_===e.endContainer)break;var b=_.firstChild||_.nextSibling;if(!b){for(;_&&!_.nextSibling&&_!==i;)_=_.parentNode;b=null==_?void 0:_.nextSibling}_=b}while(_&&_!==i)}},t.getSelectionWrappers=s,t.clearSelectionWrappers=function(e){s(e).forEach((function(e){return r.Dom.unwrap(e)}))},t.clearSelectionWrappersFromHTML=function(e){return e.replace(RegExp("<span[^>]+".concat(a,"[^>]+>(.*?)</span>"),"g"),"$1")},t.isSelectionWrapper=l},59535:function(){},14889:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.search=void 0;var n=o(20255),r=o(64968),i=o(57549),a=o(43441),s=o(72235),l=o(40332),c=o(17332),u=o(73934);o(61975);var d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.buttons=[{name:"find",group:"search"}],t.previousQuery="",t.drawPromise=null,t.walker=null,t.walkerCount=null,t.cache={},t.wrapFrameRequest=0,t}return n.__extends(t,e),Object.defineProperty(t.prototype,"ui",{get:function(){return new s.UISearch(this.j)},enumerable:!1,configurable:!0}),t.prototype.updateCounters=function(){return n.__awaiter(this,void 0,Promise,(function(){var e;return n.__generator(this,(function(t){switch(t.label){case 0:return this.ui.isOpened?(e=this.ui,[4,this.calcCounts(this.ui.query)]):[2];case 1:return e.count=t.sent(),[2]}}))}))},t.prototype.onPressReplaceButton=function(){this.findAndReplace(this.ui.query),this.updateCounters()},t.prototype.tryScrollToElement=function(e){var t=r.Dom.closest(e,r.Dom.isElement,this.j.editor);t||(t=r.Dom.prev(e,r.Dom.isElement,this.j.editor)),t&&t!==this.j.editor&&(0,l.scrollIntoViewIfNeeded)(t,this.j.editor,this.j.ed)},t.prototype.calcCounts=function(e){return n.__awaiter(this,void 0,Promise,(function(){return n.__generator(this,(function(t){switch(t.label){case 0:return[4,this.findQueryBounds(e,"walkerCount")];case 1:return[2,t.sent().length]}}))}))},t.prototype.findQueryBounds=function(e,t){return n.__awaiter(this,void 0,Promise,(function(){var o;return n.__generator(this,(function(n){return(o=this[t])&&o.break(),o=new r.LazyWalker(this.j.async,{timeout:this.j.o.search.lazyIdleTimeout}),this[t]=o,[2,this.find(o,e).catch((function(e){return[]}))]}))}))},t.prototype.findAndReplace=function(e){return n.__awaiter(this,void 0,Promise,(function(){var t,o,i,a,s;return n.__generator(this,(function(n){switch(n.label){case 0:return[4,this.findQueryBounds(e,"walker")];case 1:if(!(t=n.sent()).length)return[2,!1];if(-1===(o=this.findCurrentIndexInRanges(t,this.j.s.range))&&(o=0),!(i=t[o]))return[3,6];n.label=2;case 2:return n.trys.push([2,,4,5]),(a=this.j.ed.createRange()).setStart(i.startContainer,i.startOffset),a.setEnd(i.endContainer,i.endOffset),a.deleteContents(),s=this.j.createInside.text(this.ui.replace),r.Dom.safeInsertNode(a,s),(0,u.clearSelectionWrappers)(this.j.editor),this.j.s.setCursorAfter(s),this.tryScrollToElement(s),this.cache={},this.ui.currentIndex=o,[4,this.findAndSelect(e,!0).catch((function(e){return null}))];case 3:return n.sent(),[3,5];case 4:return this.j.synchronizeValues(),[7];case 5:return this.j.e.fire("afterFindAndReplace"),[2,!0];case 6:return[2,!1]}}))}))},t.prototype.findAndSelect=function(e,t){var o;return n.__awaiter(this,void 0,Promise,(function(){var r,i,a,s;return n.__generator(this,(function(n){switch(n.label){case 0:return[4,this.findQueryBounds(e,"walker")];case 1:if(!(r=n.sent()).length)return[2,!1];if(this.previousQuery===e&&(0,u.getSelectionWrappers)(this.j.editor).length||(null===(o=this.drawPromise)||void 0===o||o.rejectCallback(),this.j.async.cancelAnimationFrame(this.wrapFrameRequest),(0,u.clearSelectionWrappers)(this.j.editor),this.drawPromise=this.drawSelectionRanges(r)),this.previousQuery=e,this.ui.currentIndex=(i=-1==(i=this.ui.currentIndex-1)?0:t?i===r.length-1?0:i+1:0===i?r.length-1:i-1)+1,!(a=r[i]))return[3,4];s=this.j.ed.createRange();try{s.setStart(a.startContainer,a.startOffset),s.setEnd(a.endContainer,a.endOffset),this.j.s.selectRange(s)}catch(e){}return this.tryScrollToElement(a.startContainer),[4,this.updateCounters()];case 2:return n.sent(),[4,this.drawPromise];case 3:return n.sent(),this.j.e.fire("afterFindAndSelect"),[2,!0];case 4:return[2,!1]}}))}))},t.prototype.findCurrentIndexInRanges=function(e,t){return e.findIndex((function(e){return e.startContainer===t.startContainer&&e.startOffset===t.startOffset&&e.endContainer===t.startContainer&&e.endOffset===t.endOffset}))},t.prototype.isValidCache=function(e){return n.__awaiter(this,void 0,Promise,(function(){return n.__generator(this,(function(t){switch(t.label){case 0:return[4,e];case 1:return[2,t.sent().every((function(e){var t,o,n,r;return e.startContainer.isConnected&&e.startOffset<=(null!==(o=null===(t=e.startContainer.nodeValue)||void 0===t?void 0:t.length)&&void 0!==o?o:0)&&e.endContainer.isConnected&&e.endOffset<=(null!==(r=null===(n=e.endContainer.nodeValue)||void 0===n?void 0:n.length)&&void 0!==r?r:0)}))]}}))}))},t.prototype.find=function(e,t){return n.__awaiter(this,void 0,Promise,(function(){var o,i,a=this;return n.__generator(this,(function(n){switch(n.label){case 0:return t.length?(i=o=this.cache[t])?[4,this.isValidCache(o)]:[3,2]:[2,[]];case 1:i=n.sent(),n.label=2;case 2:return i?[2,o]:(this.cache[t]=this.j.async.promise((function(o){var n=new u.SentenceFinder(a.j.o.search.fuzzySearch);e.on("break",(function(){o([])})).on("visit",(function(e){return r.Dom.isText(e)&&n.add(e),!1})).on("end",(function(){var e;o(null!==(e=n.ranges(t))&&void 0!==e?e:[])})).setWork(a.j.editor)})),[2,this.cache[t]])}}))}))},t.prototype.drawSelectionRanges=function(e){var t=this,o=this.j,r=o.async,i=o.createInside,a=o.editor;r.cancelAnimationFrame(this.wrapFrameRequest);var s,l=n.__spreadArray([],n.__read(e),!1),c=0;return r.promise((function(e){var o=function(){do{(s=l.shift())&&(0,u.wrapRangesTextsInTmpSpan)(s,l,i,a),c+=1}while(s&&5>=c);l.length?t.wrapFrameRequest=r.requestAnimationFrame(o):e()};o()}))},t.prototype.onAfterGetValueFromEditor=function(e){e.value=(0,u.clearSelectionWrappersFromHTML)(e.value)},t.prototype.afterInit=function(e){var t=this;if(e.o.useSearch){var o=this;e.e.on("beforeSetMode.search",(function(){t.ui.close()})).on(this.ui,"afterClose",(function(){(0,u.clearSelectionWrappers)(e.editor),t.ui.currentIndex=0,t.ui.count=0,t.cache={}})).on("click",(function(){t.ui.currentIndex=0,(0,u.clearSelectionWrappers)(e.editor)})).on("change.search",(function(){t.cache={}})).on("keydown.search mousedown.search",e.async.debounce((function(){t.ui.selInfo&&(e.s.removeMarkers(),t.ui.selInfo=null),t.ui.isOpened&&t.updateCounters()}),e.defaultTimeout)).on("searchNext.search searchPrevious.search",(function(){return t.ui.isOpened||t.ui.open(),o.findAndSelect(o.ui.query,"searchNext"===e.e.current).catch((function(e){}))})).on("search.search",(function(e,n){return void 0===n&&(n=!0),t.ui.currentIndex=0,o.findAndSelect(e||"",n).catch((function(e){}))})),e.registerCommand("search",{exec:function(e,t,n){return void 0===n&&(n=!0),t&&o.findAndSelect(t,n).catch((function(e){})),!1}}).registerCommand("openSearchDialog",{exec:function(e,t){return o.ui.open(t),!1},hotkeys:["ctrl+f","cmd+f"]}).registerCommand("openReplaceDialog",{exec:function(t,n,r){return e.o.readonly||o.ui.open(n,r,!0),!1},hotkeys:["ctrl+h","cmd+h"]})}},t.prototype.beforeDestruct=function(e){this.ui.destruct(),e.e.off(".search")},n.__decorate([a.cache],t.prototype,"ui",null),n.__decorate([(0,a.watch)("ui:needUpdateCounters")],t.prototype,"updateCounters",null),n.__decorate([(0,a.watch)("ui:pressReplaceButton")],t.prototype,"onPressReplaceButton",null),n.__decorate([a.autobind],t.prototype,"findQueryBounds",null),n.__decorate([a.autobind],t.prototype,"findAndReplace",null),n.__decorate([a.autobind],t.prototype,"findAndSelect",null),n.__decorate([a.autobind],t.prototype,"find",null),n.__decorate([(0,a.watch)(":afterGetValueFromEditor")],t.prototype,"onAfterGetValueFromEditor",null),t}(i.Plugin);t.search=d,c.pluginSystem.add("search",d)},72235:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UISearch=void 0;var n=o(20255);o(88582);var r=o(2074),i=o(40332),a=o(86893),s=o(86893),l=o(43441),c=o(64968),u=function(e){function t(t){var o=e.call(this,t)||this;o.selInfo=null,o._currentIndex=0,o.isOpened=!1;var n=(0,i.refs)(o.container),r=n.replace,a=n.cancel,l=n.next,c=n.prev,u=n.replaceBtn,d=n.current,p=n.count;return o.queryInput=n.query,o.replaceInput=r,o.closeButton=a,o.replaceButton=u,o.currentBox=d,o.countBox=p,t.e.on(o.closeButton,"pointerdown",(function(){return o.close(),!1})).on(o.queryInput,"input",(function(){o.currentIndex=0})).on(o.queryInput,"pointerdown",(function(){t.s.isFocused()&&(t.s.removeMarkers(),o.selInfo=t.s.save())})).on(o.replaceButton,"pointerdown",(function(){return t.e.fire(o,"pressReplaceButton"),!1})).on(l,"pointerdown",(function(){return t.e.fire("searchNext"),!1})).on(c,"pointerdown",(function(){return t.e.fire("searchPrevious"),!1})).on(o.queryInput,"input",(function(){o.setMod("empty-query",!(0,i.trim)(o.queryInput.value).length)})).on(o.queryInput,"keydown",o.j.async.debounce((function(e){e.key===s.KEY_ENTER?(e.preventDefault(),e.stopImmediatePropagation(),t.e.fire("searchNext")&&o.close()):t.e.fire(o,"needUpdateCounters")}),o.j.defaultTimeout)),o}return n.__extends(t,e),t.prototype.className=function(){return"UISearch"},t.prototype.render=function(){return'<div>\n\t\t\t<div class="&__box">\n\t\t\t\t<div class="&__inputs">\n\t\t\t\t\t<input data-ref="query" tabindex="0" placeholder="~Search for~" type="text"/>\n\t\t\t\t\t<input data-ref="replace" tabindex="0" placeholder="~Replace with~" type="text"/>\n\t\t\t\t</div>\n\t\t\t\t<div class="&__counts">\n\t\t\t\t\t<span data-ref="counter-box">\n\t\t\t\t\t\t<span data-ref="current">0</span><span>/</span><span data-ref="count">0</span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class="&__buttons">\n\t\t\t\t\t<button data-ref="next" tabindex="0" type="button">'.concat(r.Icon.get("angle-down"),'</button>\n\t\t\t\t\t<button data-ref="prev" tabindex="0" type="button">').concat(r.Icon.get("angle-up"),'</button>\n\t\t\t\t\t<button data-ref="cancel" tabindex="0" type="button">').concat(r.Icon.get("cancel"),'</button>\n\t\t\t\t\t<button data-ref="replace-btn" tabindex="0" type="button" class="jodit-ui-button">~Replace~</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>')},Object.defineProperty(t.prototype,"currentIndex",{get:function(){return this._currentIndex},set:function(e){this._currentIndex=e,this.currentBox.innerText=e.toString()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"count",{set:function(e){this.countBox.innerText=e.toString()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"query",{get:function(){return this.queryInput.value},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"replace",{get:function(){return this.replaceInput.value},enumerable:!1,configurable:!0}),t.prototype.onEditorKeyDown=function(e){if(this.isOpened){var t=this.j;if(t.getRealMode()===a.MODE_WYSIWYG)switch(e.key){case s.KEY_ESC:this.close();break;case s.KEY_F3:this.queryInput.value&&(t.e.fire(e.shiftKey?"searchPrevious":"searchNext"),e.preventDefault())}}},t.prototype.open=function(e,t,o){void 0===o&&(o=!1),this.isOpened||(this.j.workplace.appendChild(this.container),this.isOpened=!0),this.calcSticky(this.j.e.fire("getStickyState.sticky")||!1),this.j.e.fire("hidePopup"),this.setMod("replace",o);var n=null!=e?e:(this.j.s.sel||"").toString();n&&(this.queryInput.value=n),t&&(this.replaceInput.value=t),this.setMod("empty-query",!n.length),this.j.e.fire(this,"needUpdateCounters"),n?this.queryInput.select():this.queryInput.focus()},t.prototype.close=function(){this.isOpened&&(this.j.s.restore(),c.Dom.safeRemove(this.container),this.isOpened=!1,this.j.e.fire(this,"afterClose"))},t.prototype.calcSticky=function(e){if(this.isOpened)if(this.setMod("sticky",e),e){var t=(0,i.position)(this.j.toolbarContainer);(0,i.css)(this.container,{top:t.top+t.height,left:t.left+t.width})}else(0,i.css)(this.container,{top:null,left:null})},n.__decorate([(0,l.watch)([":keydown","queryInput:keydown"])],t.prototype,"onEditorKeyDown",null),n.__decorate([l.autobind],t.prototype,"open",null),n.__decorate([l.autobind],t.prototype,"close",null),n.__decorate([(0,l.watch)(":toggleSticky")],t.prototype,"calcSticky",null),n.__decorate([l.component],t)}(r.UIElement);t.UISearch=u},14189:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.tableAllowCellSelection=!0},37458:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectCells=void 0;var n=o(20255),r=o(57549),i=o(87837),a=o(24263),s=o(40332),l=o(86893),c=o(43441),u=o(17332);o(14189);var d="table_processor_observer",p="onMoveTableSelectCell",f=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.requires=["select"],t.selectedCell=null,t.isSelectionMode=!1,t}return n.__extends(t,e),Object.defineProperty(t.prototype,"module",{get:function(){return this.j.getInstance("Table",this.j.o)},enumerable:!1,configurable:!0}),t.prototype.afterInit=function(e){var t=this;e.o.tableAllowCellSelection&&e.e.on("keydown.select-cells",(function(e){e.key===l.KEY_TAB&&t.unselectCells()})).on("beforeCommand.select-cells",this.onExecCommand).on("afterCommand.select-cells",this.onAfterCommand).on(["clickEditor","mousedownTd","mousedownTh","touchstartTd","touchstartTh"].map((function(e){return e+".select-cells"})).join(" "),this.onStartSelection).on("clickTr clickTbody",(function(){var e,o=t.module.getAllSelectedCells().length;if(o)return o>1&&(null===(e=t.j.s.sel)||void 0===e||e.removeAllRanges()),!1}))},t.prototype.onStartSelection=function(e){if(!this.j.o.readonly&&(this.unselectCells(),e!==this.j.editor)){var t=a.Dom.closest(e,"table",this.j.editor);if(e&&t)return e.firstChild||e.appendChild(this.j.createInside.element("br")),this.isSelectionMode=!0,this.selectedCell=e,this.module.addSelection(e),this.j.e.on(t,"mousemove.select-cells touchmove.select-cells",this.j.async.throttle(this.onMove.bind(this,t),{label:p,timeout:this.j.defaultTimeout/2})).on(t,"mouseup.select-cells touchend.select-cells",this.onStopSelection.bind(this,t)),!1}},t.prototype.onOutsideClick=function(){this.selectedCell=null,this.onRemoveSelection()},t.prototype.onChange=function(){this.j.isLocked||this.isSelectionMode||this.onRemoveSelection()},t.prototype.onMove=function(e,t){var o,n=this;if((!this.j.o.readonly||this.j.isLocked)&&!this.j.isLockedNotBy(d)){var r=this.j.ed.elementFromPoint(t.clientX,t.clientY);if(r){var s=a.Dom.closest(r,["td","th"],e);if(s&&this.selectedCell){s!==this.selectedCell&&this.j.lock(d),this.unselectCells();for(var l=i.Table.getSelectedBound(e,[s,this.selectedCell]),c=i.Table.formalMatrix(e),u=l[0][0];l[1][0]>=u;u+=1)for(var p=l[0][1];l[1][1]>=p;p+=1)this.module.addSelection(c[u][p]);var f;this.module.getAllSelectedCells().length>1&&(null===(o=this.j.s.sel)||void 0===o||o.removeAllRanges()),this.j.e.fire("hidePopup"),t.stopPropagation(),f=n.j.createInside.fromHTML('<div style="color:rgba(0,0,0,0.01);width:0;height:0">&nbsp;</div>'),s.appendChild(f),n.j.async.setTimeout((function(){var e;null===(e=f.parentNode)||void 0===e||e.removeChild(f)}),n.j.defaultTimeout/5)}}}},t.prototype.onRemoveSelection=function(e){var t;if(!(null===(t=null==e?void 0:e.buffer)||void 0===t?void 0:t.actionTrigger)&&!this.selectedCell&&this.module.getAllSelectedCells().length)return this.j.unlock(),this.unselectCells(),void this.j.e.fire("hidePopup","cells");this.isSelectionMode=!1,this.selectedCell=null},t.prototype.onStopSelection=function(e,t){var o=this;if(this.selectedCell){this.isSelectionMode=!1,this.j.unlock();var n=this.j.ed.elementFromPoint(t.clientX,t.clientY);if(n){var r=a.Dom.closest(n,["td","th"],e);if(r){var l=a.Dom.closest(r,"table",e);if(!l||l===e){var c=i.Table.getSelectedBound(e,[r,this.selectedCell]),u=i.Table.formalMatrix(e),d=u[c[1][0]][c[1][1]],f=u[c[0][0]][c[0][1]];this.j.e.fire("showPopup",e,(function(){var e=(0,s.position)(f,o.j),t=(0,s.position)(d,o.j);return{left:e.left,top:e.top,width:t.left-e.left+t.width,height:t.top-e.top+t.height}}),"cells"),(0,s.$$)("table",this.j.editor).forEach((function(e){o.j.e.off(e,"mousemove.select-cells touchmove.select-cells mouseup.select-cells touchend.select-cells")})),this.j.async.clearTimeout(p)}}}}},t.prototype.unselectCells=function(e){var t=this.module,o=t.getAllSelectedCells();o.length&&o.forEach((function(o){e&&e===o||t.removeSelection(o)}))},t.prototype.onExecCommand=function(e){if(/table(splitv|splitg|merge|empty|bin|binrow|bincolumn|addcolumn|addrow)/.test(e)){e=e.replace("table","");var t=this.module.getAllSelectedCells();if(t.length){var o=n.__read(t,1)[0];if(!o)return;var r=a.Dom.closest(o,"table",this.j.editor);if(!r)return;switch(e){case"splitv":i.Table.splitVertical(r,this.j);break;case"splitg":i.Table.splitHorizontal(r,this.j);break;case"merge":i.Table.mergeSelected(r,this.j);break;case"empty":t.forEach((function(e){return a.Dom.detach(e)}));break;case"bin":a.Dom.safeRemove(r);break;case"binrow":new Set(t.map((function(e){return e.parentNode}))).forEach((function(e){i.Table.removeRow(r,e.rowIndex)}));break;case"bincolumn":var s=new Set;t.reduce((function(e,t){return s.has(t.cellIndex)||(e.push(t),s.add(t.cellIndex)),e}),[]).forEach((function(e){i.Table.removeColumn(r,e.cellIndex)}));break;case"addcolumnafter":case"addcolumnbefore":i.Table.appendColumn(r,o.cellIndex,"addcolumnafter"===e,this.j.createInside);break;case"addrowafter":case"addrowbefore":i.Table.appendRow(r,o.parentNode,"addrowafter"===e,this.j.createInside)}}return!1}},t.prototype.onAfterCommand=function(e){/^justify/.test(e)&&this.module.getAllSelectedCells().forEach((function(t){return(0,s.alignElement)(e,t)}))},t.prototype.beforeDestruct=function(e){this.onRemoveSelection(),e.e.off(".select-cells")},n.__decorate([c.autobind],t.prototype,"onStartSelection",null),n.__decorate([(0,c.watch)(":outsideClick")],t.prototype,"onOutsideClick",null),n.__decorate([(0,c.watch)(":change")],t.prototype,"onChange",null),n.__decorate([c.autobind],t.prototype,"onRemoveSelection",null),n.__decorate([c.autobind],t.prototype,"onStopSelection",null),n.__decorate([c.autobind],t.prototype,"onExecCommand",null),n.__decorate([c.autobind],t.prototype,"onAfterCommand",null),t}(r.Plugin);t.selectCells=f,u.pluginSystem.add("selectCells",f)},33100:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.select={normalizeSelectionBeforeCutAndCopy:!1}},95323:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.select=void 0;var n=o(20255),r=o(57549),i=o(43441),a=o(26596),s=o(24263),l=o(2074),c=o(17332);o(33100);var u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.proxyEventsList=["click","mousedown","touchstart","mouseup","touchend"],t}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;this.proxyEventsList.forEach((function(o){e.e.on(o+".select",t.onStartSelection)}))},t.prototype.beforeDestruct=function(e){var t=this;this.proxyEventsList.forEach((function(o){e.e.on(o+".select",t.onStartSelection)}))},t.prototype.onStartSelection=function(e){for(var t,o=this.j,n=e.target;void 0===t&&n&&n!==o.editor;)t=o.e.fire((0,a.camelCase)(e.type+"_"+n.nodeName.toLowerCase()),n,e),n=n.parentElement;"click"===e.type&&void 0===t&&n===o.editor&&o.e.fire(e.type+"Editor",n,e)},t.prototype.onOutsideClick=function(e){var t=this,o=e.target;s.Dom.up(o,(function(e){return e===t.j.editor}))||l.UIElement.closestElement(o,l.Popup)||this.j.e.fire("outsideClick",e)},t.prototype.beforeCommandCut=function(e){var t=this.j.s;if("cut"===e&&!t.isCollapsed()){var o=t.current();o&&s.Dom.isOrContains(this.j.editor,o)&&this.onCopyNormalizeSelectionBound()}},t.prototype.onCopyNormalizeSelectionBound=function(e){var t=this.j,o=t.editor;t.o.select.normalizeSelectionBeforeCutAndCopy&&!t.s.isCollapsed()&&(!e||e.isTrusted&&s.Dom.isNode(e.target)&&s.Dom.isOrContains(o,e.target))&&this.jodit.s.expandSelection()},n.__decorate([i.autobind],t.prototype,"onStartSelection",null),n.__decorate([(0,i.watch)("ow:click")],t.prototype,"onOutsideClick",null),n.__decorate([(0,i.watch)([":beforeCommand"])],t.prototype,"beforeCommandCut",null),n.__decorate([(0,i.watch)([":copy",":cut"])],t.prototype,"onCopyNormalizeSelectionBound",null),t}(r.Plugin);t.select=u,c.pluginSystem.add("select",u)},53387:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.minWidth=200,n.Config.prototype.maxWidth="100%",n.Config.prototype.minHeight=200,n.Config.prototype.maxHeight="auto",n.Config.prototype.saveHeightInStorage=!1},71003:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.size=void 0;var n=o(20255);o(30962);var r=o(40332),i=o(85605),a=o(43441),s=o(17332);o(53387);var l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.resizeWorkspaces=t.j.async.debounce(t.resizeWorkspaceImd,t.j.defaultTimeout,!0),t}return n.__extends(t,e),t.prototype.afterInit=function(e){e.e.on("setHeight.size",this.setHeight).on("setWidth.size",this.setWidth).on("afterInit.size changePlace.size",this.initialize,{top:!0}).on(e.ow,"load.size",this.resizeWorkspaces).on("afterInit.size resize.size afterUpdateToolbar.size scroll.size afterResize.size",this.resizeWorkspaces).on("toggleFullSize.size toggleToolbar.size",this.resizeWorkspaceImd),this.initialize()},t.prototype.initialize=function(){var e=this.j;if(!e.o.inline){var t=e.o.height;if(e.o.saveHeightInStorage&&"auto"!==t){var o=e.storage.get("height");o&&(t=o)}(0,r.css)(e.editor,{minHeight:"100%"}),(0,r.css)(e.container,{minHeight:e.o.minHeight,maxHeight:e.o.maxHeight,minWidth:e.o.minWidth,maxWidth:e.o.maxWidth}),this.setHeight(t),this.setWidth(e.o.width)}},t.prototype.setHeight=function(e){if((0,r.isNumber)(e)){var t=this.j.o,o=t.minHeight,n=t.maxHeight;(0,r.isNumber)(o)&&o>e&&(e=o),(0,r.isNumber)(n)&&e>n&&(e=n)}(0,r.css)(this.j.container,"height",e),this.j.o.saveHeightInStorage&&this.j.storage.set("height",e),this.resizeWorkspaceImd()},t.prototype.setWidth=function(e){if((0,r.isNumber)(e)){var t=this.j.o,o=t.minWidth,n=t.maxWidth;(0,r.isNumber)(o)&&o>e&&(e=o),(0,r.isNumber)(n)&&e>n&&(e=n)}(0,r.css)(this.j.container,"width",e),this.resizeWorkspaceImd()},t.prototype.getNotWorkHeight=function(){var e,t;return((null===(e=this.j.toolbarContainer)||void 0===e?void 0:e.offsetHeight)||0)+((null===(t=this.j.statusbar)||void 0===t?void 0:t.getHeight())||0)+2},t.prototype.resizeWorkspaceImd=function(){if(this.j&&!this.j.isDestructed&&this.j.o&&!this.j.o.inline&&this.j.container&&this.j.container.parentNode){var e=((0,r.css)(this.j.container,"minHeight")||0)-this.getNotWorkHeight();if((0,r.isNumber)(e)&&e>0&&([this.j.workplace,this.j.iframe,this.j.editor].map((function(t){t&&(0,r.css)(t,"minHeight",e)})),this.j.e.fire("setMinHeight",e)),(0,r.isNumber)(this.j.o.maxHeight)){var t=this.j.o.maxHeight-this.getNotWorkHeight();[this.j.workplace,this.j.iframe,this.j.editor].map((function(e){e&&(0,r.css)(e,"maxHeight",t)})),this.j.e.fire("setMaxHeight",t)}this.j.container&&(0,r.css)(this.j.workplace,"height","auto"!==this.j.o.height||this.j.isFullSize?this.j.container.offsetHeight-this.getNotWorkHeight():"auto")}},t.prototype.beforeDestruct=function(e){e.e.off(e.ow,"load.size",this.resizeWorkspaces).off(".size")},n.__decorate([a.autobind],t.prototype,"resizeWorkspaceImd",null),n.__decorate([a.autobind],t)}(i.Plugin);t.size=l,s.pluginSystem.add("size",l)},13985:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(86893),i=o(77904);n.Config.prototype.beautifyHTML=!r.IS_IE,n.Config.prototype.sourceEditor="ace",n.Config.prototype.sourceEditorNativeOptions={showGutter:!0,theme:"ace/theme/idle_fingers",mode:"ace/mode/html",wrap:!0,highlightActiveLine:!0},n.Config.prototype.sourceEditorCDNUrlsJS=["https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.2/ace.js"],n.Config.prototype.beautifyHTMLCDNUrlsJS=["https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.4/beautify.min.js","https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.4/beautify-html.min.js"],i.Icon.set("source",o(9342)),n.Config.prototype.controls.source={mode:r.MODE_SPLIT,exec:function(e){e.toggleMode()},isActive:function(e){return e.getRealMode()===r.MODE_SOURCE},tooltip:"Change mode"}},34186:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AceEditor=void 0;var n=o(20255),r=o(86893),i=o(40332),a=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.className="jodit_ace_editor",t.proxyOnBlur=function(e){t.j.e.fire("blur",e)},t.proxyOnFocus=function(e){t.j.e.fire("focus",e)},t.proxyOnMouseDown=function(e){t.j.e.fire("mousedown",e)},t}return n.__extends(t,e),t.prototype.aceExists=function(){return void 0!==this.j.ow.ace},t.prototype.getLastColumnIndex=function(e){return this.instance.session.getLine(e).length},t.prototype.getLastColumnIndices=function(){for(var e=this.instance.session.getLength(),t=[],o=0,n=0;e>n;n++)o+=this.getLastColumnIndex(n),n>0&&(o+=1),t[n]=o;return t},t.prototype.getRowColumnIndices=function(e){var t=this.getLastColumnIndices();if(t[0]>=e)return{row:0,column:e};for(var o=1,n=1;t.length>n;n++)e>t[n]&&(o=n+1);return{row:o,column:e-t[o-1]-1}},t.prototype.setSelectionRangeIndices=function(e,t){var o=this.getRowColumnIndices(e),n=this.getRowColumnIndices(t);this.instance.getSelection().setSelectionRange({start:o,end:n})},t.prototype.getIndexByRowColumn=function(e,t){return this.getLastColumnIndices()[e]-this.getLastColumnIndex(e)+t},t.prototype.init=function(e){var t=this,o=function(){if(void 0===t.instance&&t.aceExists()){var o=t.j.c.div("jodit-source__mirror-fake");t.container.appendChild(o),t.instance=e.ow.ace.edit(o),t.instance.setTheme(e.o.sourceEditorNativeOptions.theme),t.instance.renderer.setShowGutter(e.o.sourceEditorNativeOptions.showGutter),t.instance.getSession().setMode(e.o.sourceEditorNativeOptions.mode),t.instance.setHighlightActiveLine(e.o.sourceEditorNativeOptions.highlightActiveLine),t.instance.getSession().setUseWrapMode(!0),t.instance.setOption("indentedSoftWrap",!1),t.instance.setOption("wrap",e.o.sourceEditorNativeOptions.wrap),t.instance.getSession().setUseWorker(!1),t.instance.$blockScrolling=1/0,t.instance.on("change",t.toWYSIWYG),t.instance.on("focus",t.proxyOnFocus),t.instance.on("mousedown",t.proxyOnMouseDown),t.instance.on("blur",t.proxyOnBlur),e.getRealMode()!==r.MODE_WYSIWYG&&t.setValue(t.getValue());var n=t.j.async.debounce((function(){e.isInDestruct||(t.instance.setOption("maxLines","auto"!==e.o.height?e.workplace.offsetHeight/t.instance.renderer.lineHeight:1/0),t.instance.resize())}),2*t.j.defaultTimeout);e.e.on("afterResize afterSetMode",n),n(),t.onReady()}};e.e.on("afterSetMode",(function(){e.getRealMode()!==r.MODE_SOURCE&&e.getMode()!==r.MODE_SPLIT||(t.fromWYSIWYG(),o())})),o(),this.aceExists()||(0,i.loadNext)(e,e.o.sourceEditorCDNUrlsJS).then((function(){e.isInDestruct||o()})).catch((function(){return null}))},t.prototype.destruct=function(){var e,t;this.instance.off("change",this.toWYSIWYG),this.instance.off("focus",this.proxyOnFocus),this.instance.off("mousedown",this.proxyOnMouseDown),this.instance.destroy(),null===(t=null===(e=this.j)||void 0===e?void 0:e.events)||void 0===t||t.off("aceInited.source")},t.prototype.setValue=function(e){if(!this.j.o.editHTMLDocumentMode&&this.j.o.beautifyHTML){var t=this.j.e.fire("beautifyHTML",e);(0,i.isString)(t)&&(e=t)}this.instance.setValue(e),this.instance.clearSelection()},t.prototype.getValue=function(){return this.instance.getValue()},t.prototype.setReadOnly=function(e){this.instance.setReadOnly(e)},Object.defineProperty(t.prototype,"isFocused",{get:function(){return this.instance.isFocused()},enumerable:!1,configurable:!0}),t.prototype.focus=function(){this.instance.focus()},t.prototype.blur=function(){this.instance.blur()},t.prototype.getSelectionStart=function(){var e=this.instance.selection.getRange();return this.getIndexByRowColumn(e.start.row,e.start.column)},t.prototype.getSelectionEnd=function(){var e=this.instance.selection.getRange();return this.getIndexByRowColumn(e.end.row,e.end.column)},t.prototype.selectAll=function(){this.instance.selection.selectAll()},t.prototype.insertRaw=function(e){var t=this.instance.selection.getCursor(),o=this.instance.session.insert(t,e);this.instance.selection.setRange({start:t,end:o},!1)},t.prototype.setSelectionRange=function(e,t){this.setSelectionRangeIndices(e,t)},t.prototype.setPlaceHolder=function(e){},t.prototype.replaceUndoManager=function(){var e=this.jodit.history;this.instance.commands.addCommand({name:"Undo",bindKey:{win:"Ctrl-Z",mac:"Command-Z"},exec:function(){e.undo()}}),this.instance.commands.addCommand({name:"Redo",bindKey:{win:"Ctrl-Shift-Z",mac:"Command-Shift-Z"},exec:function(){e.redo()}})},t}(o(36729).SourceEditor);t.AceEditor=a},58633:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextAreaEditor=void 0;var n=o(20255),r=o(26911),i=o(24263),a=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.autosize=t.j.async.debounce((function(){t.instance.style.height="auto",t.instance.style.height=t.instance.scrollHeight+"px"}),t.j.defaultTimeout),t}return n.__extends(t,e),t.prototype.init=function(e){var t=this;this.instance=e.c.element("textarea",{class:"jodit-source__mirror"}),this.container.appendChild(this.instance),e.e.on(this.instance,"mousedown keydown touchstart input",e.async.debounce(this.toWYSIWYG,e.defaultTimeout)).on("setMinHeight.source",(function(e){(0,r.css)(t.instance,"minHeight",e)})).on(this.instance,"change keydown mousedown touchstart input",this.autosize).on("afterSetMode.source",this.autosize).on(this.instance,"mousedown focus",(function(t){e.e.fire(t.type,t)})),this.autosize(),this.onReady()},t.prototype.destruct=function(){i.Dom.safeRemove(this.instance)},t.prototype.getValue=function(){return this.instance.value},t.prototype.setValue=function(e){this.instance.value=e},t.prototype.insertRaw=function(e){var t=this.getValue();if(0>this.getSelectionStart())this.setValue(t+e);else{var o=this.getSelectionStart(),n=this.getSelectionEnd();this.setValue(t.substring(0,o)+e+t.substring(n,t.length))}},t.prototype.getSelectionStart=function(){return this.instance.selectionStart},t.prototype.getSelectionEnd=function(){return this.instance.selectionEnd},t.prototype.setSelectionRange=function(e,t){void 0===t&&(t=e),this.instance.setSelectionRange(e,t)},Object.defineProperty(t.prototype,"isFocused",{get:function(){return this.instance===this.j.od.activeElement},enumerable:!1,configurable:!0}),t.prototype.focus=function(){this.instance.focus()},t.prototype.blur=function(){this.instance.blur()},t.prototype.setPlaceHolder=function(e){this.instance.setAttribute("placeholder",e)},t.prototype.setReadOnly=function(e){e?this.instance.setAttribute("readonly","true"):this.instance.removeAttribute("readonly")},t.prototype.selectAll=function(){this.instance.select()},t.prototype.replaceUndoManager=function(){var e=this,t=this.jodit.history;this.j.e.on(this.instance,"keydown",(function(o){if((o.ctrlKey||o.metaKey)&&"z"===o.key)return o.shiftKey?t.redo():t.undo(),e.setSelectionRange(e.getValue().length),!1}))},t}(o(36729).SourceEditor);t.TextAreaEditor=a},52834:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);n.__exportStar(o(58633),t),n.__exportStar(o(34186),t)},94785:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createSourceEditor=void 0;var n=o(40332),r=o(52834);t.createSourceEditor=function(e,t,o,i,a){var s;if((0,n.isFunction)(e))s=e(t);else switch(e){case"ace":if(!t.o.shadowRoot){s=new r.AceEditor(t,o,i,a);break}default:s=new r.TextAreaEditor(t,o,i,a)}return s.init(t),s.onReadyAlways((function(){s.setReadOnly(t.o.readonly)})),s}},36729:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SourceEditor=void 0;var o=function(){function e(e,t,o,n){this.jodit=e,this.container=t,this.toWYSIWYG=o,this.fromWYSIWYG=n,this.className="",this.isReady=!1}return Object.defineProperty(e.prototype,"j",{get:function(){return this.jodit},enumerable:!1,configurable:!0}),e.prototype.onReady=function(){this.replaceUndoManager(),this.isReady=!0,this.j.e.fire(this,"ready")},e.prototype.onReadyAlways=function(e){var t;this.isReady?e():null===(t=this.j.events)||void 0===t||t.on(this,"ready",e)},e}();t.SourceEditor=o},86030:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.source=void 0;var n=o(20255);o(68197);var r=o(86893),i=o(86893),a=o(57549),s=o(24263),l=o(40332),c=o(43441),u=o(17332),d=o(94785);o(13985);var p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.buttons=[{name:"source",group:"source"}],t.__lock=!1,t.__oldMirrorValue="",t.tempMarkerStart="{start-jodit-selection}",t.tempMarkerStartReg=/{start-jodit-selection}/g,t.tempMarkerEnd="{end-jodit-selection}",t.tempMarkerEndReg=/{end-jodit-selection}/g,t.getSelectionStart=function(){var e,o;return null!==(o=null===(e=t.sourceEditor)||void 0===e?void 0:e.getSelectionStart())&&void 0!==o?o:0},t.getSelectionEnd=function(){var e,o;return null!==(o=null===(e=t.sourceEditor)||void 0===e?void 0:e.getSelectionEnd())&&void 0!==o?o:0},t}return n.__extends(t,e),t.prototype.onInsertHTML=function(e){var t;if(!this.j.o.readonly&&!this.j.isEditorMode())return null===(t=this.sourceEditor)||void 0===t||t.insertRaw(e),this.toWYSIWYG(),!1},t.prototype.fromWYSIWYG=function(e){if(void 0===e&&(e=!1),!this.__lock||!0===e){this.__lock=!0;var t=this.j.getEditorValue(!1,i.SOURCE_CONSUMER);t!==this.getMirrorValue()&&this.setMirrorValue(t),this.__lock=!1}},t.prototype.toWYSIWYG=function(){if(!this.__lock){var e=this.getMirrorValue();e!==this.__oldMirrorValue&&(this.__lock=!0,this.j.value=e,this.__lock=!1,this.__oldMirrorValue=e)}},t.prototype.getNormalPosition=function(e,t){for(t=t.replace(/<(script|style|iframe)[^>]*>[^]*?<\/\1>/im,(function(e){for(var t="",o=0;e.length>o;o+=1)t+=i.INVISIBLE_SPACE;return t}));e>0&&t[e]===i.INVISIBLE_SPACE;)e--;for(var o=e;o>0;){if("<"===t[--o]&&void 0!==t[o+1]&&t[o+1].match(/[\w/]+/i))return o;if(">"===t[o])return e}return e},t.prototype.clnInv=function(e){return e.replace(r.INVISIBLE_SPACE_REG_EXP(),"")},t.prototype.onSelectAll=function(e){var t;if("selectall"===e.toLowerCase()&&this.j.getRealMode()===i.MODE_SOURCE)return null===(t=this.sourceEditor)||void 0===t||t.selectAll(),!1},t.prototype.getMirrorValue=function(){var e;return(null===(e=this.sourceEditor)||void 0===e?void 0:e.getValue())||""},t.prototype.setMirrorValue=function(e){var t;null===(t=this.sourceEditor)||void 0===t||t.setValue(e)},t.prototype.setFocusToMirror=function(){var e;null===(e=this.sourceEditor)||void 0===e||e.focus()},t.prototype.saveSelection=function(){if(this.j.getRealMode()===r.MODE_WYSIWYG)this.j.s.save(),this.j.synchronizeValues(),this.fromWYSIWYG(!0);else{if(this.j.o.editHTMLDocumentMode)return;var e=this.getMirrorValue();if(this.getSelectionStart()===this.getSelectionEnd()){var t=this.j.s.marker(!0),o=this.getNormalPosition(this.getSelectionStart(),this.getMirrorValue());this.setMirrorValue(e.substring(0,o)+this.clnInv(t.outerHTML)+e.substring(o))}else{var n=this.j.s.marker(!0),i=this.j.s.marker(!1),a=(o=this.getNormalPosition(this.getSelectionStart(),e),this.getNormalPosition(this.getSelectionEnd(),e));this.setMirrorValue(e.substring(0,o)+this.clnInv(n.outerHTML)+e.substring(o,a-o)+this.clnInv(i.outerHTML)+e.substring(a))}this.toWYSIWYG()}},t.prototype.removeSelection=function(){if(this.j.getRealMode()===r.MODE_WYSIWYG)return this.__lock=!0,this.j.s.restore(),void(this.__lock=!1);var e=this.getMirrorValue(),t=0,o=0;try{if(e=e.replace(/<span[^>]+data-jodit-selection_marker=(["'])start\1[^>]*>[<>]*?<\/span>/gim,this.tempMarkerStart).replace(/<span[^>]+data-jodit-selection_marker=(["'])end\1[^>]*>[<>]*?<\/span>/gim,this.tempMarkerEnd),!this.j.o.editHTMLDocumentMode&&this.j.o.beautifyHTML){var n=this.j.e.fire("beautifyHTML",e);(0,l.isString)(n)&&(e=n)}if(o=t=e.indexOf(this.tempMarkerStart),e=e.replace(this.tempMarkerStartReg,""),-1!==t){var i=e.indexOf(this.tempMarkerEnd);-1!==i&&(o=i)}e=e.replace(this.tempMarkerEndReg,"")}finally{e=e.replace(this.tempMarkerEndReg,"").replace(this.tempMarkerStartReg,"")}this.setMirrorValue(e),this.setMirrorSelectionRange(t,o),this.toWYSIWYG(),this.setFocusToMirror()},t.prototype.setMirrorSelectionRange=function(e,t){var o;null===(o=this.sourceEditor)||void 0===o||o.setSelectionRange(e,t)},t.prototype.onReadonlyReact=function(){var e;null===(e=this.sourceEditor)||void 0===e||e.setReadOnly(this.j.o.readonly)},t.prototype.afterInit=function(e){var t=this;if(this.mirrorContainer=e.c.div("jodit-source"),e.workplace.appendChild(this.mirrorContainer),e.e.on("afterAddPlace changePlace afterInit",(function(){e.workplace.appendChild(t.mirrorContainer)})),this.sourceEditor=(0,d.createSourceEditor)("area",e,this.mirrorContainer,this.toWYSIWYG,this.fromWYSIWYG),e.e.on(e.ow,"keydown",(function(e){var o;e.key===i.KEY_ESC&&(null===(o=t.sourceEditor)||void 0===o?void 0:o.isFocused)&&t.sourceEditor.blur()})),this.onReadonlyReact(),e.e.on("placeholder.source",(function(e){var o;null===(o=t.sourceEditor)||void 0===o||o.setPlaceHolder(e)})).on("change.source",this.syncValueFromWYSIWYG).on("beautifyHTML",(function(e){return e})),e.o.beautifyHTML){var o=function(){var t,o=e.ow.html_beautify;return!(!o||e.isInDestruct||(null===(t=e.events)||void 0===t||t.off("beautifyHTML").on("beautifyHTML",(function(e){return o(e)})),0))};o()||(0,l.loadNext)(e,e.o.beautifyHTMLCDNUrlsJS).then(o)}this.syncValueFromWYSIWYG(!0),this.initSourceEditor(e)},t.prototype.syncValueFromWYSIWYG=function(e){void 0===e&&(e=!1);var t=this.j;t.getMode()!==i.MODE_SPLIT&&t.getMode()!==i.MODE_SOURCE||this.fromWYSIWYG(e)},t.prototype.initSourceEditor=function(e){var t,o=this;if("area"!==e.o.sourceEditor){var n=(0,d.createSourceEditor)(e.o.sourceEditor,e,this.mirrorContainer,this.toWYSIWYG,this.fromWYSIWYG);n.onReadyAlways((function(){var t,r;null===(t=o.sourceEditor)||void 0===t||t.destruct(),o.sourceEditor=n,o.syncValueFromWYSIWYG(!0),null===(r=e.events)||void 0===r||r.fire("sourceEditorReady",e)}))}else null===(t=this.sourceEditor)||void 0===t||t.onReadyAlways((function(){var t;o.syncValueFromWYSIWYG(!0),null===(t=e.events)||void 0===t||t.fire("sourceEditorReady",e)}))},t.prototype.beforeDestruct=function(){this.sourceEditor&&(this.sourceEditor.destruct(),delete this.sourceEditor),s.Dom.safeRemove(this.mirrorContainer)},n.__decorate([(0,c.watch)(":insertHTML.source")],t.prototype,"onInsertHTML",null),n.__decorate([c.autobind],t.prototype,"fromWYSIWYG",null),n.__decorate([c.autobind],t.prototype,"toWYSIWYG",null),n.__decorate([c.autobind],t.prototype,"getNormalPosition",null),n.__decorate([(0,c.watch)(":beforeCommand.source")],t.prototype,"onSelectAll",null),n.__decorate([(0,c.watch)(":beforeSetMode.source")],t.prototype,"saveSelection",null),n.__decorate([(0,c.watch)(":afterSetMode.source")],t.prototype,"removeSelection",null),n.__decorate([c.autobind],t.prototype,"setMirrorSelectionRange",null),n.__decorate([(0,c.watch)(":readonly.source")],t.prototype,"onReadonlyReact",null),n.__decorate([c.autobind],t.prototype,"syncValueFromWYSIWYG",null),t}(a.Plugin);t.source=p,u.pluginSystem.add("source",p)},50876:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(77904);n.Config.prototype.spellcheck=!1,r.Icon.set("spellcheck",o(69546)),n.Config.prototype.controls.spellcheck={isActive:function(e){return e.o.spellcheck},icon:o(69546),name:"spellcheck",command:"toggleSpellcheck",tooltip:"Spellcheck"}},87882:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.zh_tw=t.zh_cn=t.tr=t.ru=t.pt_br=t.pl=t.nl=t.ko=t.ja=t.it=t.id=t.hu=t.he=t.fr=t.fa=t.es=t.de=t.cs_cz=t.ar=void 0;var n=o(5586);t.ar=n;var r=o(66023);t.cs_cz=r;var i=o(65860);t.de=i;var a=o(86055);t.es=a;var s=o(50037);t.fa=s;var l=o(7118);t.fr=l;var c=o(30298);t.he=c;var u=o(52107);t.hu=u;var d=o(31240);t.id=d;var p=o(4101);t.it=p;var f=o(69286);t.ja=f;var h=o(13402);t.ko=h;var m=o(89574);t.nl=m;var v=o(63630);t.pl=v;var g=o(72212);t.pt_br=g;var y=o(82570);t.ru=y;var _=o(19323);t.tr=_;var b=o(50279);t.zh_cn=b;var S=o(98364);t.zh_tw=S},17002:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.spellcheck=void 0;var n=o(20255),r=o(57549),i=o(67309),a=o(43441),s=o(17332);o(50876);var l=function(e){function t(t){var n=e.call(this,t)||this;return n.buttons=[{group:"state",name:"spellcheck"}],(0,s.extendLang)(o(87882)),n}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;e.e.on("afterInit afterAddPlace prepareWYSIWYGEditor",this.toggleSpellcheck),this.toggleSpellcheck(),e.registerCommand("toggleSpellcheck",(function(){t.jodit.o.spellcheck=!t.jodit.o.spellcheck,t.toggleSpellcheck(),t.j.e.fire("updateToolbar")}))},t.prototype.toggleSpellcheck=function(){(0,i.attr)(this.jodit.editor,"spellcheck",this.jodit.o.spellcheck)},t.prototype.beforeDestruct=function(e){},n.__decorate([a.autobind],t.prototype,"toggleSpellcheck",null),t}(r.Plugin);t.spellcheck=l,s.pluginSystem.add("spellcheck",l)},59818:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.showCharsCounter=!0,n.Config.prototype.countHTMLChars=!1,n.Config.prototype.showWordsCounter=!0},1557:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stat=void 0;var n=o(20255),r=o(86893),i=o(85605),a=o(24263),s=o(17332);o(59818);var l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.charCounter=null,t.wordCounter=null,t.reInit=function(){t.j.o.showCharsCounter&&t.charCounter&&t.j.statusbar.append(t.charCounter,!0),t.j.o.showWordsCounter&&t.wordCounter&&t.j.statusbar.append(t.wordCounter,!0),t.j.e.off("change keyup",t.calc).on("change keyup",t.calc),t.calc()},t.calc=t.j.async.throttle((function(){var e=t.j.text;if(t.j.o.showCharsCounter&&t.charCounter){var o=t.j.o.countHTMLChars?t.j.value:e.replace((0,r.SPACE_REG_EXP)(),"");t.charCounter.textContent=t.j.i18n("Chars: %d",o.length)}t.j.o.showWordsCounter&&t.wordCounter&&(t.wordCounter.textContent=t.j.i18n("Words: %d",e.replace((0,r.INVISIBLE_SPACE_REG_EXP)(),"").split((0,r.SPACE_REG_EXP)()).filter((function(e){return e.length})).length))}),t.j.defaultTimeout),t}return n.__extends(t,e),t.prototype.afterInit=function(){this.charCounter=this.j.c.span(),this.wordCounter=this.j.c.span(),this.j.e.on("afterInit changePlace afterAddPlace",this.reInit),this.reInit()},t.prototype.beforeDestruct=function(){a.Dom.safeRemove(this.charCounter),a.Dom.safeRemove(this.wordCounter),this.j.e.off("afterInit changePlace afterAddPlace",this.reInit),this.charCounter=null,this.wordCounter=null},t}(i.Plugin);t.stat=l,s.pluginSystem.add("stat",l)},40790:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166);n.Config.prototype.toolbarSticky=!0,n.Config.prototype.toolbarDisableStickyForMobile=!0,n.Config.prototype.toolbarStickyOffset=0},82808:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sticky=void 0;var n=o(20255);o(60057);var r=o(86893),i=o(85605),a=o(24263),s=o(40332),l=o(43441),c=o(17332);o(40790);var u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.isToolbarSticked=!1,t.createDummy=function(e){r.IS_IE&&!t.dummyBox&&(t.dummyBox=t.j.c.div(),t.dummyBox.classList.add("jodit_sticky-dummy_toolbar"),t.j.container.insertBefore(t.dummyBox,e))},t.addSticky=function(e){t.isToolbarSticked||(t.createDummy(e),t.j.container.classList.add("jodit_sticky"),t.isToolbarSticked=!0),(0,s.css)(e,{top:t.j.o.toolbarStickyOffset||null,width:t.j.container.offsetWidth-2}),r.IS_IE&&t.dummyBox&&(0,s.css)(t.dummyBox,{height:e.offsetHeight})},t.removeSticky=function(e){t.isToolbarSticked&&((0,s.css)(e,{width:"",top:""}),t.j.container.classList.remove("jodit_sticky"),t.isToolbarSticked=!1)},t}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;e.e.on(e.ow,"scroll.sticky wheel.sticky mousewheel.sticky resize.sticky",this.onScroll).on("getStickyState.sticky",(function(){return t.isToolbarSticked}))},t.prototype.onScroll=function(){var e=this.jodit,t=e.ow.pageYOffset||e.od.documentElement&&e.od.documentElement.scrollTop||0,o=(0,s.offset)(e.container,e,e.od,!0),n=e.getMode()===r.MODE_WYSIWYG&&t+e.o.toolbarStickyOffset>o.top&&o.top+o.height>t+e.o.toolbarStickyOffset&&!(e.o.toolbarDisableStickyForMobile&&this.isMobile());if(e.o.toolbarSticky&&!0===e.o.toolbar&&this.isToolbarSticked!==n){var i=e.toolbarContainer;i&&(n?this.addSticky(i):this.removeSticky(i)),e.e.fire("toggleSticky",n)}},t.prototype.isMobile=function(){return this.j&&this.j.options&&this.j.container&&this.j.o.sizeSM>=this.j.container.offsetWidth},t.prototype.beforeDestruct=function(e){this.dummyBox&&a.Dom.safeRemove(this.dummyBox),e.e.off(e.ow,"scroll.sticky wheel.sticky mousewheel.sticky resize.sticky",this.onScroll).off(".sticky")},n.__decorate([(0,l.throttle)()],t.prototype,"onScroll",null),t}(i.Plugin);t.sticky=u,c.pluginSystem.add("sticky",u)},31750:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(77904);n.Config.prototype.usePopupForSpecialCharacters=!1,n.Config.prototype.specialCharacters=["!","&quot;","#","$","%","&amp;","'","(",")","*","+","-",".","/","0","1","2","3","4","5","6","7","8","9",":",";","&lt;","=","&gt;","?","@","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","[","]","^","_","`","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","{","|","}","~","&euro;","&lsquo;","&rsquo;","&ldquo;","&rdquo;","&ndash;","&mdash;","&iexcl;","&cent;","&pound;","&curren;","&yen;","&brvbar;","&sect;","&uml;","&copy;","&ordf;","&laquo;","&raquo;","&not;","&reg;","&macr;","&deg;","&sup2;","&sup3;","&acute;","&micro;","&para;","&middot;","&cedil;","&sup1;","&ordm;","&frac14;","&frac12;","&frac34;","&iquest;","&Agrave;","&Aacute;","&Acirc;","&Atilde;","&Auml;","&Aring;","&AElig;","&Ccedil;","&Egrave;","&Eacute;","&Ecirc;","&Euml;","&Igrave;","&Iacute;","&Icirc;","&Iuml;","&ETH;","&Ntilde;","&Ograve;","&Oacute;","&Ocirc;","&Otilde;","&Ouml;","&times;","&Oslash;","&Ugrave;","&Uacute;","&Ucirc;","&Uuml;","&Yacute;","&THORN;","&szlig;","&agrave;","&aacute;","&acirc;","&atilde;","&auml;","&aring;","&aelig;","&ccedil;","&egrave;","&eacute;","&ecirc;","&euml;","&igrave;","&iacute;","&icirc;","&iuml;","&eth;","&ntilde;","&ograve;","&oacute;","&ocirc;","&otilde;","&ouml;","&divide;","&oslash;","&ugrave;","&uacute;","&ucirc;","&uuml;","&yacute;","&thorn;","&yuml;","&OElig;","&oelig;","&#372;","&#374","&#373","&#375;","&sbquo;","&#8219;","&bdquo;","&hellip;","&trade;","&#9658;","&bull;","&rarr;","&rArr;","&hArr;","&diams;","&asymp;"],r.Icon.set("symbols",o(43158)),n.Config.prototype.controls.symbols={hotkeys:["ctrl+shift+i","cmd+shift+i"],tooltip:"Insert Special Character",popup:function(e,t,o,n){var r=e.e.fire("generateSpecialCharactersTable.symbols");if(r){if(e.o.usePopupForSpecialCharacters){var i=e.c.div();return i.classList.add("jodit-symbols"),i.appendChild(r),e.e.on(r,"close_dialog",n),i}e.alert(r,"Select Special Character",void 0,"jodit-symbols").bindDestruct(e);var a=r.querySelector("a");a&&a.focus()}}}},21236:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.zh_tw=t.zh_cn=t.tr=t.ru=t.pt_br=t.pl=t.nl=t.ko=t.ja=t.it=t.id=t.hu=t.he=t.fr=t.fa=t.es=t.de=t.cs_cz=t.ar=void 0;var n=o(54261);t.ar=n;var r=o(60425);t.cs_cz=r;var i=o(7057);t.de=i;var a=o(48356);t.es=a;var s=o(11428);t.fa=s;var l=o(29084);t.fr=l;var c=o(22876);t.he=c;var u=o(20890);t.hu=u;var d=o(75987);t.id=d;var p=o(60379);t.it=p;var f=o(99950);t.ja=f;var h=o(60934);t.ko=h;var m=o(21994);t.nl=m;var v=o(38128);t.pl=v;var g=o(71515);t.pt_br=g;var y=o(58194);t.ru=y;var _=o(65802);t.tr=_;var b=o(86628);t.zh_cn=b;var S=o(32210);t.zh_tw=S},48560:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.symbols=void 0;var n=o(20255);o(33393);var r=o(86893),i=o(85605),a=o(24263),s=o(76502),l=o(17332);o(31750);var c=function(e){function t(t){var n=e.call(this,t)||this;return n.buttons=[{name:"symbols",group:"insert"}],n.countInRow=17,(0,l.extendLang)(o(21236)),n}return n.__extends(t,e),t.prototype.afterInit=function(e){var t=this;e.e.on("generateSpecialCharactersTable.symbols",(function(){for(var o=e.c.fromHTML('<div class="jodit-symbols__container">\n\t\t\t\t\t\t<div class="jodit-symbols__container_table">\n\t\t\t\t\t\t\t<table class="jodit-symbols__table"><tbody></tbody></table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="jodit-symbols__container_preview">\n\t\t\t\t\t\t\t<div class="jodit-symbols__preview"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>'),n=o.querySelector(".jodit-symbols__preview"),i=o.querySelector("table").tBodies[0],l=[],c=0;e.o.specialCharacters.length>c;){for(var u=e.c.element("tr"),d=0;t.countInRow>d&&e.o.specialCharacters.length>c;d+=1,c+=1){var p=e.c.element("td"),f=e.c.fromHTML('<a\n\t\t\t\t\t\t\t\t\tdata-index="'.concat(c,'"\n\t\t\t\t\t\t\t\t\tdata-index-j="').concat(d,'"\n\t\t\t\t\t\t\t\t\trole="option"\n\t\t\t\t\t\t\t\t\ttabindex="-1"\n\t\t\t\t\t\t\t>').concat(e.o.specialCharacters[c],"</a>"));l.push(f),p.appendChild(f),u.appendChild(p)}i.appendChild(u)}var h=t;return e.e.on(l,"focus",(function(){n.innerHTML=this.innerHTML})).on(l,"mousedown",(function(t){a.Dom.isTag(this,"a")&&(e.s.focus(),e.s.insertHTML(this.innerHTML),e.e.fire(this,"close_dialog"),t&&t.preventDefault(),t&&t.stopImmediatePropagation())})).on(l,"mouseenter",(function(){a.Dom.isTag(this,"a")&&this.focus()})).on(l,"keydown",(function(t){var o=t.target;if(a.Dom.isTag(o,"a")){var n=parseInt((0,s.attr)(o,"-index")||"0",10),i=parseInt((0,s.attr)(o,"data-index-j")||"0",10),c=void 0;switch(t.key){case r.KEY_UP:case r.KEY_DOWN:void 0===l[c=t.key===r.KEY_UP?n-h.countInRow:n+h.countInRow]&&(c=t.key===r.KEY_UP?Math.floor(l.length/h.countInRow)*h.countInRow+i:i)>l.length-1&&(c-=h.countInRow),l[c]&&l[c].focus();break;case r.KEY_RIGHT:case r.KEY_LEFT:void 0===l[c=t.key===r.KEY_LEFT?n-1:n+1]&&(c=t.key===r.KEY_LEFT?l.length-1:0),l[c]&&l[c].focus();break;case r.KEY_ENTER:e.e.fire(o,"mousedown"),t.stopImmediatePropagation(),t.preventDefault()}}})),o}))},t.prototype.beforeDestruct=function(e){e.e.off("generateSpecialCharactersTable.symbols")},t}(i.Plugin);t.symbols=c,l.pluginSystem.add("symbols",c)},15797:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(20255).__exportStar(o(41170),t)},41170:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.onTabInsideLi=void 0;var n=o(20255),r=o(24263);o(603),t.onTabInsideLi=function(e,t){if(void 0===t&&(t=!1),!e.o.tab.tabInsideLiInsertNewList)return!1;var o=n.__read(function(e){var t=e.createInside.fake(),o=e.createInside.fake(),n=e.s.range.cloneRange();n.collapse(!0),n.insertNode(t);var r=e.s.range.cloneRange();return r.collapse(!1),r.insertNode(o),[t,o]}(e),2),i=o[0],a=o[1];try{var s=function(e,t,o){var n=r.Dom.closest(t,"li",e.editor);return!!n&&!(!o&&!r.Dom.isTag(n.previousElementSibling,"li"))&&!(o&&!r.Dom.closest(n,"li",e.editor))&&n}(e,i,t);if(!s)return!1;if(!function(e,t,o){var n=r.Dom.closest(o,"li",t.editor);return!(!n||n!==e&&!e.contains(n))}(s,e,i))return!1;var l=r.Dom.closest(s,["ol","ul"],e.editor);return!(!l||t&&!r.Dom.closest(l,"li",e.editor)||(t?function(e,t,o){var n=r.Dom.closest(t,"li",e.editor),i=Array.from(t.children).filter((function(e){return r.Dom.isTag(e,"li")}));r.Dom.after(n,o);var a=i.indexOf(o);if(0!==a&&1!==i.length||r.Dom.safeRemove(t),a!==i.length-1){var s=t.cloneNode();r.Dom.append(o,s);for(var l=a+1;i.length>l;l+=1)r.Dom.append(s,i[l])}}(e,l,s):function(e,t,o){var n=o.previousElementSibling,i=n.lastElementChild,a=r.Dom.isTag(i,t.tagName)?i:e.createInside.element(t.tagName,Array.from(t.attributes).reduce((function(e,t){return e[t.name]=t.value,e}),{}));a.appendChild(o),i!==a&&n.appendChild(a)}(e,l,s),0))}finally{var c=e.s.createRange();c.setStartAfter(i),c.setEndBefore(a),e.s.selectRange(c),r.Dom.safeRemove(i),r.Dom.safeRemove(a)}return!1}},56198:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.tab={tabInsideLiInsertNewList:!0}},32246:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255),r=o(57549),i=o(43441),a=o(86893),s=o(17332),l=o(15797);o(56198);var c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n.__extends(t,e),t.prototype.afterInit=function(e){},t.prototype.__onTab=function(e){if(e.key===a.KEY_TAB&&this.__onShift(e.shiftKey))return!1},t.prototype.__onCommand=function(e){if(("indent"===e||"outdent"===e)&&this.__onShift("outdent"===e))return!1},t.prototype.__onShift=function(e){var t=(0,l.onTabInsideLi)(this.j,e);return t&&this.j.e.fire("afterTab",e),t},t.prototype.beforeDestruct=function(e){},n.__decorate([(0,i.watch)(":keydown.tab")],t.prototype,"__onTab",null),n.__decorate([(0,i.watch)(":beforeCommand.tab")],t.prototype,"__onCommand",null),t}(r.Plugin);s.pluginSystem.add("tab",c)},23308:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tableKeyboardNavigation=void 0;var n=o(86893),r=o(24263),i=o(25120),a=o(17332);function s(e){e.e.off(".tableKeyboardNavigation").on("keydown.tableKeyboardNavigation",(function(t){var o,a;if((t.key===n.KEY_TAB||t.key===n.KEY_LEFT||t.key===n.KEY_RIGHT||t.key===n.KEY_UP||t.key===n.KEY_DOWN)&&(o=e.s.current(),a=r.Dom.up(o,(function(e){return e&&e.nodeName&&/^td|th$/i.test(e.nodeName)}),e.editor))){var s=e.s.range;if(t.key===n.KEY_TAB||o===a||(t.key!==n.KEY_LEFT&&t.key!==n.KEY_UP||!(r.Dom.prev(o,(function(e){return t.key===n.KEY_UP?r.Dom.isTag(e,"br"):Boolean(e)}),a)||t.key!==n.KEY_UP&&r.Dom.isText(o)&&0!==s.startOffset))&&(t.key!==n.KEY_RIGHT&&t.key!==n.KEY_DOWN||!(r.Dom.next(o,(function(e){return t.key===n.KEY_DOWN?r.Dom.isTag(e,"br"):Boolean(e)}),a)||t.key!==n.KEY_DOWN&&r.Dom.isText(o)&&o.nodeValue&&s.startOffset!==o.nodeValue.length))){var l=r.Dom.up(a,(function(e){return e&&/^table$/i.test(e.nodeName)}),e.editor),c=null;switch(t.key){case n.KEY_TAB:case n.KEY_LEFT:var u=t.key===n.KEY_LEFT||t.shiftKey?"prev":"next";(c=r.Dom[u](a,(function(e){return e&&/^td|th$/i.test(e.tagName)}),l))||(i.Table.appendRow(l,"next"!==u&&l.querySelector("tr"),"next"===u,e.createInside),c=r.Dom[u](a,r.Dom.isCell,l));break;case n.KEY_UP:case n.KEY_DOWN:var d=0,p=0,f=i.Table.formalMatrix(l,(function(e,t,o){e===a&&(d=t,p=o)}));t.key===n.KEY_UP?void 0!==f[d-1]&&(c=f[d-1][p]):void 0!==f[d+1]&&(c=f[d+1][p])}if(c){if(c.firstChild)t.key===n.KEY_TAB?e.s.select(c,!0):e.s.setCursorIn(c,t.key===n.KEY_RIGHT||t.key===n.KEY_DOWN);else{var h=e.createInside.element("br");c.appendChild(h),e.s.setCursorBefore(h)}return!1}}}}))}t.tableKeyboardNavigation=s,a.pluginSystem.add("tableKeyboardNavigation",s)},30739:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(64968),i=o(76502),a=o(40332),s=o(77904);n.Config.prototype.table={selectionCellStyle:"border: 1px double #1e88e5 !important;",useExtraClassesOptions:!1},s.Icon.set("table",o(51716)),n.Config.prototype.controls.table={data:{cols:10,rows:10,classList:{"table table-bordered":"Bootstrap Bordered","table table-striped":"Bootstrap Striped","table table-dark":"Bootstrap Dark"}},popup:function(e,t,o,n,s){for(var l=o.data&&o.data.rows?o.data.rows:10,c=o.data&&o.data.cols?o.data.cols:10,u=e.c.fromHTML('<form class="jodit-form jodit-form__inserter"><div class="jodit-form__table-creator-box"><div class="jodit-form__container"></div><div class="jodit-form__options">'+function(){if(!e.o.table.useExtraClassesOptions)return"";var t=[];if(o.data){var n=o.data.classList;Object.keys(n).forEach((function(e){t.push('<label class="jodit_vertical_middle"><input class="jodit-checkbox" value="'.concat(e,'" type="checkbox"/>').concat(n[e],"</label>"))}))}return t.join("")}()+'</div></div><label class="jodit-form__center"><span>1</span> &times; <span>1</span></label></form>'),d=u.querySelectorAll("span")[0],p=u.querySelectorAll("span")[1],f=u.querySelector(".jodit-form__container"),h=u.querySelector(".jodit-form__options"),m=[],v=l*c,g=0;v>g;g+=1)m[g]||m.push(e.c.element("span",{dataIndex:g}));if(e.e.on(f,"mousemove",(function(e,t){var o=e.target;if(r.Dom.isTag(o,"span")){for(var n=void 0===t||isNaN(t)?parseInt((0,i.attr)(o,"-index")||"0",10):t||0,a=Math.ceil((n+1)/c),s=n%c+1,l=0;m.length>l;l+=1)m[l].className=l%c+1>s||a<Math.ceil((l+1)/c)?"":"jodit_hovered";p.textContent=s.toString(),d.textContent=a.toString()}})).on(f,"touchstart mousedown",(function(t){var o=t.target;if(t.preventDefault(),t.stopImmediatePropagation(),r.Dom.isTag(o,"span")){var s=parseInt((0,i.attr)(o,"-index")||"0",10),l=Math.ceil((s+1)/c),u=s%c+1,d=e.createInside,p=d.element("tbody"),f=d.element("table");f.appendChild(p);for(var m,v,g=null,y=1;l>=y;y+=1){m=d.element("tr");for(var _=1;u>=_;_+=1)v=d.element("td"),g||(g=v),(0,a.css)(v,"width",(100/u).toFixed(4)+"%"),v.appendChild(d.element("br")),m.appendChild(d.text("\n")),m.appendChild(d.text("\t")),m.appendChild(v);p.appendChild(d.text("\n")),p.appendChild(m)}(0,a.$$)("input[type=checkbox]:checked",h).forEach((function(e){e.value.split(/[\s]+/).forEach((function(e){f.classList.add(e)}))})),e.editor.firstChild&&e.s.insertNode(d.text("\n"),!1,!1),e.s.insertNode(f,!1),g&&(e.s.setCursorIn(g),(0,a.scrollIntoViewIfNeeded)(g,e.editor,e.ed)),n()}})),s&&s.parentElement){for(g=0;l>g;g+=1){for(var y=e.c.div(),_=0;c>_;_+=1)y.appendChild(m[g*c+_]);f.appendChild(y)}m[0]&&(m[0].className="hovered")}return u},tooltip:"Insert table"}},45842:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.table=void 0,o(51057);var n=o(17332);function r(e){e.registerButton({name:"table",group:"insert"})}o(30739),t.table=r,n.pluginSystem.add("table",r)},79114:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(93166),r=o(718),i=o(40332),a=o(95963),s=o(96516);o(77904).Icon.set("video",o(49222)),n.Config.prototype.controls.video={popup:function(e,t,o,n){var l=new a.UIForm(e,[new a.UIBlock(e,[new a.UIInput(e,{name:"url",required:!0,label:"URL",placeholder:"https://",validators:["url"]})]),new a.UIBlock(e,[(0,s.Button)(e,"","Insert","primary").onAction((function(){return l.submit()}))])]),c=new a.UIForm(e,[new a.UIBlock(e,[new a.UITextArea(e,{name:"code",required:!0,label:"Embed code"})]),new a.UIBlock(e,[(0,s.Button)(e,"","Insert","primary").onAction((function(){return c.submit()}))])]),u=[],d=function(t){e.s.restore(),e.s.insertHTML(t),n()};return e.s.save(),u.push({icon:"link",name:"Link",content:l.container},{icon:"source",name:"Code",content:c.container}),l.onSubmit((function(e){d((0,i.convertMediaUrlToVideoEmbed)(e.url))})),c.onSubmit((function(e){d(e.code)})),(0,r.TabsWidget)(e,u)},tags:["iframe"],tooltip:"Insert youtube/vimeo video"}},19889:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(17332);o(79114),n.pluginSystem.add("video",(function(e){e.registerButton({name:"video",group:"media"})}))},64401:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.wrapNodes={exclude:["hr","style","br"],emptyBlockAfterInit:!0}},20728:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255),r=o(57549),i=o(64968),a=o(24421),s=o(43441),l=o(17332);o(64401);var c=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.isSuitableStart=function(e){return i.Dom.isText(e)&&(0,a.isString)(e.nodeValue)&&/[^\s]/.test(e.nodeValue)||t.isNotClosed(e)&&!i.Dom.isTemporary(e)},t.isSuitable=function(e){return i.Dom.isText(e)||t.isNotClosed(e)},t.isNotClosed=function(e){return i.Dom.isElement(e)&&!(i.Dom.isBlock(e)||i.Dom.isTag(e,t.j.o.wrapNodes.exclude))},t}return n.__extends(t,e),t.prototype.afterInit=function(e){"br"!==e.o.enter.toLowerCase()&&e.e.on("drop.wtn focus.wtn keydown.wtn mousedown.wtn afterInit.wtn",this.preprocessInput,{top:!0}).on("afterInit.wtn postProcessSetEditorValue.wtn",this.postProcessSetEditorValue)},t.prototype.beforeDestruct=function(e){e.e.off(".wtn")},t.prototype.postProcessSetEditorValue=function(){var e=this.jodit;if(e.isEditorMode()){for(var t=e.editor.firstChild,o=!1;t;){if(t=this.checkAloneListLeaf(t,e),this.isSuitableStart(t)){o||e.s.save(),o=!0;var n=e.createInside.element(e.o.enter);for(i.Dom.before(t,n);t&&this.isSuitable(t);){var r=t.nextSibling;n.appendChild(t),t=r}n.normalize(),t=n}t=t&&t.nextSibling}o&&(e.s.restore(),"afterInit"===e.e.current&&e.e.fire("internalChange"))}},t.prototype.checkAloneListLeaf=function(e,t){var o=e,n=e;do{if(!i.Dom.isElement(n)||!i.Dom.isTag(n,"li")||i.Dom.isTag(n.parentElement,["ul","ol"]))break;var r=i.Dom.findNotEmptySibling(n,!1);i.Dom.isTag(o,"ul")?o.appendChild(n):o=i.Dom.wrap(n,"ul",t.createInside),n=r}while(n);return o},t.prototype.preprocessInput=function(){var e=this.jodit,t="afterInit"===e.e.current;if(e.isEditorMode()&&!e.editor.firstChild&&(e.o.wrapNodes.emptyBlockAfterInit||!t)){var o=e.createInside.element(e.o.enter),n=e.createInside.element("br");i.Dom.append(o,n),i.Dom.append(e.editor,o),e.s.isFocused()&&e.s.setCursorBefore(n),e.e.fire("internalChange")}},n.__decorate([s.autobind],t.prototype,"postProcessSetEditorValue",null),n.__decorate([s.autobind],t.prototype,"preprocessInput",null),t}(r.Plugin);l.pluginSystem.add("wrapNodes",c)},71707:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(93166).Config.prototype.showXPathInStatusbar=!0},18238:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(20255);o(64618);var r=o(86893),i=o(60403),a=o(64968),s=o(40332),l=o(57549),c=o(81438),u=o(17332);o(71707);var d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.onContext=function(e,o){return t.menu||(t.menu=new i.ContextMenu(t.j)),t.menu.show(o.clientX,o.clientY,[{icon:"bin",title:e===t.j.editor?"Clear":"Remove",exec:function(){e!==t.j.editor?a.Dom.safeRemove(e):t.j.value="",t.j.synchronizeValues()}},{icon:"select-all",title:"Select",exec:function(){t.j.s.select(e)}}]),!1},t.onSelectPath=function(e,o){t.j.s.focus();var n=(0,s.attr)(o.target,"-path")||"/";if("/"===n)return t.j.execCommand("selectall"),!1;try{var r=t.j.ed.evaluate(n,t.j.editor,null,XPathResult.ANY_TYPE,null).iterateNext();if(r)return t.j.s.select(r),!1}catch(e){}return t.j.s.select(e),!1},t.tpl=function(e,o,n,r){var i=t.j.c.fromHTML('<span class="jodit-xpath__item"><a role="button" data-path="'.concat(o,'" title="').concat(r,'" tabindex="-1"\'>').concat((0,s.trim)(n),"</a></span>")),a=i.firstChild;return t.j.e.on(a,"click",t.onSelectPath.bind(t,e)).on(a,"contextmenu",t.onContext.bind(t,e)),i},t.removeSelectAll=function(){t.selectAllButton&&(t.selectAllButton.destruct(),delete t.selectAllButton)},t.appendSelectAll=function(){t.removeSelectAll(),t.selectAllButton=(0,c.makeButton)(t.j,n.__assign({name:"selectall"},t.j.o.controls.selectall)),t.selectAllButton.state.size="tiny",t.container&&t.container.insertBefore(t.selectAllButton.container,t.container.firstChild)},t.calcPathImd=function(){if(!t.isDestructed){var e,o,n,i=t.j.s.current();t.container&&(t.container.innerHTML=r.INVISIBLE_SPACE),i&&a.Dom.up(i,(function(r){r&&t.j.editor!==r&&!a.Dom.isText(r)&&(e=r.nodeName.toLowerCase(),o=(0,s.getXPathByElement)(r,t.j.editor).replace(/^\//,""),n=t.tpl(r,o,e,t.j.i18n("Select %s",e)),t.container&&t.container.insertBefore(n,t.container.firstChild))}),t.j.editor),t.appendSelectAll()}},t.calcPath=t.j.async.debounce(t.calcPathImd,2*t.j.defaultTimeout),t}return n.__extends(t,e),t.prototype.afterInit=function(){var e=this;this.j.o.showXPathInStatusbar&&(this.container=this.j.c.div("jodit-xpath"),this.j.e.off(".xpath").on("mouseup.xpath change.xpath keydown.xpath changeSelection.xpath",this.calcPath).on("afterSetMode.xpath afterInit.xpath changePlace.xpath",(function(){e.j.o.showXPathInStatusbar&&e.container&&(e.j.statusbar.append(e.container),e.j.getRealMode()===r.MODE_WYSIWYG?e.calcPath():(e.container&&(e.container.innerHTML=r.INVISIBLE_SPACE),e.appendSelectAll()))})),this.calcPath())},t.prototype.beforeDestruct=function(){this.j&&this.j.events&&this.j.e.off(".xpath"),this.removeSelectAll(),this.menu&&this.menu.destruct(),a.Dom.safeRemove(this.container),delete this.menu,delete this.container},t}(l.Plugin);u.pluginSystem.add("xpath",d)},89019:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),o(61227),o(690),o(66622),o(69220),o(10444),Array.prototype.includes||(Array.prototype.includes=function(e){return this.indexOf(e)>-1}),"function"!=typeof Object.assign&&Object.defineProperty(Object,"assign",{value:function(e,t){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var o=Object(e),n=1;arguments.length>n;n++){var r=arguments[n];if(null!=r)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(o[i]=r[i])}return o},writable:!0,configurable:!0}),Array.prototype.find||(Array.prototype.find=function(e){return this.indexOf(e)>-1?e:void 0}),String.prototype.endsWith||(String.prototype.endsWith=function(e){return this[this.length-1]===e})},15261:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.valign=t.upload=t.update=t.unlock=t.settings=t.save=t.right=t.resize_handler=t.plus=t.pencil=t.ok=t.lock=t.left=t.info_circle=t.folder=t.file=t.eye=t.dots=t.chevron=t.check=t.center=t.cancel=t.bin=t.angle_up=t.angle_right=t.angle_left=t.angle_down=void 0;var n=o(1755);t.angle_down=n;var r=o(74911);t.angle_left=r;var i=o(8805);t.angle_right=i;var a=o(16547);t.angle_up=a;var s=o(10856);t.bin=s;var l=o(98441);t.cancel=l;var c=o(52488);t.center=c;var u=o(9370);t.check=u;var d=o(66543);t.chevron=d;var p=o(608);t.dots=p;var f=o(42840);t.eye=f;var h=o(79096);t.file=h;var m=o(33014);t.folder=m;var v=o(91677);t.info_circle=v;var g=o(8259);t.left=g;var y=o(64467);t.lock=y;var _=o(86934);t.ok=_;var b=o(76133);t.pencil=b;var S=o(45519);t.plus=S;var w=o(90265);t.resize_handler=w;var C=o(81279);t.right=C;var j=o(68899);t.save=j;var E=o(70744);t.settings=E;var k=o(19201);t.unlock=k;var x=o(84930);t.update=x;var I=o(99704);t.upload=I;var T=o(2304);t.valign=T},80078:function(e){e.exports={"copy-format":"نسخ التنسيق"}},16986:function(e){e.exports={"copy-format":"Kopírovat formát"}},59347:function(e){e.exports={"copy-format":"Format kopierenт"}},63640:function(e){e.exports={"copy-format":"Copiar formato"}},53434:function(e){e.exports={"copy-format":"کپی کردن قالب"}},85638:function(e){e.exports={"copy-format":"Format de copie"}},31743:function(e){e.exports={"copy-format":"העתק עיצוב"}},66219:function(e){e.exports={"copy-format":"Formátum másolás"}},50331:function(e){e.exports={"copy-format":"salin format"}},25582:function(e){e.exports={"copy-format":"Copia il formato"}},82066:function(e){e.exports={"copy-format":"copyformat"}},71925:function(e){e.exports={"copy-format":"복사 형식"}},65274:function(e){e.exports={"copy-format":"opmaak kopiëren"}},58548:function(e){e.exports={"copy-format":"format kopii"}},82958:function(e){e.exports={"copy-format":"Copiar formato"}},52315:function(e){e.exports={"copy-format":"Копировать формат"}},87727:function(e){e.exports={"copy-format":"Kopyalama Biçimi"}},9396:function(e){e.exports={"copy-format":"复制格式"}},28765:function(e){e.exports={"copy-format":"複製格式"}},47762:function(e){e.exports={"Line height":"ارتفاع الخط"}},97495:function(e){e.exports={"Line height":"Výška čáry"}},80131:function(e){e.exports={"Line height":"Zeilenhöhe"}},1201:function(e){e.exports={"Line height":"Altura de la línea"}},89912:function(e){e.exports={"Line height":"ارتفاع خط"}},3405:function(e){e.exports={"Line height":"Hauteur de ligne"}},14129:function(e){e.exports={"Line height":"גובה שורה"}},93729:function(e){e.exports={"Line height":"Vonal magassága"}},16106:function(e){e.exports={"Line height":"Tinggi baris"}},89690:function(e){e.exports={"Line height":"Altezza linea"}},33216:function(e){e.exports={"Line height":"ラインの高さ"}},17282:function(e){e.exports={"Line height":"선 높이"}},91761:function(e){e.exports={"Line height":"Lijnhoogte"}},61675:function(e){e.exports={"Line height":"Wysokość linii"}},69709:function(e){e.exports={"Line height":"Altura da linha"}},82591:function(e){e.exports={"Line height":"Высота линии"}},87649:function(e){e.exports={"Line height":"Çizgi yüksekliği"}},60268:function(e){e.exports={"Line height":"线高"}},58214:function(e){e.exports={"Line height":"ความสูงเส้น"}},5586:function(e){e.exports={Spellcheck:"التدقيق الإملائي"}},66023:function(e){e.exports={Spellcheck:"Kontrola pravopisu"}},65860:function(e){e.exports={Spellcheck:"Rechtschreibprüfung"}},86055:function(e){e.exports={Spellcheck:"Corrección ortográfica"}},50037:function(e){e.exports={Spellcheck:"غلطیابی املایی"}},7118:function(e){e.exports={Spellcheck:"Vérification Orthographique"}},30298:function(e){e.exports={Spellcheck:"בדיקת איות"}},52107:function(e){e.exports={Spellcheck:"Helyesírás-ellenőrzés"}},31240:function(e){e.exports={Spellcheck:"Spellchecking"}},4101:function(e){e.exports={Spellcheck:"Controllo ortografico"}},69286:function(e){e.exports={Spellcheck:"スペルチェック"}},13402:function(e){e.exports={Spellcheck:"맞춤법 검사"}},89574:function(e){e.exports={Spellcheck:"Spellingcontrole"}},63630:function(e){e.exports={Spellcheck:"Sprawdzanie pisowni"}},72212:function(e){e.exports={Spellcheck:"Verificação ortográfica"}},82570:function(e){e.exports={Spellcheck:"Проверка орфографии"}},19323:function(e){e.exports={Spellcheck:"Yazım denetimi"}},50279:function(e){e.exports={Spellcheck:"拼写检查"}},98364:function(e){e.exports={Spellcheck:"สะกดคำ"}},54261:function(e){e.exports={symbols:"رمز"}},60425:function(e){e.exports={symbols:"symbol"}},7057:function(e){e.exports={symbols:"Symbol"}},48356:function(e){e.exports={symbols:"Símbolo"}},11428:function(e){e.exports={symbols:"سمبل"}},29084:function(e){e.exports={symbols:"caractère"}},22876:function(e){e.exports={symbols:"תו מיוחד"}},20890:function(e){e.exports={symbols:"Szimbólum"}},75987:function(e){e.exports={symbols:"simbol"}},60379:function(e){e.exports={symbols:"Simbolo"}},99950:function(e){e.exports={symbols:"symbol"}},60934:function(e){e.exports={symbols:"기호"}},21994:function(e){e.exports={symbols:"symbool"}},38128:function(e){e.exports={symbols:"symbol"}},71515:function(e){e.exports={symbols:"Símbolo"}},58194:function(e){e.exports={symbols:"символ"}},65802:function(e){e.exports={symbols:"Sembol"}},86628:function(e){e.exports={symbols:"符号"}},32210:function(e){e.exports={symbols:"符號"}},52378:function(e){"use strict";e.exports={assert(){}}}},o={};function n(e){var r=o[e];if(void 0!==r)return r.exports;var i=o[e]={exports:{}};return t[e].call(i.exports,i,i.exports,n),i.exports}n.m=t,e=[],n.O=function(t,o,r,i){if(!o){var a=1/0;for(u=0;e.length>u;u++){o=e[u][0],r=e[u][1],i=e[u][2];for(var s=!0,l=0;o.length>l;l++)(!1&i||a>=i)&&Object.keys(n.O).every((function(e){return n.O[e](o[l])}))?o.splice(l--,1):(s=!1,a>i&&(a=i));if(s){e.splice(u--,1);var c=r();void 0!==c&&(t=c)}}return t}i=i||0;for(var u=e.length;u>0&&e[u-1][2]>i;u--)e[u]=e[u-1];e[u]=[o,r,i]},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){var e={670:0};n.O.j=function(t){return 0===e[t]};var t=function(t,o){var r,i,a=o[0],s=o[1],l=o[2],c=0;if(a.some((function(t){return 0!==e[t]}))){for(r in s)n.o(s,r)&&(n.m[r]=s[r]);if(l)var u=l(n)}for(t&&t(o);a.length>c;c++)n.o(e,i=a[c])&&e[i]&&e[i][0](),e[i]=0;return n.O(u)},o=self.webpackChunkjodit=self.webpackChunkjodit||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))}();var r={};return function(){"use strict";var e=r;Object.defineProperty(e,"__esModule",{value:!0}),e.CommitMode=e.Jodit=void 0,n(90176),"undefined"!=typeof window&&n(89019);var t=n(37920);Object.defineProperty(e,"Jodit",{enumerable:!0,get:function(){return t.Jodit}});var o=n(26435),i=n(43441),a=n(86893),s=n(87837),l=n(15261);n(70022),n(91147),Object.keys(a).forEach((function(e){t.Jodit[e]=a[e]}));var c=function(e){return"__esModule"!==e};Object.keys(l).filter(c).forEach((function(e){s.Icon.set(e.replace("_","-"),l[e])})),Object.keys(s).filter(c).forEach((function(e){t.Jodit.modules[e]=s[e]})),Object.keys(i).filter(c).forEach((function(e){t.Jodit.decorators[e]=i[e]})),["Confirm","Alert","Prompt"].forEach((function(e){t.Jodit[e]=s[e]})),Object.keys(o.default).filter(c).forEach((function(e){t.Jodit.lang[e]=o.default[e]})),e.CommitMode=function(){}}(),n.O(r)}()}));

/***/ }),

/***/ "./node_modules/lightgallery/lightgallery.es5.js":
/*!*******************************************************!*\
  !*** ./node_modules/lightgallery/lightgallery.es5.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*!
 * lightgallery | 2.7.0 | October 9th 2022
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

/**
 * List of lightGallery events
 * All events should be documented here
 * Below interfaces are used to build the website documentations
 * */
var lGEvents = {
    afterAppendSlide: 'lgAfterAppendSlide',
    init: 'lgInit',
    hasVideo: 'lgHasVideo',
    containerResize: 'lgContainerResize',
    updateSlides: 'lgUpdateSlides',
    afterAppendSubHtml: 'lgAfterAppendSubHtml',
    beforeOpen: 'lgBeforeOpen',
    afterOpen: 'lgAfterOpen',
    slideItemLoad: 'lgSlideItemLoad',
    beforeSlide: 'lgBeforeSlide',
    afterSlide: 'lgAfterSlide',
    posterClick: 'lgPosterClick',
    dragStart: 'lgDragStart',
    dragMove: 'lgDragMove',
    dragEnd: 'lgDragEnd',
    beforeNextSlide: 'lgBeforeNextSlide',
    beforePrevSlide: 'lgBeforePrevSlide',
    beforeClose: 'lgBeforeClose',
    afterClose: 'lgAfterClose',
    rotateLeft: 'lgRotateLeft',
    rotateRight: 'lgRotateRight',
    flipHorizontal: 'lgFlipHorizontal',
    flipVertical: 'lgFlipVertical',
    autoplay: 'lgAutoplay',
    autoplayStart: 'lgAutoplayStart',
    autoplayStop: 'lgAutoplayStop',
};

var lightGalleryCoreSettings = {
    mode: 'lg-slide',
    easing: 'ease',
    speed: 400,
    licenseKey: '0000-0000-000-0000',
    height: '100%',
    width: '100%',
    addClass: '',
    startClass: 'lg-start-zoom',
    backdropDuration: 300,
    container: '',
    startAnimationDuration: 400,
    zoomFromOrigin: true,
    hideBarsDelay: 0,
    showBarsAfter: 10000,
    slideDelay: 0,
    supportLegacyBrowser: true,
    allowMediaOverlap: false,
    videoMaxSize: '1280-720',
    loadYouTubePoster: true,
    defaultCaptionHeight: 0,
    ariaLabelledby: '',
    ariaDescribedby: '',
    resetScrollPosition: true,
    hideScrollbar: false,
    closable: true,
    swipeToClose: true,
    closeOnTap: true,
    showCloseIcon: true,
    showMaximizeIcon: false,
    loop: true,
    escKey: true,
    keyPress: true,
    trapFocus: true,
    controls: true,
    slideEndAnimation: true,
    hideControlOnEnd: false,
    mousewheel: false,
    getCaptionFromTitleOrAlt: true,
    appendSubHtmlTo: '.lg-sub-html',
    subHtmlSelectorRelative: false,
    preload: 2,
    numberOfSlideItemsInDom: 10,
    selector: '',
    selectWithin: '',
    nextHtml: '',
    prevHtml: '',
    index: 0,
    iframeWidth: '100%',
    iframeHeight: '100%',
    iframeMaxWidth: '100%',
    iframeMaxHeight: '100%',
    download: true,
    counter: true,
    appendCounterTo: '.lg-toolbar',
    swipeThreshold: 50,
    enableSwipe: true,
    enableDrag: true,
    dynamic: false,
    dynamicEl: [],
    extraProps: [],
    exThumbImage: '',
    isMobile: undefined,
    mobileSettings: {
        controls: false,
        showCloseIcon: false,
        download: false,
    },
    plugins: [],
    strings: {
        closeGallery: 'Close gallery',
        toggleMaximize: 'Toggle maximize',
        previousSlide: 'Previous slide',
        nextSlide: 'Next slide',
        download: 'Download',
        playVideo: 'Play video',
    },
};

function initLgPolyfills() {
    (function () {
        if (typeof window.CustomEvent === 'function')
            return false;
        function CustomEvent(event, params) {
            params = params || {
                bubbles: false,
                cancelable: false,
                detail: null,
            };
            var evt = document.createEvent('CustomEvent');
            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
            return evt;
        }
        window.CustomEvent = CustomEvent;
    })();
    (function () {
        if (!Element.prototype.matches) {
            Element.prototype.matches =
                Element.prototype.msMatchesSelector ||
                    Element.prototype.webkitMatchesSelector;
        }
    })();
}
var lgQuery = /** @class */ (function () {
    function lgQuery(selector) {
        this.cssVenderPrefixes = [
            'TransitionDuration',
            'TransitionTimingFunction',
            'Transform',
            'Transition',
        ];
        this.selector = this._getSelector(selector);
        this.firstElement = this._getFirstEl();
        return this;
    }
    lgQuery.generateUUID = function () {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;
            return v.toString(16);
        });
    };
    lgQuery.prototype._getSelector = function (selector, context) {
        if (context === void 0) { context = document; }
        if (typeof selector !== 'string') {
            return selector;
        }
        context = context || document;
        var fl = selector.substring(0, 1);
        if (fl === '#') {
            return context.querySelector(selector);
        }
        else {
            return context.querySelectorAll(selector);
        }
    };
    lgQuery.prototype._each = function (func) {
        if (!this.selector) {
            return this;
        }
        if (this.selector.length !== undefined) {
            [].forEach.call(this.selector, func);
        }
        else {
            func(this.selector, 0);
        }
        return this;
    };
    lgQuery.prototype._setCssVendorPrefix = function (el, cssProperty, value) {
        // prettier-ignore
        var property = cssProperty.replace(/-([a-z])/gi, function (s, group1) {
            return group1.toUpperCase();
        });
        if (this.cssVenderPrefixes.indexOf(property) !== -1) {
            el.style[property.charAt(0).toLowerCase() + property.slice(1)] = value;
            el.style['webkit' + property] = value;
            el.style['moz' + property] = value;
            el.style['ms' + property] = value;
            el.style['o' + property] = value;
        }
        else {
            el.style[property] = value;
        }
    };
    lgQuery.prototype._getFirstEl = function () {
        if (this.selector && this.selector.length !== undefined) {
            return this.selector[0];
        }
        else {
            return this.selector;
        }
    };
    lgQuery.prototype.isEventMatched = function (event, eventName) {
        var eventNamespace = eventName.split('.');
        return event
            .split('.')
            .filter(function (e) { return e; })
            .every(function (e) {
            return eventNamespace.indexOf(e) !== -1;
        });
    };
    lgQuery.prototype.attr = function (attr, value) {
        if (value === undefined) {
            if (!this.firstElement) {
                return '';
            }
            return this.firstElement.getAttribute(attr);
        }
        this._each(function (el) {
            el.setAttribute(attr, value);
        });
        return this;
    };
    lgQuery.prototype.find = function (selector) {
        return $LG(this._getSelector(selector, this.selector));
    };
    lgQuery.prototype.first = function () {
        if (this.selector && this.selector.length !== undefined) {
            return $LG(this.selector[0]);
        }
        else {
            return $LG(this.selector);
        }
    };
    lgQuery.prototype.eq = function (index) {
        return $LG(this.selector[index]);
    };
    lgQuery.prototype.parent = function () {
        return $LG(this.selector.parentElement);
    };
    lgQuery.prototype.get = function () {
        return this._getFirstEl();
    };
    lgQuery.prototype.removeAttr = function (attributes) {
        var attrs = attributes.split(' ');
        this._each(function (el) {
            attrs.forEach(function (attr) { return el.removeAttribute(attr); });
        });
        return this;
    };
    lgQuery.prototype.wrap = function (className) {
        if (!this.firstElement) {
            return this;
        }
        var wrapper = document.createElement('div');
        wrapper.className = className;
        this.firstElement.parentNode.insertBefore(wrapper, this.firstElement);
        this.firstElement.parentNode.removeChild(this.firstElement);
        wrapper.appendChild(this.firstElement);
        return this;
    };
    lgQuery.prototype.addClass = function (classNames) {
        if (classNames === void 0) { classNames = ''; }
        this._each(function (el) {
            // IE doesn't support multiple arguments
            classNames.split(' ').forEach(function (className) {
                if (className) {
                    el.classList.add(className);
                }
            });
        });
        return this;
    };
    lgQuery.prototype.removeClass = function (classNames) {
        this._each(function (el) {
            // IE doesn't support multiple arguments
            classNames.split(' ').forEach(function (className) {
                if (className) {
                    el.classList.remove(className);
                }
            });
        });
        return this;
    };
    lgQuery.prototype.hasClass = function (className) {
        if (!this.firstElement) {
            return false;
        }
        return this.firstElement.classList.contains(className);
    };
    lgQuery.prototype.hasAttribute = function (attribute) {
        if (!this.firstElement) {
            return false;
        }
        return this.firstElement.hasAttribute(attribute);
    };
    lgQuery.prototype.toggleClass = function (className) {
        if (!this.firstElement) {
            return this;
        }
        if (this.hasClass(className)) {
            this.removeClass(className);
        }
        else {
            this.addClass(className);
        }
        return this;
    };
    lgQuery.prototype.css = function (property, value) {
        var _this = this;
        this._each(function (el) {
            _this._setCssVendorPrefix(el, property, value);
        });
        return this;
    };
    // Need to pass separate namespaces for separate elements
    lgQuery.prototype.on = function (events, listener) {
        var _this = this;
        if (!this.selector) {
            return this;
        }
        events.split(' ').forEach(function (event) {
            if (!Array.isArray(lgQuery.eventListeners[event])) {
                lgQuery.eventListeners[event] = [];
            }
            lgQuery.eventListeners[event].push(listener);
            _this.selector.addEventListener(event.split('.')[0], listener);
        });
        return this;
    };
    // @todo - test this
    lgQuery.prototype.once = function (event, listener) {
        var _this = this;
        this.on(event, function () {
            _this.off(event);
            listener(event);
        });
        return this;
    };
    lgQuery.prototype.off = function (event) {
        var _this = this;
        if (!this.selector) {
            return this;
        }
        Object.keys(lgQuery.eventListeners).forEach(function (eventName) {
            if (_this.isEventMatched(event, eventName)) {
                lgQuery.eventListeners[eventName].forEach(function (listener) {
                    _this.selector.removeEventListener(eventName.split('.')[0], listener);
                });
                lgQuery.eventListeners[eventName] = [];
            }
        });
        return this;
    };
    lgQuery.prototype.trigger = function (event, detail) {
        if (!this.firstElement) {
            return this;
        }
        var customEvent = new CustomEvent(event.split('.')[0], {
            detail: detail || null,
        });
        this.firstElement.dispatchEvent(customEvent);
        return this;
    };
    // Does not support IE
    lgQuery.prototype.load = function (url) {
        var _this = this;
        fetch(url)
            .then(function (res) { return res.text(); })
            .then(function (html) {
            _this.selector.innerHTML = html;
        });
        return this;
    };
    lgQuery.prototype.html = function (html) {
        if (html === undefined) {
            if (!this.firstElement) {
                return '';
            }
            return this.firstElement.innerHTML;
        }
        this._each(function (el) {
            el.innerHTML = html;
        });
        return this;
    };
    lgQuery.prototype.append = function (html) {
        this._each(function (el) {
            if (typeof html === 'string') {
                el.insertAdjacentHTML('beforeend', html);
            }
            else {
                el.appendChild(html);
            }
        });
        return this;
    };
    lgQuery.prototype.prepend = function (html) {
        this._each(function (el) {
            el.insertAdjacentHTML('afterbegin', html);
        });
        return this;
    };
    lgQuery.prototype.remove = function () {
        this._each(function (el) {
            el.parentNode.removeChild(el);
        });
        return this;
    };
    lgQuery.prototype.empty = function () {
        this._each(function (el) {
            el.innerHTML = '';
        });
        return this;
    };
    lgQuery.prototype.scrollTop = function (scrollTop) {
        if (scrollTop !== undefined) {
            document.body.scrollTop = scrollTop;
            document.documentElement.scrollTop = scrollTop;
            return this;
        }
        else {
            return (window.pageYOffset ||
                document.documentElement.scrollTop ||
                document.body.scrollTop ||
                0);
        }
    };
    lgQuery.prototype.scrollLeft = function (scrollLeft) {
        if (scrollLeft !== undefined) {
            document.body.scrollLeft = scrollLeft;
            document.documentElement.scrollLeft = scrollLeft;
            return this;
        }
        else {
            return (window.pageXOffset ||
                document.documentElement.scrollLeft ||
                document.body.scrollLeft ||
                0);
        }
    };
    lgQuery.prototype.offset = function () {
        if (!this.firstElement) {
            return {
                left: 0,
                top: 0,
            };
        }
        var rect = this.firstElement.getBoundingClientRect();
        var bodyMarginLeft = $LG('body').style().marginLeft;
        // Minus body margin - https://stackoverflow.com/questions/30711548/is-getboundingclientrect-left-returning-a-wrong-value
        return {
            left: rect.left - parseFloat(bodyMarginLeft) + this.scrollLeft(),
            top: rect.top + this.scrollTop(),
        };
    };
    lgQuery.prototype.style = function () {
        if (!this.firstElement) {
            return {};
        }
        return (this.firstElement.currentStyle ||
            window.getComputedStyle(this.firstElement));
    };
    // Width without padding and border even if box-sizing is used.
    lgQuery.prototype.width = function () {
        var style = this.style();
        return (this.firstElement.clientWidth -
            parseFloat(style.paddingLeft) -
            parseFloat(style.paddingRight));
    };
    // Height without padding and border even if box-sizing is used.
    lgQuery.prototype.height = function () {
        var style = this.style();
        return (this.firstElement.clientHeight -
            parseFloat(style.paddingTop) -
            parseFloat(style.paddingBottom));
    };
    lgQuery.eventListeners = {};
    return lgQuery;
}());
function $LG(selector) {
    initLgPolyfills();
    return new lgQuery(selector);
}

var defaultDynamicOptions = [
    'src',
    'sources',
    'subHtml',
    'subHtmlUrl',
    'html',
    'video',
    'poster',
    'slideName',
    'responsive',
    'srcset',
    'sizes',
    'iframe',
    'downloadUrl',
    'download',
    'width',
    'facebookShareUrl',
    'tweetText',
    'iframeTitle',
    'twitterShareUrl',
    'pinterestShareUrl',
    'pinterestText',
    'fbHtml',
    'disqusIdentifier',
    'disqusUrl',
];
// Convert html data-attribute to camalcase
function convertToData(attr) {
    // FInd a way for lgsize
    if (attr === 'href') {
        return 'src';
    }
    attr = attr.replace('data-', '');
    attr = attr.charAt(0).toLowerCase() + attr.slice(1);
    attr = attr.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });
    return attr;
}
var utils = {
    /**
     * get possible width and height from the lgSize attribute. Used for ZoomFromOrigin option
     */
    getSize: function (el, container, spacing, defaultLgSize) {
        if (spacing === void 0) { spacing = 0; }
        var LGel = $LG(el);
        var lgSize = LGel.attr('data-lg-size') || defaultLgSize;
        if (!lgSize) {
            return;
        }
        var isResponsiveSizes = lgSize.split(',');
        // if at-least two viewport sizes are available
        if (isResponsiveSizes[1]) {
            var wWidth = window.innerWidth;
            for (var i = 0; i < isResponsiveSizes.length; i++) {
                var size_1 = isResponsiveSizes[i];
                var responsiveWidth = parseInt(size_1.split('-')[2], 10);
                if (responsiveWidth > wWidth) {
                    lgSize = size_1;
                    break;
                }
                // take last item as last option
                if (i === isResponsiveSizes.length - 1) {
                    lgSize = size_1;
                }
            }
        }
        var size = lgSize.split('-');
        var width = parseInt(size[0], 10);
        var height = parseInt(size[1], 10);
        var cWidth = container.width();
        var cHeight = container.height() - spacing;
        var maxWidth = Math.min(cWidth, width);
        var maxHeight = Math.min(cHeight, height);
        var ratio = Math.min(maxWidth / width, maxHeight / height);
        return { width: width * ratio, height: height * ratio };
    },
    /**
     * @desc Get transform value based on the imageSize. Used for ZoomFromOrigin option
     * @param {jQuery Element}
     * @returns {String} Transform CSS string
     */
    getTransform: function (el, container, top, bottom, imageSize) {
        if (!imageSize) {
            return;
        }
        var LGel = $LG(el).find('img').first();
        if (!LGel.get()) {
            return;
        }
        var containerRect = container.get().getBoundingClientRect();
        var wWidth = containerRect.width;
        // using innerWidth to include mobile safari bottom bar
        var wHeight = container.height() - (top + bottom);
        var elWidth = LGel.width();
        var elHeight = LGel.height();
        var elStyle = LGel.style();
        var x = (wWidth - elWidth) / 2 -
            LGel.offset().left +
            (parseFloat(elStyle.paddingLeft) || 0) +
            (parseFloat(elStyle.borderLeft) || 0) +
            $LG(window).scrollLeft() +
            containerRect.left;
        var y = (wHeight - elHeight) / 2 -
            LGel.offset().top +
            (parseFloat(elStyle.paddingTop) || 0) +
            (parseFloat(elStyle.borderTop) || 0) +
            $LG(window).scrollTop() +
            top;
        var scX = elWidth / imageSize.width;
        var scY = elHeight / imageSize.height;
        var transform = 'translate3d(' +
            (x *= -1) +
            'px, ' +
            (y *= -1) +
            'px, 0) scale3d(' +
            scX +
            ', ' +
            scY +
            ', 1)';
        return transform;
    },
    getIframeMarkup: function (iframeWidth, iframeHeight, iframeMaxWidth, iframeMaxHeight, src, iframeTitle) {
        var title = iframeTitle ? 'title="' + iframeTitle + '"' : '';
        return "<div class=\"lg-video-cont lg-has-iframe\" style=\"width:" + iframeWidth + "; max-width:" + iframeMaxWidth + "; height: " + iframeHeight + "; max-height:" + iframeMaxHeight + "\">\n                    <iframe class=\"lg-object\" frameborder=\"0\" " + title + " src=\"" + src + "\"  allowfullscreen=\"true\"></iframe>\n                </div>";
    },
    getImgMarkup: function (index, src, altAttr, srcset, sizes, sources) {
        var srcsetAttr = srcset ? "srcset=\"" + srcset + "\"" : '';
        var sizesAttr = sizes ? "sizes=\"" + sizes + "\"" : '';
        var imgMarkup = "<img " + altAttr + " " + srcsetAttr + "  " + sizesAttr + " class=\"lg-object lg-image\" data-index=\"" + index + "\" src=\"" + src + "\" />";
        var sourceTag = '';
        if (sources) {
            var sourceObj = typeof sources === 'string' ? JSON.parse(sources) : sources;
            sourceTag = sourceObj.map(function (source) {
                var attrs = '';
                Object.keys(source).forEach(function (key) {
                    // Do not remove the first space as it is required to separate the attributes
                    attrs += " " + key + "=\"" + source[key] + "\"";
                });
                return "<source " + attrs + "></source>";
            });
        }
        return "" + sourceTag + imgMarkup;
    },
    // Get src from responsive src
    getResponsiveSrc: function (srcItms) {
        var rsWidth = [];
        var rsSrc = [];
        var src = '';
        for (var i = 0; i < srcItms.length; i++) {
            var _src = srcItms[i].split(' ');
            // Manage empty space
            if (_src[0] === '') {
                _src.splice(0, 1);
            }
            rsSrc.push(_src[0]);
            rsWidth.push(_src[1]);
        }
        var wWidth = window.innerWidth;
        for (var j = 0; j < rsWidth.length; j++) {
            if (parseInt(rsWidth[j], 10) > wWidth) {
                src = rsSrc[j];
                break;
            }
        }
        return src;
    },
    isImageLoaded: function (img) {
        if (!img)
            return false;
        // During the onload event, IE correctly identifies any images that
        // weren’t downloaded as not complete. Others should too. Gecko-based
        // browsers act like NS4 in that they report this incorrectly.
        if (!img.complete) {
            return false;
        }
        // However, they do have two very useful properties: naturalWidth and
        // naturalHeight. These give the true size of the image. If it failed
        // to load, either of these should be zero.
        if (img.naturalWidth === 0) {
            return false;
        }
        // No other way of checking: assume it’s ok.
        return true;
    },
    getVideoPosterMarkup: function (_poster, dummyImg, videoContStyle, playVideoString, _isVideo) {
        var videoClass = '';
        if (_isVideo && _isVideo.youtube) {
            videoClass = 'lg-has-youtube';
        }
        else if (_isVideo && _isVideo.vimeo) {
            videoClass = 'lg-has-vimeo';
        }
        else {
            videoClass = 'lg-has-html5';
        }
        return "<div class=\"lg-video-cont " + videoClass + "\" style=\"" + videoContStyle + "\">\n                <div class=\"lg-video-play-button\">\n                <svg\n                    viewBox=\"0 0 20 20\"\n                    preserveAspectRatio=\"xMidYMid\"\n                    focusable=\"false\"\n                    aria-labelledby=\"" + playVideoString + "\"\n                    role=\"img\"\n                    class=\"lg-video-play-icon\"\n                >\n                    <title>" + playVideoString + "</title>\n                    <polygon class=\"lg-video-play-icon-inner\" points=\"1,0 20,10 1,20\"></polygon>\n                </svg>\n                <svg class=\"lg-video-play-icon-bg\" viewBox=\"0 0 50 50\" focusable=\"false\">\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle></svg>\n                <svg class=\"lg-video-play-icon-circle\" viewBox=\"0 0 50 50\" focusable=\"false\">\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle>\n                </svg>\n            </div>\n            " + (dummyImg || '') + "\n            <img class=\"lg-object lg-video-poster\" src=\"" + _poster + "\" />\n        </div>";
    },
    getFocusableElements: function (container) {
        var elements = container.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type="text"]:not([disabled]), input[type="radio"]:not([disabled]), input[type="checkbox"]:not([disabled]), select:not([disabled])');
        var visibleElements = [].filter.call(elements, function (element) {
            var style = window.getComputedStyle(element);
            return style.display !== 'none' && style.visibility !== 'hidden';
        });
        return visibleElements;
    },
    /**
     * @desc Create dynamic elements array from gallery items when dynamic option is false
     * It helps to avoid frequent DOM interaction
     * and avoid multiple checks for dynamic elments
     *
     * @returns {Array} dynamicEl
     */
    getDynamicOptions: function (items, extraProps, getCaptionFromTitleOrAlt, exThumbImage) {
        var dynamicElements = [];
        var availableDynamicOptions = __spreadArrays(defaultDynamicOptions, extraProps);
        [].forEach.call(items, function (item) {
            var dynamicEl = {};
            for (var i = 0; i < item.attributes.length; i++) {
                var attr = item.attributes[i];
                if (attr.specified) {
                    var dynamicAttr = convertToData(attr.name);
                    var label = '';
                    if (availableDynamicOptions.indexOf(dynamicAttr) > -1) {
                        label = dynamicAttr;
                    }
                    if (label) {
                        dynamicEl[label] = attr.value;
                    }
                }
            }
            var currentItem = $LG(item);
            var alt = currentItem.find('img').first().attr('alt');
            var title = currentItem.attr('title');
            var thumb = exThumbImage
                ? currentItem.attr(exThumbImage)
                : currentItem.find('img').first().attr('src');
            dynamicEl.thumb = thumb;
            if (getCaptionFromTitleOrAlt && !dynamicEl.subHtml) {
                dynamicEl.subHtml = title || alt || '';
            }
            dynamicEl.alt = alt || title || '';
            dynamicElements.push(dynamicEl);
        });
        return dynamicElements;
    },
    isMobile: function () {
        return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    },
    /**
     * @desc Check the given src is video
     * @param {String} src
     * @return {Object} video type
     * Ex:{ youtube  :  ["//www.youtube.com/watch?v=c0asJgSyxcY", "c0asJgSyxcY"] }
     *
     * @todo - this information can be moved to dynamicEl to avoid frequent calls
     */
    isVideo: function (src, isHTML5VIdeo, index) {
        if (!src) {
            if (isHTML5VIdeo) {
                return {
                    html5: true,
                };
            }
            else {
                console.error('lightGallery :- data-src is not provided on slide item ' +
                    (index + 1) +
                    '. Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/');
                return;
            }
        }
        var youtube = src.match(/\/\/(?:www\.)?youtu(?:\.be|be\.com|be-nocookie\.com)\/(?:watch\?v=|embed\/)?([a-z0-9\-\_\%]+)([\&|?][\S]*)*/i);
        var vimeo = src.match(/\/\/(?:www\.)?(?:player\.)?vimeo.com\/(?:video\/)?([0-9a-z\-_]+)(.*)?/i);
        var wistia = src.match(/https?:\/\/(.+)?(wistia\.com|wi\.st)\/(medias|embed)\/([0-9a-z\-_]+)(.*)/);
        if (youtube) {
            return {
                youtube: youtube,
            };
        }
        else if (vimeo) {
            return {
                vimeo: vimeo,
            };
        }
        else if (wistia) {
            return {
                wistia: wistia,
            };
        }
    },
};

// @ref - https://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio
// @ref - https://2ality.com/2017/04/setting-up-multi-platform-packages.html
// Unique id for each gallery
var lgId = 0;
var LightGallery = /** @class */ (function () {
    function LightGallery(element, options) {
        this.lgOpened = false;
        this.index = 0;
        // lightGallery modules
        this.plugins = [];
        // false when lightGallery load first slide content;
        this.lGalleryOn = false;
        // True when a slide animation is in progress
        this.lgBusy = false;
        this.currentItemsInDom = [];
        // Scroll top value before lightGallery is opened
        this.prevScrollTop = 0;
        this.bodyPaddingRight = 0;
        this.isDummyImageRemoved = false;
        this.dragOrSwipeEnabled = false;
        this.mediaContainerPosition = {
            top: 0,
            bottom: 0,
        };
        if (!element) {
            return this;
        }
        lgId++;
        this.lgId = lgId;
        this.el = element;
        this.LGel = $LG(element);
        this.generateSettings(options);
        this.buildModules();
        // When using dynamic mode, ensure dynamicEl is an array
        if (this.settings.dynamic &&
            this.settings.dynamicEl !== undefined &&
            !Array.isArray(this.settings.dynamicEl)) {
            throw 'When using dynamic mode, you must also define dynamicEl as an Array.';
        }
        this.galleryItems = this.getItems();
        this.normalizeSettings();
        // Gallery items
        this.init();
        this.validateLicense();
        return this;
    }
    LightGallery.prototype.generateSettings = function (options) {
        // lightGallery settings
        this.settings = __assign(__assign({}, lightGalleryCoreSettings), options);
        if (this.settings.isMobile &&
            typeof this.settings.isMobile === 'function'
            ? this.settings.isMobile()
            : utils.isMobile()) {
            var mobileSettings = __assign(__assign({}, this.settings.mobileSettings), this.settings.mobileSettings);
            this.settings = __assign(__assign({}, this.settings), mobileSettings);
        }
    };
    LightGallery.prototype.normalizeSettings = function () {
        if (this.settings.slideEndAnimation) {
            this.settings.hideControlOnEnd = false;
        }
        if (!this.settings.closable) {
            this.settings.swipeToClose = false;
        }
        // And reset it on close to get the correct value next time
        this.zoomFromOrigin = this.settings.zoomFromOrigin;
        // At the moment, Zoom from image doesn't support dynamic options
        // @todo add zoomFromOrigin support for dynamic images
        if (this.settings.dynamic) {
            this.zoomFromOrigin = false;
        }
        if (!this.settings.container) {
            this.settings.container = document.body;
        }
        // settings.preload should not be grater than $item.length
        this.settings.preload = Math.min(this.settings.preload, this.galleryItems.length);
    };
    LightGallery.prototype.init = function () {
        var _this = this;
        this.addSlideVideoInfo(this.galleryItems);
        this.buildStructure();
        this.LGel.trigger(lGEvents.init, {
            instance: this,
        });
        if (this.settings.keyPress) {
            this.keyPress();
        }
        setTimeout(function () {
            _this.enableDrag();
            _this.enableSwipe();
            _this.triggerPosterClick();
        }, 50);
        this.arrow();
        if (this.settings.mousewheel) {
            this.mousewheel();
        }
        if (!this.settings.dynamic) {
            this.openGalleryOnItemClick();
        }
    };
    LightGallery.prototype.openGalleryOnItemClick = function () {
        var _this = this;
        var _loop_1 = function (index) {
            var element = this_1.items[index];
            var $element = $LG(element);
            // Using different namespace for click because click event should not unbind if selector is same object('this')
            // @todo manage all event listners - should have namespace that represent element
            var uuid = lgQuery.generateUUID();
            $element
                .attr('data-lg-id', uuid)
                .on("click.lgcustom-item-" + uuid, function (e) {
                e.preventDefault();
                var currentItemIndex = _this.settings.index || index;
                _this.openGallery(currentItemIndex, element);
            });
        };
        var this_1 = this;
        // Using for loop instead of using bubbling as the items can be any html element.
        for (var index = 0; index < this.items.length; index++) {
            _loop_1(index);
        }
    };
    /**
     * Module constructor
     * Modules are build incrementally.
     * Gallery should be opened only once all the modules are initialized.
     * use moduleBuildTimeout to make sure this
     */
    LightGallery.prototype.buildModules = function () {
        var _this = this;
        this.settings.plugins.forEach(function (plugin) {
            _this.plugins.push(new plugin(_this, $LG));
        });
    };
    LightGallery.prototype.validateLicense = function () {
        if (!this.settings.licenseKey) {
            console.error('Please provide a valid license key');
        }
        else if (this.settings.licenseKey === '0000-0000-000-0000') {
            console.warn("lightGallery: " + this.settings.licenseKey + " license key is not valid for production use");
        }
    };
    LightGallery.prototype.getSlideItem = function (index) {
        return $LG(this.getSlideItemId(index));
    };
    LightGallery.prototype.getSlideItemId = function (index) {
        return "#lg-item-" + this.lgId + "-" + index;
    };
    LightGallery.prototype.getIdName = function (id) {
        return id + "-" + this.lgId;
    };
    LightGallery.prototype.getElementById = function (id) {
        return $LG("#" + this.getIdName(id));
    };
    LightGallery.prototype.manageSingleSlideClassName = function () {
        if (this.galleryItems.length < 2) {
            this.outer.addClass('lg-single-item');
        }
        else {
            this.outer.removeClass('lg-single-item');
        }
    };
    LightGallery.prototype.buildStructure = function () {
        var _this = this;
        var container = this.$container && this.$container.get();
        if (container) {
            return;
        }
        var controls = '';
        var subHtmlCont = '';
        // Create controls
        if (this.settings.controls) {
            controls = "<button type=\"button\" id=\"" + this.getIdName('lg-prev') + "\" aria-label=\"" + this.settings.strings['previousSlide'] + "\" class=\"lg-prev lg-icon\"> " + this.settings.prevHtml + " </button>\n                <button type=\"button\" id=\"" + this.getIdName('lg-next') + "\" aria-label=\"" + this.settings.strings['nextSlide'] + "\" class=\"lg-next lg-icon\"> " + this.settings.nextHtml + " </button>";
        }
        if (this.settings.appendSubHtmlTo !== '.lg-item') {
            subHtmlCont =
                '<div class="lg-sub-html" role="status" aria-live="polite"></div>';
        }
        var addClasses = '';
        if (this.settings.allowMediaOverlap) {
            // Do not remove space before last single quote
            addClasses += 'lg-media-overlap ';
        }
        var ariaLabelledby = this.settings.ariaLabelledby
            ? 'aria-labelledby="' + this.settings.ariaLabelledby + '"'
            : '';
        var ariaDescribedby = this.settings.ariaDescribedby
            ? 'aria-describedby="' + this.settings.ariaDescribedby + '"'
            : '';
        var containerClassName = "lg-container " + this.settings.addClass + " " + (document.body !== this.settings.container ? 'lg-inline' : '');
        var closeIcon = this.settings.closable && this.settings.showCloseIcon
            ? "<button type=\"button\" aria-label=\"" + this.settings.strings['closeGallery'] + "\" id=\"" + this.getIdName('lg-close') + "\" class=\"lg-close lg-icon\"></button>"
            : '';
        var maximizeIcon = this.settings.showMaximizeIcon
            ? "<button type=\"button\" aria-label=\"" + this.settings.strings['toggleMaximize'] + "\" id=\"" + this.getIdName('lg-maximize') + "\" class=\"lg-maximize lg-icon\"></button>"
            : '';
        var template = "\n        <div class=\"" + containerClassName + "\" id=\"" + this.getIdName('lg-container') + "\" tabindex=\"-1\" aria-modal=\"true\" " + ariaLabelledby + " " + ariaDescribedby + " role=\"dialog\"\n        >\n            <div id=\"" + this.getIdName('lg-backdrop') + "\" class=\"lg-backdrop\"></div>\n\n            <div id=\"" + this.getIdName('lg-outer') + "\" class=\"lg-outer lg-use-css3 lg-css3 lg-hide-items " + addClasses + " \">\n\n              <div id=\"" + this.getIdName('lg-content') + "\" class=\"lg-content\">\n                <div id=\"" + this.getIdName('lg-inner') + "\" class=\"lg-inner\">\n                </div>\n                " + controls + "\n              </div>\n                <div id=\"" + this.getIdName('lg-toolbar') + "\" class=\"lg-toolbar lg-group\">\n                    " + maximizeIcon + "\n                    " + closeIcon + "\n                    </div>\n                    " + (this.settings.appendSubHtmlTo === '.lg-outer'
            ? subHtmlCont
            : '') + "\n                <div id=\"" + this.getIdName('lg-components') + "\" class=\"lg-components\">\n                    " + (this.settings.appendSubHtmlTo === '.lg-sub-html'
            ? subHtmlCont
            : '') + "\n                </div>\n            </div>\n        </div>\n        ";
        $LG(this.settings.container).append(template);
        if (document.body !== this.settings.container) {
            $LG(this.settings.container).css('position', 'relative');
        }
        this.outer = this.getElementById('lg-outer');
        this.$lgComponents = this.getElementById('lg-components');
        this.$backdrop = this.getElementById('lg-backdrop');
        this.$container = this.getElementById('lg-container');
        this.$inner = this.getElementById('lg-inner');
        this.$content = this.getElementById('lg-content');
        this.$toolbar = this.getElementById('lg-toolbar');
        this.$backdrop.css('transition-duration', this.settings.backdropDuration + 'ms');
        var outerClassNames = this.settings.mode + " ";
        this.manageSingleSlideClassName();
        if (this.settings.enableDrag) {
            outerClassNames += 'lg-grab ';
        }
        this.outer.addClass(outerClassNames);
        this.$inner.css('transition-timing-function', this.settings.easing);
        this.$inner.css('transition-duration', this.settings.speed + 'ms');
        if (this.settings.download) {
            this.$toolbar.append("<a id=\"" + this.getIdName('lg-download') + "\" target=\"_blank\" rel=\"noopener\" aria-label=\"" + this.settings.strings['download'] + "\" download class=\"lg-download lg-icon\"></a>");
        }
        this.counter();
        $LG(window).on("resize.lg.global" + this.lgId + " orientationchange.lg.global" + this.lgId, function () {
            _this.refreshOnResize();
        });
        this.hideBars();
        this.manageCloseGallery();
        this.toggleMaximize();
        this.initModules();
    };
    LightGallery.prototype.refreshOnResize = function () {
        if (this.lgOpened) {
            var currentGalleryItem = this.galleryItems[this.index];
            var __slideVideoInfo = currentGalleryItem.__slideVideoInfo;
            this.mediaContainerPosition = this.getMediaContainerPosition();
            var _a = this.mediaContainerPosition, top_1 = _a.top, bottom = _a.bottom;
            this.currentImageSize = utils.getSize(this.items[this.index], this.outer, top_1 + bottom, __slideVideoInfo && this.settings.videoMaxSize);
            if (__slideVideoInfo) {
                this.resizeVideoSlide(this.index, this.currentImageSize);
            }
            if (this.zoomFromOrigin && !this.isDummyImageRemoved) {
                var imgStyle = this.getDummyImgStyles(this.currentImageSize);
                this.outer
                    .find('.lg-current .lg-dummy-img')
                    .first()
                    .attr('style', imgStyle);
            }
            this.LGel.trigger(lGEvents.containerResize);
        }
    };
    LightGallery.prototype.resizeVideoSlide = function (index, imageSize) {
        var lgVideoStyle = this.getVideoContStyle(imageSize);
        var currentSlide = this.getSlideItem(index);
        currentSlide.find('.lg-video-cont').attr('style', lgVideoStyle);
    };
    /**
     * Update slides dynamically.
     * Add, edit or delete slides dynamically when lightGallery is opened.
     * Modify the current gallery items and pass it via updateSlides method
     * @note
     * - Do not mutate existing lightGallery items directly.
     * - Always pass new list of gallery items
     * - You need to take care of thumbnails outside the gallery if any
     * - user this method only if you want to update slides when the gallery is opened. Otherwise, use `refresh()` method.
     * @param items Gallery items
     * @param index After the update operation, which slide gallery should navigate to
     * @category lGPublicMethods
     * @example
     * const plugin = lightGallery();
     *
     * // Adding slides dynamically
     * let galleryItems = [
     * // Access existing lightGallery items
     * // galleryItems are automatically generated internally from the gallery HTML markup
     * // or directly from galleryItems when dynamic gallery is used
     *   ...plugin.galleryItems,
     *     ...[
     *       {
     *         src: 'img/img-1.png',
     *           thumb: 'img/thumb1.png',
     *         },
     *     ],
     *   ];
     *   plugin.updateSlides(
     *     galleryItems,
     *     plugin.index,
     *   );
     *
     *
     * // Remove slides dynamically
     * galleryItems = JSON.parse(
     *   JSON.stringify(updateSlideInstance.galleryItems),
     * );
     * galleryItems.shift();
     * updateSlideInstance.updateSlides(galleryItems, 1);
     * @see <a href="/demos/update-slides/">Demo</a>
     */
    LightGallery.prototype.updateSlides = function (items, index) {
        if (this.index > items.length - 1) {
            this.index = items.length - 1;
        }
        if (items.length === 1) {
            this.index = 0;
        }
        if (!items.length) {
            this.closeGallery();
            return;
        }
        var currentSrc = this.galleryItems[index].src;
        this.galleryItems = items;
        this.updateControls();
        this.$inner.empty();
        this.currentItemsInDom = [];
        var _index = 0;
        // Find the current index based on source value of the slide
        this.galleryItems.some(function (galleryItem, itemIndex) {
            if (galleryItem.src === currentSrc) {
                _index = itemIndex;
                return true;
            }
            return false;
        });
        this.currentItemsInDom = this.organizeSlideItems(_index, -1);
        this.loadContent(_index, true);
        this.getSlideItem(_index).addClass('lg-current');
        this.index = _index;
        this.updateCurrentCounter(_index);
        this.LGel.trigger(lGEvents.updateSlides);
    };
    // Get gallery items based on multiple conditions
    LightGallery.prototype.getItems = function () {
        // Gallery items
        this.items = [];
        if (!this.settings.dynamic) {
            if (this.settings.selector === 'this') {
                this.items.push(this.el);
            }
            else if (this.settings.selector) {
                if (typeof this.settings.selector === 'string') {
                    if (this.settings.selectWithin) {
                        var selectWithin = $LG(this.settings.selectWithin);
                        this.items = selectWithin
                            .find(this.settings.selector)
                            .get();
                    }
                    else {
                        this.items = this.el.querySelectorAll(this.settings.selector);
                    }
                }
                else {
                    this.items = this.settings.selector;
                }
            }
            else {
                this.items = this.el.children;
            }
            return utils.getDynamicOptions(this.items, this.settings.extraProps, this.settings.getCaptionFromTitleOrAlt, this.settings.exThumbImage);
        }
        else {
            return this.settings.dynamicEl || [];
        }
    };
    LightGallery.prototype.shouldHideScrollbar = function () {
        return (this.settings.hideScrollbar &&
            document.body === this.settings.container);
    };
    LightGallery.prototype.hideScrollbar = function () {
        if (!this.shouldHideScrollbar()) {
            return;
        }
        this.bodyPaddingRight = parseFloat($LG('body').style().paddingRight);
        var bodyRect = document.documentElement.getBoundingClientRect();
        var scrollbarWidth = window.innerWidth - bodyRect.width;
        $LG(document.body).css('padding-right', scrollbarWidth + this.bodyPaddingRight + 'px');
        $LG(document.body).addClass('lg-overlay-open');
    };
    LightGallery.prototype.resetScrollBar = function () {
        if (!this.shouldHideScrollbar()) {
            return;
        }
        $LG(document.body).css('padding-right', this.bodyPaddingRight + 'px');
        $LG(document.body).removeClass('lg-overlay-open');
    };
    /**
     * Open lightGallery.
     * Open gallery with specific slide by passing index of the slide as parameter.
     * @category lGPublicMethods
     * @param {Number} index  - index of the slide
     * @param {HTMLElement} element - Which image lightGallery should zoom from
     *
     * @example
     * const $dynamicGallery = document.getElementById('dynamic-gallery-demo');
     * const dynamicGallery = lightGallery($dynamicGallery, {
     *     dynamic: true,
     *     dynamicEl: [
     *         {
     *              src: 'img/1.jpg',
     *              thumb: 'img/thumb-1.jpg',
     *              subHtml: '<h4>Image 1 title</h4><p>Image 1 descriptions.</p>',
     *         },
     *         ...
     *     ],
     * });
     * $dynamicGallery.addEventListener('click', function () {
     *     // Starts with third item.(Optional).
     *     // This is useful if you want use dynamic mode with
     *     // custom thumbnails (thumbnails outside gallery),
     *     dynamicGallery.openGallery(2);
     * });
     *
     */
    LightGallery.prototype.openGallery = function (index, element) {
        var _this = this;
        if (index === void 0) { index = this.settings.index; }
        // prevent accidental double execution
        if (this.lgOpened)
            return;
        this.lgOpened = true;
        this.outer.removeClass('lg-hide-items');
        this.hideScrollbar();
        // Add display block, but still has opacity 0
        this.$container.addClass('lg-show');
        var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, index);
        this.currentItemsInDom = itemsToBeInsertedToDom;
        var items = '';
        itemsToBeInsertedToDom.forEach(function (item) {
            items = items + ("<div id=\"" + item + "\" class=\"lg-item\"></div>");
        });
        this.$inner.append(items);
        this.addHtml(index);
        var transform = '';
        this.mediaContainerPosition = this.getMediaContainerPosition();
        var _a = this.mediaContainerPosition, top = _a.top, bottom = _a.bottom;
        if (!this.settings.allowMediaOverlap) {
            this.setMediaContainerPosition(top, bottom);
        }
        var __slideVideoInfo = this.galleryItems[index].__slideVideoInfo;
        if (this.zoomFromOrigin && element) {
            this.currentImageSize = utils.getSize(element, this.outer, top + bottom, __slideVideoInfo && this.settings.videoMaxSize);
            transform = utils.getTransform(element, this.outer, top, bottom, this.currentImageSize);
        }
        if (!this.zoomFromOrigin || !transform) {
            this.outer.addClass(this.settings.startClass);
            this.getSlideItem(index).removeClass('lg-complete');
        }
        var timeout = this.settings.zoomFromOrigin
            ? 100
            : this.settings.backdropDuration;
        setTimeout(function () {
            _this.outer.addClass('lg-components-open');
        }, timeout);
        this.index = index;
        this.LGel.trigger(lGEvents.beforeOpen);
        // add class lg-current to remove initial transition
        this.getSlideItem(index).addClass('lg-current');
        this.lGalleryOn = false;
        // Store the current scroll top value to scroll back after closing the gallery..
        this.prevScrollTop = $LG(window).scrollTop();
        setTimeout(function () {
            // Need to check both zoomFromOrigin and transform values as we need to set set the
            // default opening animation if user missed to add the lg-size attribute
            if (_this.zoomFromOrigin && transform) {
                var currentSlide_1 = _this.getSlideItem(index);
                currentSlide_1.css('transform', transform);
                setTimeout(function () {
                    currentSlide_1
                        .addClass('lg-start-progress lg-start-end-progress')
                        .css('transition-duration', _this.settings.startAnimationDuration + 'ms');
                    _this.outer.addClass('lg-zoom-from-image');
                });
                setTimeout(function () {
                    currentSlide_1.css('transform', 'translate3d(0, 0, 0)');
                }, 100);
            }
            setTimeout(function () {
                _this.$backdrop.addClass('in');
                _this.$container.addClass('lg-show-in');
            }, 10);
            setTimeout(function () {
                if (_this.settings.trapFocus &&
                    document.body === _this.settings.container) {
                    _this.trapFocus();
                }
            }, _this.settings.backdropDuration + 50);
            // lg-visible class resets gallery opacity to 1
            if (!_this.zoomFromOrigin || !transform) {
                setTimeout(function () {
                    _this.outer.addClass('lg-visible');
                }, _this.settings.backdropDuration);
            }
            // initiate slide function
            _this.slide(index, false, false, false);
            _this.LGel.trigger(lGEvents.afterOpen);
        });
        if (document.body === this.settings.container) {
            $LG('html').addClass('lg-on');
        }
    };
    /**
     * Note - Changing the position of the media on every slide transition creates a flickering effect.
     * Therefore, The height of the caption is calculated dynamically, only once based on the first slide caption.
     * if you have dynamic captions for each media,
     * you can provide an appropriate height for the captions via allowMediaOverlap option
     */
    LightGallery.prototype.getMediaContainerPosition = function () {
        if (this.settings.allowMediaOverlap) {
            return {
                top: 0,
                bottom: 0,
            };
        }
        var top = this.$toolbar.get().clientHeight || 0;
        var subHtml = this.outer.find('.lg-components .lg-sub-html').get();
        var captionHeight = this.settings.defaultCaptionHeight ||
            (subHtml && subHtml.clientHeight) ||
            0;
        var thumbContainer = this.outer.find('.lg-thumb-outer').get();
        var thumbHeight = thumbContainer ? thumbContainer.clientHeight : 0;
        var bottom = thumbHeight + captionHeight;
        return {
            top: top,
            bottom: bottom,
        };
    };
    LightGallery.prototype.setMediaContainerPosition = function (top, bottom) {
        if (top === void 0) { top = 0; }
        if (bottom === void 0) { bottom = 0; }
        this.$content.css('top', top + 'px').css('bottom', bottom + 'px');
    };
    LightGallery.prototype.hideBars = function () {
        var _this = this;
        // Hide controllers if mouse doesn't move for some period
        setTimeout(function () {
            _this.outer.removeClass('lg-hide-items');
            if (_this.settings.hideBarsDelay > 0) {
                _this.outer.on('mousemove.lg click.lg touchstart.lg', function () {
                    _this.outer.removeClass('lg-hide-items');
                    clearTimeout(_this.hideBarTimeout);
                    // Timeout will be cleared on each slide movement also
                    _this.hideBarTimeout = setTimeout(function () {
                        _this.outer.addClass('lg-hide-items');
                    }, _this.settings.hideBarsDelay);
                });
                _this.outer.trigger('mousemove.lg');
            }
        }, this.settings.showBarsAfter);
    };
    LightGallery.prototype.initPictureFill = function ($img) {
        if (this.settings.supportLegacyBrowser) {
            try {
                picturefill({
                    elements: [$img.get()],
                });
            }
            catch (e) {
                console.warn('lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document.');
            }
        }
    };
    /**
     *  @desc Create image counter
     *  Ex: 1/10
     */
    LightGallery.prototype.counter = function () {
        if (this.settings.counter) {
            var counterHtml = "<div class=\"lg-counter\" role=\"status\" aria-live=\"polite\">\n                <span id=\"" + this.getIdName('lg-counter-current') + "\" class=\"lg-counter-current\">" + (this.index + 1) + " </span> /\n                <span id=\"" + this.getIdName('lg-counter-all') + "\" class=\"lg-counter-all\">" + this.galleryItems.length + " </span></div>";
            this.outer.find(this.settings.appendCounterTo).append(counterHtml);
        }
    };
    /**
     *  @desc add sub-html into the slide
     *  @param {Number} index - index of the slide
     */
    LightGallery.prototype.addHtml = function (index) {
        var subHtml;
        var subHtmlUrl;
        if (this.galleryItems[index].subHtmlUrl) {
            subHtmlUrl = this.galleryItems[index].subHtmlUrl;
        }
        else {
            subHtml = this.galleryItems[index].subHtml;
        }
        if (!subHtmlUrl) {
            if (subHtml) {
                // get first letter of sub-html
                // if first letter starts with . or # get the html form the jQuery object
                var fL = subHtml.substring(0, 1);
                if (fL === '.' || fL === '#') {
                    if (this.settings.subHtmlSelectorRelative &&
                        !this.settings.dynamic) {
                        subHtml = $LG(this.items)
                            .eq(index)
                            .find(subHtml)
                            .first()
                            .html();
                    }
                    else {
                        subHtml = $LG(subHtml).first().html();
                    }
                }
            }
            else {
                subHtml = '';
            }
        }
        if (this.settings.appendSubHtmlTo !== '.lg-item') {
            if (subHtmlUrl) {
                this.outer.find('.lg-sub-html').load(subHtmlUrl);
            }
            else {
                this.outer.find('.lg-sub-html').html(subHtml);
            }
        }
        else {
            var currentSlide = $LG(this.getSlideItemId(index));
            if (subHtmlUrl) {
                currentSlide.load(subHtmlUrl);
            }
            else {
                currentSlide.append("<div class=\"lg-sub-html\">" + subHtml + "</div>");
            }
        }
        // Add lg-empty-html class if title doesn't exist
        if (typeof subHtml !== 'undefined' && subHtml !== null) {
            if (subHtml === '') {
                this.outer
                    .find(this.settings.appendSubHtmlTo)
                    .addClass('lg-empty-html');
            }
            else {
                this.outer
                    .find(this.settings.appendSubHtmlTo)
                    .removeClass('lg-empty-html');
            }
        }
        this.LGel.trigger(lGEvents.afterAppendSubHtml, {
            index: index,
        });
    };
    /**
     *  @desc Preload slides
     *  @param {Number} index - index of the slide
     * @todo preload not working for the first slide, Also, should work for the first and last slide as well
     */
    LightGallery.prototype.preload = function (index) {
        for (var i = 1; i <= this.settings.preload; i++) {
            if (i >= this.galleryItems.length - index) {
                break;
            }
            this.loadContent(index + i, false);
        }
        for (var j = 1; j <= this.settings.preload; j++) {
            if (index - j < 0) {
                break;
            }
            this.loadContent(index - j, false);
        }
    };
    LightGallery.prototype.getDummyImgStyles = function (imageSize) {
        if (!imageSize)
            return '';
        return "width:" + imageSize.width + "px;\n                margin-left: -" + imageSize.width / 2 + "px;\n                margin-top: -" + imageSize.height / 2 + "px;\n                height:" + imageSize.height + "px";
    };
    LightGallery.prototype.getVideoContStyle = function (imageSize) {
        if (!imageSize)
            return '';
        return "width:" + imageSize.width + "px;\n                height:" + imageSize.height + "px";
    };
    LightGallery.prototype.getDummyImageContent = function ($currentSlide, index, alt) {
        var $currentItem;
        if (!this.settings.dynamic) {
            $currentItem = $LG(this.items).eq(index);
        }
        if ($currentItem) {
            var _dummyImgSrc = void 0;
            if (!this.settings.exThumbImage) {
                _dummyImgSrc = $currentItem.find('img').first().attr('src');
            }
            else {
                _dummyImgSrc = $currentItem.attr(this.settings.exThumbImage);
            }
            if (!_dummyImgSrc)
                return '';
            var imgStyle = this.getDummyImgStyles(this.currentImageSize);
            var dummyImgContent = "<img " + alt + " style=\"" + imgStyle + "\" class=\"lg-dummy-img\" src=\"" + _dummyImgSrc + "\" />";
            $currentSlide.addClass('lg-first-slide');
            this.outer.addClass('lg-first-slide-loading');
            return dummyImgContent;
        }
        return '';
    };
    LightGallery.prototype.setImgMarkup = function (src, $currentSlide, index) {
        var currentGalleryItem = this.galleryItems[index];
        var alt = currentGalleryItem.alt, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;
        // Use the thumbnail as dummy image which will be resized to actual image size and
        // displayed on top of actual image
        var imgContent = '';
        var altAttr = alt ? 'alt="' + alt + '"' : '';
        if (this.isFirstSlideWithZoomAnimation()) {
            imgContent = this.getDummyImageContent($currentSlide, index, altAttr);
        }
        else {
            imgContent = utils.getImgMarkup(index, src, altAttr, srcset, sizes, sources);
        }
        var imgMarkup = "<picture class=\"lg-img-wrap\"> " + imgContent + "</picture>";
        $currentSlide.prepend(imgMarkup);
    };
    LightGallery.prototype.onSlideObjectLoad = function ($slide, isHTML5VideoWithoutPoster, onLoad, onError) {
        var mediaObject = $slide.find('.lg-object').first();
        if (utils.isImageLoaded(mediaObject.get()) ||
            isHTML5VideoWithoutPoster) {
            onLoad();
        }
        else {
            mediaObject.on('load.lg error.lg', function () {
                onLoad && onLoad();
            });
            mediaObject.on('error.lg', function () {
                onError && onError();
            });
        }
    };
    /**
     *
     * @param $el Current slide item
     * @param index
     * @param delay Delay is 0 except first time
     * @param speed Speed is same as delay, except it is 0 if gallery is opened via hash plugin
     * @param isFirstSlide
     */
    LightGallery.prototype.onLgObjectLoad = function (currentSlide, index, delay, speed, isFirstSlide, isHTML5VideoWithoutPoster) {
        var _this = this;
        this.onSlideObjectLoad(currentSlide, isHTML5VideoWithoutPoster, function () {
            _this.triggerSlideItemLoad(currentSlide, index, delay, speed, isFirstSlide);
        }, function () {
            currentSlide.addClass('lg-complete lg-complete_');
            currentSlide.html('<span class="lg-error-msg">Oops... Failed to load content...</span>');
        });
    };
    LightGallery.prototype.triggerSlideItemLoad = function ($currentSlide, index, delay, speed, isFirstSlide) {
        var _this = this;
        var currentGalleryItem = this.galleryItems[index];
        // Adding delay for video slides without poster for better performance and user experience
        // Videos should start playing once once the gallery is completely loaded
        var _speed = isFirstSlide &&
            this.getSlideType(currentGalleryItem) === 'video' &&
            !currentGalleryItem.poster
            ? speed
            : 0;
        setTimeout(function () {
            $currentSlide.addClass('lg-complete lg-complete_');
            _this.LGel.trigger(lGEvents.slideItemLoad, {
                index: index,
                delay: delay || 0,
                isFirstSlide: isFirstSlide,
            });
        }, _speed);
    };
    LightGallery.prototype.isFirstSlideWithZoomAnimation = function () {
        return !!(!this.lGalleryOn &&
            this.zoomFromOrigin &&
            this.currentImageSize);
    };
    // Add video slideInfo
    LightGallery.prototype.addSlideVideoInfo = function (items) {
        var _this = this;
        items.forEach(function (element, index) {
            element.__slideVideoInfo = utils.isVideo(element.src, !!element.video, index);
            if (element.__slideVideoInfo &&
                _this.settings.loadYouTubePoster &&
                !element.poster &&
                element.__slideVideoInfo.youtube) {
                element.poster = "//img.youtube.com/vi/" + element.__slideVideoInfo.youtube[1] + "/maxresdefault.jpg";
            }
        });
    };
    /**
     *  Load slide content into slide.
     *  This is used to load content into slides that is not visible too
     *  @param {Number} index - index of the slide.
     *  @param {Boolean} rec - if true call loadcontent() function again.
     */
    LightGallery.prototype.loadContent = function (index, rec) {
        var _this = this;
        var currentGalleryItem = this.galleryItems[index];
        var $currentSlide = $LG(this.getSlideItemId(index));
        var poster = currentGalleryItem.poster, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;
        var src = currentGalleryItem.src;
        var video = currentGalleryItem.video;
        var _html5Video = video && typeof video === 'string' ? JSON.parse(video) : video;
        if (currentGalleryItem.responsive) {
            var srcDyItms = currentGalleryItem.responsive.split(',');
            src = utils.getResponsiveSrc(srcDyItms) || src;
        }
        var videoInfo = currentGalleryItem.__slideVideoInfo;
        var lgVideoStyle = '';
        var iframe = !!currentGalleryItem.iframe;
        var isFirstSlide = !this.lGalleryOn;
        // delay for adding complete class. it is 0 except first time.
        var delay = 0;
        if (isFirstSlide) {
            if (this.zoomFromOrigin && this.currentImageSize) {
                delay = this.settings.startAnimationDuration + 10;
            }
            else {
                delay = this.settings.backdropDuration + 10;
            }
        }
        if (!$currentSlide.hasClass('lg-loaded')) {
            if (videoInfo) {
                var _a = this.mediaContainerPosition, top_2 = _a.top, bottom = _a.bottom;
                var videoSize = utils.getSize(this.items[index], this.outer, top_2 + bottom, videoInfo && this.settings.videoMaxSize);
                lgVideoStyle = this.getVideoContStyle(videoSize);
            }
            if (iframe) {
                var markup = utils.getIframeMarkup(this.settings.iframeWidth, this.settings.iframeHeight, this.settings.iframeMaxWidth, this.settings.iframeMaxHeight, src, currentGalleryItem.iframeTitle);
                $currentSlide.prepend(markup);
            }
            else if (poster) {
                var dummyImg = '';
                var hasStartAnimation = isFirstSlide &&
                    this.zoomFromOrigin &&
                    this.currentImageSize;
                if (hasStartAnimation) {
                    dummyImg = this.getDummyImageContent($currentSlide, index, '');
                }
                var markup = utils.getVideoPosterMarkup(poster, dummyImg || '', lgVideoStyle, this.settings.strings['playVideo'], videoInfo);
                $currentSlide.prepend(markup);
            }
            else if (videoInfo) {
                var markup = "<div class=\"lg-video-cont \" style=\"" + lgVideoStyle + "\"></div>";
                $currentSlide.prepend(markup);
            }
            else {
                this.setImgMarkup(src, $currentSlide, index);
                if (srcset || sources) {
                    var $img = $currentSlide.find('.lg-object');
                    this.initPictureFill($img);
                }
            }
            if (poster || videoInfo) {
                this.LGel.trigger(lGEvents.hasVideo, {
                    index: index,
                    src: src,
                    html5Video: _html5Video,
                    hasPoster: !!poster,
                });
            }
            this.LGel.trigger(lGEvents.afterAppendSlide, { index: index });
            if (this.lGalleryOn &&
                this.settings.appendSubHtmlTo === '.lg-item') {
                this.addHtml(index);
            }
        }
        // For first time add some delay for displaying the start animation.
        var _speed = 0;
        // Do not change the delay value because it is required for zoom plugin.
        // If gallery opened from direct url (hash) speed value should be 0
        if (delay && !$LG(document.body).hasClass('lg-from-hash')) {
            _speed = delay;
        }
        // Only for first slide and zoomFromOrigin is enabled
        if (this.isFirstSlideWithZoomAnimation()) {
            setTimeout(function () {
                $currentSlide
                    .removeClass('lg-start-end-progress lg-start-progress')
                    .removeAttr('style');
            }, this.settings.startAnimationDuration + 100);
            if (!$currentSlide.hasClass('lg-loaded')) {
                setTimeout(function () {
                    if (_this.getSlideType(currentGalleryItem) === 'image') {
                        var alt = currentGalleryItem.alt;
                        var altAttr = alt ? 'alt="' + alt + '"' : '';
                        $currentSlide
                            .find('.lg-img-wrap')
                            .append(utils.getImgMarkup(index, src, altAttr, srcset, sizes, currentGalleryItem.sources));
                        if (srcset || sources) {
                            var $img = $currentSlide.find('.lg-object');
                            _this.initPictureFill($img);
                        }
                    }
                    if (_this.getSlideType(currentGalleryItem) === 'image' ||
                        (_this.getSlideType(currentGalleryItem) === 'video' &&
                            poster)) {
                        _this.onLgObjectLoad($currentSlide, index, delay, _speed, true, false);
                        // load remaining slides once the slide is completely loaded
                        _this.onSlideObjectLoad($currentSlide, !!(videoInfo && videoInfo.html5 && !poster), function () {
                            _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);
                        }, function () {
                            _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);
                        });
                    }
                }, this.settings.startAnimationDuration + 100);
            }
        }
        // SLide content has been added to dom
        $currentSlide.addClass('lg-loaded');
        if (!this.isFirstSlideWithZoomAnimation() ||
            (this.getSlideType(currentGalleryItem) === 'video' && !poster)) {
            this.onLgObjectLoad($currentSlide, index, delay, _speed, isFirstSlide, !!(videoInfo && videoInfo.html5 && !poster));
        }
        // When gallery is opened once content is loaded (second time) need to add lg-complete class for css styling
        if ((!this.zoomFromOrigin || !this.currentImageSize) &&
            $currentSlide.hasClass('lg-complete_') &&
            !this.lGalleryOn) {
            setTimeout(function () {
                $currentSlide.addClass('lg-complete');
            }, this.settings.backdropDuration);
        }
        // Content loaded
        // Need to set lGalleryOn before calling preload function
        this.lGalleryOn = true;
        if (rec === true) {
            if (!$currentSlide.hasClass('lg-complete_')) {
                $currentSlide
                    .find('.lg-object')
                    .first()
                    .on('load.lg error.lg', function () {
                    _this.preload(index);
                });
            }
            else {
                this.preload(index);
            }
        }
    };
    /**
     * @desc Remove dummy image content and load next slides
     * Called only for the first time if zoomFromOrigin animation is enabled
     * @param index
     * @param $currentSlide
     * @param speed
     */
    LightGallery.prototype.loadContentOnFirstSlideLoad = function (index, $currentSlide, speed) {
        var _this = this;
        setTimeout(function () {
            $currentSlide.find('.lg-dummy-img').remove();
            $currentSlide.removeClass('lg-first-slide');
            _this.outer.removeClass('lg-first-slide-loading');
            _this.isDummyImageRemoved = true;
            _this.preload(index);
        }, speed + 300);
    };
    LightGallery.prototype.getItemsToBeInsertedToDom = function (index, prevIndex, numberOfItems) {
        var _this = this;
        if (numberOfItems === void 0) { numberOfItems = 0; }
        var itemsToBeInsertedToDom = [];
        // Minimum 2 items should be there
        var possibleNumberOfItems = Math.max(numberOfItems, 3);
        possibleNumberOfItems = Math.min(possibleNumberOfItems, this.galleryItems.length);
        var prevIndexItem = "lg-item-" + this.lgId + "-" + prevIndex;
        if (this.galleryItems.length <= 3) {
            this.galleryItems.forEach(function (_element, index) {
                itemsToBeInsertedToDom.push("lg-item-" + _this.lgId + "-" + index);
            });
            return itemsToBeInsertedToDom;
        }
        if (index < (this.galleryItems.length - 1) / 2) {
            for (var idx = index; idx > index - possibleNumberOfItems / 2 && idx >= 0; idx--) {
                itemsToBeInsertedToDom.push("lg-item-" + this.lgId + "-" + idx);
            }
            var numberOfExistingItems = itemsToBeInsertedToDom.length;
            for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {
                itemsToBeInsertedToDom.push("lg-item-" + this.lgId + "-" + (index + idx + 1));
            }
        }
        else {
            for (var idx = index; idx <= this.galleryItems.length - 1 &&
                idx < index + possibleNumberOfItems / 2; idx++) {
                itemsToBeInsertedToDom.push("lg-item-" + this.lgId + "-" + idx);
            }
            var numberOfExistingItems = itemsToBeInsertedToDom.length;
            for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {
                itemsToBeInsertedToDom.push("lg-item-" + this.lgId + "-" + (index - idx - 1));
            }
        }
        if (this.settings.loop) {
            if (index === this.galleryItems.length - 1) {
                itemsToBeInsertedToDom.push("lg-item-" + this.lgId + "-" + 0);
            }
            else if (index === 0) {
                itemsToBeInsertedToDom.push("lg-item-" + this.lgId + "-" + (this.galleryItems.length - 1));
            }
        }
        if (itemsToBeInsertedToDom.indexOf(prevIndexItem) === -1) {
            itemsToBeInsertedToDom.push("lg-item-" + this.lgId + "-" + prevIndex);
        }
        return itemsToBeInsertedToDom;
    };
    LightGallery.prototype.organizeSlideItems = function (index, prevIndex) {
        var _this = this;
        var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, prevIndex, this.settings.numberOfSlideItemsInDom);
        itemsToBeInsertedToDom.forEach(function (item) {
            if (_this.currentItemsInDom.indexOf(item) === -1) {
                _this.$inner.append("<div id=\"" + item + "\" class=\"lg-item\"></div>");
            }
        });
        this.currentItemsInDom.forEach(function (item) {
            if (itemsToBeInsertedToDom.indexOf(item) === -1) {
                $LG("#" + item).remove();
            }
        });
        return itemsToBeInsertedToDom;
    };
    /**
     * Get previous index of the slide
     */
    LightGallery.prototype.getPreviousSlideIndex = function () {
        var prevIndex = 0;
        try {
            var currentItemId = this.outer
                .find('.lg-current')
                .first()
                .attr('id');
            prevIndex = parseInt(currentItemId.split('-')[3]) || 0;
        }
        catch (error) {
            prevIndex = 0;
        }
        return prevIndex;
    };
    LightGallery.prototype.setDownloadValue = function (index) {
        if (this.settings.download) {
            var currentGalleryItem = this.galleryItems[index];
            var hideDownloadBtn = currentGalleryItem.downloadUrl === false ||
                currentGalleryItem.downloadUrl === 'false';
            if (hideDownloadBtn) {
                this.outer.addClass('lg-hide-download');
            }
            else {
                var $download = this.getElementById('lg-download');
                this.outer.removeClass('lg-hide-download');
                $download.attr('href', currentGalleryItem.downloadUrl ||
                    currentGalleryItem.src);
                if (currentGalleryItem.download) {
                    $download.attr('download', currentGalleryItem.download);
                }
            }
        }
    };
    LightGallery.prototype.makeSlideAnimation = function (direction, currentSlideItem, previousSlideItem) {
        var _this = this;
        if (this.lGalleryOn) {
            previousSlideItem.addClass('lg-slide-progress');
        }
        setTimeout(function () {
            // remove all transitions
            _this.outer.addClass('lg-no-trans');
            _this.outer
                .find('.lg-item')
                .removeClass('lg-prev-slide lg-next-slide');
            if (direction === 'prev') {
                //prevslide
                currentSlideItem.addClass('lg-prev-slide');
                previousSlideItem.addClass('lg-next-slide');
            }
            else {
                // next slide
                currentSlideItem.addClass('lg-next-slide');
                previousSlideItem.addClass('lg-prev-slide');
            }
            // give 50 ms for browser to add/remove class
            setTimeout(function () {
                _this.outer.find('.lg-item').removeClass('lg-current');
                currentSlideItem.addClass('lg-current');
                // reset all transitions
                _this.outer.removeClass('lg-no-trans');
            }, 50);
        }, this.lGalleryOn ? this.settings.slideDelay : 0);
    };
    /**
     * Goto a specific slide.
     * @param {Number} index - index of the slide
     * @param {Boolean} fromTouch - true if slide function called via touch event or mouse drag
     * @param {Boolean} fromThumb - true if slide function called via thumbnail click
     * @param {String} direction - Direction of the slide(next/prev)
     * @category lGPublicMethods
     * @example
     *  const plugin = lightGallery();
     *  // to go to 3rd slide
     *  plugin.slide(2);
     *
     */
    LightGallery.prototype.slide = function (index, fromTouch, fromThumb, direction) {
        var _this = this;
        var prevIndex = this.getPreviousSlideIndex();
        this.currentItemsInDom = this.organizeSlideItems(index, prevIndex);
        // Prevent multiple call, Required for hsh plugin
        if (this.lGalleryOn && prevIndex === index) {
            return;
        }
        var numberOfGalleryItems = this.galleryItems.length;
        if (!this.lgBusy) {
            if (this.settings.counter) {
                this.updateCurrentCounter(index);
            }
            var currentSlideItem = this.getSlideItem(index);
            var previousSlideItem_1 = this.getSlideItem(prevIndex);
            var currentGalleryItem = this.galleryItems[index];
            var videoInfo = currentGalleryItem.__slideVideoInfo;
            this.outer.attr('data-lg-slide-type', this.getSlideType(currentGalleryItem));
            this.setDownloadValue(index);
            if (videoInfo) {
                var _a = this.mediaContainerPosition, top_3 = _a.top, bottom = _a.bottom;
                var videoSize = utils.getSize(this.items[index], this.outer, top_3 + bottom, videoInfo && this.settings.videoMaxSize);
                this.resizeVideoSlide(index, videoSize);
            }
            this.LGel.trigger(lGEvents.beforeSlide, {
                prevIndex: prevIndex,
                index: index,
                fromTouch: !!fromTouch,
                fromThumb: !!fromThumb,
            });
            this.lgBusy = true;
            clearTimeout(this.hideBarTimeout);
            this.arrowDisable(index);
            if (!direction) {
                if (index < prevIndex) {
                    direction = 'prev';
                }
                else if (index > prevIndex) {
                    direction = 'next';
                }
            }
            if (!fromTouch) {
                this.makeSlideAnimation(direction, currentSlideItem, previousSlideItem_1);
            }
            else {
                this.outer
                    .find('.lg-item')
                    .removeClass('lg-prev-slide lg-current lg-next-slide');
                var touchPrev = void 0;
                var touchNext = void 0;
                if (numberOfGalleryItems > 2) {
                    touchPrev = index - 1;
                    touchNext = index + 1;
                    if (index === 0 && prevIndex === numberOfGalleryItems - 1) {
                        // next slide
                        touchNext = 0;
                        touchPrev = numberOfGalleryItems - 1;
                    }
                    else if (index === numberOfGalleryItems - 1 &&
                        prevIndex === 0) {
                        // prev slide
                        touchNext = 0;
                        touchPrev = numberOfGalleryItems - 1;
                    }
                }
                else {
                    touchPrev = 0;
                    touchNext = 1;
                }
                if (direction === 'prev') {
                    this.getSlideItem(touchNext).addClass('lg-next-slide');
                }
                else {
                    this.getSlideItem(touchPrev).addClass('lg-prev-slide');
                }
                currentSlideItem.addClass('lg-current');
            }
            // Do not put load content in set timeout as it needs to load immediately when the gallery is opened
            if (!this.lGalleryOn) {
                this.loadContent(index, true);
            }
            else {
                setTimeout(function () {
                    _this.loadContent(index, true);
                    // Add title if this.settings.appendSubHtmlTo === lg-sub-html
                    if (_this.settings.appendSubHtmlTo !== '.lg-item') {
                        _this.addHtml(index);
                    }
                }, this.settings.speed + 50 + (fromTouch ? 0 : this.settings.slideDelay));
            }
            setTimeout(function () {
                _this.lgBusy = false;
                previousSlideItem_1.removeClass('lg-slide-progress');
                _this.LGel.trigger(lGEvents.afterSlide, {
                    prevIndex: prevIndex,
                    index: index,
                    fromTouch: fromTouch,
                    fromThumb: fromThumb,
                });
            }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (fromTouch ? 0 : this.settings.slideDelay));
        }
        this.index = index;
    };
    LightGallery.prototype.updateCurrentCounter = function (index) {
        this.getElementById('lg-counter-current').html(index + 1 + '');
    };
    LightGallery.prototype.updateCounterTotal = function () {
        this.getElementById('lg-counter-all').html(this.galleryItems.length + '');
    };
    LightGallery.prototype.getSlideType = function (item) {
        if (item.__slideVideoInfo) {
            return 'video';
        }
        else if (item.iframe) {
            return 'iframe';
        }
        else {
            return 'image';
        }
    };
    LightGallery.prototype.touchMove = function (startCoords, endCoords, e) {
        var distanceX = endCoords.pageX - startCoords.pageX;
        var distanceY = endCoords.pageY - startCoords.pageY;
        var allowSwipe = false;
        if (this.swipeDirection) {
            allowSwipe = true;
        }
        else {
            if (Math.abs(distanceX) > 15) {
                this.swipeDirection = 'horizontal';
                allowSwipe = true;
            }
            else if (Math.abs(distanceY) > 15) {
                this.swipeDirection = 'vertical';
                allowSwipe = true;
            }
        }
        if (!allowSwipe) {
            return;
        }
        var $currentSlide = this.getSlideItem(this.index);
        if (this.swipeDirection === 'horizontal') {
            e === null || e === void 0 ? void 0 : e.preventDefault();
            // reset opacity and transition duration
            this.outer.addClass('lg-dragging');
            // move current slide
            this.setTranslate($currentSlide, distanceX, 0);
            // move next and prev slide with current slide
            var width = $currentSlide.get().offsetWidth;
            var slideWidthAmount = (width * 15) / 100;
            var gutter = slideWidthAmount - Math.abs((distanceX * 10) / 100);
            this.setTranslate(this.outer.find('.lg-prev-slide').first(), -width + distanceX - gutter, 0);
            this.setTranslate(this.outer.find('.lg-next-slide').first(), width + distanceX + gutter, 0);
        }
        else if (this.swipeDirection === 'vertical') {
            if (this.settings.swipeToClose) {
                e === null || e === void 0 ? void 0 : e.preventDefault();
                this.$container.addClass('lg-dragging-vertical');
                var opacity = 1 - Math.abs(distanceY) / window.innerHeight;
                this.$backdrop.css('opacity', opacity);
                var scale = 1 - Math.abs(distanceY) / (window.innerWidth * 2);
                this.setTranslate($currentSlide, 0, distanceY, scale, scale);
                if (Math.abs(distanceY) > 100) {
                    this.outer
                        .addClass('lg-hide-items')
                        .removeClass('lg-components-open');
                }
            }
        }
    };
    LightGallery.prototype.touchEnd = function (endCoords, startCoords, event) {
        var _this = this;
        var distance;
        // keep slide animation for any mode while dragg/swipe
        if (this.settings.mode !== 'lg-slide') {
            this.outer.addClass('lg-slide');
        }
        // set transition duration
        setTimeout(function () {
            _this.$container.removeClass('lg-dragging-vertical');
            _this.outer
                .removeClass('lg-dragging lg-hide-items')
                .addClass('lg-components-open');
            var triggerClick = true;
            if (_this.swipeDirection === 'horizontal') {
                distance = endCoords.pageX - startCoords.pageX;
                var distanceAbs = Math.abs(endCoords.pageX - startCoords.pageX);
                if (distance < 0 &&
                    distanceAbs > _this.settings.swipeThreshold) {
                    _this.goToNextSlide(true);
                    triggerClick = false;
                }
                else if (distance > 0 &&
                    distanceAbs > _this.settings.swipeThreshold) {
                    _this.goToPrevSlide(true);
                    triggerClick = false;
                }
            }
            else if (_this.swipeDirection === 'vertical') {
                distance = Math.abs(endCoords.pageY - startCoords.pageY);
                if (_this.settings.closable &&
                    _this.settings.swipeToClose &&
                    distance > 100) {
                    _this.closeGallery();
                    return;
                }
                else {
                    _this.$backdrop.css('opacity', 1);
                }
            }
            _this.outer.find('.lg-item').removeAttr('style');
            if (triggerClick &&
                Math.abs(endCoords.pageX - startCoords.pageX) < 5) {
                // Trigger click if distance is less than 5 pix
                var target = $LG(event.target);
                if (_this.isPosterElement(target)) {
                    _this.LGel.trigger(lGEvents.posterClick);
                }
            }
            _this.swipeDirection = undefined;
        });
        // remove slide class once drag/swipe is completed if mode is not slide
        setTimeout(function () {
            if (!_this.outer.hasClass('lg-dragging') &&
                _this.settings.mode !== 'lg-slide') {
                _this.outer.removeClass('lg-slide');
            }
        }, this.settings.speed + 100);
    };
    LightGallery.prototype.enableSwipe = function () {
        var _this = this;
        var startCoords = {};
        var endCoords = {};
        var isMoved = false;
        var isSwiping = false;
        if (this.settings.enableSwipe) {
            this.$inner.on('touchstart.lg', function (e) {
                _this.dragOrSwipeEnabled = true;
                var $item = _this.getSlideItem(_this.index);
                if (($LG(e.target).hasClass('lg-item') ||
                    $item.get().contains(e.target)) &&
                    !_this.outer.hasClass('lg-zoomed') &&
                    !_this.lgBusy &&
                    e.touches.length === 1) {
                    isSwiping = true;
                    _this.touchAction = 'swipe';
                    _this.manageSwipeClass();
                    startCoords = {
                        pageX: e.touches[0].pageX,
                        pageY: e.touches[0].pageY,
                    };
                }
            });
            this.$inner.on('touchmove.lg', function (e) {
                if (isSwiping &&
                    _this.touchAction === 'swipe' &&
                    e.touches.length === 1) {
                    endCoords = {
                        pageX: e.touches[0].pageX,
                        pageY: e.touches[0].pageY,
                    };
                    _this.touchMove(startCoords, endCoords, e);
                    isMoved = true;
                }
            });
            this.$inner.on('touchend.lg', function (event) {
                if (_this.touchAction === 'swipe') {
                    if (isMoved) {
                        isMoved = false;
                        _this.touchEnd(endCoords, startCoords, event);
                    }
                    else if (isSwiping) {
                        var target = $LG(event.target);
                        if (_this.isPosterElement(target)) {
                            _this.LGel.trigger(lGEvents.posterClick);
                        }
                    }
                    _this.touchAction = undefined;
                    isSwiping = false;
                }
            });
        }
    };
    LightGallery.prototype.enableDrag = function () {
        var _this = this;
        var startCoords = {};
        var endCoords = {};
        var isDraging = false;
        var isMoved = false;
        if (this.settings.enableDrag) {
            this.outer.on('mousedown.lg', function (e) {
                _this.dragOrSwipeEnabled = true;
                var $item = _this.getSlideItem(_this.index);
                if ($LG(e.target).hasClass('lg-item') ||
                    $item.get().contains(e.target)) {
                    if (!_this.outer.hasClass('lg-zoomed') && !_this.lgBusy) {
                        e.preventDefault();
                        if (!_this.lgBusy) {
                            _this.manageSwipeClass();
                            startCoords = {
                                pageX: e.pageX,
                                pageY: e.pageY,
                            };
                            isDraging = true;
                            // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723
                            _this.outer.get().scrollLeft += 1;
                            _this.outer.get().scrollLeft -= 1;
                            // *
                            _this.outer
                                .removeClass('lg-grab')
                                .addClass('lg-grabbing');
                            _this.LGel.trigger(lGEvents.dragStart);
                        }
                    }
                }
            });
            $LG(window).on("mousemove.lg.global" + this.lgId, function (e) {
                if (isDraging && _this.lgOpened) {
                    isMoved = true;
                    endCoords = {
                        pageX: e.pageX,
                        pageY: e.pageY,
                    };
                    _this.touchMove(startCoords, endCoords);
                    _this.LGel.trigger(lGEvents.dragMove);
                }
            });
            $LG(window).on("mouseup.lg.global" + this.lgId, function (event) {
                if (!_this.lgOpened) {
                    return;
                }
                var target = $LG(event.target);
                if (isMoved) {
                    isMoved = false;
                    _this.touchEnd(endCoords, startCoords, event);
                    _this.LGel.trigger(lGEvents.dragEnd);
                }
                else if (_this.isPosterElement(target)) {
                    _this.LGel.trigger(lGEvents.posterClick);
                }
                // Prevent execution on click
                if (isDraging) {
                    isDraging = false;
                    _this.outer.removeClass('lg-grabbing').addClass('lg-grab');
                }
            });
        }
    };
    LightGallery.prototype.triggerPosterClick = function () {
        var _this = this;
        this.$inner.on('click.lg', function (event) {
            if (!_this.dragOrSwipeEnabled &&
                _this.isPosterElement($LG(event.target))) {
                _this.LGel.trigger(lGEvents.posterClick);
            }
        });
    };
    LightGallery.prototype.manageSwipeClass = function () {
        var _touchNext = this.index + 1;
        var _touchPrev = this.index - 1;
        if (this.settings.loop && this.galleryItems.length > 2) {
            if (this.index === 0) {
                _touchPrev = this.galleryItems.length - 1;
            }
            else if (this.index === this.galleryItems.length - 1) {
                _touchNext = 0;
            }
        }
        this.outer.find('.lg-item').removeClass('lg-next-slide lg-prev-slide');
        if (_touchPrev > -1) {
            this.getSlideItem(_touchPrev).addClass('lg-prev-slide');
        }
        this.getSlideItem(_touchNext).addClass('lg-next-slide');
    };
    /**
     * Go to next slide
     * @param {Boolean} fromTouch - true if slide function called via touch event
     * @category lGPublicMethods
     * @example
     *  const plugin = lightGallery();
     *  plugin.goToNextSlide();
     * @see <a href="/demos/methods/">Demo</a>
     */
    LightGallery.prototype.goToNextSlide = function (fromTouch) {
        var _this = this;
        var _loop = this.settings.loop;
        if (fromTouch && this.galleryItems.length < 3) {
            _loop = false;
        }
        if (!this.lgBusy) {
            if (this.index + 1 < this.galleryItems.length) {
                this.index++;
                this.LGel.trigger(lGEvents.beforeNextSlide, {
                    index: this.index,
                });
                this.slide(this.index, !!fromTouch, false, 'next');
            }
            else {
                if (_loop) {
                    this.index = 0;
                    this.LGel.trigger(lGEvents.beforeNextSlide, {
                        index: this.index,
                    });
                    this.slide(this.index, !!fromTouch, false, 'next');
                }
                else if (this.settings.slideEndAnimation && !fromTouch) {
                    this.outer.addClass('lg-right-end');
                    setTimeout(function () {
                        _this.outer.removeClass('lg-right-end');
                    }, 400);
                }
            }
        }
    };
    /**
     * Go to previous slides
     * @param {Boolean} fromTouch - true if slide function called via touch event
     * @category lGPublicMethods
     * @example
     *  const plugin = lightGallery({});
     *  plugin.goToPrevSlide();
     * @see <a href="/demos/methods/">Demo</a>
     *
     */
    LightGallery.prototype.goToPrevSlide = function (fromTouch) {
        var _this = this;
        var _loop = this.settings.loop;
        if (fromTouch && this.galleryItems.length < 3) {
            _loop = false;
        }
        if (!this.lgBusy) {
            if (this.index > 0) {
                this.index--;
                this.LGel.trigger(lGEvents.beforePrevSlide, {
                    index: this.index,
                    fromTouch: fromTouch,
                });
                this.slide(this.index, !!fromTouch, false, 'prev');
            }
            else {
                if (_loop) {
                    this.index = this.galleryItems.length - 1;
                    this.LGel.trigger(lGEvents.beforePrevSlide, {
                        index: this.index,
                        fromTouch: fromTouch,
                    });
                    this.slide(this.index, !!fromTouch, false, 'prev');
                }
                else if (this.settings.slideEndAnimation && !fromTouch) {
                    this.outer.addClass('lg-left-end');
                    setTimeout(function () {
                        _this.outer.removeClass('lg-left-end');
                    }, 400);
                }
            }
        }
    };
    LightGallery.prototype.keyPress = function () {
        var _this = this;
        $LG(window).on("keydown.lg.global" + this.lgId, function (e) {
            if (_this.lgOpened &&
                _this.settings.escKey === true &&
                e.keyCode === 27) {
                e.preventDefault();
                if (_this.settings.allowMediaOverlap &&
                    _this.outer.hasClass('lg-can-toggle') &&
                    _this.outer.hasClass('lg-components-open')) {
                    _this.outer.removeClass('lg-components-open');
                }
                else {
                    _this.closeGallery();
                }
            }
            if (_this.lgOpened && _this.galleryItems.length > 1) {
                if (e.keyCode === 37) {
                    e.preventDefault();
                    _this.goToPrevSlide();
                }
                if (e.keyCode === 39) {
                    e.preventDefault();
                    _this.goToNextSlide();
                }
            }
        });
    };
    LightGallery.prototype.arrow = function () {
        var _this = this;
        this.getElementById('lg-prev').on('click.lg', function () {
            _this.goToPrevSlide();
        });
        this.getElementById('lg-next').on('click.lg', function () {
            _this.goToNextSlide();
        });
    };
    LightGallery.prototype.arrowDisable = function (index) {
        // Disable arrows if settings.hideControlOnEnd is true
        if (!this.settings.loop && this.settings.hideControlOnEnd) {
            var $prev = this.getElementById('lg-prev');
            var $next = this.getElementById('lg-next');
            if (index + 1 === this.galleryItems.length) {
                $next.attr('disabled', 'disabled').addClass('disabled');
            }
            else {
                $next.removeAttr('disabled').removeClass('disabled');
            }
            if (index === 0) {
                $prev.attr('disabled', 'disabled').addClass('disabled');
            }
            else {
                $prev.removeAttr('disabled').removeClass('disabled');
            }
        }
    };
    LightGallery.prototype.setTranslate = function ($el, xValue, yValue, scaleX, scaleY) {
        if (scaleX === void 0) { scaleX = 1; }
        if (scaleY === void 0) { scaleY = 1; }
        $el.css('transform', 'translate3d(' +
            xValue +
            'px, ' +
            yValue +
            'px, 0px) scale3d(' +
            scaleX +
            ', ' +
            scaleY +
            ', 1)');
    };
    LightGallery.prototype.mousewheel = function () {
        var _this = this;
        var lastCall = 0;
        this.outer.on('wheel.lg', function (e) {
            if (!e.deltaY || _this.galleryItems.length < 2) {
                return;
            }
            e.preventDefault();
            var now = new Date().getTime();
            if (now - lastCall < 1000) {
                return;
            }
            lastCall = now;
            if (e.deltaY > 0) {
                _this.goToNextSlide();
            }
            else if (e.deltaY < 0) {
                _this.goToPrevSlide();
            }
        });
    };
    LightGallery.prototype.isSlideElement = function (target) {
        return (target.hasClass('lg-outer') ||
            target.hasClass('lg-item') ||
            target.hasClass('lg-img-wrap'));
    };
    LightGallery.prototype.isPosterElement = function (target) {
        var playButton = this.getSlideItem(this.index)
            .find('.lg-video-play-button')
            .get();
        return (target.hasClass('lg-video-poster') ||
            target.hasClass('lg-video-play-button') ||
            (playButton && playButton.contains(target.get())));
    };
    /**
     * Maximize minimize inline gallery.
     * @category lGPublicMethods
     */
    LightGallery.prototype.toggleMaximize = function () {
        var _this = this;
        this.getElementById('lg-maximize').on('click.lg', function () {
            _this.$container.toggleClass('lg-inline');
            _this.refreshOnResize();
        });
    };
    LightGallery.prototype.invalidateItems = function () {
        for (var index = 0; index < this.items.length; index++) {
            var element = this.items[index];
            var $element = $LG(element);
            $element.off("click.lgcustom-item-" + $element.attr('data-lg-id'));
        }
    };
    LightGallery.prototype.trapFocus = function () {
        var _this = this;
        this.$container.get().focus({
            preventScroll: true,
        });
        $LG(window).on("keydown.lg.global" + this.lgId, function (e) {
            if (!_this.lgOpened) {
                return;
            }
            var isTabPressed = e.key === 'Tab' || e.keyCode === 9;
            if (!isTabPressed) {
                return;
            }
            var focusableEls = utils.getFocusableElements(_this.$container.get());
            var firstFocusableEl = focusableEls[0];
            var lastFocusableEl = focusableEls[focusableEls.length - 1];
            if (e.shiftKey) {
                if (document.activeElement === firstFocusableEl) {
                    lastFocusableEl.focus();
                    e.preventDefault();
                }
            }
            else {
                if (document.activeElement === lastFocusableEl) {
                    firstFocusableEl.focus();
                    e.preventDefault();
                }
            }
        });
    };
    LightGallery.prototype.manageCloseGallery = function () {
        var _this = this;
        if (!this.settings.closable)
            return;
        var mousedown = false;
        this.getElementById('lg-close').on('click.lg', function () {
            _this.closeGallery();
        });
        if (this.settings.closeOnTap) {
            // If you drag the slide and release outside gallery gets close on chrome
            // for preventing this check mousedown and mouseup happened on .lg-item or lg-outer
            this.outer.on('mousedown.lg', function (e) {
                var target = $LG(e.target);
                if (_this.isSlideElement(target)) {
                    mousedown = true;
                }
                else {
                    mousedown = false;
                }
            });
            this.outer.on('mousemove.lg', function () {
                mousedown = false;
            });
            this.outer.on('mouseup.lg', function (e) {
                var target = $LG(e.target);
                if (_this.isSlideElement(target) && mousedown) {
                    if (!_this.outer.hasClass('lg-dragging')) {
                        _this.closeGallery();
                    }
                }
            });
        }
    };
    /**
     * Close lightGallery if it is opened.
     *
     * @description If closable is false in the settings, you need to pass true via closeGallery method to force close gallery
     * @return returns the estimated time to close gallery completely including the close animation duration
     * @category lGPublicMethods
     * @example
     *  const plugin = lightGallery();
     *  plugin.closeGallery();
     *
     */
    LightGallery.prototype.closeGallery = function (force) {
        var _this = this;
        if (!this.lgOpened || (!this.settings.closable && !force)) {
            return 0;
        }
        this.LGel.trigger(lGEvents.beforeClose);
        if (this.settings.resetScrollPosition && !this.settings.hideScrollbar) {
            $LG(window).scrollTop(this.prevScrollTop);
        }
        var currentItem = this.items[this.index];
        var transform;
        if (this.zoomFromOrigin && currentItem) {
            var _a = this.mediaContainerPosition, top_4 = _a.top, bottom = _a.bottom;
            var _b = this.galleryItems[this.index], __slideVideoInfo = _b.__slideVideoInfo, poster = _b.poster;
            var imageSize = utils.getSize(currentItem, this.outer, top_4 + bottom, __slideVideoInfo && poster && this.settings.videoMaxSize);
            transform = utils.getTransform(currentItem, this.outer, top_4, bottom, imageSize);
        }
        if (this.zoomFromOrigin && transform) {
            this.outer.addClass('lg-closing lg-zoom-from-image');
            this.getSlideItem(this.index)
                .addClass('lg-start-end-progress')
                .css('transition-duration', this.settings.startAnimationDuration + 'ms')
                .css('transform', transform);
        }
        else {
            this.outer.addClass('lg-hide-items');
            // lg-zoom-from-image is used for setting the opacity to 1 if zoomFromOrigin is true
            // If the closing item doesn't have the lg-size attribute, remove this class to avoid the closing css conflicts
            this.outer.removeClass('lg-zoom-from-image');
        }
        // Unbind all events added by lightGallery
        // @todo
        //this.$el.off('.lg.tm');
        this.destroyModules();
        this.lGalleryOn = false;
        this.isDummyImageRemoved = false;
        this.zoomFromOrigin = this.settings.zoomFromOrigin;
        clearTimeout(this.hideBarTimeout);
        this.hideBarTimeout = false;
        $LG('html').removeClass('lg-on');
        this.outer.removeClass('lg-visible lg-components-open');
        // Resetting opacity to 0 isd required as  vertical swipe to close function adds inline opacity.
        this.$backdrop.removeClass('in').css('opacity', 0);
        var removeTimeout = this.zoomFromOrigin && transform
            ? Math.max(this.settings.startAnimationDuration, this.settings.backdropDuration)
            : this.settings.backdropDuration;
        this.$container.removeClass('lg-show-in');
        // Once the closign animation is completed and gallery is invisible
        setTimeout(function () {
            if (_this.zoomFromOrigin && transform) {
                _this.outer.removeClass('lg-zoom-from-image');
            }
            _this.$container.removeClass('lg-show');
            // Reset scrollbar
            _this.resetScrollBar();
            // Need to remove inline opacity as it is used in the stylesheet as well
            _this.$backdrop
                .removeAttr('style')
                .css('transition-duration', _this.settings.backdropDuration + 'ms');
            _this.outer.removeClass("lg-closing " + _this.settings.startClass);
            _this.getSlideItem(_this.index).removeClass('lg-start-end-progress');
            _this.$inner.empty();
            if (_this.lgOpened) {
                _this.LGel.trigger(lGEvents.afterClose, {
                    instance: _this,
                });
            }
            if (_this.$container.get()) {
                _this.$container.get().blur();
            }
            _this.lgOpened = false;
        }, removeTimeout + 100);
        return removeTimeout + 100;
    };
    LightGallery.prototype.initModules = function () {
        this.plugins.forEach(function (module) {
            try {
                module.init();
            }
            catch (err) {
                console.warn("lightGallery:- make sure lightGallery module is properly initiated");
            }
        });
    };
    LightGallery.prototype.destroyModules = function (destroy) {
        this.plugins.forEach(function (module) {
            try {
                if (destroy) {
                    module.destroy();
                }
                else {
                    module.closeGallery && module.closeGallery();
                }
            }
            catch (err) {
                console.warn("lightGallery:- make sure lightGallery module is properly destroyed");
            }
        });
    };
    /**
     * Refresh lightGallery with new set of children.
     *
     * @description This is useful to update the gallery when the child elements are changed without calling destroy method.
     *
     * If you are using dynamic mode, you can pass the modified array of dynamicEl as the first parameter to refresh the dynamic gallery
     * @see <a href="/demos/dynamic-mode/">Demo</a>
     * @category lGPublicMethods
     * @example
     *  const plugin = lightGallery();
     *  // Delete or add children, then call
     *  plugin.refresh();
     *
     */
    LightGallery.prototype.refresh = function (galleryItems) {
        if (!this.settings.dynamic) {
            this.invalidateItems();
        }
        if (galleryItems) {
            this.galleryItems = galleryItems;
        }
        else {
            this.galleryItems = this.getItems();
        }
        this.updateControls();
        this.openGalleryOnItemClick();
        this.LGel.trigger(lGEvents.updateSlides);
    };
    LightGallery.prototype.updateControls = function () {
        this.addSlideVideoInfo(this.galleryItems);
        this.updateCounterTotal();
        this.manageSingleSlideClassName();
    };
    LightGallery.prototype.destroyGallery = function () {
        this.destroyModules(true);
        if (!this.settings.dynamic) {
            this.invalidateItems();
        }
        $LG(window).off(".lg.global" + this.lgId);
        this.LGel.off('.lg');
        this.$container.remove();
    };
    /**
     * Destroy lightGallery.
     * Destroy lightGallery and its plugin instances completely
     *
     * @description This method also calls CloseGallery function internally. Returns the time takes to completely close and destroy the instance.
     * In case if you want to re-initialize lightGallery right after destroying it, initialize it only once the destroy process is completed.
     * You can use refresh method most of the times.
     * @category lGPublicMethods
     * @example
     *  const plugin = lightGallery();
     *  plugin.destroy();
     *
     */
    LightGallery.prototype.destroy = function () {
        var closeTimeout = this.closeGallery(true);
        if (closeTimeout) {
            setTimeout(this.destroyGallery.bind(this), closeTimeout);
        }
        else {
            this.destroyGallery();
        }
        return closeTimeout;
    };
    return LightGallery;
}());

function lightGallery(el, options) {
    return new LightGallery(el, options);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lightGallery);
//# sourceMappingURL=lightgallery.es5.js.map


/***/ }),

/***/ "./node_modules/lightgallery/plugins/autoplay/lg-autoplay.es5.js":
/*!***********************************************************************!*\
  !*** ./node_modules/lightgallery/plugins/autoplay/lg-autoplay.es5.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*!
 * lightgallery | 2.7.0 | October 9th 2022
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

/**
 * List of lightGallery events
 * All events should be documented here
 * Below interfaces are used to build the website documentations
 * */
var lGEvents = {
    afterAppendSlide: 'lgAfterAppendSlide',
    init: 'lgInit',
    hasVideo: 'lgHasVideo',
    containerResize: 'lgContainerResize',
    updateSlides: 'lgUpdateSlides',
    afterAppendSubHtml: 'lgAfterAppendSubHtml',
    beforeOpen: 'lgBeforeOpen',
    afterOpen: 'lgAfterOpen',
    slideItemLoad: 'lgSlideItemLoad',
    beforeSlide: 'lgBeforeSlide',
    afterSlide: 'lgAfterSlide',
    posterClick: 'lgPosterClick',
    dragStart: 'lgDragStart',
    dragMove: 'lgDragMove',
    dragEnd: 'lgDragEnd',
    beforeNextSlide: 'lgBeforeNextSlide',
    beforePrevSlide: 'lgBeforePrevSlide',
    beforeClose: 'lgBeforeClose',
    afterClose: 'lgAfterClose',
    rotateLeft: 'lgRotateLeft',
    rotateRight: 'lgRotateRight',
    flipHorizontal: 'lgFlipHorizontal',
    flipVertical: 'lgFlipVertical',
    autoplay: 'lgAutoplay',
    autoplayStart: 'lgAutoplayStart',
    autoplayStop: 'lgAutoplayStop',
};

var autoplaySettings = {
    autoplay: true,
    slideShowAutoplay: false,
    slideShowInterval: 5000,
    progressBar: true,
    forceSlideShowAutoplay: false,
    autoplayControls: true,
    appendAutoplayControlsTo: '.lg-toolbar',
    autoplayPluginStrings: {
        toggleAutoplay: 'Toggle Autoplay',
    },
};

/**
 * Creates the autoplay plugin.
 * @param {object} element - lightGallery element
 */
var Autoplay = /** @class */ (function () {
    function Autoplay(instance) {
        this.core = instance;
        // extend module default settings with lightGallery core settings
        this.settings = __assign(__assign({}, autoplaySettings), this.core.settings);
        return this;
    }
    Autoplay.prototype.init = function () {
        var _this = this;
        if (!this.settings.autoplay) {
            return;
        }
        this.interval = false;
        // Identify if slide happened from autoplay
        this.fromAuto = true;
        // Identify if autoplay canceled from touch/drag
        this.pausedOnTouchDrag = false;
        this.pausedOnSlideChange = false;
        // append autoplay controls
        if (this.settings.autoplayControls) {
            this.controls();
        }
        // Create progress bar
        if (this.settings.progressBar) {
            this.core.outer.append('<div class="lg-progress-bar"><div class="lg-progress"></div></div>');
        }
        // Start autoplay
        if (this.settings.slideShowAutoplay) {
            this.core.LGel.once(lGEvents.slideItemLoad + ".autoplay", function () {
                _this.startAutoPlay();
            });
        }
        // cancel interval on touchstart and dragstart
        this.core.LGel.on(lGEvents.dragStart + ".autoplay touchstart.lg.autoplay", function () {
            if (_this.interval) {
                _this.stopAutoPlay();
                _this.pausedOnTouchDrag = true;
            }
        });
        // restore autoplay if autoplay canceled from touchstart / dragstart
        this.core.LGel.on(lGEvents.dragEnd + ".autoplay touchend.lg.autoplay", function () {
            if (!_this.interval && _this.pausedOnTouchDrag) {
                _this.startAutoPlay();
                _this.pausedOnTouchDrag = false;
            }
        });
        this.core.LGel.on(lGEvents.beforeSlide + ".autoplay", function () {
            _this.showProgressBar();
            if (!_this.fromAuto && _this.interval) {
                _this.stopAutoPlay();
                _this.pausedOnSlideChange = true;
            }
            else {
                _this.pausedOnSlideChange = false;
            }
            _this.fromAuto = false;
        });
        // restore autoplay if autoplay canceled from touchstart / dragstart
        this.core.LGel.on(lGEvents.afterSlide + ".autoplay", function () {
            if (_this.pausedOnSlideChange &&
                !_this.interval &&
                _this.settings.forceSlideShowAutoplay) {
                _this.startAutoPlay();
                _this.pausedOnSlideChange = false;
            }
        });
        // set progress
        this.showProgressBar();
    };
    Autoplay.prototype.showProgressBar = function () {
        var _this = this;
        if (this.settings.progressBar && this.fromAuto) {
            var _$progressBar_1 = this.core.outer.find('.lg-progress-bar');
            var _$progress_1 = this.core.outer.find('.lg-progress');
            if (this.interval) {
                _$progress_1.removeAttr('style');
                _$progressBar_1.removeClass('lg-start');
                setTimeout(function () {
                    _$progress_1.css('transition', 'width ' +
                        (_this.core.settings.speed +
                            _this.settings.slideShowInterval) +
                        'ms ease 0s');
                    _$progressBar_1.addClass('lg-start');
                }, 20);
            }
        }
    };
    // Manage autoplay via play/stop buttons
    Autoplay.prototype.controls = function () {
        var _this = this;
        var _html = "<button aria-label=\"" + this.settings.autoplayPluginStrings['toggleAutoplay'] + "\" type=\"button\" class=\"lg-autoplay-button lg-icon\"></button>";
        // Append autoplay controls
        this.core.outer
            .find(this.settings.appendAutoplayControlsTo)
            .append(_html);
        this.core.outer
            .find('.lg-autoplay-button')
            .first()
            .on('click.lg.autoplay', function () {
            if (_this.core.outer.hasClass('lg-show-autoplay')) {
                _this.stopAutoPlay();
            }
            else {
                if (!_this.interval) {
                    _this.startAutoPlay();
                }
            }
        });
    };
    // Autostart gallery
    Autoplay.prototype.startAutoPlay = function () {
        var _this = this;
        this.core.outer
            .find('.lg-progress')
            .css('transition', 'width ' +
            (this.core.settings.speed +
                this.settings.slideShowInterval) +
            'ms ease 0s');
        this.core.outer.addClass('lg-show-autoplay');
        this.core.outer.find('.lg-progress-bar').addClass('lg-start');
        this.core.LGel.trigger(lGEvents.autoplayStart, {
            index: this.core.index,
        });
        this.interval = setInterval(function () {
            if (_this.core.index + 1 < _this.core.galleryItems.length) {
                _this.core.index++;
            }
            else {
                _this.core.index = 0;
            }
            _this.core.LGel.trigger(lGEvents.autoplay, {
                index: _this.core.index,
            });
            _this.fromAuto = true;
            _this.core.slide(_this.core.index, false, false, 'next');
        }, this.core.settings.speed + this.settings.slideShowInterval);
    };
    // cancel Autostart
    Autoplay.prototype.stopAutoPlay = function () {
        if (this.interval) {
            this.core.LGel.trigger(lGEvents.autoplayStop, {
                index: this.core.index,
            });
            this.core.outer.find('.lg-progress').removeAttr('style');
            this.core.outer.removeClass('lg-show-autoplay');
            this.core.outer.find('.lg-progress-bar').removeClass('lg-start');
        }
        clearInterval(this.interval);
        this.interval = false;
    };
    Autoplay.prototype.closeGallery = function () {
        this.stopAutoPlay();
    };
    Autoplay.prototype.destroy = function () {
        if (this.settings.autoplay) {
            this.core.outer.find('.lg-progress-bar').remove();
        }
        // Remove all event listeners added by autoplay plugin
        this.core.LGel.off('.lg.autoplay');
        this.core.LGel.off('.autoplay');
    };
    return Autoplay;
}());

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Autoplay);
//# sourceMappingURL=lg-autoplay.es5.js.map


/***/ }),

/***/ "./node_modules/lightgallery/plugins/fullscreen/lg-fullscreen.es5.js":
/*!***************************************************************************!*\
  !*** ./node_modules/lightgallery/plugins/fullscreen/lg-fullscreen.es5.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*!
 * lightgallery | 2.7.0 | October 9th 2022
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var fullscreenSettings = {
    fullScreen: true,
    fullscreenPluginStrings: {
        toggleFullscreen: 'Toggle Fullscreen',
    },
};

var FullScreen = /** @class */ (function () {
    function FullScreen(instance, $LG) {
        // get lightGallery core plugin instance
        this.core = instance;
        this.$LG = $LG;
        // extend module default settings with lightGallery core settings
        this.settings = __assign(__assign({}, fullscreenSettings), this.core.settings);
        return this;
    }
    FullScreen.prototype.init = function () {
        var fullScreen = '';
        if (this.settings.fullScreen) {
            // check for fullscreen browser support
            if (!document.fullscreenEnabled &&
                !document.webkitFullscreenEnabled &&
                !document.mozFullScreenEnabled &&
                !document.msFullscreenEnabled) {
                return;
            }
            else {
                fullScreen = "<button type=\"button\" aria-label=\"" + this.settings.fullscreenPluginStrings['toggleFullscreen'] + "\" class=\"lg-fullscreen lg-icon\"></button>";
                this.core.$toolbar.append(fullScreen);
                this.fullScreen();
            }
        }
    };
    FullScreen.prototype.isFullScreen = function () {
        return (document.fullscreenElement ||
            document.mozFullScreenElement ||
            document.webkitFullscreenElement ||
            document.msFullscreenElement);
    };
    FullScreen.prototype.requestFullscreen = function () {
        var el = document.documentElement;
        if (el.requestFullscreen) {
            el.requestFullscreen();
        }
        else if (el.msRequestFullscreen) {
            el.msRequestFullscreen();
        }
        else if (el.mozRequestFullScreen) {
            el.mozRequestFullScreen();
        }
        else if (el.webkitRequestFullscreen) {
            el.webkitRequestFullscreen();
        }
    };
    FullScreen.prototype.exitFullscreen = function () {
        if (document.exitFullscreen) {
            document.exitFullscreen();
        }
        else if (document.msExitFullscreen) {
            document.msExitFullscreen();
        }
        else if (document.mozCancelFullScreen) {
            document.mozCancelFullScreen();
        }
        else if (document.webkitExitFullscreen) {
            document.webkitExitFullscreen();
        }
    };
    // https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode
    FullScreen.prototype.fullScreen = function () {
        var _this = this;
        this.$LG(document).on("fullscreenchange.lg.global" + this.core.lgId + " \n            webkitfullscreenchange.lg.global" + this.core.lgId + " \n            mozfullscreenchange.lg.global" + this.core.lgId + " \n            MSFullscreenChange.lg.global" + this.core.lgId, function () {
            if (!_this.core.lgOpened)
                return;
            _this.core.outer.toggleClass('lg-fullscreen-on');
        });
        this.core.outer
            .find('.lg-fullscreen')
            .first()
            .on('click.lg', function () {
            if (_this.isFullScreen()) {
                _this.exitFullscreen();
            }
            else {
                _this.requestFullscreen();
            }
        });
    };
    FullScreen.prototype.closeGallery = function () {
        // exit from fullscreen if activated
        if (this.isFullScreen()) {
            this.exitFullscreen();
        }
    };
    FullScreen.prototype.destroy = function () {
        this.$LG(document).off("fullscreenchange.lg.global" + this.core.lgId + " \n            webkitfullscreenchange.lg.global" + this.core.lgId + " \n            mozfullscreenchange.lg.global" + this.core.lgId + " \n            MSFullscreenChange.lg.global" + this.core.lgId);
    };
    return FullScreen;
}());

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FullScreen);
//# sourceMappingURL=lg-fullscreen.es5.js.map


/***/ }),

/***/ "./node_modules/lightgallery/plugins/rotate/lg-rotate.es5.js":
/*!*******************************************************************!*\
  !*** ./node_modules/lightgallery/plugins/rotate/lg-rotate.es5.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*!
 * lightgallery | 2.7.0 | October 9th 2022
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

/**
 * List of lightGallery events
 * All events should be documented here
 * Below interfaces are used to build the website documentations
 * */
var lGEvents = {
    afterAppendSlide: 'lgAfterAppendSlide',
    init: 'lgInit',
    hasVideo: 'lgHasVideo',
    containerResize: 'lgContainerResize',
    updateSlides: 'lgUpdateSlides',
    afterAppendSubHtml: 'lgAfterAppendSubHtml',
    beforeOpen: 'lgBeforeOpen',
    afterOpen: 'lgAfterOpen',
    slideItemLoad: 'lgSlideItemLoad',
    beforeSlide: 'lgBeforeSlide',
    afterSlide: 'lgAfterSlide',
    posterClick: 'lgPosterClick',
    dragStart: 'lgDragStart',
    dragMove: 'lgDragMove',
    dragEnd: 'lgDragEnd',
    beforeNextSlide: 'lgBeforeNextSlide',
    beforePrevSlide: 'lgBeforePrevSlide',
    beforeClose: 'lgBeforeClose',
    afterClose: 'lgAfterClose',
    rotateLeft: 'lgRotateLeft',
    rotateRight: 'lgRotateRight',
    flipHorizontal: 'lgFlipHorizontal',
    flipVertical: 'lgFlipVertical',
    autoplay: 'lgAutoplay',
    autoplayStart: 'lgAutoplayStart',
    autoplayStop: 'lgAutoplayStop',
};

var rotateSettings = {
    rotate: true,
    rotateSpeed: 400,
    rotateLeft: true,
    rotateRight: true,
    flipHorizontal: true,
    flipVertical: true,
    rotatePluginStrings: {
        flipVertical: 'Flip vertical',
        flipHorizontal: 'Flip horizontal',
        rotateLeft: 'Rotate left',
        rotateRight: 'Rotate right',
    },
};

var Rotate = /** @class */ (function () {
    function Rotate(instance, $LG) {
        // get lightGallery core plugin instance
        this.core = instance;
        this.$LG = $LG;
        // extend module default settings with lightGallery core settings
        this.settings = __assign(__assign({}, rotateSettings), this.core.settings);
        return this;
    }
    Rotate.prototype.buildTemplates = function () {
        var rotateIcons = '';
        if (this.settings.flipVertical) {
            rotateIcons += "<button type=\"button\" id=\"lg-flip-ver\" aria-label=\"" + this.settings.rotatePluginStrings['flipVertical'] + "\" class=\"lg-flip-ver lg-icon\"></button>";
        }
        if (this.settings.flipHorizontal) {
            rotateIcons += "<button type=\"button\" id=\"lg-flip-hor\" aria-label=\"" + this.settings.rotatePluginStrings['flipHorizontal'] + "\" class=\"lg-flip-hor lg-icon\"></button>";
        }
        if (this.settings.rotateLeft) {
            rotateIcons += "<button type=\"button\" id=\"lg-rotate-left\" aria-label=\"" + this.settings.rotatePluginStrings['rotateLeft'] + "\" class=\"lg-rotate-left lg-icon\"></button>";
        }
        if (this.settings.rotateRight) {
            rotateIcons += "<button type=\"button\" id=\"lg-rotate-right\" aria-label=\"" + this.settings.rotatePluginStrings['rotateRight'] + "\" class=\"lg-rotate-right lg-icon\"></button>";
        }
        this.core.$toolbar.append(rotateIcons);
    };
    Rotate.prototype.init = function () {
        var _this = this;
        if (!this.settings.rotate) {
            return;
        }
        this.buildTemplates();
        // Save rotate config for each item to persist its rotate, flip values
        // even after navigating to diferent slides
        this.rotateValuesList = {};
        // event triggered after appending slide content
        this.core.LGel.on(lGEvents.slideItemLoad + ".rotate", function (event) {
            var index = event.detail.index;
            var rotateEl = _this.core
                .getSlideItem(index)
                .find('.lg-img-rotate')
                .get();
            if (!rotateEl) {
                var imageWrap = _this.core
                    .getSlideItem(index)
                    .find('.lg-object')
                    .first();
                imageWrap.wrap('lg-img-rotate');
                //this.rotateValuesList[this.core.index]
                _this.core
                    .getSlideItem(_this.core.index)
                    .find('.lg-img-rotate')
                    .css('transition-duration', _this.settings.rotateSpeed + 'ms');
            }
        });
        this.core.outer
            .find('#lg-rotate-left')
            .first()
            .on('click.lg', this.rotateLeft.bind(this));
        this.core.outer
            .find('#lg-rotate-right')
            .first()
            .on('click.lg', this.rotateRight.bind(this));
        this.core.outer
            .find('#lg-flip-hor')
            .first()
            .on('click.lg', this.flipHorizontal.bind(this));
        this.core.outer
            .find('#lg-flip-ver')
            .first()
            .on('click.lg', this.flipVertical.bind(this));
        // Reset rotate on slide change
        this.core.LGel.on(lGEvents.beforeSlide + ".rotate", function (event) {
            if (!_this.rotateValuesList[event.detail.index]) {
                _this.rotateValuesList[event.detail.index] = {
                    rotate: 0,
                    flipHorizontal: 1,
                    flipVertical: 1,
                };
            }
        });
    };
    Rotate.prototype.applyStyles = function () {
        var $image = this.core
            .getSlideItem(this.core.index)
            .find('.lg-img-rotate')
            .first();
        $image.css('transform', 'rotate(' +
            this.rotateValuesList[this.core.index].rotate +
            'deg)' +
            ' scale3d(' +
            this.rotateValuesList[this.core.index].flipHorizontal +
            ', ' +
            this.rotateValuesList[this.core.index].flipVertical +
            ', 1)');
    };
    Rotate.prototype.rotateLeft = function () {
        this.rotateValuesList[this.core.index].rotate -= 90;
        this.applyStyles();
        this.triggerEvents(lGEvents.rotateLeft, {
            rotate: this.rotateValuesList[this.core.index].rotate,
        });
    };
    Rotate.prototype.rotateRight = function () {
        this.rotateValuesList[this.core.index].rotate += 90;
        this.applyStyles();
        this.triggerEvents(lGEvents.rotateRight, {
            rotate: this.rotateValuesList[this.core.index].rotate,
        });
    };
    Rotate.prototype.getCurrentRotation = function (el) {
        if (!el) {
            return 0;
        }
        var st = this.$LG(el).style();
        var tm = st.getPropertyValue('-webkit-transform') ||
            st.getPropertyValue('-moz-transform') ||
            st.getPropertyValue('-ms-transform') ||
            st.getPropertyValue('-o-transform') ||
            st.getPropertyValue('transform') ||
            'none';
        if (tm !== 'none') {
            var values = tm.split('(')[1].split(')')[0].split(',');
            if (values) {
                var angle = Math.round(Math.atan2(values[1], values[0]) * (180 / Math.PI));
                return angle < 0 ? angle + 360 : angle;
            }
        }
        return 0;
    };
    Rotate.prototype.flipHorizontal = function () {
        var rotateEl = this.core
            .getSlideItem(this.core.index)
            .find('.lg-img-rotate')
            .first()
            .get();
        var currentRotation = this.getCurrentRotation(rotateEl);
        var rotateAxis = 'flipHorizontal';
        if (currentRotation === 90 || currentRotation === 270) {
            rotateAxis = 'flipVertical';
        }
        this.rotateValuesList[this.core.index][rotateAxis] *= -1;
        this.applyStyles();
        this.triggerEvents(lGEvents.flipHorizontal, {
            flipHorizontal: this.rotateValuesList[this.core.index][rotateAxis],
        });
    };
    Rotate.prototype.flipVertical = function () {
        var rotateEl = this.core
            .getSlideItem(this.core.index)
            .find('.lg-img-rotate')
            .first()
            .get();
        var currentRotation = this.getCurrentRotation(rotateEl);
        var rotateAxis = 'flipVertical';
        if (currentRotation === 90 || currentRotation === 270) {
            rotateAxis = 'flipHorizontal';
        }
        this.rotateValuesList[this.core.index][rotateAxis] *= -1;
        this.applyStyles();
        this.triggerEvents(lGEvents.flipVertical, {
            flipVertical: this.rotateValuesList[this.core.index][rotateAxis],
        });
    };
    Rotate.prototype.triggerEvents = function (event, detail) {
        var _this = this;
        setTimeout(function () {
            _this.core.LGel.trigger(event, detail);
        }, this.settings.rotateSpeed + 10);
    };
    Rotate.prototype.isImageOrientationChanged = function () {
        var rotateValue = this.rotateValuesList[this.core.index];
        var isRotated = Math.abs(rotateValue.rotate) % 360 !== 0;
        var ifFlippedHor = rotateValue.flipHorizontal < 0;
        var ifFlippedVer = rotateValue.flipVertical < 0;
        return isRotated || ifFlippedHor || ifFlippedVer;
    };
    Rotate.prototype.closeGallery = function () {
        if (this.isImageOrientationChanged()) {
            this.core.getSlideItem(this.core.index).css('opacity', 0);
        }
        this.rotateValuesList = {};
    };
    Rotate.prototype.destroy = function () {
        // Unbind all events added by lightGallery rotate plugin
        this.core.LGel.off('.lg.rotate');
        this.core.LGel.off('.rotate');
    };
    return Rotate;
}());

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Rotate);
//# sourceMappingURL=lg-rotate.es5.js.map


/***/ }),

/***/ "./node_modules/lightgallery/plugins/share/lg-share.es5.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lightgallery/plugins/share/lg-share.es5.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*!
 * lightgallery | 2.7.0 | October 9th 2022
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

var shareSettings = {
    share: true,
    facebook: true,
    facebookDropdownText: 'Facebook',
    twitter: true,
    twitterDropdownText: 'Twitter',
    pinterest: true,
    pinterestDropdownText: 'Pinterest',
    additionalShareOptions: [],
    sharePluginStrings: { share: 'Share' },
};

function getFacebookShareLink(galleryItem) {
    var facebookBaseUrl = '//www.facebook.com/sharer/sharer.php?u=';
    return (facebookBaseUrl +
        encodeURIComponent(galleryItem.facebookShareUrl || window.location.href));
}

function getTwitterShareLink(galleryItem) {
    var twitterBaseUrl = '//twitter.com/intent/tweet?text=';
    var url = encodeURIComponent(galleryItem.twitterShareUrl || window.location.href);
    var text = galleryItem.tweetText;
    return twitterBaseUrl + text + '&url=' + url;
}

function getPinterestShareLink(galleryItem) {
    var pinterestBaseUrl = 'http://www.pinterest.com/pin/create/button/?url=';
    var description = galleryItem.pinterestText;
    var media = encodeURIComponent(galleryItem.src);
    var url = encodeURIComponent(galleryItem.pinterestShareUrl || window.location.href);
    return (pinterestBaseUrl +
        url +
        '&media=' +
        media +
        '&description=' +
        description);
}

/**
 * List of lightGallery events
 * All events should be documented here
 * Below interfaces are used to build the website documentations
 * */
var lGEvents = {
    afterAppendSlide: 'lgAfterAppendSlide',
    init: 'lgInit',
    hasVideo: 'lgHasVideo',
    containerResize: 'lgContainerResize',
    updateSlides: 'lgUpdateSlides',
    afterAppendSubHtml: 'lgAfterAppendSubHtml',
    beforeOpen: 'lgBeforeOpen',
    afterOpen: 'lgAfterOpen',
    slideItemLoad: 'lgSlideItemLoad',
    beforeSlide: 'lgBeforeSlide',
    afterSlide: 'lgAfterSlide',
    posterClick: 'lgPosterClick',
    dragStart: 'lgDragStart',
    dragMove: 'lgDragMove',
    dragEnd: 'lgDragEnd',
    beforeNextSlide: 'lgBeforeNextSlide',
    beforePrevSlide: 'lgBeforePrevSlide',
    beforeClose: 'lgBeforeClose',
    afterClose: 'lgAfterClose',
    rotateLeft: 'lgRotateLeft',
    rotateRight: 'lgRotateRight',
    flipHorizontal: 'lgFlipHorizontal',
    flipVertical: 'lgFlipVertical',
    autoplay: 'lgAutoplay',
    autoplayStart: 'lgAutoplayStart',
    autoplayStop: 'lgAutoplayStop',
};

var Share = /** @class */ (function () {
    function Share(instance) {
        this.shareOptions = [];
        // get lightGallery core plugin instance
        this.core = instance;
        // extend module default settings with lightGallery core settings
        this.settings = __assign(__assign({}, shareSettings), this.core.settings);
        return this;
    }
    Share.prototype.init = function () {
        if (!this.settings.share) {
            return;
        }
        this.shareOptions = __spreadArrays(this.getDefaultShareOptions(), this.settings.additionalShareOptions);
        this.setLgShareMarkup();
        this.core.outer
            .find('.lg-share .lg-dropdown')
            .append(this.getShareListHtml());
        this.core.LGel.on(lGEvents.afterSlide + ".share", this.onAfterSlide.bind(this));
    };
    Share.prototype.getShareListHtml = function () {
        var shareHtml = '';
        this.shareOptions.forEach(function (shareOption) {
            shareHtml += shareOption.dropdownHTML;
        });
        return shareHtml;
    };
    Share.prototype.setLgShareMarkup = function () {
        var _this = this;
        this.core.$toolbar.append("<button type=\"button\" aria-label=\"" + this.settings.sharePluginStrings['share'] + "\" aria-haspopup=\"true\" aria-expanded=\"false\" class=\"lg-share lg-icon\">\n                <ul class=\"lg-dropdown\" style=\"position: absolute;\"></ul></button>");
        this.core.outer.append('<div class="lg-dropdown-overlay"></div>');
        var $shareButton = this.core.outer.find('.lg-share');
        $shareButton.first().on('click.lg', function () {
            _this.core.outer.toggleClass('lg-dropdown-active');
            if (_this.core.outer.hasClass('lg-dropdown-active')) {
                _this.core.outer.attr('aria-expanded', true);
            }
            else {
                _this.core.outer.attr('aria-expanded', false);
            }
        });
        this.core.outer
            .find('.lg-dropdown-overlay')
            .first()
            .on('click.lg', function () {
            _this.core.outer.removeClass('lg-dropdown-active');
            _this.core.outer.attr('aria-expanded', false);
        });
    };
    Share.prototype.onAfterSlide = function (event) {
        var _this = this;
        var index = event.detail.index;
        var currentItem = this.core.galleryItems[index];
        setTimeout(function () {
            _this.shareOptions.forEach(function (shareOption) {
                var selector = shareOption.selector;
                _this.core.outer
                    .find(selector)
                    .attr('href', shareOption.generateLink(currentItem));
            });
        }, 100);
    };
    Share.prototype.getShareListItemHTML = function (type, text) {
        return "<li><a class=\"lg-share-" + type + "\" rel=\"noopener\" target=\"_blank\"><span class=\"lg-icon\"></span><span class=\"lg-dropdown-text\">" + text + "</span></a></li>";
    };
    Share.prototype.getDefaultShareOptions = function () {
        return __spreadArrays((this.settings.facebook
            ? [
                {
                    type: 'facebook',
                    generateLink: getFacebookShareLink,
                    dropdownHTML: this.getShareListItemHTML('facebook', this.settings.facebookDropdownText),
                    selector: '.lg-share-facebook',
                },
            ]
            : []), (this.settings.twitter
            ? [
                {
                    type: 'twitter',
                    generateLink: getTwitterShareLink,
                    dropdownHTML: this.getShareListItemHTML('twitter', this.settings.twitterDropdownText),
                    selector: '.lg-share-twitter',
                },
            ]
            : []), (this.settings.pinterest
            ? [
                {
                    type: 'pinterest',
                    generateLink: getPinterestShareLink,
                    dropdownHTML: this.getShareListItemHTML('pinterest', this.settings.pinterestDropdownText),
                    selector: '.lg-share-pinterest',
                },
            ]
            : []));
    };
    Share.prototype.destroy = function () {
        this.core.outer.find('.lg-dropdown-overlay').remove();
        this.core.outer.find('.lg-share').remove();
        this.core.LGel.off('.lg.share');
        this.core.LGel.off('.share');
    };
    return Share;
}());

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Share);
//# sourceMappingURL=lg-share.es5.js.map


/***/ }),

/***/ "./node_modules/lightgallery/plugins/thumbnail/lg-thumbnail.es5.js":
/*!*************************************************************************!*\
  !*** ./node_modules/lightgallery/plugins/thumbnail/lg-thumbnail.es5.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*!
 * lightgallery | 2.7.0 | October 9th 2022
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var thumbnailsSettings = {
    thumbnail: true,
    animateThumb: true,
    currentPagerPosition: 'middle',
    alignThumbnails: 'middle',
    thumbWidth: 100,
    thumbHeight: '80px',
    thumbMargin: 5,
    appendThumbnailsTo: '.lg-components',
    toggleThumb: false,
    enableThumbDrag: true,
    enableThumbSwipe: true,
    thumbnailSwipeThreshold: 10,
    loadYouTubeThumbnail: true,
    youTubeThumbSize: 1,
    thumbnailPluginStrings: {
        toggleThumbnails: 'Toggle thumbnails',
    },
};

/**
 * List of lightGallery events
 * All events should be documented here
 * Below interfaces are used to build the website documentations
 * */
var lGEvents = {
    afterAppendSlide: 'lgAfterAppendSlide',
    init: 'lgInit',
    hasVideo: 'lgHasVideo',
    containerResize: 'lgContainerResize',
    updateSlides: 'lgUpdateSlides',
    afterAppendSubHtml: 'lgAfterAppendSubHtml',
    beforeOpen: 'lgBeforeOpen',
    afterOpen: 'lgAfterOpen',
    slideItemLoad: 'lgSlideItemLoad',
    beforeSlide: 'lgBeforeSlide',
    afterSlide: 'lgAfterSlide',
    posterClick: 'lgPosterClick',
    dragStart: 'lgDragStart',
    dragMove: 'lgDragMove',
    dragEnd: 'lgDragEnd',
    beforeNextSlide: 'lgBeforeNextSlide',
    beforePrevSlide: 'lgBeforePrevSlide',
    beforeClose: 'lgBeforeClose',
    afterClose: 'lgAfterClose',
    rotateLeft: 'lgRotateLeft',
    rotateRight: 'lgRotateRight',
    flipHorizontal: 'lgFlipHorizontal',
    flipVertical: 'lgFlipVertical',
    autoplay: 'lgAutoplay',
    autoplayStart: 'lgAutoplayStart',
    autoplayStop: 'lgAutoplayStop',
};

var Thumbnail = /** @class */ (function () {
    function Thumbnail(instance, $LG) {
        this.thumbOuterWidth = 0;
        this.thumbTotalWidth = 0;
        this.translateX = 0;
        this.thumbClickable = false;
        // get lightGallery core plugin instance
        this.core = instance;
        this.$LG = $LG;
        return this;
    }
    Thumbnail.prototype.init = function () {
        // extend module default settings with lightGallery core settings
        this.settings = __assign(__assign({}, thumbnailsSettings), this.core.settings);
        this.thumbOuterWidth = 0;
        this.thumbTotalWidth =
            this.core.galleryItems.length *
                (this.settings.thumbWidth + this.settings.thumbMargin);
        // Thumbnail animation value
        this.translateX = 0;
        this.setAnimateThumbStyles();
        if (!this.core.settings.allowMediaOverlap) {
            this.settings.toggleThumb = false;
        }
        if (this.settings.thumbnail) {
            this.build();
            if (this.settings.animateThumb) {
                if (this.settings.enableThumbDrag) {
                    this.enableThumbDrag();
                }
                if (this.settings.enableThumbSwipe) {
                    this.enableThumbSwipe();
                }
                this.thumbClickable = false;
            }
            else {
                this.thumbClickable = true;
            }
            this.toggleThumbBar();
            this.thumbKeyPress();
        }
    };
    Thumbnail.prototype.build = function () {
        var _this = this;
        this.setThumbMarkup();
        this.manageActiveClassOnSlideChange();
        this.$lgThumb.first().on('click.lg touchend.lg', function (e) {
            var $target = _this.$LG(e.target);
            if (!$target.hasAttribute('data-lg-item-id')) {
                return;
            }
            setTimeout(function () {
                // In IE9 and bellow touch does not support
                // Go to slide if browser does not support css transitions
                if (_this.thumbClickable && !_this.core.lgBusy) {
                    var index = parseInt($target.attr('data-lg-item-id'));
                    _this.core.slide(index, false, true, false);
                }
            }, 50);
        });
        this.core.LGel.on(lGEvents.beforeSlide + ".thumb", function (event) {
            var index = event.detail.index;
            _this.animateThumb(index);
        });
        this.core.LGel.on(lGEvents.beforeOpen + ".thumb", function () {
            _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;
        });
        this.core.LGel.on(lGEvents.updateSlides + ".thumb", function () {
            _this.rebuildThumbnails();
        });
        this.core.LGel.on(lGEvents.containerResize + ".thumb", function () {
            if (!_this.core.lgOpened)
                return;
            setTimeout(function () {
                _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;
                _this.animateThumb(_this.core.index);
                _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;
            }, 50);
        });
    };
    Thumbnail.prototype.setThumbMarkup = function () {
        var thumbOuterClassNames = 'lg-thumb-outer ';
        if (this.settings.alignThumbnails) {
            thumbOuterClassNames += "lg-thumb-align-" + this.settings.alignThumbnails;
        }
        var html = "<div class=\"" + thumbOuterClassNames + "\">\n        <div class=\"lg-thumb lg-group\">\n        </div>\n        </div>";
        this.core.outer.addClass('lg-has-thumb');
        if (this.settings.appendThumbnailsTo === '.lg-components') {
            this.core.$lgComponents.append(html);
        }
        else {
            this.core.outer.append(html);
        }
        this.$thumbOuter = this.core.outer.find('.lg-thumb-outer').first();
        this.$lgThumb = this.core.outer.find('.lg-thumb').first();
        if (this.settings.animateThumb) {
            this.core.outer
                .find('.lg-thumb')
                .css('transition-duration', this.core.settings.speed + 'ms')
                .css('width', this.thumbTotalWidth + 'px')
                .css('position', 'relative');
        }
        this.setThumbItemHtml(this.core.galleryItems);
    };
    Thumbnail.prototype.enableThumbDrag = function () {
        var _this = this;
        var thumbDragUtils = {
            cords: {
                startX: 0,
                endX: 0,
            },
            isMoved: false,
            newTranslateX: 0,
            startTime: new Date(),
            endTime: new Date(),
            touchMoveTime: 0,
        };
        var isDragging = false;
        this.$thumbOuter.addClass('lg-grab');
        this.core.outer
            .find('.lg-thumb')
            .first()
            .on('mousedown.lg.thumb', function (e) {
            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {
                // execute only on .lg-object
                e.preventDefault();
                thumbDragUtils.cords.startX = e.pageX;
                thumbDragUtils.startTime = new Date();
                _this.thumbClickable = false;
                isDragging = true;
                // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723
                _this.core.outer.get().scrollLeft += 1;
                _this.core.outer.get().scrollLeft -= 1;
                // *
                _this.$thumbOuter
                    .removeClass('lg-grab')
                    .addClass('lg-grabbing');
            }
        });
        this.$LG(window).on("mousemove.lg.thumb.global" + this.core.lgId, function (e) {
            if (!_this.core.lgOpened)
                return;
            if (isDragging) {
                thumbDragUtils.cords.endX = e.pageX;
                thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);
            }
        });
        this.$LG(window).on("mouseup.lg.thumb.global" + this.core.lgId, function () {
            if (!_this.core.lgOpened)
                return;
            if (thumbDragUtils.isMoved) {
                thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);
            }
            else {
                _this.thumbClickable = true;
            }
            if (isDragging) {
                isDragging = false;
                _this.$thumbOuter.removeClass('lg-grabbing').addClass('lg-grab');
            }
        });
    };
    Thumbnail.prototype.enableThumbSwipe = function () {
        var _this = this;
        var thumbDragUtils = {
            cords: {
                startX: 0,
                endX: 0,
            },
            isMoved: false,
            newTranslateX: 0,
            startTime: new Date(),
            endTime: new Date(),
            touchMoveTime: 0,
        };
        this.$lgThumb.on('touchstart.lg', function (e) {
            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {
                e.preventDefault();
                thumbDragUtils.cords.startX = e.targetTouches[0].pageX;
                _this.thumbClickable = false;
                thumbDragUtils.startTime = new Date();
            }
        });
        this.$lgThumb.on('touchmove.lg', function (e) {
            if (_this.thumbTotalWidth > _this.thumbOuterWidth) {
                e.preventDefault();
                thumbDragUtils.cords.endX = e.targetTouches[0].pageX;
                thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);
            }
        });
        this.$lgThumb.on('touchend.lg', function () {
            if (thumbDragUtils.isMoved) {
                thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);
            }
            else {
                _this.thumbClickable = true;
            }
        });
    };
    // Rebuild thumbnails
    Thumbnail.prototype.rebuildThumbnails = function () {
        var _this = this;
        // Remove transitions
        this.$thumbOuter.addClass('lg-rebuilding-thumbnails');
        setTimeout(function () {
            _this.thumbTotalWidth =
                _this.core.galleryItems.length *
                    (_this.settings.thumbWidth + _this.settings.thumbMargin);
            _this.$lgThumb.css('width', _this.thumbTotalWidth + 'px');
            _this.$lgThumb.empty();
            _this.setThumbItemHtml(_this.core.galleryItems);
            _this.animateThumb(_this.core.index);
        }, 50);
        setTimeout(function () {
            _this.$thumbOuter.removeClass('lg-rebuilding-thumbnails');
        }, 200);
    };
    // @ts-check
    Thumbnail.prototype.setTranslate = function (value) {
        this.$lgThumb.css('transform', 'translate3d(-' + value + 'px, 0px, 0px)');
    };
    Thumbnail.prototype.getPossibleTransformX = function (left) {
        if (left > this.thumbTotalWidth - this.thumbOuterWidth) {
            left = this.thumbTotalWidth - this.thumbOuterWidth;
        }
        if (left < 0) {
            left = 0;
        }
        return left;
    };
    Thumbnail.prototype.animateThumb = function (index) {
        this.$lgThumb.css('transition-duration', this.core.settings.speed + 'ms');
        if (this.settings.animateThumb) {
            var position = 0;
            switch (this.settings.currentPagerPosition) {
                case 'left':
                    position = 0;
                    break;
                case 'middle':
                    position =
                        this.thumbOuterWidth / 2 - this.settings.thumbWidth / 2;
                    break;
                case 'right':
                    position = this.thumbOuterWidth - this.settings.thumbWidth;
            }
            this.translateX =
                (this.settings.thumbWidth + this.settings.thumbMargin) * index -
                    1 -
                    position;
            if (this.translateX > this.thumbTotalWidth - this.thumbOuterWidth) {
                this.translateX = this.thumbTotalWidth - this.thumbOuterWidth;
            }
            if (this.translateX < 0) {
                this.translateX = 0;
            }
            this.setTranslate(this.translateX);
        }
    };
    Thumbnail.prototype.onThumbTouchMove = function (thumbDragUtils) {
        thumbDragUtils.newTranslateX = this.translateX;
        thumbDragUtils.isMoved = true;
        thumbDragUtils.touchMoveTime = new Date().valueOf();
        thumbDragUtils.newTranslateX -=
            thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;
        thumbDragUtils.newTranslateX = this.getPossibleTransformX(thumbDragUtils.newTranslateX);
        // move current slide
        this.setTranslate(thumbDragUtils.newTranslateX);
        this.$thumbOuter.addClass('lg-dragging');
        return thumbDragUtils;
    };
    Thumbnail.prototype.onThumbTouchEnd = function (thumbDragUtils) {
        thumbDragUtils.isMoved = false;
        thumbDragUtils.endTime = new Date();
        this.$thumbOuter.removeClass('lg-dragging');
        var touchDuration = thumbDragUtils.endTime.valueOf() -
            thumbDragUtils.startTime.valueOf();
        var distanceXnew = thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;
        var speedX = Math.abs(distanceXnew) / touchDuration;
        // Some magical numbers
        // Can be improved
        if (speedX > 0.15 &&
            thumbDragUtils.endTime.valueOf() - thumbDragUtils.touchMoveTime < 30) {
            speedX += 1;
            if (speedX > 2) {
                speedX += 1;
            }
            speedX =
                speedX +
                    speedX * (Math.abs(distanceXnew) / this.thumbOuterWidth);
            this.$lgThumb.css('transition-duration', Math.min(speedX - 1, 2) + 'settings');
            distanceXnew = distanceXnew * speedX;
            this.translateX = this.getPossibleTransformX(this.translateX - distanceXnew);
            this.setTranslate(this.translateX);
        }
        else {
            this.translateX = thumbDragUtils.newTranslateX;
        }
        if (Math.abs(thumbDragUtils.cords.endX - thumbDragUtils.cords.startX) <
            this.settings.thumbnailSwipeThreshold) {
            this.thumbClickable = true;
        }
        return thumbDragUtils;
    };
    Thumbnail.prototype.getThumbHtml = function (thumb, index) {
        var slideVideoInfo = this.core.galleryItems[index].__slideVideoInfo || {};
        var thumbImg;
        if (slideVideoInfo.youtube) {
            if (this.settings.loadYouTubeThumbnail) {
                thumbImg =
                    '//img.youtube.com/vi/' +
                        slideVideoInfo.youtube[1] +
                        '/' +
                        this.settings.youTubeThumbSize +
                        '.jpg';
            }
            else {
                thumbImg = thumb;
            }
        }
        else {
            thumbImg = thumb;
        }
        return "<div data-lg-item-id=\"" + index + "\" class=\"lg-thumb-item " + (index === this.core.index ? ' active' : '') + "\" \n        style=\"width:" + this.settings.thumbWidth + "px; height: " + this.settings.thumbHeight + ";\n            margin-right: " + this.settings.thumbMargin + "px;\">\n            <img data-lg-item-id=\"" + index + "\" src=\"" + thumbImg + "\" />\n        </div>";
    };
    Thumbnail.prototype.getThumbItemHtml = function (items) {
        var thumbList = '';
        for (var i = 0; i < items.length; i++) {
            thumbList += this.getThumbHtml(items[i].thumb, i);
        }
        return thumbList;
    };
    Thumbnail.prototype.setThumbItemHtml = function (items) {
        var thumbList = this.getThumbItemHtml(items);
        this.$lgThumb.html(thumbList);
    };
    Thumbnail.prototype.setAnimateThumbStyles = function () {
        if (this.settings.animateThumb) {
            this.core.outer.addClass('lg-animate-thumb');
        }
    };
    // Manage thumbnail active calss
    Thumbnail.prototype.manageActiveClassOnSlideChange = function () {
        var _this = this;
        // manage active class for thumbnail
        this.core.LGel.on(lGEvents.beforeSlide + ".thumb", function (event) {
            var $thumb = _this.core.outer.find('.lg-thumb-item');
            var index = event.detail.index;
            $thumb.removeClass('active');
            $thumb.eq(index).addClass('active');
        });
    };
    // Toggle thumbnail bar
    Thumbnail.prototype.toggleThumbBar = function () {
        var _this = this;
        if (this.settings.toggleThumb) {
            this.core.outer.addClass('lg-can-toggle');
            this.core.$toolbar.append('<button type="button" aria-label="' +
                this.settings.thumbnailPluginStrings['toggleThumbnails'] +
                '" class="lg-toggle-thumb lg-icon"></button>');
            this.core.outer
                .find('.lg-toggle-thumb')
                .first()
                .on('click.lg', function () {
                _this.core.outer.toggleClass('lg-components-open');
            });
        }
    };
    Thumbnail.prototype.thumbKeyPress = function () {
        var _this = this;
        this.$LG(window).on("keydown.lg.thumb.global" + this.core.lgId, function (e) {
            if (!_this.core.lgOpened || !_this.settings.toggleThumb)
                return;
            if (e.keyCode === 38) {
                e.preventDefault();
                _this.core.outer.addClass('lg-components-open');
            }
            else if (e.keyCode === 40) {
                e.preventDefault();
                _this.core.outer.removeClass('lg-components-open');
            }
        });
    };
    Thumbnail.prototype.destroy = function () {
        if (this.settings.thumbnail) {
            this.$LG(window).off(".lg.thumb.global" + this.core.lgId);
            this.core.LGel.off('.lg.thumb');
            this.core.LGel.off('.thumb');
            this.$thumbOuter.remove();
            this.core.outer.removeClass('lg-has-thumb');
        }
    };
    return Thumbnail;
}());

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Thumbnail);
//# sourceMappingURL=lg-thumbnail.es5.js.map


/***/ }),

/***/ "./node_modules/lightgallery/plugins/zoom/lg-zoom.es5.js":
/*!***************************************************************!*\
  !*** ./node_modules/lightgallery/plugins/zoom/lg-zoom.es5.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*!
 * lightgallery | 2.7.0 | October 9th 2022
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var zoomSettings = {
    scale: 1,
    zoom: true,
    actualSize: true,
    showZoomInOutIcons: false,
    actualSizeIcons: {
        zoomIn: 'lg-zoom-in',
        zoomOut: 'lg-zoom-out',
    },
    enableZoomAfter: 300,
    zoomPluginStrings: {
        zoomIn: 'Zoom in',
        zoomOut: 'Zoom out',
        viewActualSize: 'View actual size',
    },
};

/**
 * List of lightGallery events
 * All events should be documented here
 * Below interfaces are used to build the website documentations
 * */
var lGEvents = {
    afterAppendSlide: 'lgAfterAppendSlide',
    init: 'lgInit',
    hasVideo: 'lgHasVideo',
    containerResize: 'lgContainerResize',
    updateSlides: 'lgUpdateSlides',
    afterAppendSubHtml: 'lgAfterAppendSubHtml',
    beforeOpen: 'lgBeforeOpen',
    afterOpen: 'lgAfterOpen',
    slideItemLoad: 'lgSlideItemLoad',
    beforeSlide: 'lgBeforeSlide',
    afterSlide: 'lgAfterSlide',
    posterClick: 'lgPosterClick',
    dragStart: 'lgDragStart',
    dragMove: 'lgDragMove',
    dragEnd: 'lgDragEnd',
    beforeNextSlide: 'lgBeforeNextSlide',
    beforePrevSlide: 'lgBeforePrevSlide',
    beforeClose: 'lgBeforeClose',
    afterClose: 'lgAfterClose',
    rotateLeft: 'lgRotateLeft',
    rotateRight: 'lgRotateRight',
    flipHorizontal: 'lgFlipHorizontal',
    flipVertical: 'lgFlipVertical',
    autoplay: 'lgAutoplay',
    autoplayStart: 'lgAutoplayStart',
    autoplayStop: 'lgAutoplayStop',
};

var ZOOM_TRANSITION_DURATION = 500;
var Zoom = /** @class */ (function () {
    function Zoom(instance, $LG) {
        // get lightGallery core plugin instance
        this.core = instance;
        this.$LG = $LG;
        this.settings = __assign(__assign({}, zoomSettings), this.core.settings);
        return this;
    }
    // Append Zoom controls. Actual size, Zoom-in, Zoom-out
    Zoom.prototype.buildTemplates = function () {
        var zoomIcons = this.settings.showZoomInOutIcons
            ? "<button id=\"" + this.core.getIdName('lg-zoom-in') + "\" type=\"button\" aria-label=\"" + this.settings.zoomPluginStrings['zoomIn'] + "\" class=\"lg-zoom-in lg-icon\"></button><button id=\"" + this.core.getIdName('lg-zoom-out') + "\" type=\"button\" aria-label=\"" + this.settings.zoomPluginStrings['zoomIn'] + "\" class=\"lg-zoom-out lg-icon\"></button>"
            : '';
        if (this.settings.actualSize) {
            zoomIcons += "<button id=\"" + this.core.getIdName('lg-actual-size') + "\" type=\"button\" aria-label=\"" + this.settings.zoomPluginStrings['viewActualSize'] + "\" class=\"" + this.settings.actualSizeIcons.zoomIn + " lg-icon\"></button>";
        }
        this.core.outer.addClass('lg-use-transition-for-zoom');
        this.core.$toolbar.first().append(zoomIcons);
    };
    /**
     * @desc Enable zoom option only once the image is completely loaded
     * If zoomFromOrigin is true, Zoom is enabled once the dummy image has been inserted
     *
     * Zoom styles are defined under lg-zoomable CSS class.
     */
    Zoom.prototype.enableZoom = function (event) {
        var _this = this;
        // delay will be 0 except first time
        var _speed = this.settings.enableZoomAfter + event.detail.delay;
        // set _speed value 0 if gallery opened from direct url and if it is first slide
        if (this.$LG('body').first().hasClass('lg-from-hash') &&
            event.detail.delay) {
            // will execute only once
            _speed = 0;
        }
        else {
            // Remove lg-from-hash to enable starting animation.
            this.$LG('body').first().removeClass('lg-from-hash');
        }
        this.zoomableTimeout = setTimeout(function () {
            if (!_this.isImageSlide(_this.core.index)) {
                return;
            }
            _this.core.getSlideItem(event.detail.index).addClass('lg-zoomable');
            if (event.detail.index === _this.core.index) {
                _this.setZoomEssentials();
            }
        }, _speed + 30);
    };
    Zoom.prototype.enableZoomOnSlideItemLoad = function () {
        // Add zoomable class
        this.core.LGel.on(lGEvents.slideItemLoad + ".zoom", this.enableZoom.bind(this));
    };
    Zoom.prototype.getDragCords = function (e) {
        return {
            x: e.pageX,
            y: e.pageY,
        };
    };
    Zoom.prototype.getSwipeCords = function (e) {
        var x = e.touches[0].pageX;
        var y = e.touches[0].pageY;
        return {
            x: x,
            y: y,
        };
    };
    Zoom.prototype.getDragAllowedAxises = function (scale, scaleDiff) {
        var $image = this.core
            .getSlideItem(this.core.index)
            .find('.lg-image')
            .first()
            .get();
        var height = 0;
        var width = 0;
        var rect = $image.getBoundingClientRect();
        if (scale) {
            height = $image.offsetHeight * scale;
            width = $image.offsetWidth * scale;
        }
        else if (scaleDiff) {
            height = rect.height + scaleDiff * rect.height;
            width = rect.width + scaleDiff * rect.width;
        }
        else {
            height = rect.height;
            width = rect.width;
        }
        var allowY = height > this.containerRect.height;
        var allowX = width > this.containerRect.width;
        return {
            allowX: allowX,
            allowY: allowY,
        };
    };
    Zoom.prototype.setZoomEssentials = function () {
        this.containerRect = this.core.$content.get().getBoundingClientRect();
    };
    /**
     * @desc Image zoom
     * Translate the wrap and scale the image to get better user experience
     *
     * @param {String} scale - Zoom decrement/increment value
     */
    Zoom.prototype.zoomImage = function (scale, scaleDiff, reposition, resetToMax) {
        if (Math.abs(scaleDiff) <= 0)
            return;
        var offsetX = this.containerRect.width / 2 + this.containerRect.left;
        var offsetY = this.containerRect.height / 2 +
            this.containerRect.top +
            this.scrollTop;
        var originalX;
        var originalY;
        if (scale === 1) {
            this.positionChanged = false;
        }
        var dragAllowedAxises = this.getDragAllowedAxises(0, scaleDiff);
        var allowY = dragAllowedAxises.allowY, allowX = dragAllowedAxises.allowX;
        if (this.positionChanged) {
            originalX = this.left / (this.scale - scaleDiff);
            originalY = this.top / (this.scale - scaleDiff);
            this.pageX = offsetX - originalX;
            this.pageY = offsetY - originalY;
            this.positionChanged = false;
        }
        var possibleSwipeCords = this.getPossibleSwipeDragCords(scaleDiff);
        var x;
        var y;
        var _x = offsetX - this.pageX;
        var _y = offsetY - this.pageY;
        if (scale - scaleDiff > 1) {
            var scaleVal = (scale - scaleDiff) / Math.abs(scaleDiff);
            _x =
                (scaleDiff < 0 ? -_x : _x) +
                    this.left * (scaleVal + (scaleDiff < 0 ? -1 : 1));
            _y =
                (scaleDiff < 0 ? -_y : _y) +
                    this.top * (scaleVal + (scaleDiff < 0 ? -1 : 1));
            x = _x / scaleVal;
            y = _y / scaleVal;
        }
        else {
            var scaleVal = (scale - scaleDiff) * scaleDiff;
            x = _x * scaleVal;
            y = _y * scaleVal;
        }
        if (reposition) {
            if (allowX) {
                if (this.isBeyondPossibleLeft(x, possibleSwipeCords.minX)) {
                    x = possibleSwipeCords.minX;
                }
                else if (this.isBeyondPossibleRight(x, possibleSwipeCords.maxX)) {
                    x = possibleSwipeCords.maxX;
                }
            }
            else {
                if (scale > 1) {
                    if (x < possibleSwipeCords.minX) {
                        x = possibleSwipeCords.minX;
                    }
                    else if (x > possibleSwipeCords.maxX) {
                        x = possibleSwipeCords.maxX;
                    }
                }
            }
            // @todo fix this
            if (allowY) {
                if (this.isBeyondPossibleTop(y, possibleSwipeCords.minY)) {
                    y = possibleSwipeCords.minY;
                }
                else if (this.isBeyondPossibleBottom(y, possibleSwipeCords.maxY)) {
                    y = possibleSwipeCords.maxY;
                }
            }
            else {
                // If the translate value based on index of beyond the viewport, utilize the available space to prevent image being cut out
                if (scale > 1) {
                    //If image goes beyond viewport top, use the minim possible translate value
                    if (y < possibleSwipeCords.minY) {
                        y = possibleSwipeCords.minY;
                    }
                    else if (y > possibleSwipeCords.maxY) {
                        y = possibleSwipeCords.maxY;
                    }
                }
            }
        }
        this.setZoomStyles({
            x: x,
            y: y,
            scale: scale,
        });
        this.left = x;
        this.top = y;
        if (resetToMax) {
            this.setZoomImageSize();
        }
    };
    Zoom.prototype.resetImageTranslate = function (index) {
        if (!this.isImageSlide(index)) {
            return;
        }
        var $image = this.core.getSlideItem(index).find('.lg-image').first();
        this.imageReset = false;
        $image.removeClass('reset-transition reset-transition-y reset-transition-x');
        this.core.outer.removeClass('lg-actual-size');
        $image.css('width', 'auto').css('height', 'auto');
        setTimeout(function () {
            $image.removeClass('no-transition');
        }, 10);
    };
    Zoom.prototype.setZoomImageSize = function () {
        var _this = this;
        var $image = this.core
            .getSlideItem(this.core.index)
            .find('.lg-image')
            .first();
        setTimeout(function () {
            var actualSizeScale = _this.getCurrentImageActualSizeScale();
            if (_this.scale >= actualSizeScale) {
                $image.addClass('no-transition');
                _this.imageReset = true;
            }
        }, ZOOM_TRANSITION_DURATION);
        setTimeout(function () {
            var actualSizeScale = _this.getCurrentImageActualSizeScale();
            if (_this.scale >= actualSizeScale) {
                var dragAllowedAxises = _this.getDragAllowedAxises(_this.scale);
                $image
                    .css('width', $image.get().naturalWidth + 'px')
                    .css('height', $image.get().naturalHeight + 'px');
                _this.core.outer.addClass('lg-actual-size');
                if (dragAllowedAxises.allowX && dragAllowedAxises.allowY) {
                    $image.addClass('reset-transition');
                }
                else if (dragAllowedAxises.allowX &&
                    !dragAllowedAxises.allowY) {
                    $image.addClass('reset-transition-x');
                }
                else if (!dragAllowedAxises.allowX &&
                    dragAllowedAxises.allowY) {
                    $image.addClass('reset-transition-y');
                }
            }
        }, ZOOM_TRANSITION_DURATION + 50);
    };
    /**
     * @desc apply scale3d to image and translate to image wrap
     * @param {style} X,Y and scale
     */
    Zoom.prototype.setZoomStyles = function (style) {
        var $imageWrap = this.core
            .getSlideItem(this.core.index)
            .find('.lg-img-wrap')
            .first();
        var $image = this.core
            .getSlideItem(this.core.index)
            .find('.lg-image')
            .first();
        var $dummyImage = this.core.outer
            .find('.lg-current .lg-dummy-img')
            .first();
        this.scale = style.scale;
        $image.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');
        $dummyImage.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');
        var transform = 'translate3d(' + style.x + 'px, ' + style.y + 'px, 0)';
        $imageWrap.css('transform', transform);
    };
    /**
     * @param index - Index of the current slide
     * @param event - event will be available only if the function is called on clicking/taping the imags
     */
    Zoom.prototype.setActualSize = function (index, event) {
        var _this = this;
        var currentItem = this.core.galleryItems[this.core.index];
        this.resetImageTranslate(index);
        setTimeout(function () {
            // Allow zoom only on image
            if (!currentItem.src ||
                _this.core.outer.hasClass('lg-first-slide-loading')) {
                return;
            }
            var scale = _this.getCurrentImageActualSizeScale();
            var prevScale = _this.scale;
            if (_this.core.outer.hasClass('lg-zoomed')) {
                _this.scale = 1;
            }
            else {
                _this.scale = _this.getScale(scale);
            }
            _this.setPageCords(event);
            _this.beginZoom(_this.scale);
            _this.zoomImage(_this.scale, _this.scale - prevScale, true, true);
            setTimeout(function () {
                _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');
            }, 10);
        }, 50);
    };
    Zoom.prototype.getNaturalWidth = function (index) {
        var $image = this.core.getSlideItem(index).find('.lg-image').first();
        var naturalWidth = this.core.galleryItems[index].width;
        return naturalWidth
            ? parseFloat(naturalWidth)
            : $image.get().naturalWidth;
    };
    Zoom.prototype.getActualSizeScale = function (naturalWidth, width) {
        var _scale;
        var scale;
        if (naturalWidth >= width) {
            _scale = naturalWidth / width;
            scale = _scale || 2;
        }
        else {
            scale = 1;
        }
        return scale;
    };
    Zoom.prototype.getCurrentImageActualSizeScale = function () {
        var $image = this.core
            .getSlideItem(this.core.index)
            .find('.lg-image')
            .first();
        var width = $image.get().offsetWidth;
        var naturalWidth = this.getNaturalWidth(this.core.index) || width;
        return this.getActualSizeScale(naturalWidth, width);
    };
    Zoom.prototype.getPageCords = function (event) {
        var cords = {};
        if (event) {
            cords.x = event.pageX || event.touches[0].pageX;
            cords.y = event.pageY || event.touches[0].pageY;
        }
        else {
            var containerRect = this.core.$content
                .get()
                .getBoundingClientRect();
            cords.x = containerRect.width / 2 + containerRect.left;
            cords.y =
                containerRect.height / 2 + this.scrollTop + containerRect.top;
        }
        return cords;
    };
    Zoom.prototype.setPageCords = function (event) {
        var pageCords = this.getPageCords(event);
        this.pageX = pageCords.x;
        this.pageY = pageCords.y;
    };
    Zoom.prototype.manageActualPixelClassNames = function () {
        var $actualSize = this.core.getElementById('lg-actual-size');
        $actualSize
            .removeClass(this.settings.actualSizeIcons.zoomIn)
            .addClass(this.settings.actualSizeIcons.zoomOut);
    };
    // If true, zoomed - in else zoomed out
    Zoom.prototype.beginZoom = function (scale) {
        this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');
        if (scale > 1) {
            this.core.outer.addClass('lg-zoomed');
            this.manageActualPixelClassNames();
        }
        else {
            this.resetZoom();
        }
        return scale > 1;
    };
    Zoom.prototype.getScale = function (scale) {
        var actualSizeScale = this.getCurrentImageActualSizeScale();
        if (scale < 1) {
            scale = 1;
        }
        else if (scale > actualSizeScale) {
            scale = actualSizeScale;
        }
        return scale;
    };
    Zoom.prototype.init = function () {
        var _this = this;
        if (!this.settings.zoom) {
            return;
        }
        this.buildTemplates();
        this.enableZoomOnSlideItemLoad();
        var tapped = null;
        this.core.outer.on('dblclick.lg', function (event) {
            if (!_this.$LG(event.target).hasClass('lg-image')) {
                return;
            }
            _this.setActualSize(_this.core.index, event);
        });
        this.core.outer.on('touchstart.lg', function (event) {
            var $target = _this.$LG(event.target);
            if (event.touches.length === 1 && $target.hasClass('lg-image')) {
                if (!tapped) {
                    tapped = setTimeout(function () {
                        tapped = null;
                    }, 300);
                }
                else {
                    clearTimeout(tapped);
                    tapped = null;
                    event.preventDefault();
                    _this.setActualSize(_this.core.index, event);
                }
            }
        });
        this.core.LGel.on(lGEvents.containerResize + ".zoom " + lGEvents.rotateRight + ".zoom " + lGEvents.rotateLeft + ".zoom " + lGEvents.flipHorizontal + ".zoom " + lGEvents.flipVertical + ".zoom", function () {
            if (!_this.core.lgOpened ||
                !_this.isImageSlide(_this.core.index) ||
                _this.core.touchAction) {
                return;
            }
            var _LGel = _this.core
                .getSlideItem(_this.core.index)
                .find('.lg-img-wrap')
                .first();
            _this.top = 0;
            _this.left = 0;
            _this.setZoomEssentials();
            _this.setZoomSwipeStyles(_LGel, { x: 0, y: 0 });
            _this.positionChanged = true;
        });
        // Update zoom on resize and orientationchange
        this.$LG(window).on("scroll.lg.zoom.global" + this.core.lgId, function () {
            if (!_this.core.lgOpened)
                return;
            _this.scrollTop = _this.$LG(window).scrollTop();
        });
        this.core.getElementById('lg-zoom-out').on('click.lg', function () {
            // Allow zoom only on image
            if (!_this.isImageSlide(_this.core.index)) {
                return;
            }
            var timeout = 0;
            if (_this.imageReset) {
                _this.resetImageTranslate(_this.core.index);
                timeout = 50;
            }
            setTimeout(function () {
                var scale = _this.scale - _this.settings.scale;
                if (scale < 1) {
                    scale = 1;
                }
                _this.beginZoom(scale);
                _this.zoomImage(scale, -_this.settings.scale, true, true);
            }, timeout);
        });
        this.core.getElementById('lg-zoom-in').on('click.lg', function () {
            _this.zoomIn();
        });
        this.core.getElementById('lg-actual-size').on('click.lg', function () {
            _this.setActualSize(_this.core.index);
        });
        this.core.LGel.on(lGEvents.beforeOpen + ".zoom", function () {
            _this.core.outer.find('.lg-item').removeClass('lg-zoomable');
        });
        this.core.LGel.on(lGEvents.afterOpen + ".zoom", function () {
            _this.scrollTop = _this.$LG(window).scrollTop();
            // Set the initial value center
            _this.pageX = _this.core.outer.width() / 2;
            _this.pageY = _this.core.outer.height() / 2 + _this.scrollTop;
            _this.scale = 1;
        });
        // Reset zoom on slide change
        this.core.LGel.on(lGEvents.afterSlide + ".zoom", function (event) {
            var prevIndex = event.detail.prevIndex;
            _this.scale = 1;
            _this.positionChanged = false;
            _this.resetZoom(prevIndex);
            _this.resetImageTranslate(prevIndex);
            if (_this.isImageSlide(_this.core.index)) {
                _this.setZoomEssentials();
            }
        });
        // Drag option after zoom
        this.zoomDrag();
        this.pinchZoom();
        this.zoomSwipe();
        // Store the zoomable timeout value just to clear it while closing
        this.zoomableTimeout = false;
        this.positionChanged = false;
    };
    Zoom.prototype.zoomIn = function () {
        // Allow zoom only on image
        if (!this.isImageSlide(this.core.index)) {
            return;
        }
        var scale = this.scale + this.settings.scale;
        scale = this.getScale(scale);
        this.beginZoom(scale);
        this.zoomImage(scale, this.settings.scale, true, true);
    };
    // Reset zoom effect
    Zoom.prototype.resetZoom = function (index) {
        this.core.outer.removeClass('lg-zoomed lg-zoom-drag-transition');
        var $actualSize = this.core.getElementById('lg-actual-size');
        var $item = this.core.getSlideItem(index !== undefined ? index : this.core.index);
        $actualSize
            .removeClass(this.settings.actualSizeIcons.zoomOut)
            .addClass(this.settings.actualSizeIcons.zoomIn);
        $item.find('.lg-img-wrap').first().removeAttr('style');
        $item.find('.lg-image').first().removeAttr('style');
        this.scale = 1;
        this.left = 0;
        this.top = 0;
        // Reset pagx pagy values to center
        this.setPageCords();
    };
    Zoom.prototype.getTouchDistance = function (e) {
        return Math.sqrt((e.touches[0].pageX - e.touches[1].pageX) *
            (e.touches[0].pageX - e.touches[1].pageX) +
            (e.touches[0].pageY - e.touches[1].pageY) *
                (e.touches[0].pageY - e.touches[1].pageY));
    };
    Zoom.prototype.pinchZoom = function () {
        var _this = this;
        var startDist = 0;
        var pinchStarted = false;
        var initScale = 1;
        var prevScale = 0;
        var $item = this.core.getSlideItem(this.core.index);
        this.core.outer.on('touchstart.lg', function (e) {
            $item = _this.core.getSlideItem(_this.core.index);
            if (!_this.isImageSlide(_this.core.index)) {
                return;
            }
            if (e.touches.length === 2) {
                e.preventDefault();
                if (_this.core.outer.hasClass('lg-first-slide-loading')) {
                    return;
                }
                initScale = _this.scale || 1;
                _this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');
                _this.setPageCords(e);
                _this.resetImageTranslate(_this.core.index);
                _this.core.touchAction = 'pinch';
                startDist = _this.getTouchDistance(e);
            }
        });
        this.core.$inner.on('touchmove.lg', function (e) {
            if (e.touches.length === 2 &&
                _this.core.touchAction === 'pinch' &&
                (_this.$LG(e.target).hasClass('lg-item') ||
                    $item.get().contains(e.target))) {
                e.preventDefault();
                var endDist = _this.getTouchDistance(e);
                var distance = startDist - endDist;
                if (!pinchStarted && Math.abs(distance) > 5) {
                    pinchStarted = true;
                }
                if (pinchStarted) {
                    prevScale = _this.scale;
                    var _scale = Math.max(1, initScale + -distance * 0.02);
                    _this.scale =
                        Math.round((_scale + Number.EPSILON) * 100) / 100;
                    var diff = _this.scale - prevScale;
                    _this.zoomImage(_this.scale, Math.round((diff + Number.EPSILON) * 100) / 100, false, false);
                }
            }
        });
        this.core.$inner.on('touchend.lg', function (e) {
            if (_this.core.touchAction === 'pinch' &&
                (_this.$LG(e.target).hasClass('lg-item') ||
                    $item.get().contains(e.target))) {
                pinchStarted = false;
                startDist = 0;
                if (_this.scale <= 1) {
                    _this.resetZoom();
                }
                else {
                    var actualSizeScale = _this.getCurrentImageActualSizeScale();
                    if (_this.scale >= actualSizeScale) {
                        var scaleDiff = actualSizeScale - _this.scale;
                        if (scaleDiff === 0) {
                            scaleDiff = 0.01;
                        }
                        _this.zoomImage(actualSizeScale, scaleDiff, false, true);
                    }
                    _this.manageActualPixelClassNames();
                    _this.core.outer.addClass('lg-zoomed');
                }
                _this.core.touchAction = undefined;
            }
        });
    };
    Zoom.prototype.touchendZoom = function (startCoords, endCoords, allowX, allowY, touchDuration) {
        var distanceXnew = endCoords.x - startCoords.x;
        var distanceYnew = endCoords.y - startCoords.y;
        var speedX = Math.abs(distanceXnew) / touchDuration + 1;
        var speedY = Math.abs(distanceYnew) / touchDuration + 1;
        if (speedX > 2) {
            speedX += 1;
        }
        if (speedY > 2) {
            speedY += 1;
        }
        distanceXnew = distanceXnew * speedX;
        distanceYnew = distanceYnew * speedY;
        var _LGel = this.core
            .getSlideItem(this.core.index)
            .find('.lg-img-wrap')
            .first();
        var distance = {};
        distance.x = this.left + distanceXnew;
        distance.y = this.top + distanceYnew;
        var possibleSwipeCords = this.getPossibleSwipeDragCords();
        if (Math.abs(distanceXnew) > 15 || Math.abs(distanceYnew) > 15) {
            if (allowY) {
                if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {
                    distance.y = possibleSwipeCords.minY;
                }
                else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {
                    distance.y = possibleSwipeCords.maxY;
                }
            }
            if (allowX) {
                if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {
                    distance.x = possibleSwipeCords.minX;
                }
                else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {
                    distance.x = possibleSwipeCords.maxX;
                }
            }
            if (allowY) {
                this.top = distance.y;
            }
            else {
                distance.y = this.top;
            }
            if (allowX) {
                this.left = distance.x;
            }
            else {
                distance.x = this.left;
            }
            this.setZoomSwipeStyles(_LGel, distance);
            this.positionChanged = true;
        }
    };
    Zoom.prototype.getZoomSwipeCords = function (startCoords, endCoords, allowX, allowY, possibleSwipeCords) {
        var distance = {};
        if (allowY) {
            distance.y = this.top + (endCoords.y - startCoords.y);
            if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {
                var diffMinY = possibleSwipeCords.minY - distance.y;
                distance.y = possibleSwipeCords.minY - diffMinY / 6;
            }
            else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {
                var diffMaxY = distance.y - possibleSwipeCords.maxY;
                distance.y = possibleSwipeCords.maxY + diffMaxY / 6;
            }
        }
        else {
            distance.y = this.top;
        }
        if (allowX) {
            distance.x = this.left + (endCoords.x - startCoords.x);
            if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {
                var diffMinX = possibleSwipeCords.minX - distance.x;
                distance.x = possibleSwipeCords.minX - diffMinX / 6;
            }
            else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {
                var difMaxX = distance.x - possibleSwipeCords.maxX;
                distance.x = possibleSwipeCords.maxX + difMaxX / 6;
            }
        }
        else {
            distance.x = this.left;
        }
        return distance;
    };
    Zoom.prototype.isBeyondPossibleLeft = function (x, minX) {
        return x >= minX;
    };
    Zoom.prototype.isBeyondPossibleRight = function (x, maxX) {
        return x <= maxX;
    };
    Zoom.prototype.isBeyondPossibleTop = function (y, minY) {
        return y >= minY;
    };
    Zoom.prototype.isBeyondPossibleBottom = function (y, maxY) {
        return y <= maxY;
    };
    Zoom.prototype.isImageSlide = function (index) {
        var currentItem = this.core.galleryItems[index];
        return this.core.getSlideType(currentItem) === 'image';
    };
    Zoom.prototype.getPossibleSwipeDragCords = function (scale) {
        var $image = this.core
            .getSlideItem(this.core.index)
            .find('.lg-image')
            .first();
        var bottom = this.core.mediaContainerPosition.bottom;
        var imgRect = $image.get().getBoundingClientRect();
        var imageHeight = imgRect.height;
        var imageWidth = imgRect.width;
        if (scale) {
            imageHeight = imageHeight + scale * imageHeight;
            imageWidth = imageWidth + scale * imageWidth;
        }
        var minY = (imageHeight - this.containerRect.height) / 2;
        var maxY = (this.containerRect.height - imageHeight) / 2 + bottom;
        var minX = (imageWidth - this.containerRect.width) / 2;
        var maxX = (this.containerRect.width - imageWidth) / 2;
        var possibleSwipeCords = {
            minY: minY,
            maxY: maxY,
            minX: minX,
            maxX: maxX,
        };
        return possibleSwipeCords;
    };
    Zoom.prototype.setZoomSwipeStyles = function (LGel, distance) {
        LGel.css('transform', 'translate3d(' + distance.x + 'px, ' + distance.y + 'px, 0)');
    };
    Zoom.prototype.zoomSwipe = function () {
        var _this = this;
        var startCoords = {};
        var endCoords = {};
        var isMoved = false;
        // Allow x direction drag
        var allowX = false;
        // Allow Y direction drag
        var allowY = false;
        var startTime = new Date();
        var endTime = new Date();
        var possibleSwipeCords;
        var _LGel;
        var $item = this.core.getSlideItem(this.core.index);
        this.core.$inner.on('touchstart.lg', function (e) {
            // Allow zoom only on image
            if (!_this.isImageSlide(_this.core.index)) {
                return;
            }
            $item = _this.core.getSlideItem(_this.core.index);
            if ((_this.$LG(e.target).hasClass('lg-item') ||
                $item.get().contains(e.target)) &&
                e.touches.length === 1 &&
                _this.core.outer.hasClass('lg-zoomed')) {
                e.preventDefault();
                startTime = new Date();
                _this.core.touchAction = 'zoomSwipe';
                _LGel = _this.core
                    .getSlideItem(_this.core.index)
                    .find('.lg-img-wrap')
                    .first();
                var dragAllowedAxises = _this.getDragAllowedAxises(0);
                allowY = dragAllowedAxises.allowY;
                allowX = dragAllowedAxises.allowX;
                if (allowX || allowY) {
                    startCoords = _this.getSwipeCords(e);
                }
                possibleSwipeCords = _this.getPossibleSwipeDragCords();
                // reset opacity and transition duration
                _this.core.outer.addClass('lg-zoom-dragging lg-zoom-drag-transition');
            }
        });
        this.core.$inner.on('touchmove.lg', function (e) {
            if (e.touches.length === 1 &&
                _this.core.touchAction === 'zoomSwipe' &&
                (_this.$LG(e.target).hasClass('lg-item') ||
                    $item.get().contains(e.target))) {
                e.preventDefault();
                _this.core.touchAction = 'zoomSwipe';
                endCoords = _this.getSwipeCords(e);
                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);
                if (Math.abs(endCoords.x - startCoords.x) > 15 ||
                    Math.abs(endCoords.y - startCoords.y) > 15) {
                    isMoved = true;
                    _this.setZoomSwipeStyles(_LGel, distance);
                }
            }
        });
        this.core.$inner.on('touchend.lg', function (e) {
            if (_this.core.touchAction === 'zoomSwipe' &&
                (_this.$LG(e.target).hasClass('lg-item') ||
                    $item.get().contains(e.target))) {
                e.preventDefault();
                _this.core.touchAction = undefined;
                _this.core.outer.removeClass('lg-zoom-dragging');
                if (!isMoved) {
                    return;
                }
                isMoved = false;
                endTime = new Date();
                var touchDuration = endTime.valueOf() - startTime.valueOf();
                _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);
            }
        });
    };
    Zoom.prototype.zoomDrag = function () {
        var _this = this;
        var startCoords = {};
        var endCoords = {};
        var isDragging = false;
        var isMoved = false;
        // Allow x direction drag
        var allowX = false;
        // Allow Y direction drag
        var allowY = false;
        var startTime;
        var endTime;
        var possibleSwipeCords;
        var _LGel;
        this.core.outer.on('mousedown.lg.zoom', function (e) {
            // Allow zoom only on image
            if (!_this.isImageSlide(_this.core.index)) {
                return;
            }
            var $item = _this.core.getSlideItem(_this.core.index);
            if (_this.$LG(e.target).hasClass('lg-item') ||
                $item.get().contains(e.target)) {
                startTime = new Date();
                _LGel = _this.core
                    .getSlideItem(_this.core.index)
                    .find('.lg-img-wrap')
                    .first();
                var dragAllowedAxises = _this.getDragAllowedAxises(0);
                allowY = dragAllowedAxises.allowY;
                allowX = dragAllowedAxises.allowX;
                if (_this.core.outer.hasClass('lg-zoomed')) {
                    if (_this.$LG(e.target).hasClass('lg-object') &&
                        (allowX || allowY)) {
                        e.preventDefault();
                        startCoords = _this.getDragCords(e);
                        possibleSwipeCords = _this.getPossibleSwipeDragCords();
                        isDragging = true;
                        _this.core.outer
                            .removeClass('lg-grab')
                            .addClass('lg-grabbing lg-zoom-drag-transition lg-zoom-dragging');
                        // reset opacity and transition duration
                    }
                }
            }
        });
        this.$LG(window).on("mousemove.lg.zoom.global" + this.core.lgId, function (e) {
            if (isDragging) {
                isMoved = true;
                endCoords = _this.getDragCords(e);
                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);
                _this.setZoomSwipeStyles(_LGel, distance);
            }
        });
        this.$LG(window).on("mouseup.lg.zoom.global" + this.core.lgId, function (e) {
            if (isDragging) {
                endTime = new Date();
                isDragging = false;
                _this.core.outer.removeClass('lg-zoom-dragging');
                // Fix for chrome mouse move on click
                if (isMoved &&
                    (startCoords.x !== endCoords.x ||
                        startCoords.y !== endCoords.y)) {
                    endCoords = _this.getDragCords(e);
                    var touchDuration = endTime.valueOf() - startTime.valueOf();
                    _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);
                }
                isMoved = false;
            }
            _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');
        });
    };
    Zoom.prototype.closeGallery = function () {
        this.resetZoom();
    };
    Zoom.prototype.destroy = function () {
        // Unbind all events added by lightGallery zoom plugin
        this.$LG(window).off(".lg.zoom.global" + this.core.lgId);
        this.core.LGel.off('.lg.zoom');
        this.core.LGel.off('.zoom');
        clearTimeout(this.zoomableTimeout);
        this.zoomableTimeout = false;
    };
    return Zoom;
}());

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Zoom);
//# sourceMappingURL=lg-zoom.es5.js.map


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lightgallery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lightgallery */ "./node_modules/lightgallery/lightgallery.es5.js");
/* harmony import */ var lightgallery_plugins_thumbnail__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lightgallery/plugins/thumbnail */ "./node_modules/lightgallery/plugins/thumbnail/lg-thumbnail.es5.js");
/* harmony import */ var lightgallery_plugins_zoom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightgallery/plugins/zoom */ "./node_modules/lightgallery/plugins/zoom/lg-zoom.es5.js");
/* harmony import */ var lightgallery_plugins_fullscreen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lightgallery/plugins/fullscreen */ "./node_modules/lightgallery/plugins/fullscreen/lg-fullscreen.es5.js");
/* harmony import */ var lightgallery_plugins_share__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lightgallery/plugins/share */ "./node_modules/lightgallery/plugins/share/lg-share.es5.js");
/* harmony import */ var lightgallery_plugins_rotate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lightgallery/plugins/rotate */ "./node_modules/lightgallery/plugins/rotate/lg-rotate.es5.js");
/* harmony import */ var lightgallery_plugins_autoplay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lightgallery/plugins/autoplay */ "./node_modules/lightgallery/plugins/autoplay/lg-autoplay.es5.js");
/* harmony import */ var flowbite_datepicker_Datepicker__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! flowbite-datepicker/Datepicker */ "./node_modules/flowbite-datepicker/js/Datepicker.js");
/* harmony import */ var flowbite_datepicker_DateRangePicker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! flowbite-datepicker/DateRangePicker */ "./node_modules/flowbite-datepicker/js/DateRangePicker.js");
/* harmony import */ var flowbite_datepicker_locales_lv__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! flowbite-datepicker/locales/lv */ "./node_modules/flowbite-datepicker/js/i18n/locales/lv.js");
/* harmony import */ var filepond__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! filepond */ "./node_modules/filepond/dist/filepond.js");
/* harmony import */ var filepond__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(filepond__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var jodit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! jodit */ "./node_modules/jodit/build/jodit.min.js");
/* harmony import */ var jodit__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(jodit__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var filepond_plugin_file_validate_size__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! filepond-plugin-file-validate-size */ "./node_modules/filepond-plugin-file-validate-size/dist/filepond-plugin-file-validate-size.js");
/* harmony import */ var filepond_plugin_file_validate_size__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(filepond_plugin_file_validate_size__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var filepond_plugin_file_validate_type__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! filepond-plugin-file-validate-type */ "./node_modules/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.js");
/* harmony import */ var filepond_plugin_file_validate_type__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(filepond_plugin_file_validate_type__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var filepond_plugin_image_preview__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! filepond-plugin-image-preview */ "./node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js");
/* harmony import */ var filepond_plugin_image_preview__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(filepond_plugin_image_preview__WEBPACK_IMPORTED_MODULE_14__);















window.lightGallery = lightgallery__WEBPACK_IMPORTED_MODULE_0__["default"];
window.lgThumbnail = lightgallery_plugins_thumbnail__WEBPACK_IMPORTED_MODULE_1__["default"];
window.lgZoom = lightgallery_plugins_zoom__WEBPACK_IMPORTED_MODULE_2__["default"];
window.lgFullscreen = lightgallery_plugins_fullscreen__WEBPACK_IMPORTED_MODULE_3__["default"];
window.lgShare = lightgallery_plugins_share__WEBPACK_IMPORTED_MODULE_4__["default"];
window.lgRotate = lightgallery_plugins_rotate__WEBPACK_IMPORTED_MODULE_5__["default"];
window.lgAutoplay = lightgallery_plugins_autoplay__WEBPACK_IMPORTED_MODULE_6__["default"];
window.lang = flowbite_datepicker_locales_lv__WEBPACK_IMPORTED_MODULE_9__["default"];
window.Datepicker = flowbite_datepicker_Datepicker__WEBPACK_IMPORTED_MODULE_7__["default"];
window.DateRangePicker = flowbite_datepicker_DateRangePicker__WEBPACK_IMPORTED_MODULE_8__["default"];
filepond__WEBPACK_IMPORTED_MODULE_10__.registerPlugin((filepond_plugin_file_validate_type__WEBPACK_IMPORTED_MODULE_13___default()));
filepond__WEBPACK_IMPORTED_MODULE_10__.registerPlugin((filepond_plugin_file_validate_size__WEBPACK_IMPORTED_MODULE_12___default()));
filepond__WEBPACK_IMPORTED_MODULE_10__.registerPlugin((filepond_plugin_image_preview__WEBPACK_IMPORTED_MODULE_14___default()));
window.FilePond = filepond__WEBPACK_IMPORTED_MODULE_10__;
window.Jodit = jodit__WEBPACK_IMPORTED_MODULE_11__.Jodit;
})();

/******/ })()
;